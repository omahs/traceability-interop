{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "86ac0e2e-c0d4-48e2-a44f-6c0b22e9c595",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8cf836fa-7aa0-415f-a7f1-387c5750c3ac",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95bff686-61c6-426d-8ad0-324e0886aea1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9ba22e4b-c4c8-4799-9811-89839f5b7061"
                }
              }
            ]
          },
          {
            "id": "170f00a3-d339-4f73-a98f-86f04be38ac2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcf62c3f-9c2f-4504-a07c-87a00b5698b1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c63128f3-01aa-43c7-adee-11c3127aa34a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2d9eeba1-3445-4949-8de0-416b56bb9e98",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ee02bedd-9697-454c-8719-13c87c6e5d74",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d61f291-d45e-484e-8223-4116ad48998c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2f57ab8-bfc8-457d-90a5-736e1c5dde93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc9f032c-727c-4f70-84e9-a50be7ee6005"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80c245ae-5094-48a0-8c99-889f788578cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28738fa9-bc1a-4502-979d-fd23c5091bc2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15d4447d-2130-4191-9a71-8d536a117b46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42ec9cac-b5de-453c-bd92-e31ea5264957"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d53fe42-7d0f-4421-80ed-91a8407d8b8c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1f273775-add7-4503-b211-f2d05f51e4bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed3426db-1c2e-497b-a793-bb802c5df536",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c434e397-3124-4e78-ad0f-2e0ea6669981"
            }
          }
        ]
      },
      {
        "id": "3d750adc-e4e1-436b-a255-2f98344f3097",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "35b72a13-1ac2-41fd-8833-38f9a5e8ff0c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c345819e-a8aa-4735-9bec-36c9afb0f812",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "867398af-819b-4058-9cb5-963b32837a3c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56130c35-660e-4e30-aeac-be852e83b666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26f287e1-8662-4643-b626-965ad96a994b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577f5087-fa64-4ac2-97c2-6971bc17de3e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460f207e-72a8-4884-8f78-e038e96ff89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9df042ef-6235-4587-96bf-abf8fb5bc428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6741c7ed-7641-4ba8-9085-89a4ff72c947",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc53f98-9edc-4a4a-b709-bc7e1c346c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0de0bc4-a9a0-4808-a046-6bb90f873565"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd42dc3c-f91e-4756-a9ea-21e13259fd6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "568114c1-f458-4af4-add4-db68609f9b77",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d07ac70-bfb7-44e6-9826-81e97da0aaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0870222-f36b-4046-8e96-b2da0af38f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a899a99f-7642-4fe8-b1d3-60e6ecc10fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d54a660-63bb-4ef8-976a-960c8162b7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690b8457-bc7b-48fd-a8ff-b9028b636a7c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26bbafe-9413-445a-a5df-eb29ad928e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01baae94-b022-4c77-8b1f-37aac7fe2d4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f18d5f-5821-43c6-a5cf-10d834287c2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "396cec03-6db1-419a-add1-81c351ddf712"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "77a06d90-7194-4491-986e-1f3460cf4cab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a57adef-49df-476b-a411-bd39334de0a3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa4c5a29-a5ba-438f-947a-bc2d4570305a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ac66c497-12cd-4e3b-b6b3-ac43048302eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7bed638-2d9f-45f4-9d62-6dbdd2d8e7cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "757d0ad7-bb4b-49e4-a052-54a87e1e5c4f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "887cc932-98fe-440f-a285-8cee37564edf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8266cb1a-7cbd-45b0-b77a-0325f02018a9"
            }
          }
        ]
      },
      {
        "id": "2b953b13-5111-493c-ba1a-82a961df2a49",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0a54e362-5d95-41c9-9be7-d3df68e24880",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f3c135e-cc1d-4803-ad6b-b61c66280a08",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ef7b5562-f90a-458c-b48d-21d08ca3409e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d22ef83-0562-4a61-a544-d3c1e1118f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df055f5a-08d8-4161-ad63-586f63ac96d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f90405af-0202-4f4c-8910-4409ae8a3ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bed58025-fb34-4639-af5a-a706cfe56ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c831136f-61e4-4a78-ba6c-0935af2a5b21",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7e7f51-99ce-42c9-afe2-20bdc0f81b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d47f02-e671-4991-99d3-4e23a050e29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12b9df2-8226-4f51-941c-0dba9abd9629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18425f56-0a26-46f6-8bdd-507f69a84a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79652d79-5993-47d3-a03d-bf49b85b9fe1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed34bc4-abd2-4d7e-9141-e805ea8db92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289956a1-d1f2-4f35-9bd4-9ebd9cbf72d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cad3c8-c189-46d2-a210-34601e79f755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afdf50c8-28b5-4b39-89bc-fb0334bd95d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963eef51-21c2-4d24-9098-a01a7651e805",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53bb44e9-8ed6-43d1-8762-27568546c290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10755abf-b505-44e5-971c-a5dee03a040c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc43838b-0bde-4cb3-866f-8c7c76bd71a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63a60635-1630-47fd-a57c-b6e9a75e4002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e104c5e-7e8c-4491-9804-12f2bbf34c80",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3231393e-873a-45d5-9964-f691eb99a66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c371844b-9bb5-4ae3-99b4-67d227b4a5df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cbecfff-2e17-47cc-8176-b4210b772f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ddce127-8f58-45f6-9b0d-eea8fd010018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22378c9b-6525-4fdd-be0b-093d6f5b0ddb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2efadc-c956-4512-be35-46776d01ae5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82405cf1-8ebc-459b-9806-0e5ae3ca0d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a9676-44b5-44b6-a6e8-914d2abdc251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f62cf19-0eef-4caf-b4bf-42d35892bd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1864fd20-f629-4a20-a748-e29ebfff786b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6681021-289d-40ca-adb3-ca0fbe61965a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdc66cd-cbce-4abb-b995-c0d0c8edbb68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea700b3-68a3-42aa-9364-eccfc1e88fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f1a13d3-927b-4d0d-a303-5e1556d93936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ac0c94-8fc8-4861-84a6-88657e43de96",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa25d29-218d-4dc1-acba-6a27dd00b880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d77203e-9029-47e3-806c-216215d00793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9b9352-60c0-4577-9f46-0a0ccc94389f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee0f215b-ef2a-4d25-a0e3-78958b4bc50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2aceb7-4116-4b7a-aca9-9d5a50bb836a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b341773-5ea5-4dbc-9f4e-184dfcad9899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e920cf-2537-4fd6-9ac1-3449e77f9f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafcc2b1-e959-4d81-b156-5d5d8a0c5c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c5d4c9c-31bc-41b8-ab0d-ceb754d50c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339cd7ad-6068-467f-a1e1-41a8f6081b60",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96612df0-6b6c-44f8-8d13-13a50d848ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fbe951-04b0-47ba-9e32-5d74fdd8dadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba13711-bdba-4924-8829-027200d39e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cbc36e9-bf87-4e36-b94a-c8fbcd0fd351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54c572-e96d-4dc8-8263-c0d11c1d35ae",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba4d30a-a72f-495f-8b1b-f9eafa42201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160f0b6f-ec21-411d-b4d4-3f6116bcbeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba659e01-2da7-4724-8a5f-faa4c32415d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecdfa1dc-ab03-46a7-bbce-5ca98549f4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68426bbe-8228-41fe-be59-12a32a8a20bb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6913c84e-4369-4269-b7b3-4f88317a9fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96caeee-93e0-4836-8476-8362583f2467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0211be07-def2-4870-ae51-0593363643c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6498dcd-48de-4b6e-bd36-1671f2f03662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20394cab-c90f-4f44-b5e8-38ff26c4814d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b8535a-2c7f-4bda-b401-2248bee02147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1885d642-8de5-4582-9bf1-d59f662b96a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0288c116-ba9f-4e07-ac96-00b5a790c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a35786fb-8778-4f22-9cfb-d53af6d7de84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb79222-5d5c-4136-8739-71973825ec6e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e9f621-126f-4598-8e1f-35d785baccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c45a86-612d-4c3e-92cd-6c8efd58d34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7590ad3-ba10-4cb8-add6-d6a55ff130e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32f20982-983a-4d19-a248-e3ae59f43a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d1b635-f727-46e2-8e69-78d595edc1b3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5da6a39-6d9d-4894-a16c-a64850fe406e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5bb79bc-81fb-478a-bba7-bec44878deee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f9a226-dffb-419d-831a-31f480c2cc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ae0754a-61c9-4707-812a-543fb97c2b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2579382-ae20-4301-b59b-c614589e05fb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6da334-f5f1-4d7f-80b5-fe1a5d8192b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ff0e16-f0a8-43e3-bcbd-c9da0b92ce65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab7dd73-0f3b-49b4-9f1c-1f5617c18598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c5c90e0-235c-403c-a432-fa480dcd7022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc473a81-80b2-4cd5-b151-ddac0a184102",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5997339-fb43-43cf-8425-2a68170bb5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "763e1ac2-e1bd-4bb8-8e18-1908574399c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5613e5f-3603-4d03-8fc8-0b1f36b77974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bec5cbd-81c3-4dea-8780-95cac2938947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe659e3-bb7b-470c-9241-085fbe41f47b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df5d5b6-982d-46b9-8b98-ee58b8ee2018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b393e003-69d8-4d4a-a4b8-62abf9bce4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f98594-0cd4-42db-9392-69ff4c7401b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03478c4f-3b6b-4574-b38a-b8080277385d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7411c777-cfb7-4008-956e-c62e75f54415",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dff202-c726-4da8-a024-110764d86f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3699fbdf-2219-47d7-80c5-d11879fae288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93101383-1960-43f2-9067-1f0930574258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37de75a9-1eb4-4378-8356-4e016d30c7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbec10e-6c5a-4d41-9fe8-30d5f7deebfe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7310a702-0670-45dd-a289-b5fa52ffe139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e80ee5-cbd8-4413-a6d6-22a100461a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774ed0c5-8b0c-4258-b3c6-9880b8616451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba5c695-81db-4328-97ea-447910efbb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d88d43d-76f9-496c-8a00-467cedd6ccf8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581798d5-224f-4bb2-a6cd-e710b89dbe25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95ad85e-3cd7-494e-bf75-77325deed261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66bba96-a23a-4e17-b5bc-93f6b341ffb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53f7581d-31e5-4854-a9a1-01574e4f64e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb32be6-782f-483b-87b0-f04b6950f76d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e477cf3c-cacd-44f6-856f-5ae83cbbe8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fb6f33-77a7-4f9d-9900-7d373317fd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4435adef-51a9-4379-b6a7-2c1ccca6bf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5bb9c83-a970-4a06-a851-5b8cfb643c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76738b70-81dd-4a9f-9cc2-0fdf25fcde57",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8ea2ab-1745-4e86-9699-11dfdfa280d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf8fffe-f4ec-4923-badb-ba7665a6bfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406d008f-281a-4217-93eb-5f548e4d19bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33b83c05-7285-4469-b515-558ed183ed0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f166001-b44d-4bef-bd7b-ff01c900ae74",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1e0cc6-febd-4c97-a80a-ea5c1333becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57cc2fa-1eb0-4947-99ff-e56bb1977729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be18e7b-653f-49ad-acc3-31e9956c7533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6c3100-406c-442e-81e8-63e6e62fe681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14caca24-efb9-4d88-a7b0-831f3ab3356f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684bd887-8a12-46e6-83a0-4d31c44a155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695f7c03-d333-4a80-88ce-5762cdcf8168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5c2e44-1eaa-48b9-8aee-8ca895c98ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "512bf581-3d2d-4be8-b3e8-c38d9eac87aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbbbdb6-c01e-4304-b9c3-9376925f90ee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1ffd7e-e65a-4adc-8281-801488b7bcf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4b4ae8-990e-4335-833f-059462ef0a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd44b44a-3cb7-4f87-893a-b9cc76a31a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8585a052-f1c8-4f27-9d11-a6bbf50ba2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a8d011-ff5c-4237-a488-c0a369ca5036",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45f1dc9-2da2-41f2-b48b-68ba5eedbbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71cd05f-0047-4c06-9eb8-627a4e5d412a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f496fb9f-700a-4a27-bd39-1de89153b3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ed44be-93c9-422c-81e4-361a674217df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1ae170-a60d-4c31-9852-9794dfd23595",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c9569c-5b1d-4b1f-b4be-6920ab1950da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd7997e-4aab-4e39-bb96-3811779dd0fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b64b8b-dc9d-4a1e-a0d1-e4c53f5d9c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d35639b2-2ba3-4cbe-abcd-f53ae78f11a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61637187-6ab4-4e38-925a-290f6655d13c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfb643d-b28d-4cd6-92cd-d1588d249eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1004726-14be-4a68-b599-de1bdfabc024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12b4371-d1ce-4eb8-8472-100d697a28bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "869776ed-d77b-461d-968d-6188ef781b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988e3a30-a70d-4408-980b-a7f9c671bc9d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ca6334-ad9a-4e8f-8bbf-eb86e1f23769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4bdcd1-3124-4c15-b65f-1ac9492e7725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99a5e557-7a7e-4336-98d1-a814c648d6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b863be3-ae38-4b6f-a9cd-e95ec1bfcf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b4584c-caad-42f5-8bf8-b6efea1ce641",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1909e71f-4779-4901-8ec9-86501f6e1aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a20ff81-8c17-4ffe-9946-ccda398ffd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d80317-54cd-4a72-80a9-4a9937eae4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "11b95626-e69a-40a9-9c16-7c53139a3c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e91abcc-cb2a-4faf-8c94-88cdf8e1e24d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da65d89b-a970-41d6-ba1b-6bff766e43b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e8fb544-e4d8-4846-96cf-3699e355dce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6576a7b8-88a1-4f44-a00d-89689c68ce60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2405823e-3c5a-4caf-aa04-f3d78b5882b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e83ecf0-1c5d-4fcc-b676-9f34409fcadd",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08090fe4-3c59-4988-b192-35a9a5df45eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c50931-4898-4247-a452-1b9bf4e535cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a88d213-ee7c-4c1b-b5b6-89b01b242ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad331310-22ec-497f-9c46-25c9d6a10c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2760c7a-b108-47b2-8514-a30ef1e5a7df",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac920e41-36c5-44d8-953b-1a22d02edb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d4b7d1-9d0c-4498-86e7-79ec3b606d20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8664f792-63d7-4978-8f39-40cdf4a62abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e40336a-462c-4fc1-8686-fae655689661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3707d51-1f8d-4766-8ab7-5e1c801c7178",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd2a26f-c90d-402f-a0d2-fdef59cf92ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d729eb-408d-4bee-b19e-7d5c6bbe497b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd66a429-7865-4dca-b22e-2ba71013f9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "57600b35-e3d0-45c7-95ae-885af7d34544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af5dd55-5ae6-4759-9334-6bb8e4f44ce5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fada01b-caf9-4eb5-8d06-6515ed540988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1623b009-7134-4d9e-b135-ddc1de7065fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1f99c2-2a05-4761-b445-783834779430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5340c7d3-5406-4014-95f6-71da47bf32d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bce83a-2c24-4a94-90c4-aa45bf6668e0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676e0a79-2ebd-4ba0-b549-adb7dbed71ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750b79e8-52ce-4164-a42e-ab884cc75e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a6b3e2-817a-4df0-81d8-dfc084cedadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcdebe4-2984-4ab2-a560-b3ad9b88e8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5b3f45-284b-42b0-8132-ed0c461501bf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31883638-b16b-49d0-aada-a5a5ad541cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3c75b0-cbed-4153-8255-cbc18b590c5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c47ecd0-050a-46e5-83ca-b630946f66b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d8b331-4281-4866-ab9f-c4e151f79a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e113ba9c-4c6b-41da-8f5e-b13c3f67b503",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f382824c-e0fd-46b6-905e-55e5506d9084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4036166f-2a5c-43d6-8513-7ca6a1dd526c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8902a8-b0fb-4658-9af7-4fa0a605e93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7948bb3-1eb4-46af-91f7-0ff7fdefd66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcfc9fd-365f-4390-be7e-33b94711b213",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629dab28-4040-4ab3-9cdb-7043a36ad560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd87cf9c-a950-48a8-8e52-47473045700d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baac4ca2-072f-4004-8ed8-313bc145c4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9869587c-7429-4014-8d14-e513e9074134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8e8957-3102-4b43-a12f-0608bcd5da9e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0b8fa5-1a55-48f3-b7a3-a1172d483df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8bb37c-054e-4b84-a894-98fd91ec30c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aabc724-927a-4c44-959d-a0b3248b9b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9d8a4d-f9da-473c-9450-7fbefd8b98ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea5e027-3f3f-4d38-8513-9cff85f5c837",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ba4cf7-f850-4116-a7c8-78f4a3b2353d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e433a4a-2c2f-4a69-b35d-f67ce594d1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83c5334-c865-4022-b5b6-4a7e9383612e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ab13b-3111-43ea-8f82-23d5da52ee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee16367e-2beb-433f-8408-2dd0d3fe14bd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1219e3-8039-4ca0-8676-3f3631810f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8f6c13-7561-4a23-9b09-20fa926be69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234fafda-f3e9-4188-a124-0e9d97183110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db7a7f30-a5d0-4815-adfd-43f8df2eb604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe2f7007-cbb1-486d-9eb0-ced79da0137f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db73e59-2033-4eee-9624-429f2d5b24f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbb0f37-7a80-45a6-92ad-34e0e31a9b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a5367f-3604-4913-ae20-7ed781bea113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "54c4bf22-79c2-40bd-a081-71c9491085e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ffafec-3829-4b39-a3d1-d2235199b06e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79aa84c9-9b07-4794-beb7-0deda40820dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f9676f-7704-4a32-8e73-5e96cf857c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a16a2f-5802-4775-b636-fc4186316361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "740fd800-2f4e-4ad9-9cc0-6263f273a261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8972a3aa-1563-4e77-9eae-477131250fc1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70689e7-96eb-41f4-af61-ee8725901f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa0be77-1627-4146-8011-9aef5116ff69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba70a03-ac2c-4249-b4c5-32f12ff530cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6778d438-d46c-4e20-bdbb-4d35453f464f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c2c16a-cd54-40f6-832f-e9c988697be7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3805be5-f5a7-4b83-a320-9d81519c6511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f33c59-3291-432d-acee-0c8d739a03bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24608282-247d-4dd4-a375-f3bbd168e05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7262ddea-d1cf-4435-853f-e90106f1939d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c342b8-da22-4a0f-92b3-dfbe1812e106",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "592c9a5e-a2b9-446a-b205-09c7ef190ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89f7b1c-7c10-46a2-bd4a-22fae5af7dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12dc153f-ec50-47a7-be17-eaaafcc6853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19552278-88c7-42b0-be82-0c0a1ea4292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24c8f1b-c91c-4431-889e-d35116ad4753",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc1af9d-06e7-47d5-92f0-066a5e71654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdaa24fb-cd5f-4341-b722-d67e3097c3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552d38ec-1b5f-43fd-bd9b-f24bad7af509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d645837-fdf1-4b5f-a8a3-5b6e2c6cf397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420553d3-c510-4259-8a15-cab95c7dce1c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b1bb19-48ed-40ce-9142-c0d3ca83f200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0e3a00-bbf2-4c26-a494-d9eb7fe8f9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4418fa-f9ff-473b-ae15-a364fe18056f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea06e377-afa0-4d52-a270-6214b28bdf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b350ae-266c-450d-a623-18660890d23a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed619287-d995-41c6-b1d8-5a8f71aacdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44e9341-5425-4c17-ae87-1d35e618ef31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fda043a-71ae-4986-a765-8c9fdd4c84cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a165e9-13c8-4e5e-94e6-8d3c9f47c311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2d584a-ae95-4431-8927-77c26aef7ee1",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c927f3-217b-4f52-a171-d3304a06111b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33c4c8d-d7a3-47f4-9649-41fc067fd0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d4e5c2-5109-40dd-8a20-7ef0c35ba4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "854907f5-a7af-40f1-a5f3-dd6dcc55629a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616db938-ee3f-4600-b799-2fcd19c554fe",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9b330c-b1f8-4cdd-ba5b-28fea242b9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d147abd9-ba15-4378-89ec-a527fa6d165f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26aea1e3-f12a-4c69-b8fc-bda81b60166b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c40fb2-c378-4d62-92a3-444bc9e3eb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d52e15a-63be-45b6-ad6e-262736623129",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc187b34-1eb9-4f4c-a9eb-e1bc2a846cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1250ab-4a53-48ee-8508-9043d3512fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d64b63d-9942-4d70-a3ff-39c71eaa1a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "552e8f0d-adca-4099-9e28-58d2a6e48096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e58ae72-85f8-479a-8523-001bd835e199",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461330ee-71e1-41e7-bfcb-cfa5cffbe63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91dbd47f-b4fb-4bcd-b242-6160be17bec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1419cd32-4a29-4599-9fd6-f6a227584ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9b9b7fa-2113-413d-8e81-7333b4ea3fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e16217-a19a-4d1e-be28-6cd53e671344",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7eb798-d9c8-4b41-beae-4f99b9acf071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fed6fe-3677-4366-97ab-b53c334bedb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b431f4-0f77-4987-ad3b-dd0c3b0e97c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d6bcb3-7ab6-409e-ba2e-ed2baf85946c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28defeb-e59f-4970-b4c5-7a1730d8c77a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec3ef21-78d2-42dd-8b01-561739cd48ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892d115b-0a02-4d18-b057-f150820ed407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d19c2dc-eafa-4561-9cfc-821d8c3228f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aec57b93-01fc-4fcc-92ca-d9b509d4b2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df71cc83-1ff2-4aa4-abd9-7015cb39f87c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a6cda4-8089-4d4f-90ab-fdc35ab1d2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1a3d8a-29f6-45ac-bb24-54242bfcc494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57139df-206e-4a77-a6e5-0cb6ac7ab6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9212106b-3cc0-4193-81f9-890c374e97da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b929b6-a3a3-4fcb-996e-3105a75c0585",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2283996-c596-40cf-ba1e-a0ecd677b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a2e72d-0bdc-4fcf-9ebe-974e0a9bc31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedb687a-5fac-4eed-aa3a-62d647b565f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "197a82a0-7ec9-4af8-9ace-2590213c4fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7384ed9-b269-44fe-b6cc-daa416864eea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccb2e4b-6ef5-449a-aa5c-9da5abcc9da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6ff420-2673-44e9-84a3-f9586bccb977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c5c5bb-6cd3-48a7-ae48-28791e465e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cab892f1-01df-4196-9831-b1f0ae27ccac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71fdd4e-50d0-42c3-b1c6-98441b0bf852",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c87411-3dd4-4fb7-8804-a5c6d5c7f4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20eb180d-1294-45a4-a694-8c79bbb0a12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14359bee-1668-4111-af7d-8c7edc483f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cda98da4-7a7e-4514-a705-8687aa8a75c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860568f7-ef26-449c-ae1f-74981c8a74b0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ac2a51-70a2-4aeb-b7ec-25a3716c13db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd4ea66-0147-43da-aa82-11cc16d40f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79b31cf-281a-4b13-ab26-d18bf969b97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d731b7b-6df0-4eb2-b8f6-8b1f12f65296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabe8d71-730e-4e93-bcb6-74d91a8a2818",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94010f2-f1c7-4a3a-a3b5-709c1c857c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961f7ffc-3e5d-4936-ac44-edcf39d4cded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e46c7ee-7d22-49fc-960b-61d67bcb9e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea1dcb9-4e44-4587-8997-33d115cf2678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bf7209-f94e-4f86-914b-9ba49e007685",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd652887-7e13-49a7-8e5a-b7dabedf73c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d573b7-1733-40f9-9f25-3e9ebdc86d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e15653-cb87-4d04-9a31-b971ded75909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0f7392-cc40-49df-bb12-5e734b963eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9859ca-7b1d-4668-a6b0-24f34cab9891",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70cd6714-fd93-4a0d-a610-9172942334f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2228ab1-5122-4855-a744-1f19d869af73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df397cd-a9d8-4527-8165-daa10d9307f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e59b824-1f50-411e-818b-83b77ef60515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fdd849-0499-45d3-960b-13e5e7a4ea06",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fdd2776-dfea-4f0c-a1e3-3ec7044e0b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56b36472-8b4c-4c24-a48a-2ad7ff9c48fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcc9bea-173e-45fa-9640-07585c825e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b61fb34-9513-4bf7-99a8-e3206d48751c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6f5cef-1f58-4082-a5a2-79bfa12b5abf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbfac87-60c6-4115-b6b5-66718dd1dd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2a83e3-f695-4ed3-a379-36dd4b98cb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e61df1-5e65-428c-b901-cb4aa4b64209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1968565c-64ad-48b2-bbfb-f94a2a24bb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f74472e-f2fd-4b94-9a61-964dc386492a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34fbac31-144a-488c-9e10-b0b9f1b321e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0adca8b-aca0-436e-a593-194115a068f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c98204-c61e-4329-aaca-5c063f0e1f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "615657e3-0b9a-41d6-846d-19faf9c933d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e1b304-da8d-4574-8268-714369f8c625",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08c0cee-2dc8-4e94-a05b-cee5fe534981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7d5380-3fee-4f40-806a-2f1a448f9efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a546654e-62c0-48f9-9744-8a320676745c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "897efbda-e05e-470c-a96b-a87cc9e93510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c767819b-7e28-458f-bfcb-3e9fc47e05ed",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd08e418-d32c-4152-bf13-43823d579904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab6e2ca-0f5b-46f2-97a9-2b81afce6df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648c7e20-d51a-4fb4-be46-985c25681ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ad7a5d-c26a-47f9-8f7f-a863877a85f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3265b6ca-d6ab-456c-bc44-88fdaaae74ca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df37f539-2523-4727-a958-74560950e225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea642947-884e-461f-b514-423ab841aea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4d892a-00f1-47db-8c0e-9db326d457ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10517c8e-03b5-4ccf-9720-f8db84c234cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087a2d80-a784-4fff-8450-98099dcee9b8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f9a0b1-4f32-40da-bffc-e4980bd56191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e0612e-ebba-4f18-bba7-06c992d6250c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dd3471-154e-4a02-aec1-44dde3122ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f707d8-3127-4613-9d7f-91b7f4bb6312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7352be-7309-48bf-a10c-90b2b2643601",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e80436-5e8f-4f80-a000-20cfa8b6f528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57814339-e515-4e1e-9209-4bf9f7c2ef8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fd407b-9b7c-4842-a0fa-ebcc42fc9d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f002cbe3-81c0-4785-913c-5302227c810e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b79e896-8364-440f-b060-fe6297f77284",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9829f4-f52d-46f8-832d-df07ee66f622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d39cd3-2ae4-4f54-96c8-34dfcd7bda87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faede6f-9595-48c9-b428-4fbeb0473ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "111cf472-9848-4d05-ae9c-0626d43b3f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1050680b-d4d6-45d4-b27f-cc7f7c59001e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444cfee0-4a63-444e-9b28-1b9521f48a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4547ea0-2473-4459-a844-ca29813cd9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45282cba-58e2-43f2-ba12-4d6d6ba76868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb8797c-01a1-4063-a3d0-02bfa567a787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88ba4c1-f29f-4b49-bec6-e31f809feec8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6272c687-e2fe-4dc4-894d-777de0f5aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd198ee6-8fcf-468b-a726-37157c1bf648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08136fd2-c4a1-492a-9e67-72e1c2d764c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e00b1d8-c582-49e4-8e34-95d827805eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b692dfa-2cc8-4866-9890-f544281611b7",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c119800-ff43-4732-aef0-d9b76f338f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61627a8d-5672-4e36-b230-84519506d53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f73674c-e885-432f-b893-f8b14f09be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "69b9cc80-8a21-4acb-ba06-9bff2235578a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b239d0b3-66dd-4df5-bb1b-dab23eae903e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1189946b-75a1-4871-b4b6-c0cc87ac34aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8342efc3-153a-4e04-a41d-cfd307f2d358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fcfbfa-9a66-436b-a5be-be606ea8b8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0424b7a6-0abf-49ac-8e15-277947be7dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1817fe2-8be4-4b6b-9650-32d870828af0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d0a71a-74f6-46c6-bfd4-33fd9d7aaa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116252c4-3689-47c1-aacd-d3625a2e649c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b01882-aa91-4b2e-af86-500c86a4b270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "813e665c-bad7-4651-b7b7-537428d44e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d6a5d9-47fa-472e-9927-d968538e8c79",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c3b8be-a642-4f77-ae83-2fe7db1167da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cdc0a40-9e45-4a37-b624-d6b7163b31c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59133b01-3997-4d43-a63b-7452593f7ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a257bc5-6d6a-4f18-85e6-48685aad0cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fb90ac-3468-4627-9bd7-96d8a6b66f6b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030f37ca-f15f-4745-8ed3-40a1e878d346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bba2e055-a653-468d-ba97-169aaa371e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a8a070-8b54-4547-94e3-abdcd0312a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9b19d5-bee8-412b-911e-1079d8a11eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad58010b-1097-4d13-8bef-da11eac8f2f3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74a60ee-3ef0-4cd4-b7c3-aaaea79e432f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944d1f68-fdf5-4409-923f-32f6939398fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4086f1b6-3044-40be-965c-1e848590ee4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25fe019a-a62d-4c19-beda-d00ba6f5265f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e25f63f-7f24-466a-bf3b-e45fa32bc296",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec58c74-45df-402b-9ec6-c49f9b3269cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c38fe8-f651-4d7d-b655-5a3e6f41432d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d13fe0b-b17b-46a1-b504-068fb389038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f035d705-ea53-49ba-acdb-190b03d80a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7b50da-0217-44da-b917-ce7193fb98a0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9812f6-c291-4a3a-852c-46b4a3057369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ab7af7-adf4-40f2-9d58-f88573054bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7329f7d7-d39b-4f33-a87c-279f5500ac54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5fc7000-556c-42d1-bada-66dc91c1ab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c03dca-af21-4abc-9209-51d295f7e84d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df35d1c8-c4f4-4f6a-bd19-99d674176095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c015d7a7-ed56-4150-b604-61ea8b0589bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6fb693-9685-40e8-8907-e42d9515114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec328951-0020-4111-8015-f1947496fc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfcd1ac-8acf-4c21-a52b-5fc4f450d27a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f2e894-efdd-4926-8f17-8e9920a990bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556e9fd1-a830-4940-9326-0173a44723ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dad1c9-c68f-4629-9305-10bd5d99e3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b71c14e8-49d6-437b-8fcf-00b8462459f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b5b892-1f7f-4b56-85c5-ccc6f6642e5f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202a41d5-16a1-4da4-9ca3-e2e999a4cb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36353093-47ac-42ca-9798-9a1e07a8ef7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d511891c-f054-4cd1-8027-84f03107c992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7446423-d0a9-43b3-99bc-8b96da806642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b8ce6a-51bd-4446-a603-ff6f01990568",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f5a86d-88b8-45c7-b395-0e7b18ae3b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044f8d7f-7ece-4b47-ab89-5c3255f0031b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b09b160-8b42-4b45-a1f6-02ced1530f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a758f035-7d7d-490a-8990-6ef89c49af26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f4d830-e9b7-46ca-b1d8-5ae50ab06a36",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c60309-c3e7-412f-a1a5-4deebdb57f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4745de32-a3cb-45f1-9238-2d28c7c02e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a50a140-3230-43e3-b24c-80b6afbc976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e705f707-8429-4ae0-964f-3080dde12611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72188976-5881-4400-adc9-33e75c13023a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47389e9-0eae-4853-a265-395789298375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bdd829-b37d-4f39-afda-1a621304bd3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495fb273-03ea-41d3-8d4d-8662796a1d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "07bdff2b-e91e-4ab7-b576-e1a1ad4d4a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbeaabe-1a20-45d2-8b49-7eb6b86f150f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a734a11-c72e-4f54-8703-aca8f803340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c077301d-6be4-4e92-8098-69616f0a199f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca00416b-cbfe-45f5-ab5f-9348edf34a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "45dff9fb-0ee0-469d-a34e-1d5d153c00c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4157c97-61e8-4618-9257-0c70d4c74227",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43fdf36-4335-4c17-8f25-2e5aca40c36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c8ec2904-0fbd-48b3-91a8-30e84fa193e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f89588-1688-4734-8105-4c327ab98309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "562c6e84-bc59-42b0-a76c-715d3abad2ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b49bbbf-9fb8-425d-b986-cab0357e3b72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf45cb7b-d357-4643-a891-cb4e187fd8c3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffcfd43-16a4-48d4-a194-c28bfaa94e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3033604-427e-40ee-9426-834525dd8ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c907671f-4707-4ebc-bd30-6dc1e9166986",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "7971eab6-d41e-4f55-ab36-3fce69d2aac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5472b341-fedc-4808-ac17-5fa1de06bee5",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7cbc35-0b8b-4e7d-974b-8c08eb816267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df647610-cb68-47cb-9cbf-58f2f8e59733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06506953-c65c-4933-91f7-04324ab0465c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "86abbbad-7866-4804-b6b3-a56dd4c8e7e7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8dbaa27-93fd-4741-b625-2e722317b4b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7c536ec-890a-43c9-85bc-5fc65b2bf3da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e25270-860f-457b-b738-68d1517b4c0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77247259-979f-4520-b378-c3377760fa7d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27c836f2-296e-4402-80d9-ac90bb4b45b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "53795e29-b197-4688-a2c9-64f535e493f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4f0a3419-0fde-4efc-a794-b88e031a7fba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2a381452-1286-4584-80a5-20e10e017502"
                }
              }
            ]
          },
          {
            "id": "1f1e8d89-794e-433e-9daf-8d52a7174411",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8962b3f-795a-45b9-86f1-10b834854848",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2492fd07-5a94-47c1-b1e9-9f04d34db142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a2df127-6069-4eec-ab20-98d04e15a8f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c84e5f57-8dbf-48cb-8d73-71af84b828ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8c61579-e934-4a88-9dda-b77304b2d136"
                    }
                  }
                ]
              },
              {
                "id": "819b4d90-4632-4742-bb45-3184a6b9d97f",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49858900-35a9-449f-810a-1a79c271e809",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7e36818-6d81-43be-a38b-11a887c7406a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9264eff3-552f-49b4-bc71-7836aa7c85f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d10c151f-887e-471f-a416-415cdcd88476"
                    }
                  }
                ]
              },
              {
                "id": "066a3e80-7968-4b2e-b4f0-cd3cc5140268",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8303b5e1-09e3-488f-8ae7-e7c616208e48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37622c43-584e-4e99-ab63-0a3ce4819c9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c295bfaf-0818-4ff3-945b-251172e85b92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8cfb5cd7-6655-4639-94ba-cb2e0cff0485"
                    }
                  }
                ]
              },
              {
                "id": "292f153e-6d74-449e-8800-b4959fb86d8c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb9db7a5-9926-4c48-bbd9-b12f025d7ca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "472e3397-2d9d-4f06-9063-9f7cf024b3cd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a723d667-ea01-4273-ab0e-f92579b7f910",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "62c1e955-237f-45a7-8bd3-6b601c45c3de"
                    }
                  }
                ]
              },
              {
                "id": "cba3a373-9d51-4516-9406-ccb342459e61",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9cb23cf-ee00-4cf5-be05-3ed006796f49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "595a56a1-8872-4232-92e0-adf79c1fff6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d8d5515-a39c-4104-8da4-5ee80a38303f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "63ca2afc-d87c-4116-a99e-f7eec4f95994"
                    }
                  }
                ]
              },
              {
                "id": "8acf3230-e438-4ee3-897f-1fbbf803d746",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1cd8066d-adc1-45a9-9332-f8d3fc0be8a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "752e969f-c3df-4852-96d3-4a7770e3580d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8463115-b3b0-41ea-9a36-5776697e3325",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8d3a88f0-732d-4899-8c99-4e6ce99b8c7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3e76ffd-7835-47d9-97a3-96b7a82db3d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0743b6ee-b2bf-453e-a89c-0678fc8c7a16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "188e4c56-a971-46ab-be27-21e454ea9d2c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ff6b6bc-c73c-476e-8189-19d0881d96be"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c05ffeec-1408-4a94-9e53-9b35ff41676a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "abec6700-86f7-43d7-a8c8-83d53eb66fc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30ec267b-2e6a-4aa9-ae0d-9e10668cb9eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa42bbc0-f7bd-4f5a-83ce-6a645c8fa982"
            }
          }
        ]
      },
      {
        "id": "0e315850-d393-45a5-9c77-2d43a2279cc4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "904630f1-b27a-4ec9-acfd-11f5cf4ad949",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b73744a-4abc-402f-ab50-bd34611d4593",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9ae4b636-5a0f-4d68-b4e2-cb64b99a3f65",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae23d60f-a5fc-484d-ba08-969fec42cad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "547d2f76-5911-4a98-9311-a6035a9f3324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13685a1f-bc33-4487-9b1f-f8a7d14e69c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "85852c3a-f8d0-4325-8b2a-25fc29568b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60614400-c9cd-474e-83bb-2e83637ab97c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55650e36-7741-4c91-b52c-0ac9d8d9b6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b049438-07f3-4a21-b625-6f8992821cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ac2341-03e2-41df-a6b0-07b4952a8643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a62ea4-c664-41d8-9a89-c99e9e7acf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199e9087-aed1-48a0-89e7-2f362c731d02",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26a5e9e-ad7e-42cc-8608-f08e490d97ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f9fc18-b305-48e0-8a5f-60b0805f90fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ad494f-f6b7-4105-96d4-7cd689a68987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "577826f0-de33-4688-908c-48afee4c415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1addd57-1f0a-4be1-84bb-b2b38de55496",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b988b40f-b452-471f-a87b-654b0e5210c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb45e29c-c79b-415d-a0cd-eb726bace843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feed5c1b-406c-4d2d-94a9-1d6170b24f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a4dc1c-e4d6-4875-beaa-3b4b4cc60017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c652230-8b28-463c-b43c-735c2d892200",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51966941-c9f9-41fe-b832-ead4787351ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019262d9-0069-4530-8ef3-9d78dfb643b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5d9560-29f1-4e43-892e-00088ff5bd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3261d38a-bdb0-4b84-87e5-f75c76dd7941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884320ba-ec09-4aec-9573-20baad9c326d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "266f901a-7294-436e-8ae0-94da47f4a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7bdade-53e7-42ca-8d93-76179ee60811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73f0f76-2656-4b66-a43c-252ba726cf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce561949-6131-4111-9eab-41ada918e744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23fc1f3-787a-41a6-84d1-7053ed006b8a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438a7c5d-fae9-4083-9cd7-754ec0ca0099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113f16c7-e81b-4300-acec-3b801acf4c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09394a22-3756-4600-b802-459dff29d023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b59fec41-eeb5-440d-9024-685fa85dc631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cda0291-6a4a-40eb-8890-3903e277bad7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a75d787-f681-46d5-a7b4-f20132a51eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f23a857c-0c39-4e02-96ad-28da1b1d3c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d8f85e-8dee-4741-83dd-443c9bc90d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e035d220-2b97-4929-b2dc-da9192aa8955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e500b9a-e051-479a-a47c-9170db8b3348",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ed3efc-b5ce-41d6-9c41-6ac507539944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1562493b-b080-4080-8a0a-07d1b4fdc7d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf3655d-8e54-4386-8d4a-9c87b2ddf500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c928cd0-455e-4e25-9668-e2f566856683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92347af0-721e-4ff2-849b-27d68a6dba9d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff05e30-9a83-4f49-a8f4-1b0cb2632b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d446bdac-bff9-477e-8c9c-f74e8ea05a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7224c6f9-6bf6-467c-89eb-14c8cb54581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3356851b-e30a-4037-8ff5-1d1d2595db43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c269f293-d664-496f-9f0c-6c164e92e6d3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb722a6f-dc7d-496f-8eba-08c0526b3340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52167931-e6a7-4a88-b297-c3aa813f1bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed405fc7-64ec-4a8a-a994-9115610039e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b8497b-c032-44b4-a7cc-838965a0c3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab4c094-d75b-4c6c-a912-d621db88d1ff",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a604b149-69e1-451d-ab9d-08934256133c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d721e4f-0043-4112-afdf-228c33e6527e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4191e835-e1a6-4da5-8927-186385bbbd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "451e4401-6350-4e6b-befa-da8ff67171a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600e61ec-37b9-4f9d-a758-cbab40a54820",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22965d6b-a317-45c6-8c34-0b157b766b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e4a484-a692-4e47-b401-faeeda812ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf09cf5-45e3-40bd-b1c6-10be74c01e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc0ce64-3734-45bb-bbe4-2139d72fc7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83ea012-82b7-4c83-a9bf-c9a645358b80",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ee37a9-37c3-4cf4-9af7-ef83c899960d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f07bb1-990a-4cc8-bd84-257d2b0f2134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622bc39b-8757-45c7-ab37-9e6cbf9a115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "341dba20-1682-4e2e-ba24-9fe51f456c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0465f4-843c-44c6-882c-a3cc591b57ae",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33242736-4562-4862-ba38-b74cc1b2cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7203227a-55f5-4caf-9149-4c0a0419da30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b960145-a81e-4369-b191-1952e3c43d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "50e03244-e076-43d2-90be-e605a6c71b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29b9b3f-c4a3-4f5c-a72f-f768373d49ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0865f3b5-bcab-41b7-a2cc-805a770a4706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c67ed7-6e05-409e-833c-db3fc6772288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e601f693-8523-4b24-9ced-b7f65a651ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "06727c7b-ffa4-470b-8dfc-0f827dce5890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39043e2b-25b3-4cbe-b857-f94399a602d0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c61199-eff2-44a2-a1a1-110e533ba083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9a76c1-78d7-4345-b074-b202a124e288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd288bfe-cd54-4d53-a7b7-b1eb00259e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d718f058-f7f7-43e1-aa07-8eab58adad88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de9a161-8392-499b-88bb-5a04e57ee787",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9238f11d-a07a-49d8-ac69-9f0c9f1fc5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50dc05ab-969b-4a7b-95c1-3b3ae579316e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c626b3-ec8a-45f0-a2a4-65ee22045c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1b03cc-974a-4733-86a4-b23dfb4a72e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17087b42-3534-44b6-b130-ff5f31eba304",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4c5034-f327-4ddf-8c25-3a5ed35db624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a9f967-eeb6-4a35-97b9-70b841669f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e6d1d22-876e-48e0-a9b9-62e7f40604fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07f1ec92-1765-4297-aa15-3ccd85c8bb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95235ac0-906c-4515-8d29-3d5e409e5399",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23590c1a-eb94-4e60-bfb7-ccf01b8b0add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a199b9-028e-40c1-a1d5-93469c82debe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83da313-11a2-42d9-9d1e-db403536d141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d358a401-e608-4ad5-ac05-7a6731dfde80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c44225b-fbe2-4656-9aae-e567f83c6d9d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96a0a5a-07a9-480d-a1bb-48e401a6f0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233cd4ed-0916-448a-8d8e-e5ed1f4df129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cce665a-5f4b-467e-97a9-d99ef80a9847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c4aebc-9e87-4a18-a2e1-f581961404ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8bdb9d-ded1-4e62-bf1e-d4ab68380b46",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770a684d-5a40-4666-a739-7c0e82d6e6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2df882-6d2b-4ab2-9359-0e42ff74cb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051e7643-cad6-4504-bfbe-35bab3555d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d341f966-9890-41fc-a2bf-240d63ca9ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a107a6e-2c32-428f-b75a-754764ced83e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcbfb5f-134e-4a52-8e9c-7d41bd4f9635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a082af01-9da5-4cfc-b416-81d38bf42216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc4caf2-787f-419c-8412-d56003cb05b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecf7fc1-8d1f-4f28-bc88-e9f6b023315d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5237dbde-de3a-4277-a8bd-977c8e8d7194",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a78796-427f-4025-9f5d-fdcc746c1bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c60227a-03be-4a0a-b250-e9bc13ab0a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b48fcef4-a097-4d71-b84c-5fda0a713387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2978d08f-353d-47d7-ac55-00f7d09cb3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b77acb2-36fa-4ba5-ab78-dc1e0539d798",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed673e15-ee59-4c07-b52c-6a514d2e05b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72eaa685-c7bf-4d1b-a0ba-295162d68dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f647c8ab-a1e4-4e0b-9f51-d4b62b169d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc2a69c8-be60-4e44-9552-6b9f3809739f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662dc4b5-7581-4620-8bc6-536e822a3e92",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e4513c-bb44-4885-856a-c20d7f8b40eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9992dd04-e9cd-43a4-866c-390cc0bfe56e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521a3df9-2c82-488f-bf1e-8990a9f74d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df4cd7e-7e28-44e4-aab3-85306895aeb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1044e3-0431-4758-ae90-2d290319bc4d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354e5548-0218-4665-ac55-a63088a638d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8dd2a7f-5f4a-4230-8c7d-046d7b3d3619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9a5801-6c77-4aed-930d-9ae4936ef822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85813429-7724-4412-8c86-8213892ac84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57778654-be93-42f6-a85d-4a6279c44219",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa1bcc9-c624-49fd-8e74-b58bed6c7b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446cb0f4-581c-4170-81b7-8e7895db5ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f8fc02-d278-49fc-9cf8-aec143a0b8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea675cce-79fc-4a42-979a-2e2e308cf60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1955db10-ef8a-43ce-a9e4-11822f86a9a3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d388963f-1ffd-4631-8a3c-7cfe89c52f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7eceb7-60ce-438f-b874-88828752c940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8685b524-574f-401d-a607-971741bb3b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b38d794-ddf4-4e15-81d8-359bbbf416b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ce712a-6c40-4cd1-b3cf-957a0990e6bb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cda054e-91f5-4e60-8422-1ee0012c38d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbfa397-4c2f-4b5a-8541-3786c8346bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d6814b-7e37-483b-9b13-e23b1556ea6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21330c90-6b5e-43b9-bc9c-5d9f2a6289ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3433b1-6df4-4886-a5f1-529a364f07a1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15816dc-7da3-48b4-a549-15c266da0187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923358e7-d66f-4afe-9c73-3cf671e007e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf47672-fd75-4f26-8df8-2bbcc68f5794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d1ba6c-5bb5-459a-a9a4-cf03b2308052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4def7176-db23-4f0c-9763-1bb7b7755435",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd348f3-22cf-4d81-9b69-5fc8ad6efa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a97706d-3428-49af-9406-9adf4c028c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec2558e-c38b-45fb-8c90-8b45969db311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca423b19-1367-41e5-827f-f5724250e33d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de25ed03-d991-4b97-b5e0-c3e8a0436a86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6761f67-940e-41a3-9b9f-24bf67a92cb4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df76b01c-fa89-47ff-80a1-f45405144858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7163ab2-9a88-44ae-8145-ecbd108da2da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fac623a-2e74-45a8-9421-9e1d88cb319a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba9257d-6c4e-4b76-83d4-9f99deb8d248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbcb67f-9424-492a-84ff-7e796766e9e1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5198c297-c59e-4ec5-9ff7-29d14043fe98",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "81663307-30b9-479e-b821-43dc1372a424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27bd5cb5-2b3a-46aa-975f-dd6e6110c6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4b87375-c09c-48a5-b889-5e665c4f2471"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41688dd0-edfd-4510-8e62-ddfc55b825f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70590b2d-167e-4c95-9795-3a4dc9a67c23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b5edb55-3bac-46ed-9749-c7aa17639c4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b356a3d3-e952-4f28-958d-8641316e7035"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e6fc7e9-ae62-4269-b58c-6103c6b2936c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "310197c0-c6c3-4a4b-b2bc-a91ce8e9b340"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "825c137f-9864-4983-b603-1da72d8afaa8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91e0aa58-9563-4030-81ea-ae192130040c"
            }
          }
        ]
      },
      {
        "id": "e58af894-3a03-4dce-bb2a-bf0c3fbcab25",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bf0c3318-093e-4c44-b02a-d174ec44d37f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1e18616-e2b0-4e06-b67e-00f7153d03d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca041cff-b28f-4888-9cf8-16d96b0ae217",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2642bb98-0ccd-4ae9-b658-a416c9aeba2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158166cc-55d2-4aaa-9548-d701b880b99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2d0fde-e115-4941-83c6-76d09ad3b1c1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574e374f-c933-42f8-a5ee-8db6ef8ce2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33216e96-db54-40fd-80c8-c00867f83cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92811c2d-aea0-4dc9-93ba-502eaf4cd591",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d005c43-0ada-41d9-9a2a-50205295cb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd333b27-bd61-4e51-b7df-0716d0a5892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaeb9fa-b5a4-4ad7-b5bb-37f563118afb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f5c4c2-b791-4204-ad08-85f9274ac923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce7a52c-4862-472e-938a-44b0b203a744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409b1974-d32a-46a4-8595-358777e912ab",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d6c72d-2f30-4abd-b9d5-b9c03363f287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ff5134-34ab-4cb9-8905-9e4e7625d00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcf14eb-b41a-4747-b00d-b7e15b45538c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6faa9181-f257-42ab-83e3-aaa2e2efe1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223d6326-0429-4656-9655-fe79fce5500a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee786ac-2eda-4850-b8c8-270b94f88233",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feca4a49-d377-41f6-870a-c912644f69c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26cfb12-1123-48c5-9989-e99e4ac5d23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9c2bc2-1b99-4442-bb9b-3726b97c7737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb8f6ec-5546-4b87-8b5e-5f650c764f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19aa5c60-7267-4559-9481-f1ad2b8d1a20",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d005bbd1-ca2a-4246-b7d0-4daa74005034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3333d307-6806-4827-8d25-e448327455fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fb733c-d52b-4637-85f7-ed22a3a5f7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab87833e-46ed-4011-9b10-0802a6198541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f88e236-9975-4518-91a7-1f92bd955818",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532fa2c5-8625-4b28-b3ab-eb6e1565ff59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2da79bb7-4ecf-4602-a16e-20d148819f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4b4e4c-e3f1-4d1e-b09d-f56a3b5d37c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e4284a-d062-4243-9945-03d9c8f28756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcf34ee-eb62-442d-bcca-0093335047c9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe122a9b-4640-464d-8408-dc93bfd57a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9b3ad62-d203-4df1-98fd-d51c18cf6b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c47b2e-8897-4216-861b-33f8af32ff69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e9d495-76ad-4fd4-b7e5-a5b43a4fc362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a98a23c-897e-4c85-8c2e-87fde4cecb07",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3277ab-da3e-4817-bc18-a403b689aaa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd3379e-1af6-4a3b-b096-4b25ad1e0cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5ba9da-7004-4be6-ac2d-582ec16181d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7baa34d1-8112-4b87-8585-7a78d13d9df7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d3fb2b-3b14-4c11-a88d-d39b525bb0df",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b693b4d-0598-46e3-b5d6-84634bb45e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a81d96e-1f7c-4607-a3d5-532eec59233d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a4755e-905b-4979-af91-72290ef7505c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "405d1266-60a5-4b40-8dfa-d755c461cec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f406451-0a51-4a82-a425-7840aa4f1ad7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63685783-d274-4556-9df9-6e4c7e256d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33ec3098-f64e-4f4d-9615-75fca5144451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8218b3-6f7e-4235-baad-a7be218c1307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af15380-6b41-45d6-9409-aeb3c8e5f7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465f45c4-3103-4b55-a50c-4fd4a4ada675",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c0f8cd-8e19-4b76-bdff-75945600273e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c71aa4f-988e-4923-a54b-c2d4702f218e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac17592-df43-46c7-b9fc-142a90326a03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6002c397-b0dc-45bc-b2be-17101c16d57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f767361-1f2e-4745-af64-56979df1df7d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ee0c03-5e53-4a62-abee-3f16ea7cb723",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48bb9d52-066b-449c-8137-1566e778e64b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830d614e-2a03-4aa2-9f31-6085dd767072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225e03f2-4d9d-4431-8175-1b4c0fd55a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cc2a94-f416-4a91-8a7a-0d847f746764",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97baee8-4854-4a67-9411-17197b7ce7f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ed2218-f187-49f7-9e67-c257f514a4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f415f794-4538-43f2-a888-7f8d95ca66a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c19bd16-863a-47e9-98e9-c8bc79531b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9ac81c-390b-4781-8398-5ef926fa6cfe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fccfa9-f289-4018-9ed0-299a1c66750c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae27d01c-7274-4daf-b74b-f65b36fb4a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa94db-f371-4c21-a687-8214aa7e6d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289c576a-7a95-4a9e-89c4-dcacff583ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e85e84-e931-49e7-a52d-fbe27c379b5b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606dac7d-cba3-446c-896b-8a14cab11300",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490804de-213d-441a-a0c4-5c1544f6fdc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46071f7b-07a4-4a8d-9ad7-aa67d258676a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146a049b-558d-4557-bf9c-8b1a9697898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b355db-9b3e-4789-a40c-61ee8aaca491",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8707af96-30c6-4870-b9b4-b0b468e62683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d78806b8-a078-4d65-8e28-7da076127935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0911248f-7acc-48a9-bcca-8243c04a0277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed87d51-7188-4e20-b0ac-0636d1fda547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b23de22-2e38-4ac0-9932-9b1c7e065eee",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea6ff2a-ebea-47ba-bb54-e654584f83c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91c071b2-8caa-46e8-a06f-c97cd6fe007d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103a9c02-eb6c-491d-97c4-408a723211c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5681c1a2-a880-4437-ba5f-4e5d70bc2a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f79785c-442e-448c-891c-8b0b3c446f2a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bd50c0-01de-4215-bfae-a8b43707a6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "049a39e6-9864-46df-b07b-8ad9b997163e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfee7946-664c-4fb1-bf04-688c38595145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a2ada1-96e9-4ce6-860a-6e01729fd896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac31e9d-8c69-42c4-9ce6-bf6a92fd8675",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cde1c7-2844-45e7-9810-573c456cd40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772d8c87-6d0a-4225-b436-b88a90580ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306634a5-3a18-44e9-a90b-ceeb221b7bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a9b72a-332f-4dd0-ba69-882e11db7a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc2eab5-5a44-4144-a4bf-262b1116c5fb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568389e0-e122-4af1-881e-0c1b3c31e141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a76c2a-494a-4ac6-bdc0-0e11ee60bfe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4320ab2b-efaf-45ae-a115-e4829dad8ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abad37e-d45c-44f8-a41c-d434cc73ba30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3dc383-5ce7-4bc1-95a8-c37af9f78426",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff56d85a-c29a-4231-8d7a-0a7488db2c7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d2c46b0-d575-46c8-9f0f-2efdea3f917b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611db714-e08e-4355-8ba0-0868c3ebaf16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f468f625-8590-4430-8aec-4d78eb37d4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3620b1e-579a-4cec-a3c6-5110aab8e5be",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c421e5-b613-4b57-8b5b-b9c6f2cc37cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5eb39df-f219-4f21-b99d-93eb0750c248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ef0699-152c-475d-9b5b-8a40d919ca01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9bbcf7-7d9d-48b3-ace1-ee0b3ba7b6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51902e68-d160-41b0-86f7-1fea076bda3b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3426280f-bb80-4215-8823-267d055ebcdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01095588-9cd7-4b4b-b237-30c2ebfa5ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd620e-2cce-42c0-9ed4-3e8b49af5581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da453ea-f04a-412d-bd57-265ab47bfef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e4df71-2244-4f64-9950-6ace8d10a2e0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1d85b9-cd7b-4232-8101-54d220c9193d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bec9c96-b51c-4dc6-8a46-bc1d9a9c130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dc1309-ba71-41ce-afb7-124ee0d4171f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accd7c8e-a870-4837-8b90-1915b98c3045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd30b4d-8e1d-4887-a2d9-da840264d34c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1f9d4b-6691-47e3-b643-8562685e4429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50120293-80de-4384-a311-f758c4aa3f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af76592f-1c26-4ec3-ab4c-cfcdfa782c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4df05b4-7ebc-49d3-a703-a531b8f1e5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9f1582-3797-478e-a3fd-d3fbd95a7059",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374bedf4-874f-4e72-a91f-c3817aa290bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7f644f6-9c94-4e66-891b-9b0861b4a92f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e799ff-af84-4661-a49e-cae4db5581d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9579c1f6-3e20-4659-aa41-d81cb1f5abad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55804fa5-7232-4b1f-b1b8-a0d11b82fb53",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da373c9-b7d1-4158-ae0a-e9de8bcd5bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43f1a22-8600-4456-a778-9e0ef8f9e6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb85e25-fb7f-4710-8031-9bd50353f3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59f3c54-b443-455d-b9ec-30bd4387d04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8293fc-803d-4743-a1e1-419e5e5cddb5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9585dcde-41cd-4b15-bcd4-b65d118b320f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd54e27-6709-40e9-a5c9-bc2e60a50814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184a96b8-a66a-4227-bf96-9ffdfee4fd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a006d6-15d9-4859-a99a-89510e7f6e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30886be0-18ff-4722-bbff-c58da10bf5e0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f278ac6-a93e-4ba1-933d-0e7ace687e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c7db3f6-4fac-4848-94d8-ab96b0631456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f059cc33-e7e4-466b-9eef-e5af1f265505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4a65fb-7268-4af6-a62a-2c5d6e7092ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e25cb0-0249-497c-95ae-12c15bbfe54a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5937c5-8fea-4e77-b9a0-def4a180ee08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc4bdcf-a79e-4235-aefc-af1e2913c34d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a40287a-efc9-4f75-8e91-a12a32894c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ebaa9c-2544-4766-8935-7394fe8fbd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0e9e32-d780-4de0-84a1-9a2b7d7b2f33",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489ce589-9b21-4a19-8138-3b9d52984cbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c2ec1d-48d2-447e-b550-37a91702ddf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed30c574-b046-4130-bb37-4c81464685b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffa5496-035c-41b4-b7fc-d8731d5c621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee6edcd-50df-4645-b9ca-23a560145714",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed1d831-83b1-49ee-96bf-3e93da64b5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fcfc90c-1272-4905-bc40-d97dfa6a0b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71348ce4-b3a2-4f4d-b319-b05017c345e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1157d4ac-02f0-4bd1-9ef6-7cbe134d4592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64995e46-3a81-4e0a-b438-f9233648bb2e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faec408-2fae-41c1-8cb7-e3dffaca2cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7940ecdd-0d2d-43d9-a4ee-6a78f478546b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ceb4dc-2561-4d88-a046-55909e3da862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de7ba01-229b-42d2-a53b-badcd50d1821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c31ace-c627-4d17-b772-1017b04150ef",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a197e1-0d4d-4ae4-8062-ee3d86d6a851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b75caf1-e404-4e05-834f-c41cef6eff1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05cf741-c514-4289-9c9f-66b2b3c88d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51c22913-1f9d-4cc1-b261-32fb7f988c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febb8a38-af16-4bc6-a7d9-0cb44684be94",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f6afd7-0df2-48ed-944c-122389dff82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87865ead-5a83-47d4-9514-6bfaee81f57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c77a39-5a9c-4a95-80bd-80b51e53d6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3026b100-c4c0-4f2f-b487-6c6fdf1bbb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cc2848-065a-47f2-ab36-490b8fa66b91",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ae03d-66a6-4ed7-930c-0bd64cad6d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7648b8-9917-4196-b22c-e65eeadbea56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11e810f-1b03-41b0-b1d7-361a3d8ed1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d747702-4bcb-4b04-9279-f55bf24b9f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604e3541-5040-4e72-aaae-276759ae780d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0808d84-7a2d-4d73-b3a5-bfe8905bcfcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d7eaf1d-4526-4cc6-90a3-04959ab2136f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfbd6a9-db64-455f-8cc9-6818b55bd2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d83ea8f-172f-4485-a9e5-7b5b46223861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb94844-77d9-44fa-bd5c-d6719b7ddf4a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf774908-1451-46c6-a2ae-4ba307d55169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf7ba9a-5f7e-4a03-89b4-91ca63b69b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfbf3d6-fec3-494a-a941-aba2c0e54d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdfdf9a2-6d35-4558-988a-d19cf017c420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5616f60b-5a7c-4a2f-8da4-86d56a2c7954",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e54463-68c1-47a7-983a-329f2c86fa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb07a07c-2c74-4fc6-92d7-e074ee1ecf6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8759e40-d965-493d-9ad4-b8f4d5aa5317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c3b1e5-50cc-4c57-b46e-f7c293003131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c6733f-bc34-45e4-8beb-103184c03e6a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437d1be4-5ff0-4066-ad08-9f3827fca5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b57e861-fe8b-481f-89af-89bd1ffa54fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e463e9-0021-4df6-8eda-17e13c56bd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abbc3b0-4f62-4f37-9402-2046b9ade32a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d670d483-1728-4c32-88b7-e392226e1140",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed167b1a-39e2-4607-b4b6-7b9f16f12965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f377094a-f72c-4e47-bb92-1e9701456434"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163f9b00-2be6-4020-a9a6-1fe4fa2f2217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fd54bc-3c99-42a1-b6dd-ae515ecfc3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d135e708-0bf3-494d-9ace-eef5de40d972",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0c8336-1b78-4c4f-8f46-fe58a34edbda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e055a4-29e6-4857-9c18-a84755c8a14e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04621c5-ac62-4937-a2b8-1d70abc02ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99282d1-1e62-4dda-bd19-b59679ba91ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73ff940-74da-495a-8a4b-c4e10c313a60",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec24e591-056a-4e19-8e96-4783113e7710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc04d228-8da9-45fd-a8f5-47ef3a3ed60d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca910b1-1c0d-42ef-bbcb-c0b05efbccd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072e435f-e856-43c3-8047-d708681211f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89202124-001e-42cd-8ef5-e5458aa2a558",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e384a4b-3518-4559-827e-054c46a69785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c40621-b8e1-4e3d-834d-bbf135a47812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9e6a74-ac94-4ea9-b198-684a860e7b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc79cc34-a080-4bea-b01c-08443ef9f555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5581d4-f903-4951-ab70-e79d45d1ce35",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c2296b-c1fc-4d20-aeed-7145d91e7a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0970af2-234c-40d4-80d4-f7dad44aacda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722f1e11-73c8-41bc-bc10-83c151d9c93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78fed730-bc01-42a5-9017-cab180ca092b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921ced28-247c-46d0-bcf0-401a363e430a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc818a4-2d7a-454d-b26f-3c30b4b3f07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d0899ac-dba0-4e6b-b98f-7d23dfb668e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec7317e-f941-4ac3-8610-85b56741988c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f471c35-dfbd-407d-8ba3-c544358a9681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ecf873-7dbf-4b2f-9ef4-321aa39a56c1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571ac2c9-6616-4902-94e6-fccef7bf2c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f618b4-e747-4978-986e-84dceb84d472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6a44d7-3bdd-4fe8-93c9-e3e5ca41daac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e07109-d342-488c-a009-389060f65226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea8f1a1-ab08-4f04-9537-40e55e5be208",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e951a0a2-fd05-4075-8c06-32dbc4971989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8bbb4e2-36f8-40e0-8abe-59ac31481aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436a116e-4e3c-454a-b31e-ea35da044e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc59a4b-75ac-42f2-8b3f-2ed54f7629a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9060dc2-89c8-4658-80c2-e92a16c02a8f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe89a1e4-1f9b-494c-97d2-aaa0224baec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf25641-7bbd-45ae-b9cf-1aecaecec8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad7f858-40a0-4db8-ab04-0f4085390ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffad4e76-23fa-4050-b82c-59bd177089f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de34fb24-e7ae-40b3-bc44-ed060fa4dd7b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9132c98-3bf3-4350-b424-a2b6b4aba0e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7787df-1cdd-4d66-8854-d82f31b2eaba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed434802-5b23-4e27-b4ca-bc6788bc4e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95eec242-ebe3-4bf2-acb4-c6bae5a0a138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3436e61c-43fe-4d01-9955-e0e712cece0d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e25d27e-5928-473b-a483-e03c63bc2821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d901c8-9b33-4736-b2ec-6e1fc08232ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe7d59d-4dcb-4737-b944-d113e9cf997b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5236c6ef-e0ff-44da-917b-23d52ba515bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68020a10-eb36-4092-a529-e0336eb8454a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a1b94c-2894-44f0-bb7e-79ed11c91e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c9948b-8856-4b0f-a797-b9f6981780cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a2a6e8-b038-44be-a610-8a9837c04c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "191f4be1-3bac-4a85-9f77-85948a86fc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1603b6-3305-40fe-9df5-25ef5d1113af",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bda813b-0821-4bc4-bbef-4ac6d00dbcb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af75d4c-c238-4dce-bae8-6a8c017b285a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "618bed53-4680-496d-9bd6-b99cffb02979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14d7818-11e8-413a-8bb9-5ee654eb7e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c9f5e5-454a-49d2-b4ef-5070ff39fcb9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be921fae-ecb1-4159-9cbc-7966119ba496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da6c103-3be7-4256-b977-5d34a556a560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303f444c-caac-40a7-bbef-941fa5b687f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348eec53-41a6-470d-a6fd-f7ce5d7a58ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663aa99f-849b-40b5-a73c-17827486f811",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef7720e-3ae2-4b22-97f1-4a53b2b5539c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd02edd-96c8-4fd5-96ec-68121d2e59f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77539ba-4dd2-4b5d-bb3b-d78575b7722b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fb4b87-f68a-4f44-bfca-e862bdb5746c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9eab5e-7b25-45b7-be9f-dd5e8f57a7ee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de381cc-d446-4ce2-9bd8-a67b8b716cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa99d01-3e7a-4d2b-86ae-05bf7511ce39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22e464e-3388-4cf8-91e5-d12bd3862e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06888d50-02b8-4512-b246-f0f933217655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2eac23-f7ae-4a26-a215-d8420e199b82",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0162aa-e0b6-4890-a82a-fb55f6700f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3333d5de-4ea1-465a-80e3-6346be589538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74f9c7-a46c-4d35-b921-37bc2518acd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d5752b-0b84-460e-abb5-bb7a4a8ec856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af0e26-3f82-4868-a8fb-e47fb7670a62",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0c39e8-8b0a-4d0d-87fc-71698a137357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9e68c1-d90e-4afe-a61b-62ffdeecb873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9b9e36-594d-48a7-83d3-606a9e8bd4e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c82a9a8-a7ca-40a6-9ff4-ecd112e1b33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32fbc53-7ffa-40f9-80e3-131629e00aac",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a74805-4513-4992-8cee-5e139565cb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503e864c-bfed-41a3-89ec-178c1dc58537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ac4cc9-31c5-47ce-9910-e9917cadeeb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7198f9d-e587-45c8-81a5-3fefcc0de92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6ff621-68fa-46f6-848f-328bfc300329",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7cf757-8277-4024-822f-f861b19a7b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c270f1-d238-49ed-8442-2f84c3250e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f5da30-7bfc-4973-9cf2-1ca3191eb9e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b37f54-8387-40c8-8d5b-f1247cb09a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15fdfa7-d849-4c20-a47d-410e88cf0917",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab963baa-fc4b-4cee-853d-832768d3e10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d2ed739-2010-4af8-b9d7-6f1919741689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488a0c24-1301-488c-b09f-4413b0e03a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00b01a1-014b-43b3-a3e0-fb698cd82989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6367e564-ded3-4195-b324-35ac05eab67a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dbd2b1-b2ca-41c2-991c-7883bc00ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc70271c-e0d4-4c43-ab8c-644fe50ea0cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5347bfce-7fb8-4a9c-b0c3-36959cbc8f67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c55a402-56e4-4798-a275-7a58baae73f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3b2e4a-7c79-4b5c-b7b2-8ec21b38201a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a52dc2d-f7c6-41ed-93c1-1ae62da96ffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682af00f-6572-4aa0-ab4f-0ebb7a0ea6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0f013b-c957-41cc-8d18-1d944e6e3ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95004215-c179-462c-bd48-8d5408891d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347b3c1c-383e-4efe-a6e7-f5e3b8b0f06b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56c882f-6d64-455f-bd79-c0dd902794f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3eacdf-a365-4d33-a7ee-d7fb25f458f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dd5888-69d2-4778-b53e-f86624ad6305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2222186c-6ece-4e0c-bf42-aa386ed2ecfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d97d90-916f-4d45-8207-443d038d2b61",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e27ca-d44b-4556-94e8-b40653e58acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "849fd3ff-b402-42cb-908b-8aba64d32892"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea511e07-8164-4edd-880d-3e15cac41483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876757c5-6256-42d9-82d1-de4d6bc3fe09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0754a1-c470-4ab1-a929-7984a08db28a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4035247c-4f1c-405f-842c-4ddee0afee83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f982b0d-d9fd-40a3-8aea-d69727a38a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da42505b-291e-4301-8772-4aa482492524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14eb2024-e938-4a9e-968b-63075678be39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39788a5-987b-4a38-8203-101ac8d25d55",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b6c84e-6f70-4ba6-8458-fc65a7613488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037657ba-6d4a-4c74-9331-be2e20db6ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36931b71-3b13-4e05-b2e9-4983e9182e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a616f2-9b8d-4332-b24d-48612503e609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689021f6-8b98-4053-a0b8-ac8abe856ad6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1428a284-51ff-4e11-aa0f-5987ccb993ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c65d1822-9c73-427a-a288-7d874085758a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6ead4d-07e3-41b7-b2fc-3b4b0a33be41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38034a56-037d-4b8d-a8c7-27789958ab30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf99be4-0c60-4f18-b888-712a4109c6bd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06cd6b9-7162-4e9a-ab1a-1f28087ec86d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38038f71-5b6d-4083-92b5-9c5d8a3531e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8349c61c-61b3-4724-afc5-efb729780451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd07c60b-2626-4663-924d-d27054cf3682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5fa23c-1722-4b3b-ae72-dc771ae4a5bc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59dd5764-6929-4856-889a-14908ed4f715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7c51d5-0a7a-4f93-8bfe-b3617862ea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fa82de-297e-43e1-9596-f47aa52ad93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fef299-7d43-4c4e-a3aa-1cc19bb1ecbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb33988e-4dbb-4896-87df-5b8e96a3d1e7",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981fd758-c017-4ab9-ae1a-114017232e23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e522aed9-5eaa-4870-9235-9811d9dd1ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e100cb05-d9e9-4c8b-ab45-a5eabb163b6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13043a65-eb77-489a-b334-e4c60e03c708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b76bb70-b5f1-4cac-b9ce-35cb9395ce10",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b389c150-735e-4e2e-b3e6-3f20124da35a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e79bff8-882d-4186-a473-9c3f30fbff54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c70951-ab5e-42e7-b34e-dcb6d5777081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4da43a-d797-4cc4-a3e5-9528e111ece5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aef79f1-8d2c-487f-b628-b888bf32e281",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e92768e-c599-4dde-bba7-75738e204a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32b9530-ea90-450f-8fc9-edaa3fd7a2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b5266f-08d3-4d6a-854c-ce4e15d4ee02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba52e96-5876-4159-8f40-de72e9e97cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffadb0e-d74d-4601-8281-b18c7094c06e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5501751d-dfaf-418b-83c5-b809dd26c9d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ebf5c01-d668-45ba-a235-5c0da7d286c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2b2ac4-7b7f-4c77-bdb8-9bf7a86b5104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9bc11c-4733-4240-9d0b-1d615f49d6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126be6fc-5849-41f9-ae5d-e2b96de223af",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0043444-8fa5-46a7-a6f7-cf390fb08125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e39a0616-afa7-4834-925b-31e9d92bf8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90a513d-787a-4a8f-b1ac-5feee91d95b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24438083-cc40-47ba-bc21-3169350c8639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc490a08-6ea9-49fe-9a59-bbb35b09d3d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b313d0d-4546-47db-9d1d-94fb6aab2aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d72807b-2afd-4955-a899-0b599f1ea553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3446506-5e45-4e42-9749-46dcbaf93526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b304ba-520b-41a3-8e1c-0e7c06b2b68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f579ca78-e283-4981-8b27-d54c5a7dde39",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a89714e-b393-4209-9216-b26e8264fc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "016dfcf6-fe54-4c19-8c0d-6ba90c0f78ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bd7c3e-990d-42e7-aac7-b927df61c3d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad64b61-bd6e-407f-85e9-6263ae7c7eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8511a4c2-42f3-4fe8-ac6f-f03bf70fc575",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab41c0d8-ad69-49b3-b157-d690069cb125",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "206217ef-f05f-40b9-8714-2be3033f4421"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e0f327-10e8-4db0-b7bd-df08da0fbb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028c4a56-c248-4b64-8cf1-f1c50059c938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccccbe5d-dc95-4bb2-9846-d37f46b420c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d81feb9-a811-4550-8f6f-b01b077c8ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d3f273-7522-4c67-9a6b-17a82c8d46ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c12116-32b0-4051-a7e0-d59b90a3d9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d54b892-fca5-4260-920c-15a22609161a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83b24d4-2c81-47a9-bf4f-8c0e03ede25c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb473f6-e67d-4d51-9759-2242e798feef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "860812f1-ec5c-4f52-a711-a515867f5115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeedf19-b0f0-40cc-a59d-837fd84c0244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8365bdc7-9cae-4d84-b06c-031061d61e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02651ec-1676-4d90-8f48-3a7004f5e0a1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94be5e15-014c-464b-b7e3-8bcd4157f2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0225d0-b8e9-4913-a71a-fcab44ad5c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9235a6ce-a0f0-404f-9869-37b94078369e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe32302-a72d-4a3a-8a36-113c789d7260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd901db-c1af-4f15-90fc-f0ff7d91fb73",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89312b74-3ef0-40f1-bd55-b8cf078724da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb88b48c-cd94-4673-bfc7-61196344f66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4b01f0-3bbb-4acd-ac9d-6131f7438611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dd1a63-3e8d-4aea-ac72-75cd9b73e5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81fa8b9-3449-4d77-b28f-3853b71f2818",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb8e5a0-21d8-4ffb-906a-1ad12eefa0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbf03bf-b8a0-4320-8f09-8846fb6c5c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b15fd1c-9682-4d14-bedb-1628732be3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf0ea96-876e-4960-9aa9-8c2f0e68a8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bf0095-2d60-4e8d-a5e7-1451d0bde746",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880d3b73-4eb7-4527-b8aa-5ff7b76a5186",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31f1e9f4-d167-417b-93fd-544d132e70d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379b0322-a982-4ac6-a0be-4c230e3613c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d89b960-c776-4c37-96b5-38f4cc848e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf90e8c-47d9-49fb-b901-b0d9b7153da6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a0fc2-0729-44ca-8578-20369c2ac1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d24772c-e4f4-4394-a107-30a23a112144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2870d69-5e26-49f1-8526-3a54ea54324d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11443b6-cb7c-4971-a61e-b1f0cd257b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93505f1-a4d0-4800-98e2-eb7d7869031f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5f0e9d-d7c9-409e-aca9-dab35cd646d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14659983-b7c9-410e-99ac-15eac8cf17c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13713639-f235-4361-9827-657cc32de8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd88e706-1112-4bc8-a241-12c295fda3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3e04fe-6539-46eb-9215-607473375f13",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790e240f-5a8b-4523-bd31-e1204a7c0a9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4eac9e-1f08-4f90-8834-774f0f319c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708bb117-b706-4e71-bced-c9962e19fdc8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814ffddf-0b07-47f3-9a76-e7f73f978c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf46ac9-b73d-45b7-a926-3d70cd031183",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8b4c40-4183-42e8-9663-c6b7ba684bb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4062d5c7-831e-4c6b-a62d-0c4c33a070e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452e8a04-aedc-4b9f-b4bb-5a78c79b467f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b1f401-bfe4-4bb7-9f31-864f84d5de58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b43bbc6-c2d3-45e2-90c0-caf053d866df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126cae06-0929-404a-bd56-c89d5a8e2ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fa32d57-eaeb-46c6-bcfa-106e17723b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6b8fc5-de12-467f-b059-e1a0248b0378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2518148d-c704-4b0e-8fc3-3d84b7c63b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d699bd3e-3817-4f36-a7f3-6e41138f7736",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b7c1f7-4870-4105-b80c-5d6fee7e39ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456b1361-2293-4771-8708-1c52b9a6a57f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65b100b-ee71-4c95-9551-239b9cfd26ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a3c1d2-4d4e-45ee-adc4-9f89fec9a7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c979cef6-105f-4828-9b5f-e3ad00893c43",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d51d0ed-522a-4dde-97ba-645c9c6c8d03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af835d91-23c9-444c-aac9-fb517466f03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbf9a10-0ac6-4aad-b4d7-011737aee4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1f0326-4d43-4ffc-9756-59c590a82bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0408e224-7071-4d0e-a8d8-8669ab59085f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd553b8-9bc5-46e5-9269-a2bbdb1844ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9330b80-0f0e-49c1-89d5-daf3141552b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d0f826-71c7-4358-b8cb-2d0e81ff3cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7eb099d-767d-4e78-b837-71390fc9d858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9742da-69ea-4ca9-98d6-b1ce363d168f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75978cfc-51c4-4b2e-964c-38f77348f13c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7fa028-f730-442c-a287-d835bd751b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d14c66-dde8-4130-a7a0-6b0a896e5b7b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b28b05-5c3b-49f0-85ac-153545e472c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4c11c7-dbea-47cd-a7bf-19f869e7a427",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58123a0c-5bb3-4468-bd37-dde0c910b34d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7255d0-7c0a-4286-b394-4cb0c058257e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb40c2d-1459-4438-bf70-a44314f13add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe62d0e6-f1f9-4ac2-a9df-c8cff8dc18b6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f8d8311-2039-4a42-badf-4e37ce21a499",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81a272a7-ea9a-4d1f-ad8c-1d87da336558"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac0ac060-3ab1-48a0-a7b8-7ce80b4bed71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cb23a9b3-c0d0-4237-8998-83c33ae08c68"
                    }
                  }
                ]
              },
              {
                "id": "c0cbfff6-086c-4271-a3c2-a7dc9c76bb4c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e2dcd55-fd8b-4dd7-8d0c-d184a64395fe",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e41a01b-8d27-411c-b4d3-83479f758ac2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "30d21544-28dd-43c1-aec7-ce94e111029c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f98f1f-899f-4717-b9e1-c9983b0025dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e62d6b71-f9bb-4c7d-9f01-bd6717615548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b666b3a5-029c-4d3e-a468-3fd65616e24e",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986445ff-3cd2-48d4-a469-12c3c6c42623",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6c831c88-da13-459e-9f47-3140187eef64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1087b6-63f1-4d59-9dc2-d0fa8e998f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bcd3718-7a78-4862-9976-a6e9a3431e5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8b3d573-6de2-413d-8ec8-3b8d86e7bf72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d93671b-39eb-4c81-a488-91abc80a2f5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10e8a741-6f88-4237-b6e3-7ea893a8778f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "246abf28-238f-4826-8291-2d604494995b"
                    }
                  }
                ]
              },
              {
                "id": "de382431-20f5-4ff6-bdf0-dfc0a58781b2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f34149c7-6cae-4206-a772-8f2a0f8a0fa1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ab1eaf-cf9a-4882-bbe4-980a168290ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "296ff1cf-2b02-47bd-9392-fbdd30a29e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3680b2-e338-4d49-b356-dc2ef6d9292f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc0b9f9-61e9-45e4-8e25-ac72caff43ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d6612748-30c9-4d2a-b707-5de8050ddd53",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b6773ee-e0b6-466b-9947-c2a674075d6b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "891eb8ca-4f85-43af-8048-0b99f309b989",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ec411af2-258a-4118-94ee-8a4f60b97e92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "287f80ef-690c-46df-b821-881269002339",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c8505b6-ea61-4819-961a-db2ba3911bf4"
                    }
                  }
                ]
              },
              {
                "id": "63546c71-77ac-453b-9e43-a99cdde5a919",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4c0c325-7d13-4aeb-8e33-64fc0b9a2dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1aee4b61-b2fd-4267-b0a2-17c247379b92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c142309-9974-4465-856c-004f91be0fd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "902c059f-0152-4019-bcfc-5dfd0a2105ea"
                    }
                  }
                ]
              },
              {
                "id": "0348a822-aac6-4ce3-9f97-cc06f0530413",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0309d7e-8fcf-446a-80b1-fb316f75b707",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d9aafc7f-417b-43cb-95e0-c934a6491216"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "490d0469-ed8e-4a38-8e8b-3796edd978bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14468108-e2f0-4108-834e-cc47e95d453f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db881b90-e09c-48b7-bbe9-473516a9ca86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2ce9a29a-fa21-4e4e-8128-65a15673e147"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21465f56-10e2-4b85-a48d-3fbc7e2f6f56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26c7f694-782b-44f0-b570-25047c64a781"
            }
          }
        ]
      },
      {
        "id": "bf5ab73c-909e-40b2-aed2-cbc81ef3c13f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "84d1fc53-f159-4d29-98ff-aa9b7dd705b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aded7bba-9ef2-42f1-a112-2a9588bc1cae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa0eeaed-4e1d-4582-8b37-89d319e6e767",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0caf89-e830-4d64-b91d-a5013b1dee79",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d2891cd8-50af-4046-874b-d3e80629cda9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244e5f56-47b2-4f0d-b586-2cf920593230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a87d667e-1876-40d2-b25e-bcf683fd082d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cbf7119-63c2-446d-a08a-dea15bd17400",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f2cb4a-e9bd-4a66-8407-b476b7cae096",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c30a1f92-0b59-4e42-9011-5a8b02638b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf35695-09a3-4830-8394-8b5d9363d9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b031e3c-b915-43e8-ac8a-bc1cd201cb82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5b0d5d3-66be-47f2-9327-47c4fb947bfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77f31533-8e26-4f1c-bd28-8127ac960a3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "730bb448-8720-4917-b370-6091ae65a09e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7979da87-6a9e-4681-893e-4117fd56ff93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee7ed76e-f1c8-445a-8095-abb0f464e8eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cbc23bba-89f7-4fb8-afe3-bf5d62608262"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8dd8bc19-e36c-4521-b222-b13d84f75c57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccd45b05-3075-489d-96af-e20dbbb8c550"
            }
          }
        ]
      },
      {
        "id": "1d5fcb12-46f9-42f0-83bc-104a8f4364a3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e6278e26-059c-4354-91f9-c4ac997581cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ebba60e-d7b2-46d5-ac1b-356143900632",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3056bdfb-09d9-4ad7-96ab-1533c534b8a6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1a1046-e3ad-4c4e-a3bb-6a25f689c0a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "173c8a61-115b-4228-9858-dbfa1d5b8bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "058a85fd-ca96-4b53-b276-630b6f434f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3715a28f-542b-4cf3-bf3d-ad4bf9058a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587e2278-25a0-4c7b-b3d4-9372095af4ca",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e8d045-650c-4681-877a-c678561904c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2e8eb2a6-246a-4ffd-940e-eeb50ddee4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15fb469-fac3-4d92-ae9f-00ebe862ee7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "782d9dd2-9d9f-4f79-89ed-7e6e85d71ae5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d1d43db-35c8-43df-b569-41587c637f29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "579dd804-549f-4ffb-a2eb-7c28c15c3047"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2159598e-f0e7-4b4f-ac8b-a8cf089a74f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66238269-c523-41fd-8d85-e871f9851b0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f47837b-6333-4488-b946-47884101d3e0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "84c585c4-dd89-45f2-8941-b771165fd875"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b170376-c70b-4168-bdb2-2b74c2316c00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6c12e46-2d50-4466-b82e-c78b0a3b313e"
            }
          }
        ]
      },
      {
        "id": "4227a238-bdf1-4825-a249-24dbaf31c048",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4e489244-6acb-49b0-ad07-6f9c059be879",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce134d55-5283-439b-84c5-276c322bf33a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d5bd4dd-d07d-40f6-b367-df76bf7f24ae",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c78dac0-0768-45fa-a312-d1d442380694",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5660efff-f706-4682-b67c-fba1c4dd773e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ca1164-8c07-4f26-828b-8038cd7249d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f5e7837-912c-455c-a349-7fe782e083c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ded6755-edc9-4e2e-a8ea-5fafe5c30608",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4704c9d7-4c76-4b03-8902-a9469f92ef55",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1f99678c-192a-40da-9df3-dd9a683d205b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cad6cff-3702-4d66-a801-ae7ff0130366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e38ae0fb-91bd-438e-9083-57d71eff4436"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d9861bc-23f3-4295-8177-e6ef0f322694",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a26d7ebc-bb01-4ec3-98f2-13425640a431"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a905370-a101-464e-88fd-cebf533415b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a71f8a5d-daff-4afa-8f0c-4fe985507cf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52b90743-f602-47d9-911e-df2a97b224b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9da0a7cd-fe5e-410f-a695-19060f962a67"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7469e0fe-d777-4046-b7b2-8c240f11fbb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15a917a4-a996-4494-a89f-d7f710af3372"
            }
          }
        ]
      },
      {
        "id": "00fe3062-cc32-455b-8602-87ff8fa8d8ba",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4789fef4-7109-424c-9bd4-a55cbefda2a0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "390d42df-8941-4422-bc14-2f2ed82dd1bc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "decd944a-336f-4abb-8c8e-fa4950ad87cc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d857637-9f8e-4bdf-af45-3a58317c1c50",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06128b4c-8b8e-4aef-a06c-fdb93ca8e490",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 475.56321839080476,
      "responseMin": 16,
      "responseMax": 2807,
      "responseSd": 372.0182513490007,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670114324727,
      "completed": 1670114459615
    },
    "executions": [
      {
        "id": "8cf836fa-7aa0-415f-a7f1-387c5750c3ac",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fac480aa-78e4-43b9-9854-a6973b11457a",
          "httpRequestId": "683aa0c7-c7ed-46df-951d-024f1903fdfb"
        },
        "item": {
          "id": "8cf836fa-7aa0-415f-a7f1-387c5750c3ac",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "097c28f7-56b8-4ad5-8971-43072b1cad4c",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 0
        }
      },
      {
        "id": "170f00a3-d339-4f73-a98f-86f04be38ac2",
        "cursor": {
          "ref": "b9f6bca4-9e2c-46e9-9934-1fada9cc5c7d",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "efba873e-6b0c-4b7e-a7a5-a675ffa3bddc"
        },
        "item": {
          "id": "170f00a3-d339-4f73-a98f-86f04be38ac2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "edc97611-c8e0-43fa-9adc-82118b53df81",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "5d61f291-d45e-484e-8223-4116ad48998c",
        "cursor": {
          "ref": "6ccdd009-2331-4159-8141-71b8f91c36d9",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5069a021-7ea1-45d5-849d-606954c99f42"
        },
        "item": {
          "id": "5d61f291-d45e-484e-8223-4116ad48998c",
          "name": "did_json"
        },
        "response": {
          "id": "fbdc725f-f321-4fd9-9458-b3017a6bf75e",
          "status": "OK",
          "code": 200,
          "responseTime": 1249,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867398af-819b-4058-9cb5-963b32837a3c",
        "cursor": {
          "ref": "ac80f0f9-82a4-44f8-aa75-62a333223ed7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "709a5618-4f36-4865-8fb2-f9e1582d7077"
        },
        "item": {
          "id": "867398af-819b-4058-9cb5-963b32837a3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "8a7e4a8e-0ba9-4cec-9713-956ef538bfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867398af-819b-4058-9cb5-963b32837a3c",
        "cursor": {
          "ref": "ac80f0f9-82a4-44f8-aa75-62a333223ed7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "709a5618-4f36-4865-8fb2-f9e1582d7077"
        },
        "item": {
          "id": "867398af-819b-4058-9cb5-963b32837a3c",
          "name": "did:invalid"
        },
        "response": {
          "id": "8a7e4a8e-0ba9-4cec-9713-956ef538bfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577f5087-fa64-4ac2-97c2-6971bc17de3e",
        "cursor": {
          "ref": "9a5d9e26-5cb7-4398-8d50-5702cb544a06",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ec6f1f45-5cd0-4611-a11e-f10e2c24cee2"
        },
        "item": {
          "id": "577f5087-fa64-4ac2-97c2-6971bc17de3e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e09319a1-ebd3-4a2d-8d52-8ff1f62e5d7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 567,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6741c7ed-7641-4ba8-9085-89a4ff72c947",
        "cursor": {
          "ref": "7d56070c-8cd5-422b-81e9-94b1dc12ba96",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "01e6d498-6de8-44d8-8261-6479b2e5716a"
        },
        "item": {
          "id": "6741c7ed-7641-4ba8-9085-89a4ff72c947",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "09b03943-8ac4-4a80-b537-5ae8bc289615",
          "status": "Not Found",
          "code": 404,
          "responseTime": 471,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568114c1-f458-4af4-add4-db68609f9b77",
        "cursor": {
          "ref": "4007f434-762d-4685-a7a2-1867571d1eb1",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "78bd601e-36c7-42a9-bb61-bbef6e5dae75"
        },
        "item": {
          "id": "568114c1-f458-4af4-add4-db68609f9b77",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "716ea346-89e1-4aa8-8173-4a51b2effdb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690b8457-bc7b-48fd-a8ff-b9028b636a7c",
        "cursor": {
          "ref": "7ce9269b-6f1b-4a7d-9727-7d1ad43464a4",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f0382c81-2374-4587-be16-76d8fa0dbc8f"
        },
        "item": {
          "id": "690b8457-bc7b-48fd-a8ff-b9028b636a7c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c5eed10a-8399-45a3-80a3-2ad2fce01d69",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 465,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690b8457-bc7b-48fd-a8ff-b9028b636a7c",
        "cursor": {
          "ref": "7ce9269b-6f1b-4a7d-9727-7d1ad43464a4",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f0382c81-2374-4587-be16-76d8fa0dbc8f"
        },
        "item": {
          "id": "690b8457-bc7b-48fd-a8ff-b9028b636a7c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "c5eed10a-8399-45a3-80a3-2ad2fce01d69",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 465,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a57adef-49df-476b-a411-bd39334de0a3",
        "cursor": {
          "ref": "87f06025-c788-4f2b-9461-d4e43d5e8869",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c5ccfaef-d8f1-40f9-8b2a-97d8f3a0e783"
        },
        "item": {
          "id": "6a57adef-49df-476b-a411-bd39334de0a3",
          "name": "identifiers"
        },
        "response": {
          "id": "c6fca566-4b99-44bd-9a61-98b0c0193674",
          "status": "OK",
          "code": 200,
          "responseTime": 742,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7b5562-f90a-458c-b48d-21d08ca3409e",
        "cursor": {
          "ref": "372bb16a-3b1e-4352-a0ca-2d0d8a576092",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c8131fa1-15d4-4400-9c44-aac995e2eb22"
        },
        "item": {
          "id": "ef7b5562-f90a-458c-b48d-21d08ca3409e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d676011c-b80a-41b9-8550-adceb93701c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7b5562-f90a-458c-b48d-21d08ca3409e",
        "cursor": {
          "ref": "372bb16a-3b1e-4352-a0ca-2d0d8a576092",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c8131fa1-15d4-4400-9c44-aac995e2eb22"
        },
        "item": {
          "id": "ef7b5562-f90a-458c-b48d-21d08ca3409e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d676011c-b80a-41b9-8550-adceb93701c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c831136f-61e4-4a78-ba6c-0935af2a5b21",
        "cursor": {
          "ref": "226d83e9-2a0e-4fd8-85de-688b7a813952",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "625a86fb-6b1f-476c-a0f8-48107ff83d2e"
        },
        "item": {
          "id": "c831136f-61e4-4a78-ba6c-0935af2a5b21",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1f5009f7-4c41-4b83-85f2-0274ff64edf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79652d79-5993-47d3-a03d-bf49b85b9fe1",
        "cursor": {
          "ref": "41fd868d-b0a8-4e84-ad98-d7f4945d1d3b",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "33e499c4-6aa7-4e20-b279-f6881a51c026"
        },
        "item": {
          "id": "79652d79-5993-47d3-a03d-bf49b85b9fe1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a1970b23-d5ef-4038-9422-5c452d73b4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963eef51-21c2-4d24-9098-a01a7651e805",
        "cursor": {
          "ref": "c852dc17-66c8-4a77-a136-74d890db31d2",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9d7d7f6c-d95f-4a41-ab0f-43504c06d308"
        },
        "item": {
          "id": "963eef51-21c2-4d24-9098-a01a7651e805",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "83b15570-5b58-4144-b9ba-eb437f227a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e104c5e-7e8c-4491-9804-12f2bbf34c80",
        "cursor": {
          "ref": "44a81658-ac2e-4dbe-aa93-3300e905a204",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fdf0d2bc-31ac-49bc-98be-a7f9be58e850"
        },
        "item": {
          "id": "1e104c5e-7e8c-4491-9804-12f2bbf34c80",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "99d1265c-8085-47af-94f2-83ad088bdde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22378c9b-6525-4fdd-be0b-093d6f5b0ddb",
        "cursor": {
          "ref": "1eb307bc-96a2-4fc2-b105-b7a59ae8c388",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "686760e6-1b22-44ee-9dc1-f11363b88c4a"
        },
        "item": {
          "id": "22378c9b-6525-4fdd-be0b-093d6f5b0ddb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "910fd83b-57c5-4287-bdb5-0d2ff691ef69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1864fd20-f629-4a20-a748-e29ebfff786b",
        "cursor": {
          "ref": "9f5db1ff-31e8-400a-a8e2-a13e8d188beb",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b69cb1a4-67ef-4ba8-8daf-8fca24a4aab5"
        },
        "item": {
          "id": "1864fd20-f629-4a20-a748-e29ebfff786b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "42d82407-fc21-4ca0-a299-989a56363ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ac0c94-8fc8-4861-84a6-88657e43de96",
        "cursor": {
          "ref": "27071073-a88d-40d3-8a37-d8cfc9e47e33",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4e88865d-e079-4702-b772-0479fca63e0c"
        },
        "item": {
          "id": "44ac0c94-8fc8-4861-84a6-88657e43de96",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "76981d08-58d1-4b46-bf2d-7e516310d419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2aceb7-4116-4b7a-aca9-9d5a50bb836a",
        "cursor": {
          "ref": "4706d9da-261a-4a84-96c6-89aae1a68991",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3d900d8c-c1b3-4d37-9a52-1a1ea42905a1"
        },
        "item": {
          "id": "ff2aceb7-4116-4b7a-aca9-9d5a50bb836a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8079bb1a-2760-4779-a994-247cf1add43b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339cd7ad-6068-467f-a1e1-41a8f6081b60",
        "cursor": {
          "ref": "2b148263-6d13-4573-bc3d-e75c4a875a3b",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "382615a1-212a-4435-974b-a0c20ac79c51"
        },
        "item": {
          "id": "339cd7ad-6068-467f-a1e1-41a8f6081b60",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a0cf09b0-4251-4333-9f9e-d5990d6bea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54c572-e96d-4dc8-8263-c0d11c1d35ae",
        "cursor": {
          "ref": "fc70d575-d621-49c4-8a2f-3241158f7fdf",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b1cc8765-7de0-4789-b70f-52afbe935195"
        },
        "item": {
          "id": "ca54c572-e96d-4dc8-8263-c0d11c1d35ae",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "906c5184-d37e-4bc0-8c87-49f134d53da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68426bbe-8228-41fe-be59-12a32a8a20bb",
        "cursor": {
          "ref": "1da7c75f-1d4b-468a-91af-a20edd725c3d",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f414f85b-c4d1-4fdd-bf07-960ca78000ab"
        },
        "item": {
          "id": "68426bbe-8228-41fe-be59-12a32a8a20bb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c3cf0135-7682-4854-8605-d1e2d27bded6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20394cab-c90f-4f44-b5e8-38ff26c4814d",
        "cursor": {
          "ref": "68ee048c-e5b9-4b3a-8fa2-727a56fe2beb",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "40aa58ef-32f2-49b5-b266-7b178739a7e4"
        },
        "item": {
          "id": "20394cab-c90f-4f44-b5e8-38ff26c4814d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "303c1a9d-4cad-47bf-a2d9-659c31f21c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb79222-5d5c-4136-8739-71973825ec6e",
        "cursor": {
          "ref": "d9cad301-556b-4ed1-af34-1eeeda23d20d",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c6e071e1-ea26-42b8-9a7a-82556cca1af9"
        },
        "item": {
          "id": "eeb79222-5d5c-4136-8739-71973825ec6e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c1ba8eaf-92fa-42c8-9e67-059f876b9ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d1b635-f727-46e2-8e69-78d595edc1b3",
        "cursor": {
          "ref": "be51f09f-5a86-4cd3-9a41-22589a3240ab",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dc9ed3f3-3c9e-4622-baa6-7f5e6e51b0ab"
        },
        "item": {
          "id": "76d1b635-f727-46e2-8e69-78d595edc1b3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "74fbbf7d-4cfc-4531-b5e1-b151813c9112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2579382-ae20-4301-b59b-c614589e05fb",
        "cursor": {
          "ref": "cddea711-8c9e-498e-ac9e-b666fbb61be7",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "43c34abf-31d9-494c-ba43-05c740aac84c"
        },
        "item": {
          "id": "d2579382-ae20-4301-b59b-c614589e05fb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "78a3b7c3-e933-4d99-8e72-b90f274bea06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc473a81-80b2-4cd5-b151-ddac0a184102",
        "cursor": {
          "ref": "e177046c-6ff7-4572-88f9-5e583545e4ad",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8f895cbe-c463-4ecc-9483-4a1fb4fffb7d"
        },
        "item": {
          "id": "fc473a81-80b2-4cd5-b151-ddac0a184102",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1c15ecb1-1f15-4ba3-8819-d5426ad0d88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe659e3-bb7b-470c-9241-085fbe41f47b",
        "cursor": {
          "ref": "651ed12c-04dc-4838-b2ab-734ff6a2fb21",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "77c087ab-b882-411f-a0b3-73192f1181e4"
        },
        "item": {
          "id": "dfe659e3-bb7b-470c-9241-085fbe41f47b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0bb8addf-885b-4f30-a89b-02d19aa2aef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7411c777-cfb7-4008-956e-c62e75f54415",
        "cursor": {
          "ref": "c5b9342d-7493-4113-9676-494ead98bc70",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "003b880c-8dfe-46bd-86ca-0c0bdf7eb87e"
        },
        "item": {
          "id": "7411c777-cfb7-4008-956e-c62e75f54415",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "663732a1-9911-46f8-95c5-20f6257ac135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbec10e-6c5a-4d41-9fe8-30d5f7deebfe",
        "cursor": {
          "ref": "84073c85-beea-46d6-aa86-1de68b8d94a9",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e582ab8a-9ee2-4b04-b20a-b9f2df94926e"
        },
        "item": {
          "id": "3fbec10e-6c5a-4d41-9fe8-30d5f7deebfe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a97c4e0e-59b8-495d-bf2f-467fd7a0bf2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d88d43d-76f9-496c-8a00-467cedd6ccf8",
        "cursor": {
          "ref": "bafec3ab-78a1-4413-b084-88481e1b2ed3",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4a5a99cb-83a3-46ac-ac0f-97deba01c8a8"
        },
        "item": {
          "id": "7d88d43d-76f9-496c-8a00-467cedd6ccf8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a68cdbb6-2be5-49c2-b896-e02f9268cd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb32be6-782f-483b-87b0-f04b6950f76d",
        "cursor": {
          "ref": "9160891c-4494-4c71-b78f-a2858f431c18",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "0e717617-212a-4bd0-8fa5-2d891be174a3"
        },
        "item": {
          "id": "5fb32be6-782f-483b-87b0-f04b6950f76d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e0e2641c-185e-486a-b881-739cae75c2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76738b70-81dd-4a9f-9cc2-0fdf25fcde57",
        "cursor": {
          "ref": "0811bff9-7116-4448-ad4e-9f38e5cd58a4",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "21250dba-2cd1-4ec3-b447-682b3a6e0834"
        },
        "item": {
          "id": "76738b70-81dd-4a9f-9cc2-0fdf25fcde57",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "58a498eb-356f-4917-8d10-4e201ead4b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f166001-b44d-4bef-bd7b-ff01c900ae74",
        "cursor": {
          "ref": "e038cd16-8c38-4df5-9d64-a52312b7a121",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a68d5e43-5903-4c16-ad59-615ccd4190ff"
        },
        "item": {
          "id": "3f166001-b44d-4bef-bd7b-ff01c900ae74",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "35bb537c-672d-4ce8-98ca-3f2ef4f8728d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14caca24-efb9-4d88-a7b0-831f3ab3356f",
        "cursor": {
          "ref": "eaeeadf3-3855-4070-9903-d871a89d0132",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f96fdb50-8494-417c-8266-f38d11af679a"
        },
        "item": {
          "id": "14caca24-efb9-4d88-a7b0-831f3ab3356f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0552c4ba-d532-4ced-b038-97f10fcd2ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbbbdb6-c01e-4304-b9c3-9376925f90ee",
        "cursor": {
          "ref": "9ce3f094-5c8a-4181-b816-f4ffe31bab2f",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "88233bd2-110e-4ce3-8657-b7491ecba6dc"
        },
        "item": {
          "id": "5bbbbdb6-c01e-4304-b9c3-9376925f90ee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "26ac7f58-7d0a-4c6c-bde2-e78c4a7e85df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a8d011-ff5c-4237-a488-c0a369ca5036",
        "cursor": {
          "ref": "4f853779-383c-4770-8736-4c34d924455d",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "46474aa2-8e71-4077-b478-2acaa2b01d5f"
        },
        "item": {
          "id": "b3a8d011-ff5c-4237-a488-c0a369ca5036",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7069adcd-8890-4d1c-bc96-558f75e95b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1ae170-a60d-4c31-9852-9794dfd23595",
        "cursor": {
          "ref": "3822e72d-859b-4a88-acb5-76652c23c4c4",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e6fc11ba-3070-4cc5-9162-8f430562872b"
        },
        "item": {
          "id": "3c1ae170-a60d-4c31-9852-9794dfd23595",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "cd0b6ac5-9872-459b-a55c-4618369e16c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61637187-6ab4-4e38-925a-290f6655d13c",
        "cursor": {
          "ref": "02b66832-7ae2-4090-8da2-6631a938c4a9",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8650729b-c974-4303-91de-4fa97ec30605"
        },
        "item": {
          "id": "61637187-6ab4-4e38-925a-290f6655d13c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "44edb24a-8288-4438-acde-bef8139a5449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988e3a30-a70d-4408-980b-a7f9c671bc9d",
        "cursor": {
          "ref": "b8dc3b34-32ae-46af-a6dc-c9db50c30de0",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ac8d9d00-775f-4969-908b-510cedbd50a0"
        },
        "item": {
          "id": "988e3a30-a70d-4408-980b-a7f9c671bc9d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "74d3f06a-cb32-45dc-9653-63d99de938fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b4584c-caad-42f5-8bf8-b6efea1ce641",
        "cursor": {
          "ref": "a01e344c-3f0b-4b36-9921-1037faf06057",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7664b41a-7cd0-4137-9f85-4eb8222e5da4"
        },
        "item": {
          "id": "50b4584c-caad-42f5-8bf8-b6efea1ce641",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b38151e0-c902-4960-bfbb-54a60e3683d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e91abcc-cb2a-4faf-8c94-88cdf8e1e24d",
        "cursor": {
          "ref": "4c618e21-df77-4c6c-9011-d739ffd962f0",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1a891611-1c0f-45a4-8235-915254ab75a9"
        },
        "item": {
          "id": "0e91abcc-cb2a-4faf-8c94-88cdf8e1e24d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "e3fbda23-e949-4c8f-b9fb-b8820c71882e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e83ecf0-1c5d-4fcc-b676-9f34409fcadd",
        "cursor": {
          "ref": "170b772c-e351-4fcd-899f-c541190f1f45",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ed139589-719f-4a38-b53e-2c51b5994517"
        },
        "item": {
          "id": "5e83ecf0-1c5d-4fcc-b676-9f34409fcadd",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2f407453-3afc-4ccc-952f-f8c48c8c5add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2760c7a-b108-47b2-8514-a30ef1e5a7df",
        "cursor": {
          "ref": "3440838e-b1e0-4c0d-9656-9a400aae0db8",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d54d77c1-c76f-43c2-a4f3-3308bc76d805"
        },
        "item": {
          "id": "f2760c7a-b108-47b2-8514-a30ef1e5a7df",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1f4ac766-7315-43d2-9173-9cad89fb4335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3707d51-1f8d-4766-8ab7-5e1c801c7178",
        "cursor": {
          "ref": "628b0cc1-db27-4ed2-bac5-4c13802de100",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1afc2661-d99c-44db-9fc5-a27333d2dec2"
        },
        "item": {
          "id": "e3707d51-1f8d-4766-8ab7-5e1c801c7178",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "060054db-ed14-4635-a668-fa93a3edb6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af5dd55-5ae6-4759-9334-6bb8e4f44ce5",
        "cursor": {
          "ref": "703e4275-bb15-4358-ac17-c9362feef562",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "27df365a-d20d-4d43-bf16-e23232e08771"
        },
        "item": {
          "id": "3af5dd55-5ae6-4759-9334-6bb8e4f44ce5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "158e2862-ab60-42ca-94d2-aa8741a38efb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 567,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bce83a-2c24-4a94-90c4-aa45bf6668e0",
        "cursor": {
          "ref": "69bcc16c-2161-4001-978e-6086c866a772",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c87c65fb-78e7-4771-a1af-1cf9289a9cce"
        },
        "item": {
          "id": "06bce83a-2c24-4a94-90c4-aa45bf6668e0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "cde4f409-fbd8-4ac5-8bbf-4b2330ca3c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5b3f45-284b-42b0-8132-ed0c461501bf",
        "cursor": {
          "ref": "bd5598e4-af3f-4d00-a277-ef01790a8566",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d94ff138-37ee-482f-a55b-15c6eed34868"
        },
        "item": {
          "id": "7a5b3f45-284b-42b0-8132-ed0c461501bf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9b57a820-74f5-469b-b906-60fb18381b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e113ba9c-4c6b-41da-8f5e-b13c3f67b503",
        "cursor": {
          "ref": "9c971edb-ec62-4893-9412-2e7619169224",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "41822f16-09f3-4f49-b01b-8fee1c8b7745"
        },
        "item": {
          "id": "e113ba9c-4c6b-41da-8f5e-b13c3f67b503",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f4e6638f-4618-49e1-8423-b0825a02a5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcfc9fd-365f-4390-be7e-33b94711b213",
        "cursor": {
          "ref": "d4b1b150-912f-4653-abf4-7c9a491d5dd6",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c90c642e-8040-44f6-bc78-4503458721eb"
        },
        "item": {
          "id": "adcfc9fd-365f-4390-be7e-33b94711b213",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "92fb5406-db73-42c8-bc44-7d91ed32cd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8e8957-3102-4b43-a12f-0608bcd5da9e",
        "cursor": {
          "ref": "4419ee9a-4468-44eb-bb92-cad6a0c18099",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9057bc31-2a67-4768-a694-46a8e47b6797"
        },
        "item": {
          "id": "fb8e8957-3102-4b43-a12f-0608bcd5da9e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1d65ae48-071a-4fba-85d0-5a78d841845a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea5e027-3f3f-4d38-8513-9cff85f5c837",
        "cursor": {
          "ref": "c119509c-b56a-4331-a883-90ef09636f6f",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "54cc0b2f-c906-40aa-a7f8-8eda2de5502e"
        },
        "item": {
          "id": "cea5e027-3f3f-4d38-8513-9cff85f5c837",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "04ee07b6-9b5b-451a-b397-c1ce76cc838f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee16367e-2beb-433f-8408-2dd0d3fe14bd",
        "cursor": {
          "ref": "26a3ea58-741c-429a-b62e-dc57150ebcb6",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "72da2e8b-4012-4f1f-b87e-329ba9f34efb"
        },
        "item": {
          "id": "ee16367e-2beb-433f-8408-2dd0d3fe14bd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "69f18000-1065-4722-9214-a5e095094101",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 544,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe2f7007-cbb1-486d-9eb0-ced79da0137f",
        "cursor": {
          "ref": "b8ec7d8a-4569-4cfb-bca6-4b0a131b367e",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ffbede23-5d14-48da-a22f-1cdc1c9c898b"
        },
        "item": {
          "id": "fe2f7007-cbb1-486d-9eb0-ced79da0137f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d185c3a8-5bf8-476f-a276-8f99da516d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ffafec-3829-4b39-a3d1-d2235199b06e",
        "cursor": {
          "ref": "ff31d534-3ab7-4877-b077-a4b9182086fb",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "320251ed-58d6-4d8a-ba6a-af0affe4cbc4"
        },
        "item": {
          "id": "c8ffafec-3829-4b39-a3d1-d2235199b06e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a451ff89-b7c2-4876-93f8-897854f59c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8972a3aa-1563-4e77-9eae-477131250fc1",
        "cursor": {
          "ref": "9d1588da-0fdb-4992-965a-7cc1d28e51e5",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3b219895-f311-48dd-9254-63ff066ba907"
        },
        "item": {
          "id": "8972a3aa-1563-4e77-9eae-477131250fc1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cf80151b-4c0e-473f-8f68-d3f5f98994d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c2c16a-cd54-40f6-832f-e9c988697be7",
        "cursor": {
          "ref": "5efb6fa3-94dd-4656-a204-062ef7fd641f",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a944c130-e40e-4c13-9191-0085e5b7ec00"
        },
        "item": {
          "id": "f1c2c16a-cd54-40f6-832f-e9c988697be7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4cf46de2-4138-4189-b79d-b9fa20bedcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c342b8-da22-4a0f-92b3-dfbe1812e106",
        "cursor": {
          "ref": "3ab60ca7-6e6d-4635-bd9a-1ba9002defbc",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2f4b55a5-4069-43d7-a136-ceb7b74ae51a"
        },
        "item": {
          "id": "f3c342b8-da22-4a0f-92b3-dfbe1812e106",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "756310e4-ba70-48a6-a62c-a444c4bc9ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24c8f1b-c91c-4431-889e-d35116ad4753",
        "cursor": {
          "ref": "be5abb24-63dc-40db-985e-e7b848bb86f9",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "186ba180-bf5a-45e5-baa5-b14cb96a06b3"
        },
        "item": {
          "id": "c24c8f1b-c91c-4431-889e-d35116ad4753",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1cb67ecb-cf52-47fa-9b5a-04139483cda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420553d3-c510-4259-8a15-cab95c7dce1c",
        "cursor": {
          "ref": "fecbbfa9-ffa5-451d-901a-b1b17f78c0bc",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2afaa2c5-a3a3-444c-a038-a3a25bb46486"
        },
        "item": {
          "id": "420553d3-c510-4259-8a15-cab95c7dce1c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f684fb3a-440c-42fc-b051-586c9aa334cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b350ae-266c-450d-a623-18660890d23a",
        "cursor": {
          "ref": "3f1b81f2-ebc1-43ec-bcdf-e9d113095db2",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6828a0da-f307-4d9e-8fc7-3311be1c8430"
        },
        "item": {
          "id": "34b350ae-266c-450d-a623-18660890d23a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "84e2f801-3b99-4eb1-8def-73990fc84d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2d584a-ae95-4431-8927-77c26aef7ee1",
        "cursor": {
          "ref": "20ff60c8-6a90-42e2-8e84-8b24cf4978ca",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2f1b62aa-4a83-4ef4-a09c-15afa2184dc2"
        },
        "item": {
          "id": "3d2d584a-ae95-4431-8927-77c26aef7ee1",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d0fe5d94-48de-4ff2-95b5-f59e27bdd238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616db938-ee3f-4600-b799-2fcd19c554fe",
        "cursor": {
          "ref": "9b353f15-b311-4175-ad82-364644557532",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "393a45e0-e0a4-47ab-b7d6-badfacc9d866"
        },
        "item": {
          "id": "616db938-ee3f-4600-b799-2fcd19c554fe",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2256e869-c070-4e4d-a64b-6dc59c1ef573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d52e15a-63be-45b6-ad6e-262736623129",
        "cursor": {
          "ref": "b2a13640-6ce3-4611-993e-a69a7f212b82",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fb34a4da-f0d0-4d1c-ad26-4e705156791a"
        },
        "item": {
          "id": "2d52e15a-63be-45b6-ad6e-262736623129",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ea4a3d96-4236-48f3-8477-4efb25923e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e58ae72-85f8-479a-8523-001bd835e199",
        "cursor": {
          "ref": "ea19a6ef-f3b3-43e7-9315-6c2c29f83d47",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c671a293-9e12-4d7b-b166-36922a8cf883"
        },
        "item": {
          "id": "4e58ae72-85f8-479a-8523-001bd835e199",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "fdabbcf8-b12b-4e88-a8f2-827228eafa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e16217-a19a-4d1e-be28-6cd53e671344",
        "cursor": {
          "ref": "d6340545-9766-478b-873c-7e537139b77b",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8b39172c-a09e-498f-b1a8-01283e3f4b1e"
        },
        "item": {
          "id": "c9e16217-a19a-4d1e-be28-6cd53e671344",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ee2144de-3ecc-4e35-8e5c-f14b71d1529a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28defeb-e59f-4970-b4c5-7a1730d8c77a",
        "cursor": {
          "ref": "6f70c038-62d0-41b3-8427-d4ec8c766781",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "027d787a-a870-445e-bf48-050b41022c0b"
        },
        "item": {
          "id": "c28defeb-e59f-4970-b4c5-7a1730d8c77a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2fbf7649-a4e3-467e-a283-93b9de39fd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df71cc83-1ff2-4aa4-abd9-7015cb39f87c",
        "cursor": {
          "ref": "76648ff8-d12d-4484-854c-c85e2e79e73b",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "103a8a5c-b418-4ae6-bf9f-48da6ca07e67"
        },
        "item": {
          "id": "df71cc83-1ff2-4aa4-abd9-7015cb39f87c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "47c5e809-3c10-49dc-8b29-bedebac10e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b929b6-a3a3-4fcb-996e-3105a75c0585",
        "cursor": {
          "ref": "de7121e1-6237-4498-a37e-70740ff8cd14",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7be15cb8-5942-462f-ac18-f43b3ef64125"
        },
        "item": {
          "id": "65b929b6-a3a3-4fcb-996e-3105a75c0585",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bac1be62-190a-4f4d-be95-486212b60a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7384ed9-b269-44fe-b6cc-daa416864eea",
        "cursor": {
          "ref": "e7fdf4ff-90cc-4d7b-9702-ceab8552ea73",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "968f204d-5790-47bf-baae-5a482571fc73"
        },
        "item": {
          "id": "f7384ed9-b269-44fe-b6cc-daa416864eea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "873bd7a7-6460-4492-a344-a08477f5ff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71fdd4e-50d0-42c3-b1c6-98441b0bf852",
        "cursor": {
          "ref": "1fb7bd32-413f-451e-8d2e-7eb1489cce0d",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f7a9ff80-a135-4aee-b6e4-80a821fb2a94"
        },
        "item": {
          "id": "c71fdd4e-50d0-42c3-b1c6-98441b0bf852",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e4c03a02-d09b-40ab-b0d0-c74d6499360b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860568f7-ef26-449c-ae1f-74981c8a74b0",
        "cursor": {
          "ref": "0f897f43-1f37-4fba-b101-afdec052fee2",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a595afcb-c754-4c25-a6df-e512feea8cc9"
        },
        "item": {
          "id": "860568f7-ef26-449c-ae1f-74981c8a74b0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e09d9ea4-7000-40fa-b8e8-d9ad0813218c",
          "status": "Created",
          "code": 201,
          "responseTime": 2383,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "aabe8d71-730e-4e93-bcb6-74d91a8a2818",
        "cursor": {
          "ref": "a9ab6cfa-8e69-4101-8003-e2b391ecf2fb",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7ae6edf5-0f16-4267-8af8-f04f546c92b7"
        },
        "item": {
          "id": "aabe8d71-730e-4e93-bcb6-74d91a8a2818",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "302e8f47-26bc-40df-945b-fa334b9ea53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bf7209-f94e-4f86-914b-9ba49e007685",
        "cursor": {
          "ref": "7ea315fa-6423-4110-9a0d-36652261bf07",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "393db3f1-e8cb-4113-b260-ad8e156f2d6c"
        },
        "item": {
          "id": "c6bf7209-f94e-4f86-914b-9ba49e007685",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2ec3e86c-604e-408d-a252-f0681084bb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9859ca-7b1d-4668-a6b0-24f34cab9891",
        "cursor": {
          "ref": "7a91c3b9-bd59-4f1a-9326-176bf8f36f3a",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1759333d-4a9e-4638-9d63-cb19e04cb7a6"
        },
        "item": {
          "id": "5b9859ca-7b1d-4668-a6b0-24f34cab9891",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5f2d531-d25b-4d7d-8f8e-5aafe915a18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fdd849-0499-45d3-960b-13e5e7a4ea06",
        "cursor": {
          "ref": "0bf80548-aeb2-4b55-85f4-e27b3ea9e911",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e130fb04-abde-479a-8a47-81b7b9d9e380"
        },
        "item": {
          "id": "a1fdd849-0499-45d3-960b-13e5e7a4ea06",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4b6d2f5b-f8aa-42d3-a905-4e9f793f3a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6f5cef-1f58-4082-a5a2-79bfa12b5abf",
        "cursor": {
          "ref": "820634ea-0bae-4684-a8e3-c2304245f271",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ee33363f-e0cc-4b50-b7e2-5fd8e0ba9b42"
        },
        "item": {
          "id": "de6f5cef-1f58-4082-a5a2-79bfa12b5abf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "80d712c3-c1bf-4aa9-b71c-66ac7252856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f74472e-f2fd-4b94-9a61-964dc386492a",
        "cursor": {
          "ref": "11d736c2-c8c0-4ecb-bd81-bba3c9c583ae",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8ceaaa68-0850-4bc1-8a39-b0ef6ca24b94"
        },
        "item": {
          "id": "5f74472e-f2fd-4b94-9a61-964dc386492a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e12aeb17-8c5a-4ad1-a503-9513d024ac4f",
          "status": "Created",
          "code": 201,
          "responseTime": 2781,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "b0e1b304-da8d-4574-8268-714369f8c625",
        "cursor": {
          "ref": "f7a6afb5-b87e-458b-8d1f-d02491ef806f",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5e12df04-d13d-4f39-b89a-be3922654f21"
        },
        "item": {
          "id": "b0e1b304-da8d-4574-8268-714369f8c625",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cedb4eed-d830-45ad-8350-3a9155994d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c767819b-7e28-458f-bfcb-3e9fc47e05ed",
        "cursor": {
          "ref": "63851b30-11cd-46dc-88a6-ee32207c6eca",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f0c52edb-4137-4d25-b40b-f42fa344e457"
        },
        "item": {
          "id": "c767819b-7e28-458f-bfcb-3e9fc47e05ed",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ad7c444c-245f-4746-81de-244e2e6e80a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3265b6ca-d6ab-456c-bc44-88fdaaae74ca",
        "cursor": {
          "ref": "eb1735b6-65e1-424d-90e6-59e440dbca75",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dcd39dbb-7034-40a5-857e-1d1d60a704e3"
        },
        "item": {
          "id": "3265b6ca-d6ab-456c-bc44-88fdaaae74ca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "219d12ab-8c74-48d0-80de-c7cb335b6563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087a2d80-a784-4fff-8450-98099dcee9b8",
        "cursor": {
          "ref": "3c99e41c-3604-452b-849c-03746dcbc3dc",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "6c75c8cd-5c77-4c2a-8f43-21a99ad38533"
        },
        "item": {
          "id": "087a2d80-a784-4fff-8450-98099dcee9b8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9d98b281-be34-40f0-9d0c-61a591182440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7352be-7309-48bf-a10c-90b2b2643601",
        "cursor": {
          "ref": "1902bd46-247f-41ab-ae8a-fd8bab004978",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b72bcf73-7e8c-494d-a8ac-826021acdacc"
        },
        "item": {
          "id": "5d7352be-7309-48bf-a10c-90b2b2643601",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a30b395e-2a0c-4066-b2e5-8495dac20643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b79e896-8364-440f-b060-fe6297f77284",
        "cursor": {
          "ref": "a88240c8-869a-45ef-8508-801bba82e180",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "188c69c6-5de6-4f1e-bb0f-270246cb4f35"
        },
        "item": {
          "id": "9b79e896-8364-440f-b060-fe6297f77284",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f774d181-a9c9-4689-a268-f7e911d590b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1050680b-d4d6-45d4-b27f-cc7f7c59001e",
        "cursor": {
          "ref": "1d814472-b8ca-4160-8cd9-92d5b9bf7bbd",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e9f01b8e-d0d8-4106-966f-e7705fa28f1b"
        },
        "item": {
          "id": "1050680b-d4d6-45d4-b27f-cc7f7c59001e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a39e41e1-4aaa-4bb1-b123-23e6cf78dea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88ba4c1-f29f-4b49-bec6-e31f809feec8",
        "cursor": {
          "ref": "568cbff5-7423-4ade-b278-a5b002e1032f",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "82c9f01f-f90c-4d2f-a7cf-73956f3ba271"
        },
        "item": {
          "id": "c88ba4c1-f29f-4b49-bec6-e31f809feec8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "081e1ec7-074f-4a4b-95e0-bae50040342d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b692dfa-2cc8-4866-9890-f544281611b7",
        "cursor": {
          "ref": "9d18d271-8cd6-4e11-a44c-14d619a4fc4b",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f1fa250b-7bbd-47a8-9267-5c87ef1e7e2b"
        },
        "item": {
          "id": "5b692dfa-2cc8-4866-9890-f544281611b7",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "739331a6-7e48-4578-a015-5f84e6477797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b239d0b3-66dd-4df5-bb1b-dab23eae903e",
        "cursor": {
          "ref": "9bedf947-634a-41ea-8d26-7df5a58465d2",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ad844bb2-cb5e-45ca-b7c4-f5f316fd29ff"
        },
        "item": {
          "id": "b239d0b3-66dd-4df5-bb1b-dab23eae903e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "05f7b982-4343-4f11-80a0-4b92615470bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1817fe2-8be4-4b6b-9650-32d870828af0",
        "cursor": {
          "ref": "baf247a0-df38-4eab-af0b-43275fb06672",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ed5cf6a2-a0be-44cf-a1c9-ae66f8548f37"
        },
        "item": {
          "id": "d1817fe2-8be4-4b6b-9650-32d870828af0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a18c62a2-62d8-4953-813e-64ae26634d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d6a5d9-47fa-472e-9927-d968538e8c79",
        "cursor": {
          "ref": "9cdc1644-30f1-4d3b-aca4-e79e04c55e70",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2205497a-50b0-4942-b32f-3ace416f5ac6"
        },
        "item": {
          "id": "87d6a5d9-47fa-472e-9927-d968538e8c79",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b9b8ed39-b5c8-4531-bc06-907c045a1db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fb90ac-3468-4627-9bd7-96d8a6b66f6b",
        "cursor": {
          "ref": "df966afb-a447-40f2-8f5a-b48793a04253",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8c45cacd-7556-4f99-b606-6b027cc6246d"
        },
        "item": {
          "id": "f9fb90ac-3468-4627-9bd7-96d8a6b66f6b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f07141f0-484c-4dcb-8cf0-5bd3768ab506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad58010b-1097-4d13-8bef-da11eac8f2f3",
        "cursor": {
          "ref": "92cb66b4-092a-4791-a937-a258ac01c985",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4884f28d-092e-49a2-95ef-ec24d0c0712d"
        },
        "item": {
          "id": "ad58010b-1097-4d13-8bef-da11eac8f2f3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0156c3b8-5837-42b6-8524-a8ee07a21d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e25f63f-7f24-466a-bf3b-e45fa32bc296",
        "cursor": {
          "ref": "4f9e32d3-9e5e-49ae-9adc-9e64a3af79b8",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1823c3c9-a690-45be-84e9-fbfbdd30dc16"
        },
        "item": {
          "id": "4e25f63f-7f24-466a-bf3b-e45fa32bc296",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "290e3fb5-343d-4e70-9292-d945c2c11611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7b50da-0217-44da-b917-ce7193fb98a0",
        "cursor": {
          "ref": "f312eda1-e10a-4221-a1fe-13e127453019",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "264335ec-6fcd-4fe3-b0d7-fa43242434c8"
        },
        "item": {
          "id": "dc7b50da-0217-44da-b917-ce7193fb98a0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4ee26eab-4f45-46da-98fa-c118ed71a4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c03dca-af21-4abc-9209-51d295f7e84d",
        "cursor": {
          "ref": "a7591fb1-a4c8-4719-81a5-2a0db2e3cc9c",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7266c3f3-5722-4581-983c-d526c1a0e8f1"
        },
        "item": {
          "id": "52c03dca-af21-4abc-9209-51d295f7e84d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "550b3466-1e54-44f2-bfeb-17f1f35a5df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfcd1ac-8acf-4c21-a52b-5fc4f450d27a",
        "cursor": {
          "ref": "79a099dd-2141-4101-add7-9909c6de0328",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f5f37067-180a-458a-83ba-0d67e3d2533a"
        },
        "item": {
          "id": "cbfcd1ac-8acf-4c21-a52b-5fc4f450d27a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cd815cf5-e7e4-405b-8dea-1d50153a5040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b5b892-1f7f-4b56-85c5-ccc6f6642e5f",
        "cursor": {
          "ref": "07ac527d-c3b0-46f8-9e87-6d38d3b3669f",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "98823173-6e3b-4141-8a1f-8e2d4f9fbbc6"
        },
        "item": {
          "id": "65b5b892-1f7f-4b56-85c5-ccc6f6642e5f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a27811db-15bb-4d75-af8a-d602f6809b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b8ce6a-51bd-4446-a603-ff6f01990568",
        "cursor": {
          "ref": "d96e8b00-0e4e-4605-bf7c-5bf9b345a6c2",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1b65388a-7685-4f18-8596-93ad46893ad6"
        },
        "item": {
          "id": "27b8ce6a-51bd-4446-a603-ff6f01990568",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b4ef1854-a3d8-4072-b650-7d92561daa69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f4d830-e9b7-46ca-b1d8-5ae50ab06a36",
        "cursor": {
          "ref": "1e7cbb2b-d5a9-47c1-bcf8-9468bdb3a7b3",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17d52b6c-8bf6-48bd-88c5-38bd10bccb14"
        },
        "item": {
          "id": "43f4d830-e9b7-46ca-b1d8-5ae50ab06a36",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "af830951-c29a-45a4-b4c6-d082923c19de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72188976-5881-4400-adc9-33e75c13023a",
        "cursor": {
          "ref": "c1041e4d-4e72-47d8-8695-b70ae1d7a9c0",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "15aad86c-8a50-449c-b56d-88099e3a7dd9"
        },
        "item": {
          "id": "72188976-5881-4400-adc9-33e75c13023a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0a6cb509-be58-458a-8b12-75baea5a87bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbeaabe-1a20-45d2-8b49-7eb6b86f150f",
        "cursor": {
          "ref": "a07a9494-23b5-46a8-9183-a8ead915cf35",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a2c26825-d8f6-43ee-8b57-8b8b8adae1c4"
        },
        "item": {
          "id": "adbeaabe-1a20-45d2-8b49-7eb6b86f150f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "db139ec5-5543-4bfb-9061-92122aa6d1f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4157c97-61e8-4618-9257-0c70d4c74227",
        "cursor": {
          "ref": "eccfa31b-36bf-4aaa-bd4a-013950e66a88",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "813f2313-9b54-4c95-b056-54b476b64763"
        },
        "item": {
          "id": "b4157c97-61e8-4618-9257-0c70d4c74227",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d3ddf76a-61fb-4757-b104-ce8711a04cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf45cb7b-d357-4643-a891-cb4e187fd8c3",
        "cursor": {
          "ref": "28e47aca-7ee8-4190-b529-43851760bc67",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a9314c70-ece2-4217-b431-5a54126275c7"
        },
        "item": {
          "id": "bf45cb7b-d357-4643-a891-cb4e187fd8c3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f6a1158f-1536-4960-a11a-d27dd620dcb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5472b341-fedc-4808-ac17-5fa1de06bee5",
        "cursor": {
          "ref": "76096df9-c51a-486c-9d1e-a76d82581c3b",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e23ebc29-9754-477c-965e-49b93174a2ce"
        },
        "item": {
          "id": "5472b341-fedc-4808-ac17-5fa1de06bee5",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b0551208-544d-4b55-88d7-8cc0609f0ebf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 666,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8962b3f-795a-45b9-86f1-10b834854848",
        "cursor": {
          "ref": "f355206a-c578-4c80-a637-db8e9f01742b",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ee7958e1-6a1c-4b22-a014-6ae3eccd23e9"
        },
        "item": {
          "id": "d8962b3f-795a-45b9-86f1-10b834854848",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5e89f297-2ce1-467c-a411-0f38e6a446af",
          "status": "Created",
          "code": 201,
          "responseTime": 2116,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "819b4d90-4632-4742-bb45-3184a6b9d97f",
        "cursor": {
          "ref": "ee556deb-aa33-4eeb-af21-90f936acfb92",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0ac24178-217d-48f4-83ad-db77c277b9bf"
        },
        "item": {
          "id": "819b4d90-4632-4742-bb45-3184a6b9d97f",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "82e3ac6a-6b3e-4b19-a2d3-93f7d2612368",
          "status": "Created",
          "code": 201,
          "responseTime": 2079,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "066a3e80-7968-4b2e-b4f0-cd3cc5140268",
        "cursor": {
          "ref": "fbfa01e4-cf90-4ab4-804c-de9fb3c535ff",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9c18be44-3ebd-440d-8564-5ebd6d815617"
        },
        "item": {
          "id": "066a3e80-7968-4b2e-b4f0-cd3cc5140268",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "23bc4159-3d43-46a2-80ff-d6650982d7b7",
          "status": "Created",
          "code": 201,
          "responseTime": 2073,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "292f153e-6d74-449e-8800-b4959fb86d8c",
        "cursor": {
          "ref": "6b3eaeca-f688-40d1-a67c-864d2115bf11",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "559dc553-5af7-4b7c-8670-8db3d7bd4b50"
        },
        "item": {
          "id": "292f153e-6d74-449e-8800-b4959fb86d8c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "73676f54-ac76-4641-a96e-60b9d413cb25",
          "status": "Created",
          "code": 201,
          "responseTime": 2084,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "cba3a373-9d51-4516-9406-ccb342459e61",
        "cursor": {
          "ref": "d214a651-d249-4c06-b5a8-26b71a66a772",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b792105e-75d4-4182-a410-3dabbf6b9e3e"
        },
        "item": {
          "id": "cba3a373-9d51-4516-9406-ccb342459e61",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "08cd3406-f301-4766-874d-4d4253724ced",
          "status": "Created",
          "code": 201,
          "responseTime": 2165,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "8acf3230-e438-4ee3-897f-1fbbf803d746",
        "cursor": {
          "ref": "02144bbf-398c-4180-9e86-e7595f3abe88",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7144561f-9afd-402e-9315-b5dd91c470a2"
        },
        "item": {
          "id": "8acf3230-e438-4ee3-897f-1fbbf803d746",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "46ac01d2-a0d4-4797-9560-bf0730b46877",
          "status": "Created",
          "code": 201,
          "responseTime": 2807,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "9ae4b636-5a0f-4d68-b4e2-cb64b99a3f65",
        "cursor": {
          "ref": "c6c2a08b-76e2-4c43-be55-03a0cf2ab6de",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9097736d-68e4-4c52-90fb-dfbeaec9543f"
        },
        "item": {
          "id": "9ae4b636-5a0f-4d68-b4e2-cb64b99a3f65",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16d2cf7d-c02d-4e85-982b-89d724150155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae4b636-5a0f-4d68-b4e2-cb64b99a3f65",
        "cursor": {
          "ref": "c6c2a08b-76e2-4c43-be55-03a0cf2ab6de",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9097736d-68e4-4c52-90fb-dfbeaec9543f"
        },
        "item": {
          "id": "9ae4b636-5a0f-4d68-b4e2-cb64b99a3f65",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "16d2cf7d-c02d-4e85-982b-89d724150155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60614400-c9cd-474e-83bb-2e83637ab97c",
        "cursor": {
          "ref": "a926098d-04d6-4f7a-bc6e-7ee35a1f63f6",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e4e92d74-5df1-4e6c-87d4-edf2c06551f4"
        },
        "item": {
          "id": "60614400-c9cd-474e-83bb-2e83637ab97c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a0cc62a9-b21d-40c2-a8d3-c1db1f72b737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199e9087-aed1-48a0-89e7-2f362c731d02",
        "cursor": {
          "ref": "ba04c38a-a018-4b7c-9c71-9a52710afc24",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "30f3ade3-1c3d-40fd-a696-4cf2c86d3856"
        },
        "item": {
          "id": "199e9087-aed1-48a0-89e7-2f362c731d02",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1925f17d-c4e4-449a-bd5c-84019a0ae29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1addd57-1f0a-4be1-84bb-b2b38de55496",
        "cursor": {
          "ref": "b6de10c7-9b3f-43cb-885c-fb9e20578ec0",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8456e641-be80-49a4-94d0-237d173ed7d9"
        },
        "item": {
          "id": "d1addd57-1f0a-4be1-84bb-b2b38de55496",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f2a18b7e-af18-489c-8b0c-63c5ea6c31d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 956,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c652230-8b28-463c-b43c-735c2d892200",
        "cursor": {
          "ref": "712f10ca-36e9-4d34-acd1-c515b8f34b06",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "166e41df-210f-486a-ad72-56a5a176fd7b"
        },
        "item": {
          "id": "5c652230-8b28-463c-b43c-735c2d892200",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f6395c78-7c05-400c-bdc3-eaaa6a127fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 668,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884320ba-ec09-4aec-9573-20baad9c326d",
        "cursor": {
          "ref": "4f9d643f-26a6-4ef2-a2b7-0cc58849cc4d",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "11962e2b-014c-4c3c-add8-b3866427c5ce"
        },
        "item": {
          "id": "884320ba-ec09-4aec-9573-20baad9c326d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "452403dd-ea8e-499e-bd27-706ae974c3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 801,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23fc1f3-787a-41a6-84d1-7053ed006b8a",
        "cursor": {
          "ref": "2a9dcd39-2b70-4bd7-a197-cc8fc67e6d36",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b35343f9-8b35-4cb5-9dca-8d73a9546857"
        },
        "item": {
          "id": "e23fc1f3-787a-41a6-84d1-7053ed006b8a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b4d4553d-6d56-41cf-beca-04fbca993183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cda0291-6a4a-40eb-8890-3903e277bad7",
        "cursor": {
          "ref": "3a13cb8d-32bf-4e29-9d25-6970eeb1e481",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2b2fa037-3543-4c51-be01-2111077bdc11"
        },
        "item": {
          "id": "2cda0291-6a4a-40eb-8890-3903e277bad7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6d14e936-0657-48cb-8346-ec97cd3b464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e500b9a-e051-479a-a47c-9170db8b3348",
        "cursor": {
          "ref": "44018723-6937-4ae2-8688-a6292a848daf",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b6f5540-5fb2-4957-8fe4-467398066a6e"
        },
        "item": {
          "id": "5e500b9a-e051-479a-a47c-9170db8b3348",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bf52b16e-c754-411d-b367-527324acc15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92347af0-721e-4ff2-849b-27d68a6dba9d",
        "cursor": {
          "ref": "40611f1f-c83b-4c77-9949-cb152116d2bc",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a461944d-0258-4a80-a8b7-9b4e10d6ef45"
        },
        "item": {
          "id": "92347af0-721e-4ff2-849b-27d68a6dba9d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "568a1ab2-3cd0-4bbd-a3e1-83341a7dc104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c269f293-d664-496f-9f0c-6c164e92e6d3",
        "cursor": {
          "ref": "74a86f0d-51f0-4754-9327-b2f2de33f303",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0832773a-40eb-46ae-9d3b-b77897f4082e"
        },
        "item": {
          "id": "c269f293-d664-496f-9f0c-6c164e92e6d3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9cb64ede-f621-4d45-8e8d-d71317245ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab4c094-d75b-4c6c-a912-d621db88d1ff",
        "cursor": {
          "ref": "632ec421-1fa0-4737-b93e-a6ffaf36b24e",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b5957bc3-08c7-4db6-ad8a-a4a7376e356e"
        },
        "item": {
          "id": "2ab4c094-d75b-4c6c-a912-d621db88d1ff",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7a3f34e4-0a4f-463e-b888-efdeedd3857e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600e61ec-37b9-4f9d-a758-cbab40a54820",
        "cursor": {
          "ref": "392c6a30-c6cf-49ff-8d58-58ef376f17fe",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bb63cedd-910c-4143-9e8a-c2b02bb0ef5f"
        },
        "item": {
          "id": "600e61ec-37b9-4f9d-a758-cbab40a54820",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e9cfc552-b8d7-4a61-ac68-b9939ea648df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83ea012-82b7-4c83-a9bf-c9a645358b80",
        "cursor": {
          "ref": "750c215a-2dfa-435c-81d6-a0bf6ea9c914",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6f0d07e5-dd96-4555-9ad3-30fd2212445f"
        },
        "item": {
          "id": "e83ea012-82b7-4c83-a9bf-c9a645358b80",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e15af50a-a0c6-4e2d-832d-b7398558bfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0465f4-843c-44c6-882c-a3cc591b57ae",
        "cursor": {
          "ref": "acf380a5-d155-495d-ae48-32b01d5cdf0f",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8b96c1dd-d51c-4aa7-9056-7e9c42ad19d4"
        },
        "item": {
          "id": "3f0465f4-843c-44c6-882c-a3cc591b57ae",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c0421200-5b61-4f49-b9f9-d061b33a07f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29b9b3f-c4a3-4f5c-a72f-f768373d49ad",
        "cursor": {
          "ref": "7d99e4b7-f5b6-4cb1-899a-59be1dc9a902",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "af6fb413-e66c-4f50-baaf-471e5f60e039"
        },
        "item": {
          "id": "e29b9b3f-c4a3-4f5c-a72f-f768373d49ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "63b4eba2-2a67-458c-a744-79c4f2b0c9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39043e2b-25b3-4cbe-b857-f94399a602d0",
        "cursor": {
          "ref": "95accea0-ea75-4767-a5ad-39592dd268bd",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "214eb657-4177-41ab-b7d0-91cfd831cc1a"
        },
        "item": {
          "id": "39043e2b-25b3-4cbe-b857-f94399a602d0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6e77f300-0fdc-4c49-8350-05a2e2e779da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de9a161-8392-499b-88bb-5a04e57ee787",
        "cursor": {
          "ref": "2b2abd1f-b7a2-4594-9389-58dbc5bd4f28",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4715d2a9-6936-468a-9474-1c6d220c6923"
        },
        "item": {
          "id": "1de9a161-8392-499b-88bb-5a04e57ee787",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "295dc971-4297-4ed2-b675-5a645897fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17087b42-3534-44b6-b130-ff5f31eba304",
        "cursor": {
          "ref": "ee86a188-1018-412f-8346-78eb41d97563",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0bdd7673-1029-47f5-9066-4dab80946931"
        },
        "item": {
          "id": "17087b42-3534-44b6-b130-ff5f31eba304",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ea44a564-05fb-4c72-85cc-380200ce0112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95235ac0-906c-4515-8d29-3d5e409e5399",
        "cursor": {
          "ref": "998fa0bb-d1c3-45b8-881b-cd975b6600fa",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b2be8bb7-2d6a-4840-8626-4cf8d464b4f4"
        },
        "item": {
          "id": "95235ac0-906c-4515-8d29-3d5e409e5399",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "362ab3e4-1554-477d-9c11-25f5e18fbe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c44225b-fbe2-4656-9aae-e567f83c6d9d",
        "cursor": {
          "ref": "ff79d7e0-607a-4cc6-b1a9-98eab364b017",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "22c0730d-c454-4b99-9f5e-5fbf44dd7317"
        },
        "item": {
          "id": "6c44225b-fbe2-4656-9aae-e567f83c6d9d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e66f021d-c487-4f6f-819f-c524a73e86d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8bdb9d-ded1-4e62-bf1e-d4ab68380b46",
        "cursor": {
          "ref": "d4f9e811-e525-4fe2-93b1-0c29e6c6f993",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0ea52463-8f87-4b26-b9d6-c3ce425dddc6"
        },
        "item": {
          "id": "fe8bdb9d-ded1-4e62-bf1e-d4ab68380b46",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ee880bc9-5451-416f-94b1-3f0130700127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a107a6e-2c32-428f-b75a-754764ced83e",
        "cursor": {
          "ref": "5b3b4665-1e28-4416-aa5c-4736275aacd8",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d3952571-a08e-4e99-855d-50579f14c7c9"
        },
        "item": {
          "id": "6a107a6e-2c32-428f-b75a-754764ced83e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "023a0f28-650c-47be-a830-157698e07a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5237dbde-de3a-4277-a8bd-977c8e8d7194",
        "cursor": {
          "ref": "8a066f31-2794-4e00-a1d1-63380186d805",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "96b9971b-b5fc-4fb7-84e6-21bc8b356970"
        },
        "item": {
          "id": "5237dbde-de3a-4277-a8bd-977c8e8d7194",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0f704df0-57dc-4ed0-81cd-b2ba0bed5f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b77acb2-36fa-4ba5-ab78-dc1e0539d798",
        "cursor": {
          "ref": "187a3e5c-5e17-4a16-b84f-2ac05bd97dad",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "51fba4bc-0238-46a7-ac05-e92ea5f566b4"
        },
        "item": {
          "id": "4b77acb2-36fa-4ba5-ab78-dc1e0539d798",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9dab0217-ec11-4d68-b781-fe8e9f7b74f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662dc4b5-7581-4620-8bc6-536e822a3e92",
        "cursor": {
          "ref": "0b3b3a6b-3689-4bed-801f-ff7409ed1531",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "efff56eb-6412-464d-b780-3dbe3a3cc3e6"
        },
        "item": {
          "id": "662dc4b5-7581-4620-8bc6-536e822a3e92",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "2496cf0b-bf5d-4bfc-a246-8ea76d5f5ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1044e3-0431-4758-ae90-2d290319bc4d",
        "cursor": {
          "ref": "224a9a20-7c9f-47e9-8d80-c6c904b06c5a",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5cd0afa8-d0db-4c82-a4cf-7ea855f297b5"
        },
        "item": {
          "id": "dd1044e3-0431-4758-ae90-2d290319bc4d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fbacf097-0003-4557-9158-702febf59d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57778654-be93-42f6-a85d-4a6279c44219",
        "cursor": {
          "ref": "4e80a5c1-8ff4-40d7-871c-a8ef5eb8c210",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "714de776-e75e-4d4b-a38e-337d83f1ef32"
        },
        "item": {
          "id": "57778654-be93-42f6-a85d-4a6279c44219",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3584c668-b5a3-48db-b6bd-45cf77918511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1955db10-ef8a-43ce-a9e4-11822f86a9a3",
        "cursor": {
          "ref": "8e046dac-8a01-4854-a75d-57d9e1ea5cdd",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ada78105-8687-4ad1-88c0-9b90fb08798c"
        },
        "item": {
          "id": "1955db10-ef8a-43ce-a9e4-11822f86a9a3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "85ec22c8-8303-4253-9622-fee193711431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce712a-6c40-4cd1-b3cf-957a0990e6bb",
        "cursor": {
          "ref": "58a6d48c-1615-4ae8-a972-ec2a65093d29",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "13903a63-cfd8-4a4c-9202-c58abc3b6b05"
        },
        "item": {
          "id": "69ce712a-6c40-4cd1-b3cf-957a0990e6bb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8fb83411-8f72-4e3b-9894-6cea01e59659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3433b1-6df4-4886-a5f1-529a364f07a1",
        "cursor": {
          "ref": "50ed1fd2-bb0f-4eb0-a607-3a1ca9514d59",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "80e44e30-7911-455b-97a5-acf3b6c05653"
        },
        "item": {
          "id": "5d3433b1-6df4-4886-a5f1-529a364f07a1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "62851399-55d3-4a4d-b557-bb71496e2c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4def7176-db23-4f0c-9763-1bb7b7755435",
        "cursor": {
          "ref": "9ca0689b-ca0f-445d-b7ee-7e4979e8f80f",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1c5f9287-1e63-444a-b56b-c3820c30e4db"
        },
        "item": {
          "id": "4def7176-db23-4f0c-9763-1bb7b7755435",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ee81cb2f-3e3e-46a8-917d-b877f2f6a14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6761f67-940e-41a3-9b9f-24bf67a92cb4",
        "cursor": {
          "ref": "02670b4d-1a9e-41b3-ba11-0a6c683c2c01",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74709ac6-2641-4197-b02e-acc322b925f7"
        },
        "item": {
          "id": "c6761f67-940e-41a3-9b9f-24bf67a92cb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7c6b893f-a5e2-463e-9af4-d8b1720b7861",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbcb67f-9424-492a-84ff-7e796766e9e1",
        "cursor": {
          "ref": "b865b7a4-f54e-4017-a5ee-9994eeb4ce3f",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ec3a2380-42f5-4fb0-b938-edcc46cf08e5"
        },
        "item": {
          "id": "9cbcb67f-9424-492a-84ff-7e796766e9e1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "a808d31a-6a59-4dad-b6be-e08617b37a23",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 479,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca041cff-b28f-4888-9cf8-16d96b0ae217",
        "cursor": {
          "ref": "034080d7-912d-4d2a-aea5-8f5c33609011",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "936ca044-a3ec-490c-a521-c446b1d6872d"
        },
        "item": {
          "id": "ca041cff-b28f-4888-9cf8-16d96b0ae217",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "617fa218-93c6-4070-af4c-2989f0cbe256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca041cff-b28f-4888-9cf8-16d96b0ae217",
        "cursor": {
          "ref": "034080d7-912d-4d2a-aea5-8f5c33609011",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "936ca044-a3ec-490c-a521-c446b1d6872d"
        },
        "item": {
          "id": "ca041cff-b28f-4888-9cf8-16d96b0ae217",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "617fa218-93c6-4070-af4c-2989f0cbe256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2d0fde-e115-4941-83c6-76d09ad3b1c1",
        "cursor": {
          "ref": "113a85d7-b2a2-4a5a-ae10-e6b0d3a705d5",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f8f1fa11-bce2-4c09-b45e-d04f0d94c9f8"
        },
        "item": {
          "id": "5a2d0fde-e115-4941-83c6-76d09ad3b1c1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "574cf4f8-8622-4555-9c85-abc9846b4120",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 275,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "92811c2d-aea0-4dc9-93ba-502eaf4cd591",
        "cursor": {
          "ref": "0a5d95ce-834f-431b-b026-ca02193b5b70",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "81ec5e73-7caf-49f3-8661-510f0a543bb4"
        },
        "item": {
          "id": "92811c2d-aea0-4dc9-93ba-502eaf4cd591",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "48d3942f-2a9f-4d6b-85d9-9924692fd1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaeb9fa-b5a4-4ad7-b5bb-37f563118afb",
        "cursor": {
          "ref": "f7cf5329-e2ab-4f87-9d7e-ad0394eaf48d",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "44dcd133-1d62-4455-99c8-6f8bf2e3d53f"
        },
        "item": {
          "id": "6aaeb9fa-b5a4-4ad7-b5bb-37f563118afb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7ffb3fea-5391-4050-8fca-e92a38947f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409b1974-d32a-46a4-8595-358777e912ab",
        "cursor": {
          "ref": "abc40c45-fe84-4fd1-91bc-be9e14d7a91e",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b41c81ae-ea7c-46b8-ad8b-981b9a7db19a"
        },
        "item": {
          "id": "409b1974-d32a-46a4-8595-358777e912ab",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "dac6327b-57ed-4825-86f5-7ed51479fc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcf14eb-b41a-4747-b00d-b7e15b45538c",
        "cursor": {
          "ref": "d1331c77-ce68-42ab-9799-fd7022a8c7a4",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a14407a2-76c3-41db-b5f3-3820da1a8b4b"
        },
        "item": {
          "id": "fbcf14eb-b41a-4747-b00d-b7e15b45538c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ed9b7056-f612-49a0-a529-86d9ff62488c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee786ac-2eda-4850-b8c8-270b94f88233",
        "cursor": {
          "ref": "5e209662-757f-4daa-849c-3b5432818bda",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e08f0558-7a2d-423c-9b32-ee622b74802b"
        },
        "item": {
          "id": "3ee786ac-2eda-4850-b8c8-270b94f88233",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4fcb8566-5e6a-4e06-8466-b71dd0717591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19aa5c60-7267-4559-9481-f1ad2b8d1a20",
        "cursor": {
          "ref": "a6eb4b56-49ad-4369-af48-d7eee0eb16df",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f7a33d2a-4752-423d-a00d-bc9f05dffe59"
        },
        "item": {
          "id": "19aa5c60-7267-4559-9481-f1ad2b8d1a20",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e322ccf3-5a04-4a8b-8411-3a143d148404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f88e236-9975-4518-91a7-1f92bd955818",
        "cursor": {
          "ref": "321cbfd8-5d16-45aa-8f91-ce7ed54e5035",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "54729954-84d6-4a67-a19e-5fbcb0af0f76"
        },
        "item": {
          "id": "9f88e236-9975-4518-91a7-1f92bd955818",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b8447c32-fc71-4f2b-81e7-8fd9e70573f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcf34ee-eb62-442d-bcca-0093335047c9",
        "cursor": {
          "ref": "8d2b76f6-c70b-4c5b-9cf8-545f63628708",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "cd039835-db87-4c8d-8fc9-4159b333fd77"
        },
        "item": {
          "id": "edcf34ee-eb62-442d-bcca-0093335047c9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0375dc41-9df1-4013-b0a4-a5dd9de82857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a98a23c-897e-4c85-8c2e-87fde4cecb07",
        "cursor": {
          "ref": "9fbf732f-7d02-4502-9521-37c193098987",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6be0f34a-61cc-4e6c-915c-88986fe4eb95"
        },
        "item": {
          "id": "0a98a23c-897e-4c85-8c2e-87fde4cecb07",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d55556e2-605d-463f-8c93-a8292faefa3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d3fb2b-3b14-4c11-a88d-d39b525bb0df",
        "cursor": {
          "ref": "450ec441-6b60-46b5-bde4-818d9aa14e09",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "281c4dc3-29eb-4332-acaf-5d845556e794"
        },
        "item": {
          "id": "69d3fb2b-3b14-4c11-a88d-d39b525bb0df",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1864a6be-69d4-4e06-afad-5999f7948076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f406451-0a51-4a82-a425-7840aa4f1ad7",
        "cursor": {
          "ref": "23ad27ec-2dc0-4a19-90c6-7a000a026ac4",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "68c55e99-2e62-42b9-9028-ca8ddce87752"
        },
        "item": {
          "id": "4f406451-0a51-4a82-a425-7840aa4f1ad7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1675118c-29e1-4c48-b880-3a5bc283eec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f45c4-3103-4b55-a50c-4fd4a4ada675",
        "cursor": {
          "ref": "08cdecec-2ef8-466a-8266-8c9f5bcb2fcb",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "54fef14c-1332-4fa3-a5ad-5105612a5490"
        },
        "item": {
          "id": "465f45c4-3103-4b55-a50c-4fd4a4ada675",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d30a204a-6ed7-45ec-89ac-aee08534bbd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f767361-1f2e-4745-af64-56979df1df7d",
        "cursor": {
          "ref": "0a35a900-b80c-4ad6-b595-38f6e2c53f09",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c23c9cb9-1f59-4fa9-8eda-4dff58b36e9b"
        },
        "item": {
          "id": "0f767361-1f2e-4745-af64-56979df1df7d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d6356159-212b-4126-a4f2-64944d454f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cc2a94-f416-4a91-8a7a-0d847f746764",
        "cursor": {
          "ref": "cf424fd2-ce37-48cd-a574-06a35d7dfa08",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d4b6b94a-d1a0-44e4-9f13-11e28ffd74f3"
        },
        "item": {
          "id": "15cc2a94-f416-4a91-8a7a-0d847f746764",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ed5f95a1-eedb-44b7-981d-806625c859fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9ac81c-390b-4781-8398-5ef926fa6cfe",
        "cursor": {
          "ref": "c9164c52-f01c-4cb3-93f2-117b01515682",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "188108bb-34d2-40d5-a852-dc03f47ff497"
        },
        "item": {
          "id": "1d9ac81c-390b-4781-8398-5ef926fa6cfe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7cabeb57-62bf-4400-8180-49402ef207fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e85e84-e931-49e7-a52d-fbe27c379b5b",
        "cursor": {
          "ref": "f222b1be-8c91-4a65-abdc-98960883dad8",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8c75629c-64ba-4d28-a3f0-b9d811ace717"
        },
        "item": {
          "id": "17e85e84-e931-49e7-a52d-fbe27c379b5b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5a9719aa-6f94-4eaa-8358-57954610a524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b355db-9b3e-4789-a40c-61ee8aaca491",
        "cursor": {
          "ref": "2942d7bc-a45e-448e-9a7b-8ee4c2027928",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "70eebb31-8d0d-4d8d-9af1-e4e7e1003281"
        },
        "item": {
          "id": "20b355db-9b3e-4789-a40c-61ee8aaca491",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "76764d17-cc20-48d6-b59c-9a96c99d4cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b23de22-2e38-4ac0-9932-9b1c7e065eee",
        "cursor": {
          "ref": "2a6a95d7-ebac-4ad5-af1c-26eed28201bd",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f1e1294e-7c39-4ae7-b7f6-b10628c9e0c8"
        },
        "item": {
          "id": "7b23de22-2e38-4ac0-9932-9b1c7e065eee",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "887e53e7-29e4-4cf6-be26-2b612ec462eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f79785c-442e-448c-891c-8b0b3c446f2a",
        "cursor": {
          "ref": "ca29c18a-5784-4e36-8462-a973e87316ea",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e4799e25-55c1-4484-8a38-181f9e664bfc"
        },
        "item": {
          "id": "7f79785c-442e-448c-891c-8b0b3c446f2a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "44c0c62f-bbc4-49fc-8711-f4f46c7e5204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac31e9d-8c69-42c4-9ce6-bf6a92fd8675",
        "cursor": {
          "ref": "3434d382-d137-4be1-9917-8024306f2b3e",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7a14129b-3e09-4fbc-aaf6-0895d873c6e9"
        },
        "item": {
          "id": "5ac31e9d-8c69-42c4-9ce6-bf6a92fd8675",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "701ccce3-85dc-430d-96bc-9c6d25cdd4a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc2eab5-5a44-4144-a4bf-262b1116c5fb",
        "cursor": {
          "ref": "a9ad9a6b-411f-4b35-bf8d-fbb9294472a7",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b2963c89-8d82-46b6-b48a-375349c512b1"
        },
        "item": {
          "id": "ccc2eab5-5a44-4144-a4bf-262b1116c5fb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "53600e00-899b-4a6c-8829-6d4a24d1a4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3dc383-5ce7-4bc1-95a8-c37af9f78426",
        "cursor": {
          "ref": "e323f403-c2e1-4b94-8448-77d32557620b",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2b552579-5d6b-45da-9840-e7fb6a4bf2c3"
        },
        "item": {
          "id": "8e3dc383-5ce7-4bc1-95a8-c37af9f78426",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5d89fe2a-0c0b-4438-8e20-c0c3eb68a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3620b1e-579a-4cec-a3c6-5110aab8e5be",
        "cursor": {
          "ref": "42371209-6227-4f52-ad59-f55a4e75dbe3",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "47c9d16f-b2fb-43bc-a167-bf2dc9961341"
        },
        "item": {
          "id": "e3620b1e-579a-4cec-a3c6-5110aab8e5be",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0eefe680-4ec2-425d-b743-f4bae975e35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51902e68-d160-41b0-86f7-1fea076bda3b",
        "cursor": {
          "ref": "2d680427-284a-4516-b6e8-4d3e0adaf399",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7a82c684-8b26-4fc6-8369-3ab1930b2a06"
        },
        "item": {
          "id": "51902e68-d160-41b0-86f7-1fea076bda3b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "99e68a28-58df-4402-8262-659f97e84bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e4df71-2244-4f64-9950-6ace8d10a2e0",
        "cursor": {
          "ref": "08dd4619-9ee2-41b2-a9de-ad20929b220f",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e3374898-2ea6-4ece-8b81-899bebc377f6"
        },
        "item": {
          "id": "d4e4df71-2244-4f64-9950-6ace8d10a2e0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d99f48a-e9fe-44bc-aea8-27360fe0a0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd30b4d-8e1d-4887-a2d9-da840264d34c",
        "cursor": {
          "ref": "5e12d7c8-83f1-4b5e-adf9-e90d41b599fb",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "768c0ca5-6754-4d7b-8c3e-12a1918be1aa"
        },
        "item": {
          "id": "fdd30b4d-8e1d-4887-a2d9-da840264d34c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "02c2f49a-8ec5-4011-86dd-0900d6c2da2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9f1582-3797-478e-a3fd-d3fbd95a7059",
        "cursor": {
          "ref": "23166a96-7694-44ac-b480-a88485c14cd2",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5a4c8f15-9b19-430c-8eaf-4089394c2654"
        },
        "item": {
          "id": "9f9f1582-3797-478e-a3fd-d3fbd95a7059",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "59ccafa8-ca9f-45ab-aa27-254fc5b57d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55804fa5-7232-4b1f-b1b8-a0d11b82fb53",
        "cursor": {
          "ref": "9ba5d4fb-35ec-4cc7-aa14-0f6a416f6d94",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c71b3c63-60f1-45af-816c-e858290b8098"
        },
        "item": {
          "id": "55804fa5-7232-4b1f-b1b8-a0d11b82fb53",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "94db6339-7708-4374-a76f-563d3fe11ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8293fc-803d-4743-a1e1-419e5e5cddb5",
        "cursor": {
          "ref": "30daffc7-d118-43bb-a072-2dbf667639c3",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "455291bd-6983-4f71-bc45-c5886fba0169"
        },
        "item": {
          "id": "eb8293fc-803d-4743-a1e1-419e5e5cddb5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ba2e8e22-58d4-427e-bd67-b302ff3065ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30886be0-18ff-4722-bbff-c58da10bf5e0",
        "cursor": {
          "ref": "9a3cc932-9313-470d-86e8-a9934a6f0a3e",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "13d0b028-fc39-496a-9208-c5f539ce76ef"
        },
        "item": {
          "id": "30886be0-18ff-4722-bbff-c58da10bf5e0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c70f9385-c6ef-452a-a7f2-b937ea2cbabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e25cb0-0249-497c-95ae-12c15bbfe54a",
        "cursor": {
          "ref": "22f2fcbd-76a8-4529-940e-673602383223",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f6c3c875-3ed5-48fb-9313-9fd5b6f55633"
        },
        "item": {
          "id": "72e25cb0-0249-497c-95ae-12c15bbfe54a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "36ccfa07-6f84-4243-949a-373bab6a8386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0e9e32-d780-4de0-84a1-9a2b7d7b2f33",
        "cursor": {
          "ref": "10911c66-fdce-456f-887a-668bebf4acd1",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ce989ec0-ed6d-408f-86af-e44a7f19febb"
        },
        "item": {
          "id": "5a0e9e32-d780-4de0-84a1-9a2b7d7b2f33",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1396b6b7-d416-4215-ac77-6bacbb1cafba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee6edcd-50df-4645-b9ca-23a560145714",
        "cursor": {
          "ref": "5ff98526-1f9f-4916-a9fe-b27e3435d2c7",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "afd500b1-722c-4390-ad01-96284f018e9e"
        },
        "item": {
          "id": "5ee6edcd-50df-4645-b9ca-23a560145714",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0f076536-9989-4644-a879-50b07837c55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64995e46-3a81-4e0a-b438-f9233648bb2e",
        "cursor": {
          "ref": "1fdca11d-2bbf-485d-bda5-a06173a678e1",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ee484c91-162f-47dd-9854-fe8a8c96f14e"
        },
        "item": {
          "id": "64995e46-3a81-4e0a-b438-f9233648bb2e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "03b222ac-389f-407b-8feb-6c07e7a69ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c31ace-c627-4d17-b772-1017b04150ef",
        "cursor": {
          "ref": "71ed1a40-a544-4cce-8dea-eccfb8ae04c9",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "523172fc-82b9-40d5-bba8-def3f20a10a3"
        },
        "item": {
          "id": "58c31ace-c627-4d17-b772-1017b04150ef",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "130eedf0-ff53-4833-9ac2-9291843409e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febb8a38-af16-4bc6-a7d9-0cb44684be94",
        "cursor": {
          "ref": "4d830284-6662-46c7-af3c-3c1dd8da51fa",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4c9ec0d1-980e-4d17-85ad-5393233debf3"
        },
        "item": {
          "id": "febb8a38-af16-4bc6-a7d9-0cb44684be94",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "96140417-5a38-4807-903d-45f63835d11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cc2848-065a-47f2-ab36-490b8fa66b91",
        "cursor": {
          "ref": "49c96bc7-b6d2-4473-b1b9-7d7099f978dd",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bfe7421a-9057-4ba0-aacf-ef19e7c07220"
        },
        "item": {
          "id": "c5cc2848-065a-47f2-ab36-490b8fa66b91",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ff0ba3cc-f0f3-4b57-9623-5e643b189144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604e3541-5040-4e72-aaae-276759ae780d",
        "cursor": {
          "ref": "3fe20658-2c5a-4410-a704-15382695bdf7",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8f8493a0-a56c-4b9e-90c1-822d9bfeeaf2"
        },
        "item": {
          "id": "604e3541-5040-4e72-aaae-276759ae780d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "237a2245-a227-4a97-a43c-fc511e4681fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb94844-77d9-44fa-bd5c-d6719b7ddf4a",
        "cursor": {
          "ref": "7f1cfc4a-78cd-46c8-8aef-8ecf278248a1",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "0bf37d08-0ba4-4b5a-a2e4-5ef2b2802e05"
        },
        "item": {
          "id": "7eb94844-77d9-44fa-bd5c-d6719b7ddf4a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bdd635de-0eed-4cf2-ad27-de00776104e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5616f60b-5a7c-4a2f-8da4-86d56a2c7954",
        "cursor": {
          "ref": "d8eb2096-85d4-4f74-8ab0-d148bc0ad8b0",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e9f3e1cf-f81f-4051-a263-3a2f9fdfdf3f"
        },
        "item": {
          "id": "5616f60b-5a7c-4a2f-8da4-86d56a2c7954",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "90051ae9-4d55-4bb1-a736-b9f550ca5ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c6733f-bc34-45e4-8beb-103184c03e6a",
        "cursor": {
          "ref": "0d97a3cd-8142-4bd7-ad5d-78b7bb489de4",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6da8b1c9-6490-4977-8a67-0a7b1425d640"
        },
        "item": {
          "id": "a3c6733f-bc34-45e4-8beb-103184c03e6a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fb148fd4-09a3-435c-89a4-b6df7e2b394a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d670d483-1728-4c32-88b7-e392226e1140",
        "cursor": {
          "ref": "9132ffb9-57ee-4c0f-a288-129225f6d1ec",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d691ea34-e923-4ad6-a15f-d3eb31b519f3"
        },
        "item": {
          "id": "d670d483-1728-4c32-88b7-e392226e1140",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2647fffd-d4df-4c64-8638-8d5b92c950f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d135e708-0bf3-494d-9ace-eef5de40d972",
        "cursor": {
          "ref": "fcb81739-9f4e-4290-a048-76611e1e390f",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ea3dd6e0-d731-44dc-b9ab-97d994bb8b45"
        },
        "item": {
          "id": "d135e708-0bf3-494d-9ace-eef5de40d972",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "627317e1-3602-43af-8e50-ca0ad9802d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73ff940-74da-495a-8a4b-c4e10c313a60",
        "cursor": {
          "ref": "169764be-4723-49ec-bf7e-eaaf0debf784",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "36d4bda9-a4b9-45e7-8357-ef190f21b0ff"
        },
        "item": {
          "id": "a73ff940-74da-495a-8a4b-c4e10c313a60",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "00a6dc1e-239b-409e-ba63-8cabe06107dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89202124-001e-42cd-8ef5-e5458aa2a558",
        "cursor": {
          "ref": "bcffd22e-5e90-481c-a02c-37ed082f5368",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a37a4d4a-5af3-45d3-b2de-bf453a3c6cbd"
        },
        "item": {
          "id": "89202124-001e-42cd-8ef5-e5458aa2a558",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "83f633a6-a11d-4a33-a00d-8a7991147edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5581d4-f903-4951-ab70-e79d45d1ce35",
        "cursor": {
          "ref": "27abec45-3b75-4a23-a170-c8b70f741835",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ffa82511-6e9b-4dce-81f2-8d73c36d5ae8"
        },
        "item": {
          "id": "3a5581d4-f903-4951-ab70-e79d45d1ce35",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4c320bba-1249-4078-a1eb-3f8b3eb1c662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921ced28-247c-46d0-bcf0-401a363e430a",
        "cursor": {
          "ref": "8d0ba908-26a4-4aa5-bdda-551dddc04859",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4ede8052-93af-4ecb-b801-233820a4cc8e"
        },
        "item": {
          "id": "921ced28-247c-46d0-bcf0-401a363e430a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0ded935f-77f1-4d65-9e6e-b7a3bcf30656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ecf873-7dbf-4b2f-9ef4-321aa39a56c1",
        "cursor": {
          "ref": "c0414db4-4048-4dfc-ae38-3c45dc6a4ddb",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "73bfb5ef-6bc8-40fc-8852-b3e26b20e940"
        },
        "item": {
          "id": "c1ecf873-7dbf-4b2f-9ef4-321aa39a56c1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f380cbfd-9ad7-4198-a08e-f72787159862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea8f1a1-ab08-4f04-9537-40e55e5be208",
        "cursor": {
          "ref": "350233b0-007c-4b26-b943-605aaba0d723",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3fe8dad3-2e35-4426-bd18-2c48cf646f2c"
        },
        "item": {
          "id": "6ea8f1a1-ab08-4f04-9537-40e55e5be208",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "85b9cb07-b6dc-4d0f-861f-42159ec0f370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9060dc2-89c8-4658-80c2-e92a16c02a8f",
        "cursor": {
          "ref": "f5919731-232d-4445-9a3b-7c299efc574e",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "13aa3a95-34db-4744-8033-629c58a1cfd3"
        },
        "item": {
          "id": "b9060dc2-89c8-4658-80c2-e92a16c02a8f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "71a7eaaa-0452-4ef5-8130-76bd1b3640cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de34fb24-e7ae-40b3-bc44-ed060fa4dd7b",
        "cursor": {
          "ref": "e5799e68-9c01-451e-8026-d42486924df2",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7743eed3-9546-4e0b-be09-2d2043e9d55a"
        },
        "item": {
          "id": "de34fb24-e7ae-40b3-bc44-ed060fa4dd7b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1e047dc3-9ccd-475b-bb4d-29e77b278153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3436e61c-43fe-4d01-9955-e0e712cece0d",
        "cursor": {
          "ref": "97924232-b744-402c-b40d-4ba32eec45d5",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f7350a79-2b52-4fa3-9014-59c98144028d"
        },
        "item": {
          "id": "3436e61c-43fe-4d01-9955-e0e712cece0d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8b337643-f2c3-447d-bcea-68c29148ada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68020a10-eb36-4092-a529-e0336eb8454a",
        "cursor": {
          "ref": "9413c541-5716-4a3f-ac28-4ece5b5a9bbd",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fc4757d8-8e10-4b52-98c6-d769c149b68e"
        },
        "item": {
          "id": "68020a10-eb36-4092-a529-e0336eb8454a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bdd07912-9f82-4a52-a19d-9b9d489d6c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1603b6-3305-40fe-9df5-25ef5d1113af",
        "cursor": {
          "ref": "99b2bf16-5edd-4aef-8cbe-b5d53021f4d3",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1c2ef358-ce7a-46ae-99b6-9cf7a80e5f6e"
        },
        "item": {
          "id": "6c1603b6-3305-40fe-9df5-25ef5d1113af",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "91825eb5-2750-43d1-b377-78e1d102d5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c9f5e5-454a-49d2-b4ef-5070ff39fcb9",
        "cursor": {
          "ref": "294878e6-4ba4-4a18-8c4b-622d2ae924e7",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "27a7bd36-05e8-48d6-b70d-7280a8119550"
        },
        "item": {
          "id": "48c9f5e5-454a-49d2-b4ef-5070ff39fcb9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bd813b3c-6bb3-4f87-9b66-0e55af3cbb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663aa99f-849b-40b5-a73c-17827486f811",
        "cursor": {
          "ref": "a90623b0-73b2-47cb-a320-fe3325cd01a9",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b47b4677-3492-472c-bcb4-bb2411e97e9b"
        },
        "item": {
          "id": "663aa99f-849b-40b5-a73c-17827486f811",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "41c343af-2852-4fbe-9fbe-feb8cea256d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9eab5e-7b25-45b7-be9f-dd5e8f57a7ee",
        "cursor": {
          "ref": "00c44d87-29c6-4b75-b7df-eb5890427729",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "25ce72eb-f3b9-468e-932e-c6e8e504c9bd"
        },
        "item": {
          "id": "4c9eab5e-7b25-45b7-be9f-dd5e8f57a7ee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d8a9b9a2-3af7-4109-8884-13bc388a2786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2eac23-f7ae-4a26-a215-d8420e199b82",
        "cursor": {
          "ref": "76a04144-1e19-4c5a-88d5-c927c9b63eef",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "41d8e036-80bd-433e-ba13-d74a3234b433"
        },
        "item": {
          "id": "6d2eac23-f7ae-4a26-a215-d8420e199b82",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7f319548-0aac-47b9-bb36-5caa0513b2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af0e26-3f82-4868-a8fb-e47fb7670a62",
        "cursor": {
          "ref": "594db329-aabb-49d6-8a3d-4c84bda27d54",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0298de62-654c-447f-afc4-868bb980d91a"
        },
        "item": {
          "id": "21af0e26-3f82-4868-a8fb-e47fb7670a62",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a114fcfc-5713-4e80-b544-75d7ecbf1150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32fbc53-7ffa-40f9-80e3-131629e00aac",
        "cursor": {
          "ref": "18917c81-45c2-42dd-97d6-0824b9e23f78",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8d0fe638-ce5d-4a6e-b329-fd98ef8a3a94"
        },
        "item": {
          "id": "d32fbc53-7ffa-40f9-80e3-131629e00aac",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8f340a87-c2b7-4bdd-bd1a-3b5289f3016a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6ff621-68fa-46f6-848f-328bfc300329",
        "cursor": {
          "ref": "96a970b2-a691-4c3d-883d-865e6444f363",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e1434367-4102-4315-8d77-be803fdec7b0"
        },
        "item": {
          "id": "8d6ff621-68fa-46f6-848f-328bfc300329",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e8d3c7f5-02ff-4c73-8e21-ddd1a40c6d47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15fdfa7-d849-4c20-a47d-410e88cf0917",
        "cursor": {
          "ref": "e9b62f51-4487-4ca6-bdf0-0389a788a296",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a94f3ea8-7337-49d7-b9bc-4e13607a3741"
        },
        "item": {
          "id": "f15fdfa7-d849-4c20-a47d-410e88cf0917",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d5cec358-6e82-45fe-90aa-40f46fbbb4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6367e564-ded3-4195-b324-35ac05eab67a",
        "cursor": {
          "ref": "427a8b4c-0788-4c82-9716-120a3f49a8b7",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "98a00265-4592-41d5-9979-45de9842c805"
        },
        "item": {
          "id": "6367e564-ded3-4195-b324-35ac05eab67a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f23061f9-3904-4492-887a-54cd13ed58ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3b2e4a-7c79-4b5c-b7b2-8ec21b38201a",
        "cursor": {
          "ref": "fd267cb3-d1de-4860-a42d-946731d63f1b",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e87f6432-33ae-4eff-bdb3-692c1cd75ba4"
        },
        "item": {
          "id": "5c3b2e4a-7c79-4b5c-b7b2-8ec21b38201a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "67516b04-3d11-4409-88c5-ee7ac4e41dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347b3c1c-383e-4efe-a6e7-f5e3b8b0f06b",
        "cursor": {
          "ref": "1131f541-6621-4d39-8808-48fac8818d3c",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8abbff86-e586-4330-9296-28676ad2ccc1"
        },
        "item": {
          "id": "347b3c1c-383e-4efe-a6e7-f5e3b8b0f06b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "16dd3639-5799-4873-991e-ee544308a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d97d90-916f-4d45-8207-443d038d2b61",
        "cursor": {
          "ref": "a18e69f8-a5be-4bf1-ada9-34270806e304",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "daa75486-1f02-4184-9e85-9adc82f2fa24"
        },
        "item": {
          "id": "67d97d90-916f-4d45-8207-443d038d2b61",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e164bce9-4e74-4f07-8674-bd344c2ce277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0754a1-c470-4ab1-a929-7984a08db28a",
        "cursor": {
          "ref": "ad29e1ed-d3a2-40ca-b91d-8ecda6844ebd",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2e63d576-2820-437e-9003-cee30714a3b9"
        },
        "item": {
          "id": "cb0754a1-c470-4ab1-a929-7984a08db28a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e51cd7b0-2c1c-422d-b1e7-4a9ded449130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39788a5-987b-4a38-8203-101ac8d25d55",
        "cursor": {
          "ref": "f624bba8-58c1-48f9-b493-bc37f5042ea3",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cdf29088-28e0-4dc0-8fcd-41562744c2d1"
        },
        "item": {
          "id": "d39788a5-987b-4a38-8203-101ac8d25d55",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "afb5375e-7d98-4445-9231-c11f9d81db27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689021f6-8b98-4053-a0b8-ac8abe856ad6",
        "cursor": {
          "ref": "e1587c94-9375-48ec-8453-f52e0efaff02",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "87702aa1-9414-42a1-92f5-cc44fd6733d2"
        },
        "item": {
          "id": "689021f6-8b98-4053-a0b8-ac8abe856ad6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ee2963b3-c1ad-4afb-97f9-a37708d23049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf99be4-0c60-4f18-b888-712a4109c6bd",
        "cursor": {
          "ref": "b9069bd0-a2aa-4024-9408-351fd57d6a1d",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "40d780bf-3cfe-43fa-96ea-c810a1c9e397"
        },
        "item": {
          "id": "adf99be4-0c60-4f18-b888-712a4109c6bd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ad64c9e2-4711-468f-a536-76cb2034ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5fa23c-1722-4b3b-ae72-dc771ae4a5bc",
        "cursor": {
          "ref": "187ff9b4-7893-4334-8aa2-a2860b8bbb8c",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8088fbeb-6909-4e2d-a326-92f3b602055a"
        },
        "item": {
          "id": "0b5fa23c-1722-4b3b-ae72-dc771ae4a5bc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f9a005cb-564e-4ef7-8eaa-ffbef1e896d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb33988e-4dbb-4896-87df-5b8e96a3d1e7",
        "cursor": {
          "ref": "89a8be53-f6e0-430f-89d2-2fb70529ca12",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a311b5c6-2b99-4731-ade2-4aa45acb7dd2"
        },
        "item": {
          "id": "eb33988e-4dbb-4896-87df-5b8e96a3d1e7",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6c3cae3f-3626-4614-a4e8-86c914a596fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b76bb70-b5f1-4cac-b9ce-35cb9395ce10",
        "cursor": {
          "ref": "0f38d590-49c7-4927-9b88-4d95d38b1c8f",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c905ecc3-917b-4d52-ad36-cb4de00cb573"
        },
        "item": {
          "id": "5b76bb70-b5f1-4cac-b9ce-35cb9395ce10",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3aefdcb4-82e6-4472-850a-a8e9a40ab9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aef79f1-8d2c-487f-b628-b888bf32e281",
        "cursor": {
          "ref": "0a286463-5adf-41be-8742-6d175f80cf9a",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fc68a3ce-7cb9-4a79-a445-52e8cd8be250"
        },
        "item": {
          "id": "5aef79f1-8d2c-487f-b628-b888bf32e281",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "148b5ea1-57df-465d-9de3-0937f6eb39af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffadb0e-d74d-4601-8281-b18c7094c06e",
        "cursor": {
          "ref": "08245d88-a059-476c-b311-d356aaf8c5e1",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b2f4ad9b-a8f6-4c8c-978c-bf9c0725c171"
        },
        "item": {
          "id": "8ffadb0e-d74d-4601-8281-b18c7094c06e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cffe20fb-8dc4-4b50-bfe9-d22535348434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126be6fc-5849-41f9-ae5d-e2b96de223af",
        "cursor": {
          "ref": "b0bd3d93-3f91-4df0-a107-9017e5c6dbf0",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "82607eb5-3687-4928-8637-b339410bb793"
        },
        "item": {
          "id": "126be6fc-5849-41f9-ae5d-e2b96de223af",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "18c78a11-dbfc-48a4-a4f0-62c9d4fe8c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc490a08-6ea9-49fe-9a59-bbb35b09d3d0",
        "cursor": {
          "ref": "fbc8399a-f2c3-4c88-a038-2ecd9cbb9ae2",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4cbff79c-7f0f-48dc-8b4a-7e1a98699f87"
        },
        "item": {
          "id": "dc490a08-6ea9-49fe-9a59-bbb35b09d3d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8b7b6a21-ebcf-4b10-99a3-68cbb3cb95d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f579ca78-e283-4981-8b27-d54c5a7dde39",
        "cursor": {
          "ref": "02ec4fdf-ab2a-469b-89ca-042a490c9121",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "648bffc7-91b5-4e1e-a255-67a162d06e05"
        },
        "item": {
          "id": "f579ca78-e283-4981-8b27-d54c5a7dde39",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "46887b87-7f5f-45b2-8f3a-2a804443aebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8511a4c2-42f3-4fe8-ac6f-f03bf70fc575",
        "cursor": {
          "ref": "5c2e373f-152a-4e90-8169-41649d96cd16",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "70500a7a-b0d5-4bd6-9f15-88336d9f2b81"
        },
        "item": {
          "id": "8511a4c2-42f3-4fe8-ac6f-f03bf70fc575",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e8c1b493-f19d-4cd6-bcc0-6f45052cb251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccccbe5d-dc95-4bb2-9846-d37f46b420c7",
        "cursor": {
          "ref": "4f0e2cc8-bed4-4282-9791-0bbb5f685bc6",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "77ea2d7f-4474-4940-a6ef-9e6da25e5fff"
        },
        "item": {
          "id": "ccccbe5d-dc95-4bb2-9846-d37f46b420c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "100c4870-d2dd-4ccf-9afe-c36244440de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83b24d4-2c81-47a9-bf4f-8c0e03ede25c",
        "cursor": {
          "ref": "04571305-154e-4f05-860a-c221bd8fb382",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "134e4b4f-79cc-4fed-8436-92b859947f2b"
        },
        "item": {
          "id": "d83b24d4-2c81-47a9-bf4f-8c0e03ede25c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f54d5cb9-06eb-4ce2-9057-71f245d76027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02651ec-1676-4d90-8f48-3a7004f5e0a1",
        "cursor": {
          "ref": "db57af78-df36-4208-ac04-c788e9261d4b",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e4508ddf-d6aa-4c99-85a9-f5ec7be0c569"
        },
        "item": {
          "id": "d02651ec-1676-4d90-8f48-3a7004f5e0a1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d1d68503-8d83-4f25-ae5c-64e2a21a1077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd901db-c1af-4f15-90fc-f0ff7d91fb73",
        "cursor": {
          "ref": "697a7263-344b-45e4-aebe-a82a65b64696",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4a5b58ae-8524-4c94-a647-408cd8a23732"
        },
        "item": {
          "id": "8bd901db-c1af-4f15-90fc-f0ff7d91fb73",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2219d8e1-f0e7-403b-b0b3-d87630cf53b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81fa8b9-3449-4d77-b28f-3853b71f2818",
        "cursor": {
          "ref": "cbac0afb-8461-4b98-b9ee-1ee7c05d5955",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4e21d2e0-c3ae-4616-8b23-97c4f3f546a0"
        },
        "item": {
          "id": "c81fa8b9-3449-4d77-b28f-3853b71f2818",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c2f6bc9f-693f-4b2b-9d11-bbc9a9af96b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bf0095-2d60-4e8d-a5e7-1451d0bde746",
        "cursor": {
          "ref": "c0201fa0-4d3f-4277-91f1-3813ecda992e",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1c47f5fa-9f6d-439d-9234-d6f6f3ea5ffd"
        },
        "item": {
          "id": "e9bf0095-2d60-4e8d-a5e7-1451d0bde746",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "83c648d0-d6d6-4e3d-90c5-b801a9b1e378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf90e8c-47d9-49fb-b901-b0d9b7153da6",
        "cursor": {
          "ref": "275e6f2d-ba1f-41b4-8514-c0feb6c48473",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9e16a1ad-9961-4479-babe-3dabf9eca632"
        },
        "item": {
          "id": "bcf90e8c-47d9-49fb-b901-b0d9b7153da6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "780b197d-75c9-4176-9876-9d7e93a42aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93505f1-a4d0-4800-98e2-eb7d7869031f",
        "cursor": {
          "ref": "8f2ecd88-27c8-4957-ae88-572b1da99fc5",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c54b0a21-1f96-4532-a143-23bfec92a3d9"
        },
        "item": {
          "id": "f93505f1-a4d0-4800-98e2-eb7d7869031f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "949da79f-c9cc-4cff-8bb8-a62a4b84ed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3e04fe-6539-46eb-9215-607473375f13",
        "cursor": {
          "ref": "52d454c1-5b2e-493f-9547-9e13acd20199",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "492692ff-7010-4499-b285-e278d5bdfcd3"
        },
        "item": {
          "id": "aa3e04fe-6539-46eb-9215-607473375f13",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "61c60209-dd0c-4748-9d32-7ec474691b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf46ac9-b73d-45b7-a926-3d70cd031183",
        "cursor": {
          "ref": "5148595a-09c4-4333-b621-91ec9bc1f81b",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6d11ce91-d119-474e-a151-9693e5061b0f"
        },
        "item": {
          "id": "cbf46ac9-b73d-45b7-a926-3d70cd031183",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "4186ae5f-7e06-4dd3-8af0-47a14399a51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b43bbc6-c2d3-45e2-90c0-caf053d866df",
        "cursor": {
          "ref": "489d73ae-9351-49b7-95b0-45522c5f163a",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8c603b2e-6b24-467c-bd4f-20a5fee08eec"
        },
        "item": {
          "id": "3b43bbc6-c2d3-45e2-90c0-caf053d866df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ec737017-f71b-49a2-b03d-1828ae2f1850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d699bd3e-3817-4f36-a7f3-6e41138f7736",
        "cursor": {
          "ref": "95210792-b630-4ec8-8b31-3ac121086db8",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "45eaabc7-9405-4462-bd21-a34c68d6c728"
        },
        "item": {
          "id": "d699bd3e-3817-4f36-a7f3-6e41138f7736",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4083724a-7c49-4f3a-ac9d-5669f298f4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c979cef6-105f-4828-9b5f-e3ad00893c43",
        "cursor": {
          "ref": "2b2ef433-28a4-41d4-884d-afcc0edd029a",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f8dcdb17-6fe1-49bf-b44f-62c0237720e7"
        },
        "item": {
          "id": "c979cef6-105f-4828-9b5f-e3ad00893c43",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c89030f3-c3d4-4d26-b413-17a6be0471ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0408e224-7071-4d0e-a8d8-8669ab59085f",
        "cursor": {
          "ref": "07b12bad-3d7c-4713-9a95-b3e9d094e6af",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "267587c9-e35f-492a-9617-03c2d2fa3a40"
        },
        "item": {
          "id": "0408e224-7071-4d0e-a8d8-8669ab59085f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3fc20f3b-e131-4847-b7ec-4413c91453d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9742da-69ea-4ca9-98d6-b1ce363d168f",
        "cursor": {
          "ref": "2249879e-8d7d-48d8-8201-1d0ddd891d9b",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e9d5b032-fa3c-4841-9147-9039708aa7d6"
        },
        "item": {
          "id": "4e9742da-69ea-4ca9-98d6-b1ce363d168f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9587c374-f041-4f53-981e-1f705abf007e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4c11c7-dbea-47cd-a7bf-19f869e7a427",
        "cursor": {
          "ref": "07c15f92-0551-4431-b52b-69578d3772ab",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4297353e-1f35-49e0-b691-6aa717065f0c"
        },
        "item": {
          "id": "5b4c11c7-dbea-47cd-a7bf-19f869e7a427",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b79ab36b-74db-4c73-a2d2-9f48d626b07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2dcd55-fd8b-4dd7-8d0c-d184a64395fe",
        "cursor": {
          "ref": "3078ed62-1601-4a1a-ac11-e9688bc466b2",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "527b49cd-d274-4f58-b461-aed4d6082a6e"
        },
        "item": {
          "id": "2e2dcd55-fd8b-4dd7-8d0c-d184a64395fe",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc9df0db-e682-4c37-b5f4-acbaa01dc1cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b666b3a5-029c-4d3e-a468-3fd65616e24e",
        "cursor": {
          "ref": "d8945a25-59fe-445b-9f1e-2b9fead94ea5",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7f480505-8bde-4ab0-ad27-2a734629d1e8"
        },
        "item": {
          "id": "b666b3a5-029c-4d3e-a468-3fd65616e24e",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "683ed585-99cf-41c3-b9e7-e0a7de56c202",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 280,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34149c7-6cae-4206-a772-8f2a0f8a0fa1",
        "cursor": {
          "ref": "e96fbd51-80ce-4af3-845b-5e8ad54a5359",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "dbb0b09a-d575-4c88-9b79-e1615a55c560"
        },
        "item": {
          "id": "f34149c7-6cae-4206-a772-8f2a0f8a0fa1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "004fa5d0-e313-4524-bfca-cfa1cb63e3ba",
          "status": "OK",
          "code": 200,
          "responseTime": 405,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6773ee-e0b6-466b-9947-c2a674075d6b",
        "cursor": {
          "ref": "6aafa607-569b-4ccd-bb10-7a96b4b957fc",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2e146b20-8ad6-44cb-9371-d0da708edf19"
        },
        "item": {
          "id": "0b6773ee-e0b6-466b-9947-c2a674075d6b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b8ec58b5-d47e-4e4e-9fcb-60fbeb19304f",
          "status": "OK",
          "code": 200,
          "responseTime": 428,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "63546c71-77ac-453b-9e43-a99cdde5a919",
        "cursor": {
          "ref": "96c876de-a41c-4f21-a74b-d08efcebebbc",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3f883755-01c0-453d-b3a6-65764f86ac39"
        },
        "item": {
          "id": "63546c71-77ac-453b-9e43-a99cdde5a919",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "684484ed-08ba-4c23-9fb4-6e4fb2849070",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0348a822-aac6-4ce3-9f97-cc06f0530413",
        "cursor": {
          "ref": "0ed61e5b-8034-4317-93c5-1c281eb1d1a0",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2fa0eae3-c8c7-41af-966c-a71fb2ece918"
        },
        "item": {
          "id": "0348a822-aac6-4ce3-9f97-cc06f0530413",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6c05de1a-86a8-449b-909d-196dd6c77e22",
          "status": "OK",
          "code": 200,
          "responseTime": 354,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0eeaed-4e1d-4582-8b37-89d319e6e767",
        "cursor": {
          "ref": "2372401d-ef53-4844-9591-db1a372d8c56",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a5697578-4183-41a7-819d-34ed36b5bd0f"
        },
        "item": {
          "id": "fa0eeaed-4e1d-4582-8b37-89d319e6e767",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cfe9e509-7bb4-4cd9-af57-1094b8e3fd5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0eeaed-4e1d-4582-8b37-89d319e6e767",
        "cursor": {
          "ref": "2372401d-ef53-4844-9591-db1a372d8c56",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a5697578-4183-41a7-819d-34ed36b5bd0f"
        },
        "item": {
          "id": "fa0eeaed-4e1d-4582-8b37-89d319e6e767",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cfe9e509-7bb4-4cd9-af57-1094b8e3fd5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0eeaed-4e1d-4582-8b37-89d319e6e767",
        "cursor": {
          "ref": "2372401d-ef53-4844-9591-db1a372d8c56",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a5697578-4183-41a7-819d-34ed36b5bd0f"
        },
        "item": {
          "id": "fa0eeaed-4e1d-4582-8b37-89d319e6e767",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "cfe9e509-7bb4-4cd9-af57-1094b8e3fd5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbf7119-63c2-446d-a08a-dea15bd17400",
        "cursor": {
          "ref": "a7ea2f2a-ec63-450c-b8cd-321569ae3f39",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "783d735d-f427-4d5c-9a45-6f11aaddc389"
        },
        "item": {
          "id": "5cbf7119-63c2-446d-a08a-dea15bd17400",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "e65f0699-0240-4ac9-899a-6914798dc414",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 267,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3056bdfb-09d9-4ad7-96ab-1533c534b8a6",
        "cursor": {
          "ref": "71821cea-b0bd-4316-aaef-5868ffe856fe",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1afeada7-bfb9-466e-9571-9565f942fe52"
        },
        "item": {
          "id": "3056bdfb-09d9-4ad7-96ab-1533c534b8a6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "44953020-c146-4648-b792-9ed5f7214a6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3056bdfb-09d9-4ad7-96ab-1533c534b8a6",
        "cursor": {
          "ref": "71821cea-b0bd-4316-aaef-5868ffe856fe",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1afeada7-bfb9-466e-9571-9565f942fe52"
        },
        "item": {
          "id": "3056bdfb-09d9-4ad7-96ab-1533c534b8a6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "44953020-c146-4648-b792-9ed5f7214a6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587e2278-25a0-4c7b-b3d4-9372095af4ca",
        "cursor": {
          "ref": "ae9f7997-f475-4b0f-a72b-1d6e15672eff",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2304c66c-eeea-460c-a1ec-d9a62fb73cde"
        },
        "item": {
          "id": "587e2278-25a0-4c7b-b3d4-9372095af4ca",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0cc23ced-ff40-424d-8162-14cc10c81028",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 461,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5bd4dd-d07d-40f6-b367-df76bf7f24ae",
        "cursor": {
          "ref": "d34f74f2-484c-439d-b910-5dcd895bf455",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cd5409b4-4253-4c25-8e88-3591d58ed312"
        },
        "item": {
          "id": "1d5bd4dd-d07d-40f6-b367-df76bf7f24ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8c7ce4a5-9408-464a-8e66-e181cb09f5f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5bd4dd-d07d-40f6-b367-df76bf7f24ae",
        "cursor": {
          "ref": "d34f74f2-484c-439d-b910-5dcd895bf455",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cd5409b4-4253-4c25-8e88-3591d58ed312"
        },
        "item": {
          "id": "1d5bd4dd-d07d-40f6-b367-df76bf7f24ae",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8c7ce4a5-9408-464a-8e66-e181cb09f5f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ded6755-edc9-4e2e-a8ea-5fafe5c30608",
        "cursor": {
          "ref": "446fcdc9-eb28-41b8-9328-36b220bd6266",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "240714d7-11f3-41d1-8d6f-adeb56e4eb30"
        },
        "item": {
          "id": "2ded6755-edc9-4e2e-a8ea-5fafe5c30608",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2fc9907a-5f00-44ef-873e-7a2a6338a07c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 499,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}