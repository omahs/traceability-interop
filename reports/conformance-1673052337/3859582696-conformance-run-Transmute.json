{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b48cd9e4-f262-48e8-947d-153dc3a694f0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "158fd8bd-ed47-4f9d-b96f-6958936871b6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "008be675-5d39-4f5d-b69d-81dd98abb4fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9749271a-8aba-468e-91f3-351895dfa52f"
                }
              }
            ]
          },
          {
            "id": "bbfbb089-abb9-4989-9fd6-a7b29ba17f8e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b2ca1d1-4712-43dc-911e-1e55d9f033df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "735cd181-db03-4d9d-86a4-52f43ac44bbc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "f1e1edb9-0c55-4dc9-86a2-fc7b05d0a6a4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cf88b57e-8716-4cf8-87a2-0d2fed2a463d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6951aac-b26c-45a4-852b-646ac55038be",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "104cc2b5-211f-4292-b7f3-3d1a704f5e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b2456dc-5cfb-4c88-8dfd-dabe5be09f79"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c44a2ce-f4d9-4928-8623-90cf5842e625",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "acba6719-b319-423c-8e75-7b41e60d69b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "be12fdd4-92c4-4e21-8e63-e23f1256b1ea",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6273a3a5-21df-4142-a3e2-e7c36054a993"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9aa3220-f8e7-4478-88c1-a10995134699",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9aa5d31c-2ba9-42be-a0f9-e416dbcdf9ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "258c6353-a3a5-437a-bc5a-e9ade1358043",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c56d9b6-6855-4bba-a2c0-a27347a12963"
            }
          }
        ]
      },
      {
        "id": "e04a5c9c-80a3-4939-9868-edbace31c6bb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "40e8cd17-0ead-47d3-b169-e108fdbfc03a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd724bf8-8703-4229-9a28-1bab33259577",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5235e375-e4dd-4c61-92e9-df315f17523d",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19023dcd-7f0f-4bdd-933e-8c190c5f8766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "088f640a-1800-4619-963f-f1745462f631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9cda9d-90c1-49ee-ba80-84fabda337f4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb570ff-f873-4d22-95a3-ca84166efcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f95532d-8bb0-4d6f-8213-0879d81a3924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bd6319-a9cd-480b-befe-aba6f6d63cec",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5336b2bf-473d-4862-bba9-e9c5a55b8386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfb3af9a-a286-45d0-9276-c115cd4a090b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2589ce1b-a775-4e19-ade1-da3181835e5f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76ccbb88-9830-40e7-91c4-a50a5fdf6e0f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9934debc-e4df-47f3-9a74-16165f6f3032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "189b6706-b88e-47e9-b366-27802ac17357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc3ae93-fccd-4d99-9ffd-4d8422e8ef5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94400ee3-eaad-4dc3-9a2e-58861a16b8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7e1f04-1209-4640-8c4f-e4b2deb5a21b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeff7b3-edf5-4c01-b6b2-a343b93c5ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a8a8dec-d75d-489a-b881-fbc115bf7f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6472369-de81-4a28-8756-6c5da27c00e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "2a091275-f613-4061-b80c-868c9f91bcbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d2c95583-118a-4d28-bdb4-bc3937052ad1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8902cfa-042b-4174-bc71-a743a3ecbbac",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5e47899-1491-4c99-a5a8-a1fedcf5138d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e15f6048-e088-4465-8b55-fc7049375b7b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f383185-8e21-48f1-8876-df9104398111",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1d13468a-8a77-4332-bf84-03b1192f37dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19ef729b-ae9a-4f26-b148-920480e373c3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a398bfdd-03e4-4644-ab3d-f26197fca143"
            }
          }
        ]
      },
      {
        "id": "ba97fb59-a275-4d04-82cb-5ab6a8e4c448",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0bfdb757-30be-4a27-9775-b5a8843f333e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "737e6d34-e474-479d-8d1a-57f81ab79a66",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bcece53e-89a2-497c-a4c6-ac96625c1fcf",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc97ee80-326d-44f7-b146-58ccda7293d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1293ae8-1935-4e93-a87e-88ca647cb951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d27263b-e219-4154-9f42-ed2a80e667fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a51408-7517-427f-915e-4d53fc4944ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365819a0-04ba-4f51-a0a2-ca539bc3e8be",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0f4208-6d9b-4981-a24b-f12059e15122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb1fc7df-f3c4-4db0-a5ad-9b3cf99d3845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f5f6c6-5af5-4776-aaab-f4377ce9d331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8c16111-4611-4d01-95b1-0626c3d26064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78eb440-a030-497b-9a0e-6ca3f72f59c6",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41b425c-2509-4a86-90e5-ee3fe884f746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60183037-9bc9-481b-9f75-a6816e68d141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68850ba5-d648-489f-bca5-ef71ceec99c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6f5adb2-cdb5-4ae1-99b8-76dc3e02fe52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7493cff-6984-4b37-a20f-d54ad35b74de",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0aedd94-f618-4ca5-8b83-bf5fd58bbd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f0820ee-6bd9-429b-b0cc-ebc01072889b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f124b5f1-746e-4244-acd3-d9d4c18bd703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b2f15b3-aef3-4bee-81e8-ffc2f9219327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177f4d73-8a66-4c1a-a912-a0dacf8bdaf4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f970cd-d0df-4268-9e9d-dabdc21a8a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2656e7e8-dce4-4dcb-8bd4-0cbf7977cd2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b65b99-7b37-477d-aade-c064aea99533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7135041d-460d-4191-b224-5930620f2507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8aa5e05-0d06-4a34-9df2-85c8932055a8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0c028a-7edc-450c-b58b-dc9a837454ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ff3bfc-9f34-4746-98f6-640c636f9ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4936a8d-3b02-4239-a4ac-e830b007b5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81d239a3-4353-4bb0-8ec6-7f0eb85ccda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fbafdb-2c56-44a9-8e6f-a6bebbf627ab",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5700b6-9694-4c09-919d-4236839939d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4704909c-95a6-4b26-8ad6-f3474e78588f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782e6541-8d41-4cc6-adcd-5b307c4eb225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3a3f132-17bf-4385-b8ff-d7ad0642d70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bd57d8-23b7-4fee-9ccb-ad149cf71e05",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c5a120-357b-4ebd-a387-2d3a3d3d7e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1616dec8-1ad0-4f6e-8526-ae045194e7ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4d2372-d7ce-493f-97f6-743ccdfafe8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32242664-e5b0-4866-8c4d-859f4fa47332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6a9ca0-f51b-4611-9774-7bef44bf58a6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e0e729-47ff-4002-85c5-b406f858304c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0941955-a9af-43ba-886c-d72fb49702f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a956de72-6368-424b-8a85-544ac643bfc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73e22a64-901f-4fe9-8a02-5e5ce9f1cff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7963de3-1020-49b2-bdd4-55be8a304917",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a36cd13-d936-4f65-ab1a-f78e011d119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fead34b8-2e50-4312-a72e-39e4f4cb72e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c73a387-5c6c-4d44-b5f7-d8b0f52d389b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a23a9d25-c4e2-4d5d-9b86-7a211ca9a5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5929f89c-9f9b-40f2-a489-402fad4ddcd3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e6e869-7cb8-406c-986b-bd5bf4f84758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1c6af5-93bc-402d-8d8a-cb0855824bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d2de21-81ef-4944-b3e5-5f431683cba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a2682f0-642f-4b39-b5e1-e902eefce5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6282f08d-397e-4ac1-b102-2523e5b7bb1d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d4336b-f903-4adf-b0e6-4154f4f87ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a459ca43-4c57-4144-b521-2a5991d186a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717c6193-3dbf-4d10-8fe7-06bd3bf1b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de44cc8a-9009-4982-b198-279a676dc433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834bd92e-f087-40d8-99ce-2997cf843afd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77890b9c-9aec-4940-ba51-8711dfc68677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9084a5e7-ba6e-4a22-bcab-62a96d7db018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde46718-8273-4a29-9bb2-4472dbae063c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dac0a900-df74-43d4-ae48-cd55b512cfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c8c5be-d4bf-4bde-b8cb-e9c47e5c627a",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd8b182-c390-4055-834d-abf9cdf36e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c32f96-9d80-42ec-9617-f7c0462f507b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc0b163-3acb-43b1-8f12-a373e4a10dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c43d84a-421c-4bd1-a8ad-d43960f8e9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a33462-7b89-4137-8bb7-148d50b50b8d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8791a600-7638-4d10-9870-ca0a0db4cd28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbffc619-4f8a-4385-a751-c2aaa9645220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c79a15-2296-4624-8a77-170f31ae3e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b2fb3ed-9cfe-47b3-8992-957b9f4e45f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad7ed5d-82d2-4256-822d-b3f04c407322",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654ad450-fcf7-426b-bab3-3d6d29c06812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc0fc43-d5b5-4edb-83a1-6ce694cb3c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f25ed9-7817-42ed-8ecd-2b8edaa31a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a9bdcc8-8ecb-453c-821b-6e53994537b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7751dfcb-9c46-4c38-bd8f-b390f6454d70",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49a26eb-6870-411a-9954-cfde6938531e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca7ba14-cebf-4a2f-85f1-e776be4554af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bf71ab-9f25-45a3-8066-3b4d1abd0aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56ed47f1-dbdd-4ce6-994c-6d271ed51f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa63f3b4-13f8-4f8e-b71a-b17b42b93a68",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f732e9e8-d2a8-4a2f-aa65-df37997f4522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8e811a-7930-404b-8b35-fcf2d2cf248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c11cdbe-8b59-46dc-9d37-b69d3027e513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7770e9b3-09f4-4602-bc16-ef953a7b0974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32138ad2-c878-4f46-9a4f-be970f723a72",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e158ef28-8596-4a0e-b36b-8620c9306f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76c4ca8-97d5-4975-812a-c1d5599eaeac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918b597d-1e01-45c7-a797-8e7abb179a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc639543-b1c5-408e-b027-cecbc8fd0e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059d35b-355a-4ec3-acb0-3cb043a92f39",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad649b5-11ab-42fb-921c-5c0bf8a63cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94ed3c1-37b6-432f-84f5-e5f889c7d934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea024984-8a5e-4998-83ca-1a34fc146a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06bcea1-f36a-49f6-93f8-7dc079063932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d32f755-8b87-417c-9130-c281013c20c1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2beaa005-ddbc-4704-a12b-5bee5b08aa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba56b57-ff3d-4fb1-ac69-69c466fd772e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20dfe59-7c82-4fe5-96bf-4373c95cbe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee518f7e-7550-41f1-92f4-c4352906c371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebf16dd-a248-4f61-b2eb-9d6649945a2b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37de6810-1012-4e29-82bb-2ee22da9c3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be237e24-5562-4ebe-9c94-466b0f74af2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7f2715-6c3d-4376-8aa6-1b9310d548c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e50870a-9c65-4302-a1a5-c0affdee9bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79a2c78-867f-4354-8792-73020b4d97d9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740e1f1c-ec34-4535-a7ff-b5de1b31f338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c621ca-7f10-4860-9bcc-d14a020595cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77c3cd0-f7aa-474c-8739-1887918e349e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "065b2e15-0861-4718-994e-919a2385e992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216b36f8-78c9-4daa-a132-85851135b679",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ec379d-9104-4a33-86aa-3c966366fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0eafa7-66c5-4255-a73f-a4ece3ddb601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cbb5f3-5c3e-46cd-8d66-5a879ccd8f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70e0ca62-2b70-4a65-b2a1-75a042bf37e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6adedb-e127-48ca-ac02-27a46d4f0794",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f77003b-7968-4735-963b-4bc621d396a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1294a437-6bbf-4c82-83f4-e792af8491d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a5a192-09fe-4959-88d0-d75c7e4aec5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5662e055-410f-487d-a93c-93fb02c097a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ba69b0-83cc-4f48-9e14-65a0816e7ea5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a5e72c-cd41-4da8-9729-06a02d136cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514d476a-18ff-408f-b82f-55927917bfab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d5a7a4-01a7-4d44-8d02-9de8c66ef0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f0c8c3-5f42-4ae0-b375-1db023f223c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4342e9bb-7e64-4337-88d1-7393853428c7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d255381-5040-41e0-bccb-ddf61bfbdf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28cea73-247b-474c-b7c9-712bdd16be29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5b2635-8fb0-4f42-a00f-b6258ef24113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97e69ddb-0681-45c6-897c-2ef2b6f48a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81db5ebd-d1bf-44eb-94b5-f41b13fcaf00",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c157ea69-441d-4cff-b082-d1923df1935f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f29fcb-c9b5-40da-be65-df242ea08fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da60763-b7a3-4f84-8d8e-bd9b241f8a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f435b7-9b36-459a-9f76-0e46d49054ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38648a6-5747-4099-9f30-dda891e3d8f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346ef5f5-0357-41d5-a463-a4017200bed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb584514-ef40-4a3b-b84c-153ce76f6170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d6b928-197c-4e8a-aaa3-e79062ff99a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef2ee0b-c2d7-4e61-9661-ee789b6aaf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ccc758-c98f-41f7-a400-640c71997c34",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f808bf23-b98e-4452-8935-de0f98c1416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ffcb84-76bc-4de9-8e2f-0c4302eb8ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1193904c-3b1c-4662-9700-009e73c40229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aba81d1-8e79-4a2d-9c0b-fa1cff291825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b442d5d-35ad-4afc-a635-307a3dec1941",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055679de-bbea-4914-9c4c-b49111e53368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8036d76-bdc8-46c2-b81e-d2320baf2460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e02a6d3-4ba9-447a-a0c4-312a28586f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d13c1355-af20-485a-ba31-48dfb1c9b90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36d5100-d665-48e6-baf5-929c6fc1f1fd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef9addb-a0b3-49aa-930a-351b417fd112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc1f8c2-824b-4483-96b3-e8c9b35b00c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7ae9f9-79dd-4635-bb56-e0116d0a90c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c23998f-66a2-46c4-b8ea-f31908ac25a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca64b84-1245-4216-bd6c-615ec90a4ea2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b731f46-f6e4-477b-81d4-40e379e525b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4a8486-627d-4d44-9fe4-647c444bcf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b85652-3723-4111-887a-36122e7bd673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92e61ef4-4d7d-42f4-8127-5f18cf95de4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af8fca2-41ee-4b56-b950-02ad1c5720ab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0750a5fd-0c18-45e5-91cf-46e4efbb4e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1c629b-a237-45ec-a836-bbee0489ecd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437e7a78-0d41-42f4-bbce-d1ba537cc52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "011c42a1-0639-44aa-949d-58f8473a4276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdb3e04-32a2-411e-9b4c-ec68660e31fc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51ecf74-fd35-42a3-89e1-054c006e600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6bd9b0-f907-462c-b0fc-910b988adfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84334ab0-7198-42ce-b794-f55b0e4f902b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7160e725-6c1f-4d54-a197-6e193cca6f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0c8867-c1ee-4f07-a58b-df928856dde4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6027ed-135c-48c2-abcc-ecec32e25c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2047f40-2b5d-468d-9d63-6b394b18b7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9824b8b2-219f-4911-87bf-6e5f7aa60abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c21fda90-fdc4-4961-a6a6-93dcfc586092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbdaf81-a4df-43ef-a760-4712d928f0c3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d117e22-2a2c-41a6-bd91-f4d989bd5b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b01c8a-de40-4370-8880-3a388e0fd7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3565ac6-d562-4b99-8b7b-cca1b524bb9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2e579c-255f-40c4-bd82-9a4fc4b0feb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790b1f1c-df02-4e08-b003-3ba204601634",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42bebb2-0f84-40c7-bbec-aed440f42cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9844a9f-711f-4c74-b150-02d8d7133885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f2e9b1-8238-44b3-b3d6-d08c0da55230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "82fc8990-f470-4237-9aeb-3353b3db10b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990e7e4a-f1af-4bbd-9459-89022815218a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9dc593-2ae1-48b1-bdca-4021f4a2e6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5766e070-2bb5-4a3f-b4da-0bd581e74216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57717269-5518-4534-9159-4217a1fb68e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "570de534-0364-469b-ba55-a5b147fe0aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f655c46-8500-496e-ae76-e3a7bd248564",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190f51f8-6b67-43c0-b693-3034b1e2e575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d71c5cf1-cab7-49e5-9280-15c2f7a16b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81abeaa2-ead3-4c39-ad3d-9ac9bb235ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "68d4f0a1-dbf6-465c-b415-0e66253e45c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c534bd7-2364-41a1-8fa3-559ab5a346f4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312c845e-71c0-4b78-8c5c-9359629ff660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be1417a-a85b-4c81-908d-62b886d7276c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e76280e-22fa-48ad-b0d6-f03013a16154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62a369dc-9406-4a02-aebe-77da79aafe02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df477fa1-a343-477c-bcf1-da1bc3bd124f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63824f3-37dd-4cde-8919-f194202390c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83e03ae-4ecc-4947-837d-12e7546a0760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19eeb94-b597-4bbe-b615-5e7f4dd16f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "25d4866d-9a72-4b34-9768-031051c1450a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82f67f1-eb44-4e1b-97d8-c3b79464809e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173db340-3267-4d19-9840-4b277f60b15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289ce298-ae82-45c0-9d61-aea2eabdbbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147b51da-49b1-4142-87b4-9ac95f8fd750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffaa8f23-f2c4-400b-b51c-d9c7c645a350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9456377-0686-44ac-a189-b92456b53907",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d3c431-5e2e-43e6-a23b-76c1c06dbffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce003dd-e459-413c-b07e-3c0328615df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bf3867-e864-4da4-9f04-63c35c4b0cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a29d9744-ac56-47ca-a860-24bff816ec56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5192f7e-8f58-4df9-a118-37276084865b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dfadb4-05c3-432b-b28f-0692ead5bd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d120ab2-6b4c-4a60-ae1f-d2124681c967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f51ca6-8519-452f-b921-3422cb614782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae86545-0e33-4d42-91bc-81ffd07110a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9da9f3-b743-4546-90cf-0fa4d180542e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9bed0f-0201-4abf-9ba7-f31c89896ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b35a8b-c07b-446c-9a5b-1489854a35bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a76160-239a-4b76-a45e-3310987b0b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "088cfc01-6510-4152-842a-ec965f9acee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cb7910-12ea-41a4-a8a0-f017f90b725a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b209ebe0-b0b6-4548-927e-b49882a40ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a349f3b-d3fa-4244-b8ab-9b9410532058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606f648a-933c-46c1-983f-aa60c687fd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43d6ca22-1fae-4f25-a237-1bb64a9d2943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae43c5c9-8b51-45b1-80cc-ed13751255e0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef8f505-1d0d-4246-b3ac-9212893504d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed2cfb8-80d7-45c5-bb6a-6ff55e835152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332461ee-8878-470a-91ca-29b7d86c8fcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca2fc0b-420c-4b98-99f3-562a64846b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6e40fb-6856-42c4-8afd-ffc83b104dff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b805d5-32c1-499b-b831-ecdb51baefd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53950437-02fa-4a67-aa56-2cc23cbabd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3471bf6f-726e-4a3f-a84f-c5707aeed61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5478cb-d8d9-4ec0-a23a-8c8b0cf5d6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106eb345-90e9-45d4-948b-64e3a42a1bef",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84af616d-91b6-4c59-9ef9-0a4890ea03dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec4bf09-9642-4909-82a6-f20079a228a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da98757-c4b9-4dbd-ac5d-9ed460ff6a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d628c05b-ca46-4ba7-927a-43d07240422c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047af138-a960-4087-82dd-910fe1ed02d2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad53a189-514a-449e-89dd-71627d7fac71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e4283c-12b6-421e-b76d-af68d4e74bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ebbb7e-b01b-4c11-adcb-d386bb297efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d441c4a-e404-4c5b-86fb-15d19b0734d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bdf0e3-1755-458b-bffc-4908135caf10",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a0b6bf1-3a9f-4ad0-8b8e-fbb1955106a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a47d7ebb-7a4d-4294-8a6e-da8d146281c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51990d7-6611-44d3-b7d4-2f6d9dccdc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35f50659-bf1a-46f9-87ac-eb8543d8be8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de149e1d-fe1d-497e-a78f-b23113b76fc1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0541bac6-20c1-4f02-9fca-58177585b4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a61590-8ff3-4de7-9e4b-1ffc7c972ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12300b80-6434-4f00-a8ee-a540bd9937fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af7c494-f1b2-4f17-b3ba-b1647d227959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119d9c43-0e30-475a-9141-3a2a0e9cea83",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2e72b1-2680-4f20-a688-088ede4c111f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e785bc9d-1b64-4e21-8ccb-4a6edae12823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7184613-183d-4c51-a614-c633e6b1f22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3539f99b-5f91-4ab7-bdb4-e42b5835626f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090e3d73-272b-4393-9c92-694d011b0fae",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e84ef7-f667-488c-9c36-fa9a7ebf2938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dae066-7665-442c-b59f-067a6e9749b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c9903c-4691-4e08-8ea4-13a722bb86f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b17bb90b-a7e0-4ae4-ae6a-6c2744957579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a5df5c-be2e-40f5-8e5f-b9bc370193af",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f5c0f9-6069-4841-9943-4ccac38dc79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd23d90b-145f-421a-913c-e0afb2758693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c4bd53-b073-4505-9d54-015cdffd72cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2764fe-be82-4d64-a325-ca5d17466ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccf9684-3f8a-468c-814d-f34e7505614d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8dd0c1-7a71-4cd4-a7cd-bcee349a48db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf70befb-149e-46ac-b7d1-5230557e1faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caeebdc1-635e-4add-8591-64e4b3146d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77bf427-2449-4a46-a29f-18858b737576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea491e1b-10b9-4db4-96a6-ab160b561faf",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddf6a37-da75-4ff8-ac79-d187e0f2eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4245a89-a4e8-4a50-b83d-047259988e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c41011-74f7-4127-8732-e3724165e428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8468140f-775e-40aa-a4d9-bf5e8283d39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40abb2c9-a403-44b6-bcd8-60fee0839e7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4de1ad-1262-4b96-816f-e9ed509393fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df7e3d0-f243-4160-ab34-11e35b7a3a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93776d6-10d7-4f8b-bcaf-d937aa460dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c60f7be-74a3-4578-9921-82c526b35023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89be8e1-6952-446a-ba46-b21a732a3070",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061fb7f7-fc9a-4320-b7c3-7a61e2344dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55396fd-5675-4a19-8af3-7523672cde72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a64387-c65a-4902-a5c7-420294aa455c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f330cde-6dc4-4f5e-8a8a-100d81cf9cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45643035-b3af-4700-b47b-791e661ed996",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c27f884-7d09-4d5a-94fb-b692c77ebb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7b00a6-ef81-43e3-8bcc-81eff523bbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e2f90a-6341-4252-b024-010594baf263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c3c8f0-9052-466f-b12f-3d68acf03fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf86d006-3629-4295-b005-411c486fbca3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4435d8-cb89-4d20-9e7a-11dba0169d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f303e2e2-c9c5-4b65-b77c-4a4c3d81f41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4739e7bf-4977-4be0-8275-f8e67008a812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "830e0e61-62d7-42c9-9e8b-5061fce52e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a88fdd-0600-4d24-995e-96e300da30f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479ad9b3-2e47-4c81-993f-c69de4a58315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9353870e-9ea9-47c9-9a4c-f5a14cac8218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97da335-d74d-433a-95ae-ab53f7024812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b50619ac-8a37-4a3c-908e-d062af0d5aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e309c6af-890d-49b4-818f-f6cc6384f972",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fadf544-af63-4ea7-a68c-e9435cdbd724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa5c7dd-3101-4f7e-a582-833d22bcd3ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f23563b-4b82-4ba8-8e88-e234f0ecbd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b171a26-41a9-4f0a-8602-95ddf20b7efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4c304a-5ac5-422f-a676-83e5f87b343a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11bc6cb-22dd-4b0e-81ec-9dafb6c3f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5439c94-3c58-4723-9902-5a99694e650d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00afe7b4-c77e-4808-a2df-324fb8b2a3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbc1fcf-57b5-469f-a5a4-89dbf344aa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d94ce8-a609-49e7-a32a-60f74762bf96",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eab63f-38ca-4e23-b920-394a47f47f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2525ff-8e3d-468a-ab23-d4201e8b24e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d17957b-9777-4cbb-9a00-cbc82b373a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d528d26a-6a06-4452-a2ac-d8c49d785ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e716a0b-1007-4a11-b74c-dd10513bca0f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a02b18-2f8b-45f8-8781-e1dbf8b5c9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "937402e8-7c54-47a0-9b01-a7d87fa6583c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6c8b6c-e961-4f1c-8f02-1d493df4688b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a53eb7d-8f18-45c5-83da-cb9a03c59633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98199d17-ec11-4d65-b586-4d9c06b68b55",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdf84fd-e39b-4c03-937d-b560e833e06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdef9ac-1078-4cc9-aa17-3a282e929492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a7c3e4-0511-424a-82d6-7268a76bda59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde13adf-23bb-4c8f-bb72-d5620b2b88a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8ac3da-8ba2-41c5-b3e2-38a6b0f9f2c0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2c6ff7-6347-4986-a00e-3f32fb359caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028543d8-6fbd-4cba-9806-99746d52efa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73125ea7-04ef-434d-88e6-dc17823a71aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a337b41-8890-4665-8477-9cdc7ecd35b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "140f7f80-e590-40f7-8f3a-cb4baf84e508",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a53ce3-3651-41e5-b183-6123a6ca265d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6373379-893f-492a-8d94-358835618ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7900af5f-c415-4acb-805e-73c00ad875fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6094113e-319a-4160-b343-0978da94abf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf809b1-7da6-46eb-b08c-30711407bbd9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8522e53-a023-4ed7-b681-0aff5d329000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b29c42f-b7a9-45d4-ba73-8deb16e74296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129521d7-339e-467e-96b1-58ac729fc0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fda906-0d77-4fac-a53b-c7214171cae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe2c5a8-bb27-4154-83c6-46b68c46c929",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d3328d-2e8f-4c7b-ba1b-0b09186d919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8500d7a-9865-4882-b677-d5362ac19ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84914484-6c96-43fb-b130-8427e0a09665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb0905b-5b26-44ee-bab7-b254b4ff2964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b639cb7-007d-4600-a15e-2197a7404ce8",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3951b8c-5996-4de0-9ff5-ce7d825fcc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e40926f-5ba5-4614-841b-f683fe4c9113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7377ad5f-9751-4e55-804f-aaf5423f721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d4dce6-e51a-4d4d-8e9a-e75472625bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668df0be-85e2-4f69-9096-6a9a6fc4e484",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77251b0-5cdd-4a30-819b-a905f2a7dd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c30529f-df58-48d6-84ca-a81c7e603325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71825ce-8228-45ae-a425-138cf5c44cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbae87a8-1df6-4e10-9d37-150dec385f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b00c0eb-0e95-4632-b4a8-4596a4fbc432",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f021b78-d6e6-4310-8d1e-80649fe06ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22378d7-1c44-4b72-899a-c25a2c977eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1c2ad2-7859-4af7-b84b-9bee7ad614bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd946567-cfa9-49ec-80d6-315d87cae05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e5b768-34f8-45c2-9ff0-a2e6bc0c8ce2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22770fbb-3d8c-41c4-9520-6b901beb77b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4b0367-bf30-4518-a4ed-8094e2d1c309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac9d89e-7b74-4f5d-9fa3-022016ed52e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b198cc2d-646a-4eb4-b34a-efe1c006ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf07b1f6-d78e-419e-a732-37bc9784faa6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f14dc6-13ec-4765-98c7-94819ebbeacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d931deee-e9d4-479b-954b-7ba002cadf56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372324c3-9aa6-4a64-9e8d-788962bcf2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6c3868-c203-4524-a23a-7427c2f12c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c4c594-75ce-44b9-86d1-f65d7d036bb9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30eb9052-721a-4770-9bbe-e62129509826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7529527-291a-4ad1-9c4a-869a1391ad91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300f5b74-c493-4f11-a4c3-55d4fe39179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3284af-0460-4956-977f-eb2789affbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30ef102-4f3c-4556-bb61-c3a62b96e060",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8318e2fc-2fc8-46eb-9e11-2170ffdd8934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be252e4d-16ae-4041-8cc0-be9d13c67c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0023b23-1165-4723-8ad2-4fcb4cdc5e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b71f5b8-7c7d-4783-9e04-0985f96c0d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf02492-dc99-4df4-bdb5-b98e0829d2cc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38d98b3-7fbf-42a5-b031-469cc76917ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9e557d-0a3d-4a37-acb6-b71c1a140ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ae7d0b-5c09-4c3c-90b8-fa12e2a4ee84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e69a1c-4d10-4d43-9596-1ab6d0a3e15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a167dba-5bbf-4fac-8bf5-11b6b2e2a5c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7169b6-d779-45d4-a44f-8dae26d5e8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a186fe0e-d8c1-482b-b063-ccc4555e97d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d95da4-7bd8-4ebf-901f-7d8e1fc8c7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60c97af4-3989-4dae-b934-f06e666cb90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5d47ce-80d7-4d64-a5fb-1a0f0d8a9701",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485afdb1-aabe-48e6-b366-ee52d6cd0dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bddb1b8-c621-454d-ae07-76aae4833ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9170c24e-f123-4230-b263-9a2e7bfd5784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6384309c-7d8f-4c8c-a8db-7d4c6e3f8a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9671b6f8-3d92-485e-b170-f195d953d7f2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04dabd8-4fa9-47be-a979-fcf9d70b067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e8ae1c-0515-49e6-bdba-45d90356f7d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3923113-8881-4c17-baec-d9f79af5d7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e39e85fe-aa95-4ead-84ec-243539791f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d126547-4578-4454-b23d-ec7ab1aed524",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "027488c6-2c05-4287-bbfd-fc35e25c0e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbdb5c0-2982-4eb7-ab77-4205b47ee2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fdb351-33bb-4321-b500-4497d9c1e4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "526dcf75-d8b9-410f-bb73-37d21cabf5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a2e048-15d4-4cf5-81bb-7c36deec1d90",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3b3622-c40f-4358-9ffb-56400e9c4ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36842590-c237-4c1e-a4e2-45f59d562b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05841438-bfcb-4135-8f66-aa481a6e6104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86c10fd1-d132-49d0-9736-417c20039873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff66dfa-d2b3-46b0-b4e7-155418ae53a2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95411f09-8c98-465a-8a8a-7269ea0cabd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e219935-184d-4467-b829-84a0918884df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af49897f-6499-4db5-b6af-dde62e8501af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a66f98f-81cb-4887-a6af-35ccd9beab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3139d218-53bd-4670-986c-502a4351768b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf3e3c8-66e2-4bd9-9827-7c2378fb3f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f3d1fa-895b-4e3b-9f20-bcf553b4e260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed736af-c43d-44f9-a220-1c9649a52031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ada1a09f-9121-45e3-8158-12a3dc484a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7a1743-2402-4c45-8625-ee7d606f50f8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f38a85-57c6-4a07-b943-bddfc2dec6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e710011-05a1-4894-a557-c8348b238e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd67d202-4794-47b4-9895-be54346f7375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8bb827-5c94-4898-9ab2-5af715b9588b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee3d404-9163-404c-87e3-ea4aa1084bb4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8886cd2-081b-43bf-8e12-6051e0ff55c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c00d4ad-ff17-4dfe-9440-82de7eff74d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffeea99-c069-4346-91a3-768abf38ea5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a56f69ad-1c69-440d-acb3-7420c192e8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d55f1d3-a704-4eaa-b458-40fc63ec4933",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40431914-76de-4ef8-97af-f44b3155becd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa64d499-8fe6-4f92-beb7-d2f046c5aed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c78e87-0129-47c5-bfaf-701c89e50954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "64605b83-c53c-4afc-a224-92d174f7d6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130f5bc0-7a85-4cc8-b025-90c07919463f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4803ab9d-0273-4917-af97-4af9cf06f6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8797606-1dbb-479a-9ba5-54aa599e5852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab059052-332f-44e5-a5bd-e2ed19f77ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d89778f-50f0-44e9-9fa3-e5212e8bd86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd676961-ce2d-4f1d-b941-470bca6e7170",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9c85a0-9bd9-4099-a635-6f01851c72d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e49a1d-4b37-4603-8a66-2ae2bf93c220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb343850-c735-46f8-bc92-7a699fd7a61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6426f2b-d085-4a4a-bc48-f9db1fc36d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53296de8-ff77-42b3-98aa-0c6c8ccebfa7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03466223-651a-45d9-972a-23c158c4de08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1577479-8128-4a77-a410-026359abf694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575dd7b4-0f99-4681-94fe-c3ff0d58bdb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3576f7-1871-4124-a229-f7e1aa416662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb20b89-596d-482d-b9f1-37d405b64845",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa23df5e-1df2-43cc-ab03-4e5cbdfabc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4eac4b94-da7d-46d5-9465-6bf2d35818b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9b910e-aa5d-47f3-a8d0-2ba2caa82944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5796be01-f284-456f-a05f-5c9af4c831f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9074245-5ef5-41e8-a096-49057c71a536",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebcb7727-525c-4a38-9928-4af998686c18",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5e310a-a83b-4acf-8c2a-dcd764da1f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b66234b5-ebad-4f51-a25a-1578a7424641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d16dd0-77c6-4bf3-ac65-56977ac5c747",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "7f628414-5298-42f2-8a73-310e3365a055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f635bb13-20f8-46da-b50e-cdf597fee627",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5ac516-1da0-4908-96d7-cf4fef2cb985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00edd398-1046-49eb-a982-919c9e8dc713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756a2b26-fd34-411c-9a91-14f70582f41f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "f0ce1378-7d66-48e2-9623-91441f1cc354"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7d7263a-7079-446b-8704-b0bf7d1469d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3497c0e3-a7f5-49a3-9f06-abab9a5f8b97"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4f51ac5-933a-40e4-8a91-9ac6b8d55428",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9da9d0e3-3593-4fc7-8016-14f64c55a496"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b5cd5b6-a0a5-4eae-9afb-98a4c882e8d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "838d616a-b136-4c5a-89fe-6d70e94668f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf347abb-9430-4d62-b999-74b9668cd4c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95d18e4c-b423-401b-a9ed-30240a81c1d1"
                }
              }
            ]
          },
          {
            "id": "901c4014-fb5f-4023-8597-1f59299378cb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c73b5b9-eb0e-4282-900f-c44c623a7aa9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52bef973-cc0d-4bee-aabb-0cef21030f17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acec913c-3583-4433-baa8-1605098e9a3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a32b156-a3c9-412e-a3c1-356fe40e2094",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "abb4987b-5096-4fef-8511-28744d7c96f8"
                    }
                  }
                ]
              },
              {
                "id": "aa82af85-096a-4c0d-a2f4-e20b91098b6b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e1c9a61-20ea-4489-b243-fa2f6f85e384",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75717caa-f97d-4853-8107-24849d9d58d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc01e276-4878-4eea-9cfc-63410a301790",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "964e4494-0a6b-4892-ae3a-34d759fd7c72"
                    }
                  }
                ]
              },
              {
                "id": "558a29a6-ebfd-4297-9e6f-6c9bee50e678",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52945aa2-34c1-4950-a50f-f01bc66b54d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "517c7d4a-5b2b-4735-b46f-501e6489f264"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eba028c6-4701-4339-b6eb-7afeb438e7da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "10185d55-20c6-4d3c-b909-446ea3e4ac9f"
                    }
                  }
                ]
              },
              {
                "id": "78a838e0-189c-40e4-a7f3-a03d08c5f6b5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd62244c-f00d-4f5f-bb4d-1e5fd9a82652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65b11ecf-5bcc-4f30-9191-e7faeba1a57e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f523c886-1402-4c91-b10e-09ce97488cb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "da388121-2530-4efb-8630-86524e03da7a"
                    }
                  }
                ]
              },
              {
                "id": "faddee02-2e99-4a19-a126-a4191382aa46",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d2b5ae3-d699-45f5-a7e3-fee779ee3416",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c06c780-4a4d-4325-97bc-6c6ceb1fae7f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44e2f7b3-d5f0-4ab6-a452-87584b8a2cd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ecacaf2-6385-4e45-bb36-217d8ce3c0b8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a5b1afa9-6559-4696-a3c6-8e4386c4b8a8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "add158a7-f3ed-4ab1-9d4d-f2fb693c25b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4db61948-ab53-4468-b2c7-7559aa2b4977",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3693bda5-6a2f-4a1b-8802-0665637c154c"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcf3e10d-9b75-4e79-95e7-210f33243199",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7a967137-7313-4069-be4f-4ef6aedfd79f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67c67ad8-8a01-46ff-b093-4c833bb26358",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd9cccc2-0522-4f42-a0fd-183388dc85f8"
            }
          }
        ]
      },
      {
        "id": "f4fe7212-337b-4536-9bda-4668174aaba9",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b7835a86-215a-40ed-a06d-22fdf10504d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22272e33-b589-4e37-9f72-4ba30ff0d858",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38c80a83-7e30-41cb-9975-601b155743e6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ad634a-ff20-457d-ae2c-9d5c0528b7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a82ab5-d147-4c69-8f6b-c967b6f3e56a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda99b68-ce4a-4d74-8660-8657fee31300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1837c04b-3173-44c2-8acc-8c5044580740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5990205-0a13-4246-8d2d-fd7471235e26",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c0b239-7c13-4c41-ae5f-d46cbfdee328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a641a0f-f282-4ac5-8d6f-940cb9167e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1863f0be-13b6-4262-a577-20cd77b89c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "805a4f81-f85c-474b-aeed-16b44d1e8d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5bda4c-29d8-4287-af65-b043e22b7e65",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e666128-260f-48dd-8b24-9c327c759461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b632f714-e35c-4177-ac8d-e36ab30cb4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb65889-59ea-423c-9cfc-dd7a870340b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61859317-fec3-4975-ab13-0087f2ae7f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654a40cb-39a7-4216-a854-427db1320a81",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f96a90-0778-4496-8ec6-1a2a05543610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b3410ab-1574-494d-a9e6-5043931c952f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83fc7ed-179c-4167-8448-05e030aff425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b891cd-05f7-4a94-82d7-d3132c73393e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b7a8e6-b128-4c7b-b868-441d36d205fc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31d8642-00bd-4454-b6fc-3e51eea0127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527ff740-ae4d-4b69-9290-a99b1797631b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb37f6d-399e-4fda-951b-cd677d562cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2db09c-4a0c-4a81-a527-a14cb73ea410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b50c64-bd57-4956-b2e6-5724e4eb37d4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15f8496-022f-40eb-ad7e-eb95bc72f0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93925015-12c0-4e95-a39d-ec34b8a7d0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de55072a-9b9c-43f9-9e24-3638165dfaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e450b4c3-b77d-47c4-b512-324f8b9db6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f48e75-c378-4245-8cee-963471d62583",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3024c73-27b2-4512-ac2b-3b3a430d2c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c88f600-be15-4433-868f-536fda29373c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9edf5f9-9ffb-4e10-a4e2-5e5ae3c09e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0adebff0-6923-4e24-9dd6-bd5312f40501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5904ca22-f052-419c-abee-5a2fe8da7b0e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764b33ed-a7a6-4fbd-843b-98210549fb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69120f80-4b94-4092-80ac-c2118039eae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf05d4b-ed2d-4c60-b7f3-a7ffefcdcffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "331905b0-8f8d-4a67-bb46-9c7604da5586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc2b8fc-58b9-4de3-a143-b3fc26cfb8fe",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b02720-d676-4a06-91b8-8383b05c67cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f7a639-0adb-4630-86ad-131f39c4ea41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d85170-0d1f-4660-ba2e-7048c308cfd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4500265-655a-44d9-b3fd-5bd262a732be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7862e5b5-2b75-47f2-844b-42adb7261324",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d364a8-e266-4537-8a69-0ab4eb283ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738217fb-7d77-4b9d-9428-15789782f86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0385e63c-3166-4536-a6e5-78f8b5d8c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f97cbd0-8f7c-492a-b77e-e78a77ed919d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed87d396-fcf3-47d6-be86-34a021324866",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b73165a-177c-4adb-89dd-5ee6fc9f43a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d50404-a2ad-4a94-81fa-48d45caa8f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c37334a-d583-470f-b5c4-22e76c15ec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8b65fa-1e91-49ce-a3ce-73652fd59afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afec0d6e-da64-40b7-8b90-2d692e89b8c9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd0fd94-61f1-4403-b83d-040e60e4ee7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d51d7a-b76a-4fd5-9d9c-17c393a115d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8449a682-a257-4112-b60d-bea044f28df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce94a5e-07d2-4a31-9c80-0e2949663c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f8c89a-9c61-4c8b-9f0b-742688a948a8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511bd53c-28d5-4cfb-b456-2b8954654749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cd6717-f624-4df6-bb27-ad9e95235d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02133cba-3aff-4c84-80a0-0a18445f52f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda94e30-0947-4a7a-8448-00773f8c7de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9474ed81-03e4-4975-8d87-578191e6da53",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc26e060-68ae-4609-a9a8-bdf2f77e8da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e610147-d070-4032-998b-10f03a937026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daefdfa7-ed1d-4710-8190-b3639bbe7897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "12e5d9aa-2bff-44c0-a650-efda73b6af6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f17683-f5c2-4a60-8b9f-7ea7e0b6d5c5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9199199d-60a3-4441-9b10-fede32a26a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3c0a6e-40e9-429f-be76-86de4066da3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70c431a-15ff-4d49-843f-1902501d2385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1cf89e7-8e35-43a4-8f23-1d62d657c867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2f47e7-3685-47d2-bbcb-2cd352bcdc0b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97946d17-8ff5-4045-9588-a0696807998b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337d9d44-e525-4219-ba34-455f2a5a1d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377e92e9-17ad-4e61-b72b-de118b2a8d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0363d20d-9625-4aa7-896a-c2365e6c8b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ad381c-ef0c-4839-98df-640161a6949d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e85bdf-73c1-4b28-bfe2-ddbbe870257e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55a62cc-f3af-404e-9adf-f35a3c126bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be25625-0207-4f39-9f6c-10ee01e94bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1d0ff6-a1e6-4276-ac46-712910cf3c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cdc275-4ef9-4129-9eb0-f3ff854edd56",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58d94ba-3e16-4821-b70f-a39fd92b9418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8964267f-1088-44fc-bb9e-c68552024b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f9a7e5-c681-4dbd-ae7e-41be362ea0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b054216e-23b5-4745-a3e0-7c9bc46bd527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bba0f6-9262-4785-b6ea-b8fbc2ab3064",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3218ef-b0b7-462e-9aed-84c2d3e81f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01ae893-dc97-43ec-a5ee-6952cf1d515f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349a9fc6-1209-4fc5-9906-6dfe4992a2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e770cbd-6560-4c4d-91c6-8c8609152bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7045c6-9c25-4584-9626-be92a35e8886",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaedff1-bba2-4f4e-95cc-88fe36f99a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eac819d8-f6c6-4966-8c87-e7fbd9dba69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d85769-8619-4314-bdf3-2c2365fec262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "822dc2ca-475e-48f1-8bde-7b7a70c983b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28aab1e-3755-470f-bc07-1af5912e09ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081d7443-29e3-4ea6-a6a0-cdecfe5a8355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c73264-4afb-4ed2-bbf9-1127eb7e78c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b6e78a-bbaa-4e28-acfc-29e36122f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "408989d5-e2d2-4cfe-bcee-0e450f5c9b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00290400-a421-4dba-8bad-0aa00ae68722",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e37aa9-c86d-43c1-a1b7-ee5fcb05a7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34acdee0-bd74-4e9b-9da4-c0ed909ed798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fc34f7-d478-4246-9ebe-17c02806d62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0f7936-7b4e-4496-87b2-f44a2ec8cc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5499aca6-a2e5-43a9-8eff-92ac20cc2996",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a51158-7254-4abd-ba9b-bc2f8605db32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d9566a-9cb8-4167-83bd-905ccbf39da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3162f5bf-14d2-40a3-a3fa-df418dc29560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc6e917-1816-485f-a3c3-1b6703731fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43842362-4916-4c02-b1da-4bc6ee0114b7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35974099-8924-40d8-96b6-32a9a84b3160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d462621-4232-43c1-8a8f-73353fe362d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079e19ff-e5a8-4746-a55b-9423c54a9cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "979df390-dd80-4090-a1a7-8eb2d5333dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21176bd3-97ad-4b9e-8e11-6a6fc983357e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56741334-ed78-4ec6-9cb0-5e1c0722e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66123728-7031-4b2a-afef-0f590c61cd92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ba1303-ee0c-4593-90a8-b93fde8b7f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83fa25b0-bef0-450a-9951-d86e1a12f7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e35ec00-d483-4ec5-b8fa-723c74901677",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3a5110-1e99-4c97-bf0c-3ecfe2ab1403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69bb5c89-bb76-496b-a44f-79e05c9e92c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491a40ce-3f6d-4d0d-8035-3a339a028bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a96aacb-6510-4e6a-84af-0622e319b0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a74938-5960-4c29-b7f0-eda6f5420077",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2e8260-200e-4d13-b341-7755a71d94a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7039c3-941f-40c2-9401-f39284c54f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68410348-5d73-4e46-b88e-45ebaa75119e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09d4e29e-8cce-4861-b529-f7ad1205e418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d73706-ca15-40f7-84d0-566656d026f1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2453f061-b79e-4d9f-8709-5b311f0a738c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32e1968-ddc9-46af-876e-e5cd9e240d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3211e0b9-ece3-4833-8959-0410fc046745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd2fce9-708c-4844-ad08-d10d214a3c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3bbc07-82a3-40eb-815c-a169bad95df5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5939c78-de33-415a-9ff5-cc24515d5fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad578f1e-4d83-4aae-a409-522dcaf681ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9a0cd2-dd11-404d-9ddd-c7f1ac95ed6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73b46fe-50c3-4820-8afe-b2713eab39bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2eae01a-ec7d-40e7-abbc-083be2208e6a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44b1791-3710-4dd9-b55e-d6401dbb9f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac81101b-1fa3-416b-903b-7db9bfb74322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84c5f5c-6eec-428b-8dcd-33fdf6d6b610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac882a8-2a3a-44e8-8146-04b47955e95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3def6a7e-f8fe-4b99-906e-3c6d8407f630",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b36ddf-8b52-469b-8531-ceb3d9ffc38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe88345-d6fa-4536-a88f-8213c22b60f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee26d5e3-e3fa-4aad-b865-8217585ec18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b1454e-b3de-4f59-b501-c7f89f7e2c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfbe93f-dece-4bc3-bfbf-0547879531d1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b09568-0b5a-4e79-a17c-159a3070ef62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12c2b5a-8b99-401b-873d-40e79e9587da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aaa4ba-bc41-4688-acb0-0878a8357a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a72100-42d2-4fb3-9c91-caec9d83e327"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e51a6615-fedd-4ecb-a9d1-c8e354c8f8b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa27d682-284f-453a-874d-05a1750e7df5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77c7a21-c72f-4b22-a7bc-2ab24cfc3cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c6338a-6a70-4c90-8cc0-6ccf4f92364b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc8fb60-1cb3-4aa7-b747-aa6d7b67a9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24e5ba58-9e86-48c3-adf0-29d691f0aa09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e15420-34c0-4b2d-ad49-b9f9c905fa5a",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b38df87-5e77-4543-be21-7b129e6823c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "264b1d48-7e26-409a-9dac-1f60fd30beb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed64a44-2142-4f7e-948e-50027df1e73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f37fbd6-e0df-4766-ad80-b4de68843bf6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "939663d2-6858-4ded-8fdb-86947ff6428a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4b20238-d0fa-4729-bf75-9beab8d207dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde19041-0aa4-48c3-b170-95ac61cf237e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bf3e66c-36f1-41a6-b445-dbdc4d0f1b22"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "119c6e55-088e-43cf-9f4b-54814aadd496",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b08b2ca1-b935-49d5-87df-046edc804dd3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f58bb79a-961b-4dc9-ba30-e023dfd551a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26007707-4d48-4065-9ad3-1c0f770ff0bc"
            }
          }
        ]
      },
      {
        "id": "d0e6ea7e-9fd8-4b7f-b3cd-18c59c9e5da8",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5098d12f-1fbd-43b3-a769-a85f0e3b10a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a57832d2-df18-4099-aa8c-353450d4bd8c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fe3a4a2-5875-49cd-b8f2-6d6af67de60a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7abbd0f7-cde4-4c13-9c9e-51759877fa03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b2942be-041b-4d00-9b58-9212ecbf2de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb34fa58-b104-4697-bd51-f73b47d91c60",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2182649-f134-421d-854f-895fa51bf99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cabc530-05a7-4a56-87f3-dc1a4dbb8831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d846d5a5-fda1-4fa8-ad41-d144971e0add",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970baed6-5d0e-4eb0-9238-9e35d7a01a47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4aa4fb-ff6c-45d1-8a6b-2f86028e29c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03381ea2-1b18-4c8f-867c-f4295bc4885e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057b0fac-1d0b-47d3-986c-c96a3edf3014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5646638f-f3ca-4176-bbb3-dd0a11979bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5614d45e-1cce-405f-9df1-71a21c2dfc1f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a93ac4-16b0-4015-8bb2-0891be828cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b5169a-5519-4b57-b57f-36f6c0a3804a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af260049-4f02-4051-82e3-4ecc6021efd7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62a8927-cc39-46f1-aaf3-ecb53bc6ba7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7eeb63-8422-4ab1-954d-85a3fd75ef12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa19db84-5353-486c-97fe-35f47dbf794e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b0ec0a-251b-41d4-85c9-b75b3c864a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac006a31-7e7b-412f-ba66-4435dfa31412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5972239-585b-4122-bacd-7384fed008b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d6c4b1-702a-4134-aca6-0555a460a636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbdf955-6fdd-4906-b37a-7f7aad21a2f6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e72f1e-2d0c-49ae-b7b3-1f54be46b30e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7202fa16-343b-4b80-aab9-c64814734899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6711da-896b-420e-b48b-0d7ea303e1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3176952f-43cd-40e7-b8ae-3a954d0ae425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e69388-a30c-4d76-84da-2de59e47a97d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6871d3-6eb3-4319-83e9-ff690e0e21c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc76ad5-590c-4a21-b0f5-b2dc32fc4eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "014872d4-6830-4cd5-b9e9-8f31c40c5b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06258a3e-81d3-4987-8c60-e7e7232ad829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ce2188-9046-4874-beb7-e5caf4a7f3be",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9d6977-ddf6-47ab-8e97-7ac1299f2f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcbeffa7-a2bf-4c7e-81fa-7429b08137fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0b6bd7-b6c2-47ac-a8a1-e4aedee7e9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24372c62-5f00-4a0f-9a1b-525e83bf1fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d3627e-ff4b-43b2-8fc7-46925fc6eef1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ace164-779e-40aa-aefa-92aa918eeeb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c8e567-b941-4fda-903a-a8a9c9a170a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421cc691-51ab-4354-8881-d04f20d451e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ea5512-4be0-4d24-8d20-19154b326a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71abce7d-a7bb-4b2d-9d9f-0131961d8af2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56061453-e277-446c-8d15-3f4a34206d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ea6005-9344-487a-af8d-6f2779113fb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ad1c73-63b8-44ef-b9fc-bacc663b5e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec71d4cf-3fd5-4677-bb09-561303f27313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba25855-35c4-47ad-9aee-d11fac868c03",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92da3d9d-f8b6-41de-95a2-75e202f664b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45ee2efe-c729-406f-81de-da4de338f027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8973476-a85e-44f1-b3d6-6ae2900fb2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63636991-d574-4060-aa48-269e19aa9af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32da2529-7c8d-4579-a1df-d0559add1a57",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725eadb0-e21e-40ed-bab1-66e7a0ccb57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b69d0138-4b6e-40bd-98eb-929cff3d4e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6097be4b-dcbf-4ae2-b79f-393266b35e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8d688d-a8e7-482d-8071-6d9ab341b3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87408475-7957-40c1-ba46-50666533d565",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6280d121-7206-46cc-a31e-83f2c4a6343a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e157f17b-9cdc-4b38-be6f-dc0942ef8076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3a8825-daa7-4dfb-a95e-9c5442f4b3fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa0e512-c5d8-4526-b132-3fce42c2dcbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce2c310-7351-4bd7-91c2-3d3d09124c18",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b7c388-ccee-4911-bcfc-0b0fe9876b62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a5be1aa-46dc-454e-aa31-4fce14c18393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ad1e69-e135-412e-947c-083ae915d593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca5643a-1686-42e2-bba8-8f30ab33c8db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05f0366-ac09-4e35-baa6-d960265b5061",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abaa2931-2360-4cc0-ac94-33422c45c74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7936da-5c7d-49d2-bc4e-162710caa62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb49f76-a32f-4da7-a6f2-43ef85c326e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf21a850-7548-4b4b-b06c-10ecdeae8cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4befee-965f-4f21-8a86-be269b1672c9",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585d508d-b92a-4761-972c-fa1036c9121b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26d5408-aaa9-45ab-9bb1-b5a12e5f98da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3862f6fe-1426-43aa-9258-8048783142ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "702152de-85de-4553-966b-54906286bda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac240512-800b-4213-820f-5cc7dba8c62f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55390541-3d57-4c7b-93a1-02e8c31e85fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1755806d-1dd7-46d4-8f66-cfe2551ab955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc0662b-0012-4a88-ae6e-a32340c176dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991d99c8-ec00-460a-b77b-02f3680ec960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78113378-e876-4022-b1ba-307a38e66c45",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e497419-c958-4055-839b-8b15b9dba9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876e31e9-098d-49e0-b7c0-1b533ca62bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "611ec70d-bb27-46d4-b708-39a509d8918b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e272e081-6222-4f25-8646-f634c9ddb9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e64598f-b8bf-4a9b-8901-36bddf78d4b3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76b46706-843b-4fc0-9dd5-b3fc7fdc54df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913804d0-ba9c-48a3-8ae6-c2f9ba7b89dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd30783-38c8-488b-a739-e4be04c7cec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfe3065-c017-4714-abdc-11a6a9326c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67452c46-70aa-4e0b-bf86-aeee112c576b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd2240c-e4b1-4543-b88f-b8fb6b572b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32633605-b53d-40ef-ab59-78bf7202ff94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afb432c-a421-487b-8000-af47dc6db0b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac2a8031-9ef3-4662-bef2-c9f7fcec0fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed241984-8821-4176-a13d-3d4b590a961f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52abe11-f746-48df-9f56-5193d290da89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce438c9-bed6-474b-859c-0a283e84046d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce4ff06-ebc1-4df7-883d-c3b78160c571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9cb78f-85a6-467b-9638-68a0c321e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da683d71-96a0-4489-be2c-2d338098f3f2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99826126-367b-4bad-a087-fcfa8560c112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0abfef-a372-4eb1-9a98-94dded6fe281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dd19ca-a3ab-4cf9-8246-720b5a99402d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e8c370-dec2-431b-926b-91801c5dedaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009ea581-e730-4b91-aab3-f87e9b065a7e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f2d39f-8552-4d85-84ec-0aa82d4667fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc9b5ef-3a7f-4703-be94-458fbd14a81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc4d2cc-8ba4-4cc7-9983-969824ba9d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84f4dfd-2ec5-4899-89f1-669c35745d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3ee83c-aefd-4425-8ec9-4d92ef15575a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee55588-afe3-4b4a-a9a7-a10a03893ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef1dd75-6ef0-4623-a92b-4389e925a855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d008acf3-cee4-4be8-b957-c2e842344a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb23bcd-2c70-434d-b667-a9310f1fb01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23194f1-54aa-4e2f-96c8-f8a557ac10ff",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1a3767-9a53-4a12-a7f5-a3f8e325094a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cd7608-dbe4-4a5c-8b9e-6de1bb9d25f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6a9e88-5360-4b6b-8fb4-ac172ac03c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cb62f3-9e94-44c1-bb27-094ae1fe7524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa3485a-3f1d-4779-b0b1-ddab7873354d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4586ceff-7807-4e6d-bf91-4ce0a1150aae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee87a481-8b6e-45df-9803-5763b5efdd1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d948312-ae0d-42ae-bc70-f3d4ba3757d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84156229-cbf1-429f-848f-88632d7b7db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c5fff0-1150-4481-89e6-9a4056022aa6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c38be2-59ae-4cf9-b746-3d63aeb2a074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aeb7bfc-cc0f-400d-9379-50a07cd2b0fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad86276-5e2d-4844-80f5-a7c098567dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da3cebc-b6f3-488e-b161-f61587710be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1180da52-12aa-4dc4-b138-2992ad0a9c13",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994c8ce9-82f5-4747-81b0-a53e37d02504",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "205bff47-1f26-4989-aecf-b1fd91caea13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7083e6-93e0-40a2-bbca-1acd9d5e5f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "583af691-2f1c-4087-9549-16b38ad6fdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978e0caf-7fc3-45c9-9719-e095d84e0016",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9feb4fe-354a-4687-b2a0-da0a50690627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "923f4d47-644f-4725-98f4-7a5b1931f21b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83310d71-3626-4b0a-9c8a-0a5882923183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14afde79-2ade-4691-88fd-b50650e3ab4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aea6234-5fa6-4183-bd9d-a0d69f455534",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7caebd8-ab41-4fdd-b586-9bdfa85e2824",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d215f8-cc2d-48d2-b0f3-17bf8e6a3a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcad739-6aaf-4bfb-b6cb-657f5f5a58bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b6a4d3-28c4-437c-8c02-4404e0f2c0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b248798b-0c7a-41e1-b82d-55d624543398",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3504c7-c344-433e-84ec-45d0768189be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88b4f45-af64-401d-a36b-205695faf447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c05bead-325c-4cd3-931b-3efb5c105e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adf202d-e455-4fd8-8640-e87ad77b7ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b69275-5c80-47c2-bc0f-06ebd0c3346f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b8dd44-31cb-4542-a9f6-9ab99a3f4361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bec40905-a372-49f7-b573-2b8eb0c78152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4754f77c-863b-47e4-9c96-b13dcb802825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162b1651-09a1-4ad5-bd59-bc2f893dccb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee8bb6b-b5bd-4ffc-a288-6825acf41346",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843cb5a8-6e65-4f9a-9b5d-bfa41bb7c7e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a8563a-bd81-4b9c-8fa4-1e6bab369eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8096ce02-38c0-4fb7-a60e-b4572e0f52f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db0052f-fec2-42e1-9764-a33db97cd8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b90c79-323c-474c-ab25-7ffa001b0906",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15afd18-59d6-49f9-88d0-74295de93467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757acedc-c7d6-4efd-8af1-eb6a7141effd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8573a1-3f0f-45b6-8367-215acd9d1e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fa00e9-1c3e-47a9-a93c-b73d6b41cc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d71847-1a8b-4466-9318-66598eb7e8ca",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d3091f-4925-48a3-b4a9-aab41486aefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dd6fc0-b1d7-4b27-aa72-6e58621ee976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b46c076-1722-4a72-bfea-356cbba72ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454e4e28-9850-413b-968e-27959ab2a57c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37fde7d-48a8-4cd3-8d84-b7f6bfdf14e5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac880a5-22a6-47b2-95e2-42083a8b0271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c651b69-3757-400f-8015-ac6031ed419f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5b1dda-0e80-4910-9ec8-b09287081e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50882e43-e5fc-43b2-b3f5-b39537817266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556fa942-58e7-4c4b-9906-3fab74c6091d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64ff914-41aa-4363-b87f-258e53a6eee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a39d931-fad7-4d75-86da-c60e7ab867e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1879319-fd7b-47d8-9e44-c96c559262c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90069efd-0854-416f-a476-55370a47a435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01c6351-a15e-4c02-ba69-33b72e321618",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8953ec3b-d9dd-457f-aabf-96e5767a86ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca29524-69d1-43bb-9e43-838ab6a29e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af16c5b-ef0b-48ad-b0ab-c0a52564d4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d8118b-f248-488e-8275-e231d4027ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e67edd-35af-4307-ad60-41e67de6347c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fc87c-c15d-4afa-8679-b5a4c4961abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc0f7e1-0a85-4a8d-bbd3-971563a48b8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe691d44-bc16-4501-8fe3-817ade476e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6546c6c-10c7-43da-8053-3b8bdd25024a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdedea4e-a691-405f-9e00-0d6c915c5cda",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9845519b-3457-40cf-b223-ab55580ad0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f626dad-6315-45ad-8a1b-840b0d6b4e59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce28eac2-c4b0-472e-ac2d-6712718121d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b409e514-f345-4761-8cb5-2aa53e8ee829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b541705c-1412-43c0-8d01-5a13ec4d9748",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85afd30-e0e4-42bb-9e26-e24a948dd666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2225c4b6-f401-4029-8925-0eb8f0e7d240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc44a2c9-c807-4993-90ab-280330bdbfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbd4a58-a7fa-4b3f-8d4f-a9b4061e481d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d84005-06ef-41ca-a3c1-d20a9c20d2c8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f21b42-917e-4ac9-95c7-e5f91ca90927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599e1931-1efc-47c3-baa2-86a368c31612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad540f8d-018d-4f62-bba4-6c42e17e32ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd1454b-a4f2-4649-85c9-63309c67b484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5faac680-e11d-4fc2-a1de-102abdcde3da",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82eddd2-c2bf-4a78-9cb3-b6a90bf25c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7735f7f-424f-4bea-97d2-2dfde23e15be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8b2706-8d49-44bf-8655-46966fde7bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9c8cde-8c05-435a-afad-7a916abc2f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7933d3-ffa3-4de7-b8a8-e3211db44a49",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4531d4c7-0eb3-45cc-92af-88781e465055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b2c261-64b4-47c7-a29e-fbc3d9fa588b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1773195-6f96-4b3d-95b0-d0e6bc35eae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630b1518-8dff-4290-b902-1990af5a27ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885048a0-db48-4636-b820-f1a8ba3a578b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c698d21b-7fa7-4a16-88fa-86347455e766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10da0f5-31a2-4ef1-b836-e7075461f482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd02906-4a91-4953-949b-fecdc1eb841c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bff3918-df34-4ecc-8ce2-ac699d9584e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b3f7db-77be-4da9-be11-e8456d797433",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5d4cc2-faf5-42a8-94c4-6be134d763ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "526c54a5-12ca-4c79-88f7-577579cbd9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b29e45-64c1-47c5-8b7e-25656300fa33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2155e413-e84a-4eb0-992f-89f754d8f440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453b6c95-3193-4052-92a1-efa0ea4417fe",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12f9e5b-41af-46de-b116-d28261da352d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b491e2-6c86-4c73-8a03-4e4a0d3072c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489762bc-d0ee-4ced-9804-100284587806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387099b1-d1b3-4850-b1e0-428f4d5e1965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc389e2-9eea-49bd-837e-a7ea48d3b185",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b3943e-08c4-43db-bb63-9ea9c433858f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691d2c5f-5a31-4f35-a533-7ba957c8d1c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6c4c70-4ff8-4608-958e-3ce19b9c78c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb4bb07-9dcc-41e7-8658-b9bc663e1026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b7d1b1-5f65-4a60-b4d5-367f3f4ef9b9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e5755f-6751-4250-8e87-b3cccc92b1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb49b99-792f-484b-b40b-c2b5de47367e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32f6189-47df-4819-a749-5667ae8d5a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c61cee-0b12-4aa1-a381-67ff0ba90deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6816840-3053-4bad-8d7c-6b1fb61b5e59",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a00ad6d-9cba-4b3e-aa39-3b90fff50495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3935e0bc-7511-48f3-90ae-e0cb666e4322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c90f5a7-819c-42f8-9670-1a02fb8a47fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516ba2a7-3a6f-4e99-8269-9572450610c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50146ea-7024-4c81-902e-039cfd313ef5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9cc888-5c5a-4e34-b15e-db106d659af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4c0baf-88e0-4c0c-ac12-b4fa8a372214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7df6dde-ae4c-486e-ac2a-dd3b7528e5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b585eac8-7ec6-45ab-a16e-ea87502fd0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9de082-05a6-4e07-b904-351b5711bae1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084c13b7-1c75-4fc1-b08c-90623e82c732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4f8243-4e49-4dc8-8a04-8a2b08cda354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2fed61-dba7-4b0b-b02c-7ced9a883597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50475050-2bbc-4808-95ca-6a86eb9dd7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21268e54-b9f1-418d-ae03-057a01098d71",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e99493-0c7e-4557-b524-407768a696e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26905efd-35b1-4d4f-a58b-261fea47b105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aad4d1-1525-4dc0-a476-00bc89e143a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd630cd-56af-43e5-8142-5a6f1e2de56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ad441e-3a4d-418c-9ddd-6f0a05ab331a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3508a73b-7cd9-47e6-a695-512cfeb8904e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ce0621-cb04-4e1c-bb04-73de8b520ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f3b57-d5a9-4458-8cf8-e9230d99af01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e3afe5-3f3a-4b1c-8b22-3fe51aded6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af41dd6-92cb-4173-97e9-7b94f717e101",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500fbc96-fc66-494b-a5c2-3caf8d4c23ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a40f4fe-eb9c-4695-bbba-1a3e878e5ab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03821aa-29ca-48b2-b016-4f5b0d03282e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc83e62-9c28-432a-a496-21008a3f99c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc38b7f-db68-4e79-bc33-260079b63a2b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571076d5-c42e-4585-a660-f5fefd86ff1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d9097e-62ec-4606-b6eb-161cc9d0efa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e80bb4f-0a3a-47fa-952d-55397c7d16ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f2feb4-4cfb-413b-8c61-593cbe52fb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c61ef9-ad4e-4cb3-b209-ef6460706262",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2e3e2d-6893-4b37-8985-f72fc0064858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35696785-0174-48ed-883d-77675b139241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cd6700-f8c2-4165-bc29-1aa0a0288e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8b4e8a-79e5-4af4-a631-f61c118c67ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177ec152-faeb-4e15-95c2-9d39cd440df2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51c65c4-70b9-443f-9518-54a2bfe6d297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f897c172-7241-4b54-aa36-20cd05b20f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b5c15f-c1bd-4ac3-a9c9-f31f933ba111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd6ea32-165a-4a25-961a-6f4876e04ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c042a2-3553-426e-910c-6a40f2e4b407",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149296c9-6025-4e42-8eb7-517a8b3af850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a11bcf-c1e6-4f06-b644-69af9faea409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530695be-20ab-4f6f-b63a-61be55c9e3c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176fedf4-09fb-4a95-a91a-f91b5d859449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd773658-8cee-4ac0-9431-d221bb9b4de4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0929b7-a354-4565-ab36-764fb05813c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6990a6f5-f754-45e3-a677-61f7b7ff45bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a117df5-b732-4f95-8143-c4f83dba6e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d1e23e-a358-4365-8d60-a66d7669e389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9f3e10-0ddb-4e37-95a4-1457bd53218d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e968f0-1d71-4d3f-9403-719e972ddcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c501a046-4fb2-4205-a7cf-daece241ee48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b7aaf3-0374-444f-be6e-3ca5af587715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cbe0d8-7159-4188-92fe-9d7fe6dd759e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9558926-1731-4ad7-ab63-0a0ed5f9d68a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14823eb2-00c9-46bc-b111-a3ee4207a9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915ff19a-4e82-44ed-9dd1-c1b8aea9a770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d827f3-2b60-4389-bb36-5b0a1108508d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f97c8b-ed66-4087-b620-8ae894c0ed91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9e37d7-ea82-445f-8e4c-a2631d4812ff",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1c5f88-6d51-486a-aeea-dd4ced8a6d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b8b48b-496c-47ce-b9b2-1f11add2627b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90f2cd0-31f3-43f9-bdf1-d756df1c4e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f46a78-30b7-47de-9d74-628b9118a1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b92fd4-ebd5-4f61-9b05-e5731c47bf59",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582b1ad5-8655-4d8d-8b0c-23382fb24798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae0dae8-c818-42cf-9ac8-5fb4d42ddf48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340764ab-58d7-4085-939a-9fec901ae51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567f4064-a258-4c8c-b5e8-47a7766c83c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de516c60-b7ea-45ef-9601-de137a72cc5f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42292447-c1f0-49da-bba0-11669c9b7c55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40d4a18f-6ccd-46d1-b4c7-5c336761748a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93215108-71e3-4cca-bf9e-b3a8420c0949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a1c8cd-7ff5-4db2-a361-a001c1cce2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c885611-52a0-4c50-a211-bc16e741c718",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d40d65-1a5f-45b5-8af6-62e109d768d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd1a4ae-2b9e-4321-8bb9-5e715f75572e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6558cb6a-fbe4-4a94-9839-e89a5f06add3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f509aa2-4d80-434c-af51-e78b6334e8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c4d108-d6cb-4ed3-a25b-d6fc5b548619",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a14ee5d-f416-447e-9b2f-975fddad95b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dcf7634-6d90-4bf8-8671-f5aac41b4b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6730dad3-ee66-40e3-96a1-89f401f803fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e6cea3-2544-439f-b693-15d2cb533f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad707897-6585-4b7a-8249-0074cdd5e637",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c225d5c6-7104-4917-ab5d-fd70a1b64e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4756551f-25c9-4bab-a5cb-95ef35137b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef38253-35a6-4694-b2f4-c1739e6f13ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1d2ed0-b824-460d-adce-672cf7a6d655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737f5b0b-a2eb-4a9f-8da6-cd5b13d1ec02",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdb256c-b730-4097-b9d8-ea884c78fc92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bdaac35-8a86-4e24-af9e-02a472e97851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a572ff-9523-4b5a-963a-bc3cffa3b74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fa3351-9d29-4340-97d8-0f552f5471b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f24c5d6-7d5c-4977-8c51-ee27a1099397",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552bcb35-ac48-416e-8e49-6f2de6af2a22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9846255-043d-4fd5-9508-b362c80befd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e252674-1b8f-4abb-8579-62fb50d52a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cfe861c-d2f5-441d-9783-88846f1a1006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd8e3e5-9d2d-4289-9d6d-25a1cf86ce36",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e945eb55-a7f4-463f-a439-5887e3848ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a0d77a5-6f57-44e2-b00a-9c64a029cf15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70dc2a6e-d2ca-4c26-a818-2ddf99ace8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb531e6-7a09-4524-a09c-82e05f071eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc82f87-0f72-4005-a0a5-8c384447773b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05c5c04-11be-4ca8-8b05-17ded4ad3733",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efd11b50-6632-4c82-bd25-9681286f6a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b082c0f-04fb-4453-984e-496cbaadfc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94932b6-8ba9-4a1e-b348-0dd16a99c76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6da109-8ab2-4d33-8f46-0265e69f0753",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098197c3-cfde-4584-b116-8a1a70218336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3671987-a42f-40f1-897a-1bb8c922aa9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf9e48b-4685-436e-931a-5c067da59a4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c3cdca-b7c9-43a0-a362-fa17a46fb689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223e352b-66ca-483e-bded-6bffc62e5a13",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32cafc2-b636-4e59-8ce1-a532c34e943c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83bbc3db-c1fb-425c-98b2-07b2be27fcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d944de-4e64-4ee7-b26e-876e569deeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bdb52d-4d06-426f-87c9-4ee4a263f153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02017d9-2857-4745-aef7-65ef5b35c9f8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd7ec706-051b-4ea9-b43d-da34d4d2fdea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ce89cd7-3c97-43be-b752-270a5883d3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c4a8578-85f2-47bf-a070-16dd5ca32b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8ff0d1-3f80-487b-9208-2b79fbc3e794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912d278d-aa48-4479-a1e8-bb6d4732fa44",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1efdad-0c06-4454-89e3-99e05d5b2507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f9b8d39-93ca-4d87-994a-8df5755c4916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8c082e-aa11-43a1-b684-eb59f4656058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c5316f-f42c-4b2e-bfa8-6750cdd645a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f5a69c-dfaf-4920-ba5f-4eab2f295637",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793e9fe1-824d-4b8e-91cf-9eb66c00d191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6fa6d45-d36f-4a56-9906-0a872345cf5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b70d2e-aa19-4f1a-b886-5da47aa8d6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470842de-5962-42e9-b192-8817b38fabe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ddc919-a88e-4e8c-b260-3e0ef41c2245",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7c0767-28fe-4b64-a8e4-de7cd3031d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222dce47-ad7a-466a-bd7c-7ba2a6fb8213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26692a6d-7e57-4cc3-9d75-5d6a023f0495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc57ed6f-d308-4d46-bb8e-5c138758c89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ff96b2-250c-4f07-87a9-82af629203c0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384dc0f4-c08d-4c88-9c05-eecb8faf1a1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eda650f-bf85-4e70-9779-e601566fab09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6e6031-f15b-4569-b0d5-db8c985c2010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fac6ed4-1d80-473a-80e2-7c1a972ace7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbef1b66-70d4-4a76-b03e-9de2df9800eb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7269dd5e-9d93-40cd-a231-e32504c72f84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9df898-14fd-42af-b5b9-e129795a82e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc5f5fd-c84f-4040-be58-c0182892ad8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df91fd4-911c-43db-b969-14d840fd0bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d2a540-b02f-48a0-9fb0-10ea2a8c51c1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e191fa4f-031c-4565-afda-e0f0f33f089c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd44998-fb1e-420f-a1bb-e33fc1968b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984916b9-d678-4bec-8186-2e3843da3a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59d2c05f-080e-41cd-ad05-a246daa32c07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7f8680-f6c7-496c-9e83-17857e4df5bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0f93a5-caef-48ca-8337-eaf0e619f41e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5aa577-7b81-4e7c-8e44-d2164668dd77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ee2167-d042-4019-a4b7-e43b88e34c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c674857-8c99-42f1-a926-fbbaff96ad54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63172cdd-05e0-4ac2-8ea9-2bdebe5ad5d7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bab8e1e-c210-409f-9606-3fc253277048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e974f51-144d-4f93-a87f-1aea859269ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbfce967-1735-4d8d-b7ea-d7454925df0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d85c527-d3d6-421c-bd59-ea963043bbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca100bb8-f810-4dca-bc73-334a7b1f48da",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0b7dbb-fe1b-45df-8ae1-ba220361bf0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd78f4b5-e04a-4549-ae10-815583f9e548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8fde9-02f0-474b-a7e6-2e2c454ebac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62646883-001d-4433-8296-de3515cabeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2feb4754-7e30-4b12-99b3-5f8f1663e694",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df84f41b-c5d0-427f-b083-1b5764f04124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73156fef-a475-438a-8b04-28bbdeaa0929"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac318150-14bb-4124-865f-4d17867304c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23523df4-6431-449b-b863-0bf048f82da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086498dd-d469-46a4-ac84-35775b4c3dc5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af865d3-db1b-4ad4-859b-327a88399941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7166b97b-4d10-41d9-bd2a-845c30e8c5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2740976e-7a03-404f-bf95-4ae5aa75725b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaa0405-cc58-43cf-9c72-62e1acfa884a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0808c18-2f89-4365-b531-a5d8b9060884",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44774fdc-b865-42c4-83a7-d5318733dfa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22dba11c-7b59-4e1d-bc52-1dcf4db9e8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ad846b-4d28-4bcf-a38b-ada69efe19d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d744415d-66f7-4562-8d43-1d6396b18298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576404d3-96a4-4bd4-b535-544048f7e539",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78b07c7-6ac2-40fb-8172-4df5a4497ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988fd5ed-e11a-4af7-8b95-5318fe8db056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4655af-42ae-4f7a-b6fd-d7b8944cf117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b122409b-a4ac-4bc0-9c76-cd584e5e1b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f124d7-d465-430c-ae4e-82dbee30333a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2a5cfb-e2a0-4ce4-8008-93ffefd10bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a4248f-9cf6-41ed-8487-d8eb30f3ee71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b0fa93-f31a-4ba4-865f-e7cb6879f186",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9469df-837d-4278-9bbb-bf450706768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b31a556-e515-45e8-9b1e-e698ed391030",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a18870-a83a-434b-a008-dcc7689f20cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4396d9b-dda1-4bc5-8a90-b6fb16fe78c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522c78aa-9d1c-421d-a3a3-76b89af91925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2384a069-cae7-4ec2-a34f-a26f332b1a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2536f7-13e8-4da1-a1b3-293b29d9ea99",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96823da-3359-41af-98bc-cf955aef6e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f75d079-d3cc-46f2-982e-0e42500ff7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6616a384-7d01-46db-8511-40f5580f452e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e93cd1-7cfe-4567-8348-94b937e6d1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa2feab-ec9f-4f42-83d2-2a337f7d16cd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49abac67-3b42-46fe-87ba-532467f179a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6b5038-0edf-4e23-85c0-4cd90241cbd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5b31fc-9527-4275-8e5d-3582774be3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99412534-931c-4f96-9265-d86fbb70a3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da948914-7f14-4bae-8310-1320f140149c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3da53b2-728b-46b9-8873-be5991e233db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8963ba13-7b4d-4cce-b807-90ce1c4e4da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9041a45-8269-4fc6-a348-9a03af7dbc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e601cb1e-a542-4513-95db-75a2104389dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5c6830-e5b8-4e0f-be4d-9dfaec0d422c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680a6373-0d48-496f-bad4-4cdd704eaa46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e86da63d-8552-4797-98ab-76bd3b2e6fa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50fc7e7-f233-4db6-96a6-e7b5229612a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826cd948-0620-478d-bfab-02a5dd128936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd36a26e-b0d2-40ba-baf1-2f469fff66f3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c74b5d-dc1c-4a49-a9cd-6729e48e49f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4f65ae9-7b3b-45eb-b7f8-e3ea8360c25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41de6c13-9239-482c-a068-1225532d2432",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d3fb1c-cde9-423a-961e-bf2e4d80e544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148c8f9a-7a6a-4975-a1ed-991ddfd1bcf7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb40deb2-f46a-4e5c-af38-e77eaa5ad752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f35388-8195-4e19-955e-60c75ddce4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b9583e-a1d2-4754-98f9-3f9ac8e52b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cb7c8a-97dc-40e3-83ab-34cf87b84071"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50d834f3-7e2e-468b-84bd-257efa932748",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ef21bc5-83d7-42ba-954f-1321d877010e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84886b58-7e82-4049-95aa-be8040bab9a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d00f7ced-0854-4a5c-bef2-9f11bcf8c924"
                    }
                  }
                ]
              },
              {
                "id": "4757a28c-41a9-45ed-a52c-4766f4072eb0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a381e2f-3e20-408b-8f19-bd7aba0def14",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a906a41-e0f1-4db6-9074-32ec8bf4f374",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6a057b88-6b5e-4dc1-8485-5bdc4c3f8a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ba3394-7601-4dcc-9bea-666b3ce86080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0e14d6b-a895-4e61-8eac-6674d7735e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3633c180-9d7e-4156-9bb0-ec3cf84f5a62",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe11b18-c062-4a9d-a6c2-75bc05365a18",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "854b15ca-4841-4c72-8c1b-5720173e03b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0112c196-39c7-4cb4-943d-ed5010b76c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "198b6b58-827d-450a-ae74-b93292e4de12"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "689f0c74-bea0-4321-b5a4-577d6e041687",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0f647c7-f7b3-4f71-af06-b60885bdda5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab7c0ca5-59fd-40b7-a7f8-076f9b042668",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d74defe-fc39-49aa-9c7f-633a9c600872"
                    }
                  }
                ]
              },
              {
                "id": "8183d187-4e16-4c80-94d5-dc6947a8432f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "92dd8dfb-d1e5-4b4e-a4cc-4dc0e3a56793",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf84244-eedb-43fd-876e-59f9cb98833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "cdeaeaf1-0b0f-4b0b-8c1c-56af8e0aa97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ee0ae3-8036-4148-926b-a8811b94abe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a0bd7f-4e01-4605-99db-1d8547b753c1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec90f439-b2c3-44ac-99ff-b1fbc6a65a4c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f0bcae6-9c92-41db-9894-9ef936fecaf4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b638836-3dfe-4c03-878b-89313466d2b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "edb05da2-99f8-41e2-8b57-4600e08f782a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e40d6c5c-89ea-47a3-9a12-6c80c928e8c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "446b4a77-5248-43da-ac25-fbe1a5810641"
                    }
                  }
                ]
              },
              {
                "id": "740192be-f7fa-463c-a550-d72dca339d2e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cfe0b9b-3aca-4067-b74f-e5acac01a33a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3862f101-b112-4470-b644-1baaa4d42444"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b31a18ed-b30a-470c-9e41-1f6e76603981",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bfbd30b-9268-4b0f-9fd5-51cfc971deb4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc392094-876b-4cfe-bab9-36f531ad5034",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9556fe01-1b33-4c47-96d4-b1f733eefe6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1391891f-9011-47d4-8dee-1d0573a20d55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b2886bae-0cfe-4238-8768-57d734e5e2a3"
            }
          }
        ]
      },
      {
        "id": "01ce30f3-419d-4815-81ac-7857f63d6997",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f86ac741-176e-4c25-83d5-86a93c99d791",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d0f9390-5e05-4a46-a62a-d9bcffeb41c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81885dc1-5108-40a1-b787-ac513b6827fd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55703e8f-7e5d-4ab1-97ab-df2fc6dd525f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fd9e7d1c-e8ab-4172-a214-66d16baaa368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e90c48-5d28-4caf-9b0f-1699213a5f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a4f1649-490b-4b7c-a936-411842e707dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9f8b2e-33d3-42c9-9fb5-6400c93a69f7",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee8b84-6b9b-4d9f-84e6-fa13057b0a2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1c04e7be-c450-42c6-87e8-a9263b5de9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff4c749-67bc-48e7-b59b-6578ae66247e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "459b4060-5b83-4663-8c77-4b51a30ecd0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05257d66-57d3-4d6f-bae1-6a248cb5d290",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c2fbdc-05f7-4145-ae37-5189a87e9d50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39246266-679c-486a-b7f0-9e8582513a70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a0676d6-c756-4a23-bbbf-c136515bb6b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "933e569b-ff3d-4b93-8818-22fe22ade77a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "79902ff8-5b55-450c-8c85-c2fdeb0bf84a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "166b85e0-653e-41a5-b762-ca088bf72d7a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a0b410e-e88e-409a-8bb3-c4cedc08b2d6"
            }
          }
        ]
      },
      {
        "id": "12d391ce-d1c6-4820-a071-3c6470bc1669",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "53fd384e-2c04-4f98-bf10-f9b4cedd9cce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d0a4b8b-ede5-474c-936a-6f4508d5876c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46e86c7f-933c-4320-b92b-334d7b6c0b5a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa13e8c-b34c-42f9-bf68-0c68ebf2f736",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d4ede7a6-2e3c-43c2-a575-24614c0d55eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c92f9-a426-4138-ae35-27be8b4f2a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9ded757-3a3f-45a5-9e7f-f7392099281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca722a9-cbba-4743-973f-32584ce759c0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a418fbb-211b-465e-b398-c5f335badbe7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2b899afa-9586-463a-aab8-d6a51971e110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbb41db-3570-416e-985f-dbc429fb4b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff7fa9c0-a2f1-4667-93dd-e9133459a5c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d1eef2b-83d0-442a-8ef1-c854bda236df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fac3f0f-8109-4957-9ffb-accf62aae586"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df923720-a183-4ddd-816f-1db82bb28bdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0ea78d1-6f85-49d8-8958-311837184612"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ceaf2a1c-ddff-4f77-873b-15bf368d259f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ace2f49a-68b1-44b1-976e-0b02a086dc18"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d02f9878-176b-42e1-8dc5-f77e99923812",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6b0dc9f-caf5-43ed-933f-61c524dd04c4"
            }
          }
        ]
      },
      {
        "id": "07e0a83e-3472-4fa5-a04d-b999ca29da11",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6cbcdcd9-e9fe-48ef-8cf6-38da30d0755d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88f1ca17-570e-4e69-811b-dcd497f29170",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9607941b-8827-4b5c-badf-29702b690a63",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bc2f6c-c49e-48fa-9278-575fe0a8054f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7f5ee698-9f38-4fe5-8234-391ad0a7c624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbf5291-4b11-4e83-ad85-6fd9a5475662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cd76f07-ce74-4670-84d4-143f58927746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6a9680-236a-4bcd-9f9e-9237683cd39f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee97d98f-d9d3-4de9-a104-16dcfc328238",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8fd42975-9878-4c36-9f49-2b6a52d34e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1ddc0d-7356-424d-b9fc-8f0e9a36de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69cc03d7-2b82-466f-890a-7bfcfb336198"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ed27f25-28d3-4cbc-a38a-804c79cd2c32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7fafb0f-94b2-422c-84da-c6279e0a1a37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ae53937-e880-4768-9523-1e6f6c086c7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe67c0d7-0de2-400b-ad74-ca7c02fd7552"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6626185-f809-41c9-901a-820f0a713598",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "462e776c-1516-4967-a4d9-a400db774a9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f67a97d2-621b-4ec2-bfef-f742c866521c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89fb0052-1e83-4bb6-995d-1b65637814ff"
            }
          }
        ]
      },
      {
        "id": "09b3059f-6083-4ee3-8c69-9c65c71dff3d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16868450-1502-4f93-956b-8334e436bd2d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc9ddeb2-32b5-4bbd-862d-84fe0bfcda05",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ee475c11-b59d-425d-b121-f8d2307acd2d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "424185fc-f9f0-47c4-909f-93dba4672495",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecc29fe5-8728-4cf2-ab8c-708276ed59f7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 794.0190839694657,
      "responseMin": 6,
      "responseMax": 8891,
      "responseSd": 922.69963789589,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673051888862,
      "completed": 1673052110707
    },
    "executions": [
      {
        "id": "158fd8bd-ed47-4f9d-b96f-6958936871b6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0446a3a6-0431-4b9e-ac38-50b392c56901",
          "httpRequestId": "77687b79-1b9e-494c-9901-e08f610a599a"
        },
        "item": {
          "id": "158fd8bd-ed47-4f9d-b96f-6958936871b6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "54a72366-8356-4f83-980e-2b34e4940201",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "bbfbb089-abb9-4989-9fd6-a7b29ba17f8e",
        "cursor": {
          "ref": "0bb3dbbb-8aaa-47ae-8bcc-592eaf7c45ea",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5dab2aca-ac9c-4858-b252-75cf2c56f291"
        },
        "item": {
          "id": "bbfbb089-abb9-4989-9fd6-a7b29ba17f8e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "d2197345-9e79-40f4-b05e-b710980003fb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "f6951aac-b26c-45a4-852b-646ac55038be",
        "cursor": {
          "ref": "240975ed-bc00-49ab-90b6-1a93433537c9",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6aa07d36-eac6-4631-bb86-c2bdac45eeae"
        },
        "item": {
          "id": "f6951aac-b26c-45a4-852b-646ac55038be",
          "name": "did_json"
        },
        "response": {
          "id": "f407ef33-a8ff-4c43-a8bd-79046f539d7c",
          "status": "OK",
          "code": 200,
          "responseTime": 624,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5235e375-e4dd-4c61-92e9-df315f17523d",
        "cursor": {
          "ref": "195cc8f7-e9f3-4fb7-9df0-c7be39025e08",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb6734de-c7f7-4a06-8d25-e180780f4e46"
        },
        "item": {
          "id": "5235e375-e4dd-4c61-92e9-df315f17523d",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3cd25bd-66a4-4b85-a466-8b6a7a5dcede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5235e375-e4dd-4c61-92e9-df315f17523d",
        "cursor": {
          "ref": "195cc8f7-e9f3-4fb7-9df0-c7be39025e08",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eb6734de-c7f7-4a06-8d25-e180780f4e46"
        },
        "item": {
          "id": "5235e375-e4dd-4c61-92e9-df315f17523d",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3cd25bd-66a4-4b85-a466-8b6a7a5dcede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9cda9d-90c1-49ee-ba80-84fabda337f4",
        "cursor": {
          "ref": "f1cb6a98-9329-4fa3-8f1c-afdad1d95bb9",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "60b9c18a-9e2b-48c3-8fcf-8fcefea14c52"
        },
        "item": {
          "id": "4a9cda9d-90c1-49ee-ba80-84fabda337f4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9d6967a0-badd-47b1-8109-07f539128b55",
          "status": "Not Found",
          "code": 404,
          "responseTime": 755,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bd6319-a9cd-480b-befe-aba6f6d63cec",
        "cursor": {
          "ref": "fdf28f4a-ebc6-4988-a85b-ca663e0f63c2",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "242bb247-9890-42e2-872b-9e5bbe63a1d8"
        },
        "item": {
          "id": "28bd6319-a9cd-480b-befe-aba6f6d63cec",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0a76f96c-acc3-4291-a748-2f3fa9295d72",
          "status": "Not Found",
          "code": 404,
          "responseTime": 599,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ccbb88-9830-40e7-91c4-a50a5fdf6e0f",
        "cursor": {
          "ref": "c809667e-986c-4d2e-90a4-802da1f7968c",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cb77dc39-adcc-40bc-9f34-626ffb78d133"
        },
        "item": {
          "id": "76ccbb88-9830-40e7-91c4-a50a5fdf6e0f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ef1ef2ca-59c0-4bfd-aecb-74c3e3fa100f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e1f04-1209-4640-8c4f-e4b2deb5a21b",
        "cursor": {
          "ref": "0c2f2626-f5cb-4ae1-9dc6-143c0e6a57dd",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "10e4d07a-cd11-4569-9902-13d4de361a8e"
        },
        "item": {
          "id": "9c7e1f04-1209-4640-8c4f-e4b2deb5a21b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "81273171-5fec-494e-b7b5-54869dded21d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 595,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e1f04-1209-4640-8c4f-e4b2deb5a21b",
        "cursor": {
          "ref": "0c2f2626-f5cb-4ae1-9dc6-143c0e6a57dd",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "10e4d07a-cd11-4569-9902-13d4de361a8e"
        },
        "item": {
          "id": "9c7e1f04-1209-4640-8c4f-e4b2deb5a21b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "81273171-5fec-494e-b7b5-54869dded21d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 595,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8902cfa-042b-4174-bc71-a743a3ecbbac",
        "cursor": {
          "ref": "380e8b9f-d1a9-4e9f-8d82-0a1ce5495a68",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b985e1f4-0094-4e1a-b000-393a47110ada"
        },
        "item": {
          "id": "d8902cfa-042b-4174-bc71-a743a3ecbbac",
          "name": "identifiers"
        },
        "response": {
          "id": "b4a74dbc-0ed8-4830-a0c1-106d94725aa2",
          "status": "OK",
          "code": 200,
          "responseTime": 1043,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcece53e-89a2-497c-a4c6-ac96625c1fcf",
        "cursor": {
          "ref": "e3bf3652-dff3-4bff-8e70-8de3e130bb35",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e52d5b8-cb96-49e8-995e-c38df721a805"
        },
        "item": {
          "id": "bcece53e-89a2-497c-a4c6-ac96625c1fcf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "66f1c67d-43c7-40ab-90ef-14d95fd262dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcece53e-89a2-497c-a4c6-ac96625c1fcf",
        "cursor": {
          "ref": "e3bf3652-dff3-4bff-8e70-8de3e130bb35",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9e52d5b8-cb96-49e8-995e-c38df721a805"
        },
        "item": {
          "id": "bcece53e-89a2-497c-a4c6-ac96625c1fcf",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "66f1c67d-43c7-40ab-90ef-14d95fd262dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365819a0-04ba-4f51-a0a2-ca539bc3e8be",
        "cursor": {
          "ref": "53cb26d2-32d4-44b5-94a7-d53688f08fe1",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2ae07a27-a967-4737-8afe-f9453c8c32a4"
        },
        "item": {
          "id": "365819a0-04ba-4f51-a0a2-ca539bc3e8be",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "673f62ab-7724-4b13-ba63-4494ef40fc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78eb440-a030-497b-9a0e-6ca3f72f59c6",
        "cursor": {
          "ref": "ba222af3-fc4f-497c-afd9-f51bceb1e4f7",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "62552550-9bf2-4cae-81d1-f470bcb74482"
        },
        "item": {
          "id": "a78eb440-a030-497b-9a0e-6ca3f72f59c6",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "18a0e6cb-84b5-4dcd-a8bb-a52066306142",
          "status": "Created",
          "code": 201,
          "responseTime": 3019,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "f7493cff-6984-4b37-a20f-d54ad35b74de",
        "cursor": {
          "ref": "70e19cb2-5cdf-4fde-b3e3-02e2f7c79d82",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "792a9ddb-c3b2-48fd-87b0-fd352638e8bb"
        },
        "item": {
          "id": "f7493cff-6984-4b37-a20f-d54ad35b74de",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6216f554-0798-40ce-b5ab-f64b32a646be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177f4d73-8a66-4c1a-a912-a0dacf8bdaf4",
        "cursor": {
          "ref": "3c7e4ec4-2a97-46ac-8f3e-54013abc1c72",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25564f98-6e2f-4e2b-843c-bbf713a6be7b"
        },
        "item": {
          "id": "177f4d73-8a66-4c1a-a912-a0dacf8bdaf4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1b04b86e-c3ba-4684-a425-2f61d7a5a97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8aa5e05-0d06-4a34-9df2-85c8932055a8",
        "cursor": {
          "ref": "79dbbe55-c292-4230-b795-67630ff22589",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f232370c-4630-4e72-bedb-8c6d916901c5"
        },
        "item": {
          "id": "c8aa5e05-0d06-4a34-9df2-85c8932055a8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a9e926c7-ebc2-4a1a-a9bd-3d0123687497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fbafdb-2c56-44a9-8e6f-a6bebbf627ab",
        "cursor": {
          "ref": "9f0f60c3-9d3e-4412-98b6-efffef2b817a",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0dc129ff-85aa-4982-a161-1ea478195420"
        },
        "item": {
          "id": "c9fbafdb-2c56-44a9-8e6f-a6bebbf627ab",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9e879b74-05a7-4ed5-ade7-6a8472f9f750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bd57d8-23b7-4fee-9ccb-ad149cf71e05",
        "cursor": {
          "ref": "55aca71d-9794-423d-8e5b-8637969bd106",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dd507dcc-2246-4b94-b5f1-28dfa1c81e46"
        },
        "item": {
          "id": "f7bd57d8-23b7-4fee-9ccb-ad149cf71e05",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "09b05bc5-123d-4a01-a3d1-3f58fef20928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6a9ca0-f51b-4611-9774-7bef44bf58a6",
        "cursor": {
          "ref": "3449d227-c4e8-4882-95ed-51dc6ffaee0e",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "686ede19-21d3-468e-ab3a-5fb294bb5f68"
        },
        "item": {
          "id": "5f6a9ca0-f51b-4611-9774-7bef44bf58a6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "92b96e89-6707-42f0-84d0-783dc3bfc5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7963de3-1020-49b2-bdd4-55be8a304917",
        "cursor": {
          "ref": "0ff7e453-fd73-4c5a-8255-975b6ebba6d9",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "97be14e9-333c-448a-845b-ed669066740a"
        },
        "item": {
          "id": "d7963de3-1020-49b2-bdd4-55be8a304917",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4f16721d-8025-4531-b3bb-4896c496cdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5929f89c-9f9b-40f2-a489-402fad4ddcd3",
        "cursor": {
          "ref": "2d3d0ebe-2f0e-4da4-be42-f2f225ff4741",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "417f83a1-7f89-4c5f-896f-cfc77c7fca17"
        },
        "item": {
          "id": "5929f89c-9f9b-40f2-a489-402fad4ddcd3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "90c9f5f2-ff3d-4df1-978f-75bbeed5426a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6282f08d-397e-4ac1-b102-2523e5b7bb1d",
        "cursor": {
          "ref": "2fd9b6e0-dd24-47da-96db-03d3e46c6836",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ee34a2d5-2992-4e8a-aa8d-aa1ae1fbdab9"
        },
        "item": {
          "id": "6282f08d-397e-4ac1-b102-2523e5b7bb1d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5ce188a5-8629-4ec2-ac09-4c149d69abc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834bd92e-f087-40d8-99ce-2997cf843afd",
        "cursor": {
          "ref": "9bfd23f1-4e6b-4ae6-9fa3-dfdc71a80240",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5ecf9125-1c2b-490d-8ac8-59ddd0eb2a63"
        },
        "item": {
          "id": "834bd92e-f087-40d8-99ce-2997cf843afd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6051a43c-f215-476a-87ca-42aeb01c6d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c8c5be-d4bf-4bde-b8cb-e9c47e5c627a",
        "cursor": {
          "ref": "25af4a25-4564-4903-9495-d281375e7255",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "174816be-9bfb-4cd2-9644-e2a2d131acec"
        },
        "item": {
          "id": "81c8c5be-d4bf-4bde-b8cb-e9c47e5c627a",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "8e850283-404f-478d-922c-cd3358a6bf19",
          "status": "Created",
          "code": 201,
          "responseTime": 5014,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "06a33462-7b89-4137-8bb7-148d50b50b8d",
        "cursor": {
          "ref": "3310fa55-0f42-4e20-b213-7411e4f3dd4a",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5a666dcc-ca91-4dfc-95d3-d97e1f2741f7"
        },
        "item": {
          "id": "06a33462-7b89-4137-8bb7-148d50b50b8d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c789a658-97d4-4025-a2ad-6b4d1a5dfd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad7ed5d-82d2-4256-822d-b3f04c407322",
        "cursor": {
          "ref": "fbe239d2-775c-4b2a-a1b9-a273965d603c",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "86b0da97-ab7b-4ca7-8a7d-edd2e955ff08"
        },
        "item": {
          "id": "7ad7ed5d-82d2-4256-822d-b3f04c407322",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "516e42a6-e286-4b92-8a9f-b3d85bd20bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7751dfcb-9c46-4c38-bd8f-b390f6454d70",
        "cursor": {
          "ref": "99dc4f9e-0dbd-464a-a74a-8c1c7ae516b9",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c844a0a-3361-44f6-a58d-7d61ab066d4e"
        },
        "item": {
          "id": "7751dfcb-9c46-4c38-bd8f-b390f6454d70",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "edd10412-8a1b-40b5-9a25-f3e0ccc819ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa63f3b4-13f8-4f8e-b71a-b17b42b93a68",
        "cursor": {
          "ref": "f77f3344-df42-427e-adc5-0805edafb0a3",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2589b02d-f442-4db5-9e49-e8c7ad442948"
        },
        "item": {
          "id": "aa63f3b4-13f8-4f8e-b71a-b17b42b93a68",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ab5aa11d-c3d1-4167-9003-048308ee93a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32138ad2-c878-4f46-9a4f-be970f723a72",
        "cursor": {
          "ref": "448c8c4d-d2b8-4c1f-b373-394d06f8006e",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "74ef4945-3efc-42b4-a984-00be2095b5d5"
        },
        "item": {
          "id": "32138ad2-c878-4f46-9a4f-be970f723a72",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5be7fac4-7a15-4692-a26d-adf225a86bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059d35b-355a-4ec3-acb0-3cb043a92f39",
        "cursor": {
          "ref": "79c72bb6-2278-4f2c-90b4-67114367c11a",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "363bd20d-2db6-4adb-845c-0005beefdf25"
        },
        "item": {
          "id": "3059d35b-355a-4ec3-acb0-3cb043a92f39",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "13dd33c7-33a2-4515-9da6-3f21ea800cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d32f755-8b87-417c-9130-c281013c20c1",
        "cursor": {
          "ref": "073a7051-a6f4-45b9-8f80-2aef45670a2b",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "65ba4bd1-d97e-4219-9cf7-f3d8885cd84e"
        },
        "item": {
          "id": "1d32f755-8b87-417c-9130-c281013c20c1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "42587309-30d1-41e0-8601-84ff9acab98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 966,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebf16dd-a248-4f61-b2eb-9d6649945a2b",
        "cursor": {
          "ref": "be7b08cb-96e3-4984-a622-07aab76ec840",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "94fbd9b5-de0e-44aa-8a06-fa3deeae27b3"
        },
        "item": {
          "id": "aebf16dd-a248-4f61-b2eb-9d6649945a2b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "32876605-9f1f-4064-b49b-85c72f6e2a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1095,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79a2c78-867f-4354-8792-73020b4d97d9",
        "cursor": {
          "ref": "c19c9a65-c202-4c15-9706-e64bb656a368",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c0e4b232-25df-4e31-8cde-aa148443666e"
        },
        "item": {
          "id": "d79a2c78-867f-4354-8792-73020b4d97d9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f571ba03-43b3-4cef-8b22-5f600f6ab676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1014,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216b36f8-78c9-4daa-a132-85851135b679",
        "cursor": {
          "ref": "5313c04f-8c2b-457f-948e-510ab3738c25",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c1bc8fc9-9e61-4930-ac7e-a889aeaf3dba"
        },
        "item": {
          "id": "216b36f8-78c9-4daa-a132-85851135b679",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "31178249-4589-43ef-80f4-023e07c54f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6adedb-e127-48ca-ac02-27a46d4f0794",
        "cursor": {
          "ref": "7d132866-f165-4078-8fc9-c7093da3a737",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f689820a-3932-4bb3-9280-20fa32b1fd47"
        },
        "item": {
          "id": "db6adedb-e127-48ca-ac02-27a46d4f0794",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c38873e5-d657-4849-85b6-acc120edf4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ba69b0-83cc-4f48-9e14-65a0816e7ea5",
        "cursor": {
          "ref": "005e6455-7e90-40dd-a532-7daa42064267",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4801638b-4f62-4f22-88b1-7772698284c1"
        },
        "item": {
          "id": "00ba69b0-83cc-4f48-9e14-65a0816e7ea5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4b1bc5a8-5bb9-434c-8da0-2ec5bf788c61",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2427,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "4342e9bb-7e64-4337-88d1-7393853428c7",
        "cursor": {
          "ref": "a14ddf77-bef1-4b4d-a430-fb1c5ddcbf34",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "61951dc6-0739-4ebf-b955-e92adf1e81bd"
        },
        "item": {
          "id": "4342e9bb-7e64-4337-88d1-7393853428c7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bd7911e9-9605-4752-83fe-c46337a44bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81db5ebd-d1bf-44eb-94b5-f41b13fcaf00",
        "cursor": {
          "ref": "1c90930b-ddc9-452f-8c58-12f111b0c298",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c191a200-732f-4eda-8730-7ac7368589fa"
        },
        "item": {
          "id": "81db5ebd-d1bf-44eb-94b5-f41b13fcaf00",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc337f07-b375-4b21-ba04-3acf36dfee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38648a6-5747-4099-9f30-dda891e3d8f7",
        "cursor": {
          "ref": "0401073e-df2d-48b8-aba7-552f9a84486d",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6309e4d3-c98a-4034-a54e-6dab08860372"
        },
        "item": {
          "id": "c38648a6-5747-4099-9f30-dda891e3d8f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ac23cab2-440e-44ef-9aac-66a7694c8efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ccc758-c98f-41f7-a400-640c71997c34",
        "cursor": {
          "ref": "db4c0745-90ad-45dd-9f58-16a6b4526a16",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c3de48e8-e01b-41ac-8ec3-d5ceba13812c"
        },
        "item": {
          "id": "f5ccc758-c98f-41f7-a400-640c71997c34",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "06d8b7db-fb75-4ebf-b777-9c8fac4d29bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b442d5d-35ad-4afc-a635-307a3dec1941",
        "cursor": {
          "ref": "38ab1184-d54d-4a72-a09d-d4dafcf12050",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f006ddd3-49d7-4889-baf3-96ccd50b92b2"
        },
        "item": {
          "id": "2b442d5d-35ad-4afc-a635-307a3dec1941",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9327bf4e-7bdb-4720-8e78-f32f1144e2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36d5100-d665-48e6-baf5-929c6fc1f1fd",
        "cursor": {
          "ref": "0a7c5d15-6806-43ab-af1f-3fcda0fad74b",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "65b02586-1906-4028-a6c3-2fb89804af95"
        },
        "item": {
          "id": "e36d5100-d665-48e6-baf5-929c6fc1f1fd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2480cf06-d109-4a7b-a763-ab602f454905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca64b84-1245-4216-bd6c-615ec90a4ea2",
        "cursor": {
          "ref": "8abc1448-94f2-4b6d-8b49-a6a94d709cd8",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6c407e21-4895-439e-b23a-b120bb6dfdb6"
        },
        "item": {
          "id": "1ca64b84-1245-4216-bd6c-615ec90a4ea2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "de7f40c9-a670-4674-bbe8-939b5ff348c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af8fca2-41ee-4b56-b950-02ad1c5720ab",
        "cursor": {
          "ref": "1cfe8d04-4e6c-4e65-8a83-5ec4b0838c62",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d9be359f-b482-4074-85fb-5d74b6253eb7"
        },
        "item": {
          "id": "3af8fca2-41ee-4b56-b950-02ad1c5720ab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0ad5c36d-7e60-4603-8693-b84a7a6bad16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdb3e04-32a2-411e-9b4c-ec68660e31fc",
        "cursor": {
          "ref": "9cb0ab81-032d-4fb6-9466-38b89ee541ae",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "83e32def-c23f-4919-9c85-b9ab1b65d462"
        },
        "item": {
          "id": "ecdb3e04-32a2-411e-9b4c-ec68660e31fc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "302688c1-2771-42e5-874e-b862d53d1cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0c8867-c1ee-4f07-a58b-df928856dde4",
        "cursor": {
          "ref": "18c36e00-9a29-4640-b832-9f1ce56f3493",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c88f47ed-5b88-440b-9aa2-e75b48ebedd7"
        },
        "item": {
          "id": "fb0c8867-c1ee-4f07-a58b-df928856dde4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "71922549-c5b1-4936-ac3a-69ddbff82445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbdaf81-a4df-43ef-a760-4712d928f0c3",
        "cursor": {
          "ref": "df7e2fe7-3ea5-4762-8480-7e7405758ec1",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "15585604-4e56-48bf-bf93-32bfd6e7b63a"
        },
        "item": {
          "id": "5dbdaf81-a4df-43ef-a760-4712d928f0c3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4c20882b-d9b7-45dc-abfa-0b815d6c3f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790b1f1c-df02-4e08-b003-3ba204601634",
        "cursor": {
          "ref": "e8330b3c-751f-44ba-becf-f67012fce5b6",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3a2e16bc-9fdf-4fd0-884f-43232d28ee81"
        },
        "item": {
          "id": "790b1f1c-df02-4e08-b003-3ba204601634",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "436f41b5-47c0-4652-9d26-d11978eb31bd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 693,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990e7e4a-f1af-4bbd-9459-89022815218a",
        "cursor": {
          "ref": "227575c1-f651-472b-b3eb-ff5b50645632",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80a14243-4ce5-4958-819a-0cc522736613"
        },
        "item": {
          "id": "990e7e4a-f1af-4bbd-9459-89022815218a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6cbe0a11-485b-4a83-96eb-2b61e371e43f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 637,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "9f655c46-8500-496e-ae76-e3a7bd248564",
        "cursor": {
          "ref": "de80a33d-758a-4c1d-b974-835f2e47423a",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "de9f5eb3-dbea-4bb1-8ae5-816bf494d06f"
        },
        "item": {
          "id": "9f655c46-8500-496e-ae76-e3a7bd248564",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b177a7ac-8879-420e-be89-9b6a6a53ca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c534bd7-2364-41a1-8fa3-559ab5a346f4",
        "cursor": {
          "ref": "acfde6d8-ae09-4fae-86e8-b62e940c3074",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ea07b51a-494f-48ad-9925-7527c5ebdbcb"
        },
        "item": {
          "id": "8c534bd7-2364-41a1-8fa3-559ab5a346f4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0c1675be-0025-42ac-858a-17fa5d21f84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df477fa1-a343-477c-bcf1-da1bc3bd124f",
        "cursor": {
          "ref": "b80f4884-5e5d-41c4-b4a5-92ea958f10e2",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "08002358-d328-41d3-b02f-fbbe3416b296"
        },
        "item": {
          "id": "df477fa1-a343-477c-bcf1-da1bc3bd124f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d2c8ee2-304f-4996-bde7-434308d2e382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82f67f1-eb44-4e1b-97d8-c3b79464809e",
        "cursor": {
          "ref": "f0eb2c3e-336f-4c9b-a91f-ff73be95aa1d",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3d513da7-9e5b-48d3-9edc-6805a61636c2"
        },
        "item": {
          "id": "e82f67f1-eb44-4e1b-97d8-c3b79464809e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3bd44718-12f8-4863-a2f7-ee47a5717ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9456377-0686-44ac-a189-b92456b53907",
        "cursor": {
          "ref": "36c37921-d198-4f9c-80cd-81858ab8c403",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7ae76b2b-2121-45e8-bcaf-2fef43f85bff"
        },
        "item": {
          "id": "e9456377-0686-44ac-a189-b92456b53907",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e79f5970-6626-4600-92f3-da242dce36d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5192f7e-8f58-4df9-a118-37276084865b",
        "cursor": {
          "ref": "d0e9df73-76bb-494c-9538-971d0ea967aa",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "83e01fe4-ad2a-4fa1-8e4e-c69752a272ac"
        },
        "item": {
          "id": "b5192f7e-8f58-4df9-a118-37276084865b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9bfcd4ad-6418-46a1-bcdc-14006f944acb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 671,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9da9f3-b743-4546-90cf-0fa4d180542e",
        "cursor": {
          "ref": "e26bfa73-737a-4b77-88dd-657aac82d26f",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "875cc7ec-2b59-4197-b307-2f01a6584269"
        },
        "item": {
          "id": "bb9da9f3-b743-4546-90cf-0fa4d180542e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d9a41f79-b5ad-4a50-9708-d9840760720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cb7910-12ea-41a4-a8a0-f017f90b725a",
        "cursor": {
          "ref": "37b6ef80-957f-4197-bcf3-372df9bb0af1",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "072b46fe-caf6-48c9-bea4-14edb66b20c9"
        },
        "item": {
          "id": "55cb7910-12ea-41a4-a8a0-f017f90b725a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c83073cc-ed7b-4fe1-9829-10f03f44cac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae43c5c9-8b51-45b1-80cc-ed13751255e0",
        "cursor": {
          "ref": "386a66a2-9f06-4e75-9063-080725d3adc0",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df5a86d0-1b73-471f-9729-3355c8202c5a"
        },
        "item": {
          "id": "ae43c5c9-8b51-45b1-80cc-ed13751255e0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ac9add37-13e2-45b2-9e26-7a242012e383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6e40fb-6856-42c4-8afd-ffc83b104dff",
        "cursor": {
          "ref": "a7e02790-6829-4a76-9b08-4fedb64f91b1",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e6d173a4-fa1d-4140-800f-f88801e507ea"
        },
        "item": {
          "id": "3e6e40fb-6856-42c4-8afd-ffc83b104dff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c255f8b5-93ae-4c3d-9313-10f6c7e77736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106eb345-90e9-45d4-948b-64e3a42a1bef",
        "cursor": {
          "ref": "292e148d-6cbc-46ab-a17e-881efa6ebddd",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4bd3b415-cd30-42dd-bff1-1a8321a25d79"
        },
        "item": {
          "id": "106eb345-90e9-45d4-948b-64e3a42a1bef",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "54f3e219-6d3d-4694-8bb4-ade4d2baf365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047af138-a960-4087-82dd-910fe1ed02d2",
        "cursor": {
          "ref": "3602c40b-76c9-4c50-b8f0-9dc8c0b36875",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5e768fea-8685-48dd-b74f-e102ca22f658"
        },
        "item": {
          "id": "047af138-a960-4087-82dd-910fe1ed02d2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8baa3292-7c98-4f3a-a332-a939a45493d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1217,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bdf0e3-1755-458b-bffc-4908135caf10",
        "cursor": {
          "ref": "e5153b1a-8e74-4965-9d7c-74d553ab378b",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b4d626fd-6cea-47f0-8926-9e61b108b690"
        },
        "item": {
          "id": "59bdf0e3-1755-458b-bffc-4908135caf10",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "15c0beaa-927e-4ba9-8a74-2685c2f952f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de149e1d-fe1d-497e-a78f-b23113b76fc1",
        "cursor": {
          "ref": "0cf08241-4246-48fb-bf67-20cda6734d95",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9ed33cfe-12c7-461a-8075-5c50f91598b8"
        },
        "item": {
          "id": "de149e1d-fe1d-497e-a78f-b23113b76fc1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "380837ed-9777-4c15-87c2-877edb1a7c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1563,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d9c43-0e30-475a-9141-3a2a0e9cea83",
        "cursor": {
          "ref": "ac812c2b-0bdc-4699-bb0e-8313bdce5096",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b4e5b386-c4f4-4ee8-940b-a5b0c347e337"
        },
        "item": {
          "id": "119d9c43-0e30-475a-9141-3a2a0e9cea83",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f440f120-f9e1-4c1e-814e-f047ca5bbcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1361,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090e3d73-272b-4393-9c92-694d011b0fae",
        "cursor": {
          "ref": "d97ee169-afd3-40e8-89b2-dedb91e3632f",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "df97e995-cc7d-41e4-bb8f-1f71ed8248d0"
        },
        "item": {
          "id": "090e3d73-272b-4393-9c92-694d011b0fae",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8f3a1a24-e294-4591-b507-af1b19e67dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1902,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a5df5c-be2e-40f5-8e5f-b9bc370193af",
        "cursor": {
          "ref": "352d7317-f3c1-4c18-83a4-c84d5438929f",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4c52cadb-8f3c-41a1-8f0c-f1db1c9871b5"
        },
        "item": {
          "id": "a4a5df5c-be2e-40f5-8e5f-b9bc370193af",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "23f08243-9341-417a-b89a-61bee8ee1c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccf9684-3f8a-468c-814d-f34e7505614d",
        "cursor": {
          "ref": "1c13ba6b-a16d-424f-be6d-e00dce7e78c1",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9f6ae6fa-c9ba-428c-9e4e-a23237cba1ad"
        },
        "item": {
          "id": "dccf9684-3f8a-468c-814d-f34e7505614d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3854da99-2d7d-4e69-b9a9-e7400cce8e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1021,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea491e1b-10b9-4db4-96a6-ab160b561faf",
        "cursor": {
          "ref": "594a20cb-f9f1-4314-9bf8-9d74431a8ea6",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1db97deb-97a3-405e-99b8-fa6e343628b1"
        },
        "item": {
          "id": "ea491e1b-10b9-4db4-96a6-ab160b561faf",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "61ed1455-1040-4a9c-919d-e2cee63824d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 884,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40abb2c9-a403-44b6-bcd8-60fee0839e7e",
        "cursor": {
          "ref": "9e2c52d4-d10a-44a6-82e5-c0a20f6985c9",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f200b953-4833-47d1-a57f-dd3946eb7312"
        },
        "item": {
          "id": "40abb2c9-a403-44b6-bcd8-60fee0839e7e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8634bfa4-5681-41fb-b5e9-5be07ce79689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89be8e1-6952-446a-ba46-b21a732a3070",
        "cursor": {
          "ref": "3ed9030c-5bf3-4a95-973d-576a09de86a7",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6389e5be-7178-48cd-b1e9-5f9de5ca8894"
        },
        "item": {
          "id": "e89be8e1-6952-446a-ba46-b21a732a3070",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fb0de5b6-bf94-44f3-ba43-e6455ac27a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45643035-b3af-4700-b47b-791e661ed996",
        "cursor": {
          "ref": "56bb69a4-5b72-4e6f-b189-e90c91a73d64",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0342d849-9bfd-45ec-992e-44801a56ef3c"
        },
        "item": {
          "id": "45643035-b3af-4700-b47b-791e661ed996",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f7dc7ef6-365c-41cd-ab0f-5084f0f65084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf86d006-3629-4295-b005-411c486fbca3",
        "cursor": {
          "ref": "324cb4be-ce9e-4711-a118-2203fe26beae",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9a607c94-38a4-4847-b0c2-c6955ce348b5"
        },
        "item": {
          "id": "bf86d006-3629-4295-b005-411c486fbca3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "af6f6d53-e666-4231-9e79-576684d17426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a88fdd-0600-4d24-995e-96e300da30f0",
        "cursor": {
          "ref": "fcc4873d-106e-4767-a951-bfa26f455991",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "509ab3c5-c1c3-4755-a096-1a615582617f"
        },
        "item": {
          "id": "85a88fdd-0600-4d24-995e-96e300da30f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4fb37486-5ddf-4451-8039-0b22e1606a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e309c6af-890d-49b4-818f-f6cc6384f972",
        "cursor": {
          "ref": "d60ee94b-03f8-4ca0-a1fe-fe768d43246a",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4c48a5ec-4531-43e1-a5c2-2b343a21f4e3"
        },
        "item": {
          "id": "e309c6af-890d-49b4-818f-f6cc6384f972",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "203cb851-1a5f-461f-b2c1-e4741eb4837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4c304a-5ac5-422f-a676-83e5f87b343a",
        "cursor": {
          "ref": "447daa1b-2929-4694-aa0b-fd30b0ef64a8",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5b1d6334-e0ab-4085-888b-4c0e1bf8d798"
        },
        "item": {
          "id": "3d4c304a-5ac5-422f-a676-83e5f87b343a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aa2054f7-eb6e-44fc-a667-efb8ecb85906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d94ce8-a609-49e7-a32a-60f74762bf96",
        "cursor": {
          "ref": "22e7ab66-960e-4ea0-9e59-c110891bd208",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6a7c602d-ff6d-4729-b774-a1a27d6690aa"
        },
        "item": {
          "id": "09d94ce8-a609-49e7-a32a-60f74762bf96",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8899a9e1-92fe-45a1-8965-87cf92907844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e716a0b-1007-4a11-b74c-dd10513bca0f",
        "cursor": {
          "ref": "e069ad06-0148-4934-8029-140f50449c43",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "33d21cd9-1bce-468b-8489-0b2c5b966772"
        },
        "item": {
          "id": "3e716a0b-1007-4a11-b74c-dd10513bca0f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f434c190-3c55-4d90-954d-a6ddacc9f700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98199d17-ec11-4d65-b586-4d9c06b68b55",
        "cursor": {
          "ref": "a301e323-5164-4cd7-867f-aeddf16312d2",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f9a7e99d-6c1d-42bd-9d96-5a2cec0695ea"
        },
        "item": {
          "id": "98199d17-ec11-4d65-b586-4d9c06b68b55",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ee8f0c92-4532-40b9-8f18-e0c8d0b0a3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8ac3da-8ba2-41c5-b3e2-38a6b0f9f2c0",
        "cursor": {
          "ref": "e48725ea-655d-469d-b02d-3e0cdd82c28b",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d8c76f99-3218-4211-b92b-09cf604cddcb"
        },
        "item": {
          "id": "0d8ac3da-8ba2-41c5-b3e2-38a6b0f9f2c0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e67944ff-3b87-45e7-ac0b-660a19f2b0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140f7f80-e590-40f7-8f3a-cb4baf84e508",
        "cursor": {
          "ref": "a0745836-2ba6-4391-90fa-cd202079c8b9",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dc7a8853-d75f-482d-ba50-7ce9944baaf1"
        },
        "item": {
          "id": "140f7f80-e590-40f7-8f3a-cb4baf84e508",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "38b67040-d7a2-4e6a-9042-d9b6fbf3c397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf809b1-7da6-46eb-b08c-30711407bbd9",
        "cursor": {
          "ref": "02bb3683-f91f-4069-ae19-c2580f9a06b8",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2b6fcd3d-45df-4929-9c4a-576fcad76d69"
        },
        "item": {
          "id": "acf809b1-7da6-46eb-b08c-30711407bbd9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "08583f07-e494-4c37-a57c-8874d4e5ea93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe2c5a8-bb27-4154-83c6-46b68c46c929",
        "cursor": {
          "ref": "b06bfd49-65e4-4cae-87bd-0f6a5a7e0c4e",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5731a3be-6044-45e9-939b-0769fa6e79dc"
        },
        "item": {
          "id": "efe2c5a8-bb27-4154-83c6-46b68c46c929",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e9a3fdda-352c-4319-88d7-a42651db850b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 689,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b639cb7-007d-4600-a15e-2197a7404ce8",
        "cursor": {
          "ref": "58df280c-4d14-4538-994f-a72ac31cbd53",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "40dcd164-9f73-4931-be3f-57c1bc2e8bae"
        },
        "item": {
          "id": "9b639cb7-007d-4600-a15e-2197a7404ce8",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "638c5c9b-2496-44e7-8584-adfbfce34748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668df0be-85e2-4f69-9096-6a9a6fc4e484",
        "cursor": {
          "ref": "4a78553e-4bad-4ef9-af12-52ba0d945775",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "636aee92-fe9a-4e91-a5a8-8bb948b1e3b2"
        },
        "item": {
          "id": "668df0be-85e2-4f69-9096-6a9a6fc4e484",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "687ca2ac-24dc-45ce-bd23-84512b4e0465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b00c0eb-0e95-4632-b4a8-4596a4fbc432",
        "cursor": {
          "ref": "5e0ba4f4-9088-47f0-b678-d260e5e39a95",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "181bebef-8fcf-4190-8d9e-1e35563932de"
        },
        "item": {
          "id": "9b00c0eb-0e95-4632-b4a8-4596a4fbc432",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1a988565-beee-4ed9-be7b-c6ba6d90c04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e5b768-34f8-45c2-9ff0-a2e6bc0c8ce2",
        "cursor": {
          "ref": "8db840bc-b923-4f91-b064-1cfc384f40ce",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8d200eb3-9a81-4ad6-9d02-1c1bddeb2bf5"
        },
        "item": {
          "id": "59e5b768-34f8-45c2-9ff0-a2e6bc0c8ce2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a323c23f-c95d-4c2f-acff-4ebcb3a8e58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf07b1f6-d78e-419e-a732-37bc9784faa6",
        "cursor": {
          "ref": "16f61696-4d03-4b3e-9be3-f50cbafd511b",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e0d9a2a3-ea42-4538-9f26-c7337a518111"
        },
        "item": {
          "id": "bf07b1f6-d78e-419e-a732-37bc9784faa6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6a42fb26-9c65-4e40-a3ca-bee987471555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c4c594-75ce-44b9-86d1-f65d7d036bb9",
        "cursor": {
          "ref": "9d9d033c-ba0d-4607-a8cf-6a36a14eec78",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e0719563-9f0e-4250-a95c-522c5d715fa8"
        },
        "item": {
          "id": "62c4c594-75ce-44b9-86d1-f65d7d036bb9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "351683f0-010d-4424-a4fc-6c77eb127706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30ef102-4f3c-4556-bb61-c3a62b96e060",
        "cursor": {
          "ref": "f9ee09e1-e640-4101-91a8-3ae6c162aebf",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c73dc5e3-14a5-407f-9970-10c92e902e32"
        },
        "item": {
          "id": "b30ef102-4f3c-4556-bb61-c3a62b96e060",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ff4645d-9209-472c-8ff0-a60aabf8aad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf02492-dc99-4df4-bdb5-b98e0829d2cc",
        "cursor": {
          "ref": "acc1cd1f-015e-4b27-98df-b0071e7da3bc",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a2cea012-4772-41f8-8942-e1ff0cf431f9"
        },
        "item": {
          "id": "0cf02492-dc99-4df4-bdb5-b98e0829d2cc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3c26c16d-d452-45b6-a686-434e02b49fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a167dba-5bbf-4fac-8bf5-11b6b2e2a5c7",
        "cursor": {
          "ref": "7a69b94b-84d2-4d96-9191-c1aa6e7e2d88",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "1f649903-ae76-4070-930e-ac94df420b3f"
        },
        "item": {
          "id": "2a167dba-5bbf-4fac-8bf5-11b6b2e2a5c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3731f637-1cc9-4f47-b0aa-1d185dd51a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5d47ce-80d7-4d64-a5fb-1a0f0d8a9701",
        "cursor": {
          "ref": "80baa068-e365-420d-a7f6-90dcca47cd3b",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ea637c0-a034-4064-b85c-7261d6bc4fb5"
        },
        "item": {
          "id": "8d5d47ce-80d7-4d64-a5fb-1a0f0d8a9701",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d09e8814-27b2-4389-a13b-25d26b3461f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9671b6f8-3d92-485e-b170-f195d953d7f2",
        "cursor": {
          "ref": "4d469270-bd01-41e7-a14d-337deb0987c3",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "88521a21-fb1c-49b3-b15f-96b0a6f8cfb2"
        },
        "item": {
          "id": "9671b6f8-3d92-485e-b170-f195d953d7f2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "49f65800-6a42-470f-ae52-185548605ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d126547-4578-4454-b23d-ec7ab1aed524",
        "cursor": {
          "ref": "0261f7af-f078-4ba4-b302-697c7b58ba4b",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "03fe818f-cd2c-409b-9571-b9f1c82f9db0"
        },
        "item": {
          "id": "6d126547-4578-4454-b23d-ec7ab1aed524",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7a30ad58-44fd-4d78-a97b-631e814a2fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a2e048-15d4-4cf5-81bb-7c36deec1d90",
        "cursor": {
          "ref": "f03320c7-3b26-4790-9f2d-8b31d98dfc49",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e6701d54-c498-4fcf-85f1-2f5ee4899ca5"
        },
        "item": {
          "id": "f0a2e048-15d4-4cf5-81bb-7c36deec1d90",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d7333b19-78dd-4d5a-b782-6f8703dee475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff66dfa-d2b3-46b0-b4e7-155418ae53a2",
        "cursor": {
          "ref": "e7241591-a773-4095-8686-c8793aae2dd7",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "69d595a5-83bb-4c35-b339-c339a859b004"
        },
        "item": {
          "id": "1ff66dfa-d2b3-46b0-b4e7-155418ae53a2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d332aa38-68b5-474a-bbf8-f23b9ffff70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3139d218-53bd-4670-986c-502a4351768b",
        "cursor": {
          "ref": "ddd5bebe-e05c-40a7-a65b-75d7195d9978",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8ad7a5e1-2ba6-4c4a-bfc4-a873c43ed557"
        },
        "item": {
          "id": "3139d218-53bd-4670-986c-502a4351768b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3b865160-50bb-4e6b-b108-1b2cf3b6f63a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7a1743-2402-4c45-8625-ee7d606f50f8",
        "cursor": {
          "ref": "198c971a-f90b-4407-8901-125c5244ebbb",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bfa96523-9f39-441d-bf7c-e3652878c838"
        },
        "item": {
          "id": "6d7a1743-2402-4c45-8625-ee7d606f50f8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3b6e0a54-cbde-46b3-ac83-87373c72af43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee3d404-9163-404c-87e3-ea4aa1084bb4",
        "cursor": {
          "ref": "57a1cb81-21ca-4ea5-b132-7e743f43c2b6",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "17056807-b96d-439c-9904-3102c9bf90d0"
        },
        "item": {
          "id": "7ee3d404-9163-404c-87e3-ea4aa1084bb4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e7d99dd5-4f82-4c91-9a40-39c0fcb5a7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d55f1d3-a704-4eaa-b458-40fc63ec4933",
        "cursor": {
          "ref": "3cafa024-6c32-48c5-9541-f4c8e786e64b",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1e763fc6-0b41-4e96-a683-7332b7828c74"
        },
        "item": {
          "id": "1d55f1d3-a704-4eaa-b458-40fc63ec4933",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "09478a90-f5a8-49ff-9dd6-038c081e2905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130f5bc0-7a85-4cc8-b025-90c07919463f",
        "cursor": {
          "ref": "043ed36f-c21c-4753-8919-e01a32c89c2d",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "beb7ac0d-9db3-4d5a-90cc-8880dce8168f"
        },
        "item": {
          "id": "130f5bc0-7a85-4cc8-b025-90c07919463f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "781d111a-a227-4798-ae88-63216963b9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 875,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd676961-ce2d-4f1d-b941-470bca6e7170",
        "cursor": {
          "ref": "afd1b1c1-11b7-4f11-b70a-b8d93e480dd5",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d390b9ab-8330-4868-9797-6ec5c1c1aaee"
        },
        "item": {
          "id": "fd676961-ce2d-4f1d-b941-470bca6e7170",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d0601017-2289-4ea0-812e-613b1aa71cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 985,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53296de8-ff77-42b3-98aa-0c6c8ccebfa7",
        "cursor": {
          "ref": "2bb14783-62cf-421e-96ae-4d89c94553fd",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1cfaa5cc-b3e3-4f89-b0be-a6417f3a09ef"
        },
        "item": {
          "id": "53296de8-ff77-42b3-98aa-0c6c8ccebfa7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3de53fe7-d47a-4e7e-94c8-6bca04068214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb20b89-596d-482d-b9f1-37d405b64845",
        "cursor": {
          "ref": "0f14b7aa-a11f-4d50-8ae9-85425419aaf0",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b87eec3b-4dec-462f-b2e0-d71c93789f19"
        },
        "item": {
          "id": "bfb20b89-596d-482d-b9f1-37d405b64845",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "aba9d423-3250-40c5-b562-a59c837a09cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcb7727-525c-4a38-9928-4af998686c18",
        "cursor": {
          "ref": "6c0559b7-2b5b-488c-ad48-9c99d94b28cb",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b11b0167-6dca-4d35-a9d5-1c9cee21b88e"
        },
        "item": {
          "id": "ebcb7727-525c-4a38-9928-4af998686c18",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e67b3c67-19a2-4fea-aac1-06b12d4b68bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f635bb13-20f8-46da-b50e-cdf597fee627",
        "cursor": {
          "ref": "faf183a2-7cc2-4f07-bc71-b5b2cef841ec",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ec5fc5aa-969b-42c2-bd58-dbe5e385852d"
        },
        "item": {
          "id": "f635bb13-20f8-46da-b50e-cdf597fee627",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "439e4673-f674-4a97-bdbb-22b9fbfe4737",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 846,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c73b5b9-eb0e-4282-900f-c44c623a7aa9",
        "cursor": {
          "ref": "623aa54f-e06b-4704-8733-db0a4658e730",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c1451014-7686-49c6-801a-2baf4962ec59"
        },
        "item": {
          "id": "6c73b5b9-eb0e-4282-900f-c44c623a7aa9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5781b687-2848-48f8-a27a-fcd9c4b52efa",
          "status": "Created",
          "code": 201,
          "responseTime": 5716,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "aa82af85-096a-4c0d-a2f4-e20b91098b6b",
        "cursor": {
          "ref": "d840997d-fcb3-4007-818f-6ba6d21bc562",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4bb9cea8-b61b-4665-8b1a-082c695943ef"
        },
        "item": {
          "id": "aa82af85-096a-4c0d-a2f4-e20b91098b6b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dab9d573-c688-4abd-8a1b-3e313e6d0c28",
          "status": "Created",
          "code": 201,
          "responseTime": 8891,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "558a29a6-ebfd-4297-9e6f-6c9bee50e678",
        "cursor": {
          "ref": "0bab2413-a45f-4869-8b8e-674c96db150a",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e8a10072-88ec-4aab-8ba4-2e2f82191e7a"
        },
        "item": {
          "id": "558a29a6-ebfd-4297-9e6f-6c9bee50e678",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7015f471-9317-4c3a-9385-032aa1fa8087",
          "status": "Created",
          "code": 201,
          "responseTime": 4739,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "78a838e0-189c-40e4-a7f3-a03d08c5f6b5",
        "cursor": {
          "ref": "8a0dc363-6a02-4066-aedb-ff0b2d92d639",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dcd1c2b5-0681-48c7-a8aa-0544237f85b4"
        },
        "item": {
          "id": "78a838e0-189c-40e4-a7f3-a03d08c5f6b5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9d98219f-7861-4d67-9586-9d4bf1459f10",
          "status": "Created",
          "code": 201,
          "responseTime": 4736,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "faddee02-2e99-4a19-a126-a4191382aa46",
        "cursor": {
          "ref": "e583412f-aaca-4a87-86b1-ac07065107a0",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "146e4417-c240-415c-8c67-a789b31bdb06"
        },
        "item": {
          "id": "faddee02-2e99-4a19-a126-a4191382aa46",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a0deba48-79d9-477f-b61f-d878ffa8109f",
          "status": "Created",
          "code": 201,
          "responseTime": 7732,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "38c80a83-7e30-41cb-9975-601b155743e6",
        "cursor": {
          "ref": "00d154b9-792b-4f2a-9396-582dc5b2a4bd",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "951fa518-3b41-4d70-b2dd-c01446f69f3b"
        },
        "item": {
          "id": "38c80a83-7e30-41cb-9975-601b155743e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e37f75f-e0c0-477c-88b7-5ab376772414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c80a83-7e30-41cb-9975-601b155743e6",
        "cursor": {
          "ref": "00d154b9-792b-4f2a-9396-582dc5b2a4bd",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "951fa518-3b41-4d70-b2dd-c01446f69f3b"
        },
        "item": {
          "id": "38c80a83-7e30-41cb-9975-601b155743e6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9e37f75f-e0c0-477c-88b7-5ab376772414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5990205-0a13-4246-8d2d-fd7471235e26",
        "cursor": {
          "ref": "92f40fe3-7f6d-4808-bec9-1b37782ae80f",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "dfedf58c-3d55-4441-84e2-51ff41fa59f0"
        },
        "item": {
          "id": "d5990205-0a13-4246-8d2d-fd7471235e26",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1c457f28-fbd5-4a07-9f13-30d0f793c7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1571,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5bda4c-29d8-4287-af65-b043e22b7e65",
        "cursor": {
          "ref": "984e2995-6fa0-413c-a8ab-0433dae1567b",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "2add141c-a791-435a-a895-5ea4b44208a2"
        },
        "item": {
          "id": "fd5bda4c-29d8-4287-af65-b043e22b7e65",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f76096b2-9eab-4c91-a366-c4db17722bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1175,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654a40cb-39a7-4216-a854-427db1320a81",
        "cursor": {
          "ref": "1d6bccf7-8ec9-453e-97d2-d0f6c7e99f81",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "10965732-1524-4cea-ad83-625f6fc0e400"
        },
        "item": {
          "id": "654a40cb-39a7-4216-a854-427db1320a81",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce554765-2ed5-46c0-8906-a5cc945cd86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b7a8e6-b128-4c7b-b868-441d36d205fc",
        "cursor": {
          "ref": "e9d063f1-b84e-4858-9afe-61c522fdf2c3",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "10430b68-1a6d-4fa0-be45-d71f5f77ebcd"
        },
        "item": {
          "id": "31b7a8e6-b128-4c7b-b868-441d36d205fc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fdec8112-d692-4230-8a33-755a281de90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b50c64-bd57-4956-b2e6-5724e4eb37d4",
        "cursor": {
          "ref": "badd2777-1d9e-4ac6-9bca-68eb9d59d48b",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "01e204e1-3abd-45d7-8349-9727d6acc88f"
        },
        "item": {
          "id": "e1b50c64-bd57-4956-b2e6-5724e4eb37d4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "70f754b8-4e76-4c3e-abfe-12f9a260b177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f48e75-c378-4245-8cee-963471d62583",
        "cursor": {
          "ref": "eaeab0d8-4bb3-4bda-8026-c7b1a95810c9",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2d21ec0e-fe4d-4eb0-b46d-9be20e4911a6"
        },
        "item": {
          "id": "a3f48e75-c378-4245-8cee-963471d62583",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "06f22b9c-ed83-42eb-806c-196f5b1e55dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5904ca22-f052-419c-abee-5a2fe8da7b0e",
        "cursor": {
          "ref": "88560757-a865-49a1-a247-26ae21ba019e",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9be42b27-1404-4237-b0be-a440309c7d00"
        },
        "item": {
          "id": "5904ca22-f052-419c-abee-5a2fe8da7b0e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1ae2fc40-83cc-4aa4-bf48-b06840af86d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc2b8fc-58b9-4de3-a143-b3fc26cfb8fe",
        "cursor": {
          "ref": "b00f4040-5bcd-44b3-9c9b-135511520ef5",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d5901c29-7f63-4467-81af-3665f79bc203"
        },
        "item": {
          "id": "9dc2b8fc-58b9-4de3-a143-b3fc26cfb8fe",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "87cd931a-4f14-4117-8a03-015154de130d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7862e5b5-2b75-47f2-844b-42adb7261324",
        "cursor": {
          "ref": "77359cc5-6e56-4266-bf7a-d11b7375c6c4",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "54741f11-0ab2-4d4e-a551-24711752787d"
        },
        "item": {
          "id": "7862e5b5-2b75-47f2-844b-42adb7261324",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7e3b2b97-2871-4131-8991-8ed4c77249e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed87d396-fcf3-47d6-be86-34a021324866",
        "cursor": {
          "ref": "5bc805e0-b61d-4e29-b054-802a83d906f1",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5725f132-62b4-4588-8ce8-39ab48770f2e"
        },
        "item": {
          "id": "ed87d396-fcf3-47d6-be86-34a021324866",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1cf7f5d4-3796-463f-b243-e137141293af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afec0d6e-da64-40b7-8b90-2d692e89b8c9",
        "cursor": {
          "ref": "d8ce9570-e025-4d1f-a849-e65592496253",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f6ce7244-0562-48d8-bfb4-01b8b0ef7adf"
        },
        "item": {
          "id": "afec0d6e-da64-40b7-8b90-2d692e89b8c9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d6eff0e-6345-4078-a46d-87dd1b35abdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f8c89a-9c61-4c8b-9f0b-742688a948a8",
        "cursor": {
          "ref": "90a306a2-3a45-4e5e-b25f-a99efd45b8fd",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "76348df7-a89b-4215-9d52-66293094b125"
        },
        "item": {
          "id": "74f8c89a-9c61-4c8b-9f0b-742688a948a8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "937ad705-10d6-4650-9f2c-df923a460bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9474ed81-03e4-4975-8d87-578191e6da53",
        "cursor": {
          "ref": "79d24585-6eac-48c1-b5e3-41e5831f0a0f",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "06cb29d0-a928-4ce6-a162-f13bd359ea26"
        },
        "item": {
          "id": "9474ed81-03e4-4975-8d87-578191e6da53",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df002fbc-f951-4ba5-82e3-8942201470cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f17683-f5c2-4a60-8b9f-7ea7e0b6d5c5",
        "cursor": {
          "ref": "8a289e5c-6ad1-48fe-9426-fda1252047f4",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8e2158f3-c2eb-44b2-a7b1-389c8a3f73d3"
        },
        "item": {
          "id": "d6f17683-f5c2-4a60-8b9f-7ea7e0b6d5c5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "85be94dc-b942-4982-b964-7c4a25f55ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2f47e7-3685-47d2-bbcb-2cd352bcdc0b",
        "cursor": {
          "ref": "cf4dffdc-0297-45ff-80a6-2f19ae0dd802",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8c72a713-73b8-4317-b33e-881d2df85ac9"
        },
        "item": {
          "id": "ee2f47e7-3685-47d2-bbcb-2cd352bcdc0b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e958f28f-3352-4986-a4ec-7de0bcb7e06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ad381c-ef0c-4839-98df-640161a6949d",
        "cursor": {
          "ref": "ce10fd6e-7a66-44e3-af09-fc70d564db59",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "fd139628-4c1a-495d-a2e8-2ab12aec9a70"
        },
        "item": {
          "id": "57ad381c-ef0c-4839-98df-640161a6949d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1283b094-76e0-46ce-91bb-0a5dd870c780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cdc275-4ef9-4129-9eb0-f3ff854edd56",
        "cursor": {
          "ref": "887f6d1f-f7c9-4f79-bcd1-783a6dbe7cb9",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a3570242-6ca0-44a8-85a3-892a6fad96a3"
        },
        "item": {
          "id": "81cdc275-4ef9-4129-9eb0-f3ff854edd56",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c16f5458-1527-46e6-9da2-8001bad580b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bba0f6-9262-4785-b6ea-b8fbc2ab3064",
        "cursor": {
          "ref": "ad5f54dd-9b48-48fe-8182-da2ca47b88e5",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3c7e919b-6480-4a46-8e89-df7d874f94ec"
        },
        "item": {
          "id": "52bba0f6-9262-4785-b6ea-b8fbc2ab3064",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aa0611e0-1298-480d-827a-3530587621b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7045c6-9c25-4584-9626-be92a35e8886",
        "cursor": {
          "ref": "126f073d-28cb-4566-8075-52f846e1c227",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "68946af9-b501-4c9e-b583-eb669c963aa7"
        },
        "item": {
          "id": "ec7045c6-9c25-4584-9626-be92a35e8886",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1a22b36d-7380-4f53-915a-cea9e501f6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 697,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28aab1e-3755-470f-bc07-1af5912e09ec",
        "cursor": {
          "ref": "af7ac2f0-6e18-47bb-9905-d3dcb079cfcc",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "81030d1f-6598-4759-8542-ab2cee9c43a7"
        },
        "item": {
          "id": "a28aab1e-3755-470f-bc07-1af5912e09ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e9a995cd-bc46-4876-9eb3-b26c1fdbac3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 895,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00290400-a421-4dba-8bad-0aa00ae68722",
        "cursor": {
          "ref": "136c0e15-cadb-4c83-9c01-56a5375b15f1",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0eed6440-963c-4add-beb2-2f6228bfce84"
        },
        "item": {
          "id": "00290400-a421-4dba-8bad-0aa00ae68722",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b853e4d-cf6e-445d-ad57-d6aab4cdc76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499aca6-a2e5-43a9-8eff-92ac20cc2996",
        "cursor": {
          "ref": "773dc5a9-a2bf-4507-a619-2ffe04049557",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bc53ba84-b96f-481d-9cd4-a0de576f3e7c"
        },
        "item": {
          "id": "5499aca6-a2e5-43a9-8eff-92ac20cc2996",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "06954be2-0d60-473f-84a0-86dfda1231ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43842362-4916-4c02-b1da-4bc6ee0114b7",
        "cursor": {
          "ref": "bbd3f99d-53e6-456b-9100-0ec1cd2755c1",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "39a7f766-217c-43ba-b729-d501f7b4616b"
        },
        "item": {
          "id": "43842362-4916-4c02-b1da-4bc6ee0114b7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e329ecec-499c-4549-a546-52b1c207f3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 645,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21176bd3-97ad-4b9e-8e11-6a6fc983357e",
        "cursor": {
          "ref": "05f12139-b10b-41c8-aec1-dfa4acee26bb",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "abba37a7-c16e-4a90-b455-8438125182f2"
        },
        "item": {
          "id": "21176bd3-97ad-4b9e-8e11-6a6fc983357e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1585970-0a77-4920-a868-73130c35d5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e35ec00-d483-4ec5-b8fa-723c74901677",
        "cursor": {
          "ref": "bbf27bc5-a64e-4ab5-9bb5-631bf0d27bcf",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "45dc9e80-9662-4bb7-86e0-4a56321731ab"
        },
        "item": {
          "id": "9e35ec00-d483-4ec5-b8fa-723c74901677",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "76ccac26-f008-48f3-bf3e-455bad2c73ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a74938-5960-4c29-b7f0-eda6f5420077",
        "cursor": {
          "ref": "488378d7-fe78-45e8-ae23-331a4550e762",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d5d439c8-7975-493e-9fa9-cfa650c411e7"
        },
        "item": {
          "id": "36a74938-5960-4c29-b7f0-eda6f5420077",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1840f35f-337b-49bc-ae57-08bc54a78279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d73706-ca15-40f7-84d0-566656d026f1",
        "cursor": {
          "ref": "2a0878a6-b966-4435-a214-e6af3a8e5b71",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b99483de-d753-489a-81ed-0f57ffe088cd"
        },
        "item": {
          "id": "e7d73706-ca15-40f7-84d0-566656d026f1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "220151e1-580d-4f76-9615-9f125db311df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3bbc07-82a3-40eb-815c-a169bad95df5",
        "cursor": {
          "ref": "e9e46291-c2c4-45de-b500-9400641682ff",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9f5a27d6-e048-4ba3-b8c8-a0eb69a58209"
        },
        "item": {
          "id": "5b3bbc07-82a3-40eb-815c-a169bad95df5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c34f080d-6b86-40d2-90fc-d668a24b3e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2eae01a-ec7d-40e7-abbc-083be2208e6a",
        "cursor": {
          "ref": "2648ee4e-c474-45d8-a593-87e95daf35e2",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5fd561b7-83fd-4ae4-afc1-10da121529cb"
        },
        "item": {
          "id": "d2eae01a-ec7d-40e7-abbc-083be2208e6a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "82f6dc13-3613-4621-a810-77af9e7cf506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3def6a7e-f8fe-4b99-906e-3c6d8407f630",
        "cursor": {
          "ref": "de1282f9-40fb-4ff2-bbb0-5ea3fe620a43",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "afc8a0c7-a295-44bb-8ba3-7cc1b605e3a1"
        },
        "item": {
          "id": "3def6a7e-f8fe-4b99-906e-3c6d8407f630",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4b8774c8-fe7e-4a33-8735-77b0d5ba7a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 637,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfbe93f-dece-4bc3-bfbf-0547879531d1",
        "cursor": {
          "ref": "36391219-4bf4-4f0e-acd0-f38ef014eaff",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5fa5bc34-f2c9-48fc-9050-f97c4bfe3f2e"
        },
        "item": {
          "id": "5bfbe93f-dece-4bc3-bfbf-0547879531d1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dd3a3cf3-83fa-4b6a-8bad-7fa6878cf4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa27d682-284f-453a-874d-05a1750e7df5",
        "cursor": {
          "ref": "3fa0b99e-978c-4680-ba5e-2399a261ee47",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "157d3a7c-2b12-4e9f-9254-0002c0fcf859"
        },
        "item": {
          "id": "fa27d682-284f-453a-874d-05a1750e7df5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "af6487f3-b1f6-4a43-ac29-9eee440680e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e15420-34c0-4b2d-ad49-b9f9c905fa5a",
        "cursor": {
          "ref": "c4536498-b664-4985-9424-41299f9ab086",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f32dee59-e701-4c57-a9e5-1bbf0eda6c30"
        },
        "item": {
          "id": "a6e15420-34c0-4b2d-ad49-b9f9c905fa5a",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "81e7f1ed-6456-450a-8e5b-9394d6a9717e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 619,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe3a4a2-5875-49cd-b8f2-6d6af67de60a",
        "cursor": {
          "ref": "1d78d48f-2c08-4d2f-9697-998807c11163",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3b0871a3-7f59-4704-ab53-a0b79ad982c8"
        },
        "item": {
          "id": "8fe3a4a2-5875-49cd-b8f2-6d6af67de60a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b9bfaa8c-4b54-4c77-8409-10431ac76ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe3a4a2-5875-49cd-b8f2-6d6af67de60a",
        "cursor": {
          "ref": "1d78d48f-2c08-4d2f-9697-998807c11163",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3b0871a3-7f59-4704-ab53-a0b79ad982c8"
        },
        "item": {
          "id": "8fe3a4a2-5875-49cd-b8f2-6d6af67de60a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b9bfaa8c-4b54-4c77-8409-10431ac76ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb34fa58-b104-4697-bd51-f73b47d91c60",
        "cursor": {
          "ref": "4c6ee623-2310-4bb3-aee2-83295a0c3e1d",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d38b2c73-6de4-44b1-96cc-1958579007b1"
        },
        "item": {
          "id": "cb34fa58-b104-4697-bd51-f73b47d91c60",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "74d639d7-fe92-470c-8e95-1af9f531af68",
          "status": "OK",
          "code": 200,
          "responseTime": 407,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "d846d5a5-fda1-4fa8-ad41-d144971e0add",
        "cursor": {
          "ref": "0158f0fe-6d95-4884-90b8-887d728089b1",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "de95710d-58ce-49c3-9d8d-c269324d87fa"
        },
        "item": {
          "id": "d846d5a5-fda1-4fa8-ad41-d144971e0add",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c69f4625-3fd9-49be-b148-4c41e95c08a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03381ea2-1b18-4c8f-867c-f4295bc4885e",
        "cursor": {
          "ref": "b434e7cb-4737-40dc-b595-0f112b007868",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4cc2e272-2a1f-411a-a1d8-f4d810a72151"
        },
        "item": {
          "id": "03381ea2-1b18-4c8f-867c-f4295bc4885e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "26c998e8-a135-4397-a7b1-7e598a9b5a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5614d45e-1cce-405f-9df1-71a21c2dfc1f",
        "cursor": {
          "ref": "69c0db3b-5bd6-424f-9169-57100c06de1e",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e3299122-8aa8-4cc6-b1ed-c79462a98357"
        },
        "item": {
          "id": "5614d45e-1cce-405f-9df1-71a21c2dfc1f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c69eb941-db06-4c7c-9981-5543f51d8a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af260049-4f02-4051-82e3-4ecc6021efd7",
        "cursor": {
          "ref": "d2db17ba-3a29-4e8b-9f8b-b041dcba655f",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7dca236a-9f2e-4340-969c-83c454214e2f"
        },
        "item": {
          "id": "af260049-4f02-4051-82e3-4ecc6021efd7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0b2072db-120c-4cb6-95c2-7d137ea5c334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa19db84-5353-486c-97fe-35f47dbf794e",
        "cursor": {
          "ref": "e6686c79-ab60-4a92-87a1-41d6ce1cc62d",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "35808b55-6c9a-451d-ae58-db43243bd1f6"
        },
        "item": {
          "id": "aa19db84-5353-486c-97fe-35f47dbf794e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "42ab096c-9438-44e6-975d-4e9f8578cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbdf955-6fdd-4906-b37a-7f7aad21a2f6",
        "cursor": {
          "ref": "9e9f865e-4af3-4d63-ad53-f683d899f752",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0ce78fdb-e9ea-44fb-8744-fb3d138c0feb"
        },
        "item": {
          "id": "2fbdf955-6fdd-4906-b37a-7f7aad21a2f6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ece1f312-5193-43be-b58a-713f8b7e9053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e69388-a30c-4d76-84da-2de59e47a97d",
        "cursor": {
          "ref": "103ef6f1-ef2e-4055-be5f-5200ca7b227b",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "77e50bf3-d6b2-4667-a419-6f526d0086e8"
        },
        "item": {
          "id": "d1e69388-a30c-4d76-84da-2de59e47a97d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c06335be-2a60-40dc-891f-fb82034a1617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ce2188-9046-4874-beb7-e5caf4a7f3be",
        "cursor": {
          "ref": "e1c058b5-3af8-41d6-989e-253fccfb5cc1",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cb1cac47-4042-4371-b6c7-d3aba88a5bba"
        },
        "item": {
          "id": "01ce2188-9046-4874-beb7-e5caf4a7f3be",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7f933d77-db60-46ba-a6c7-87d91124e9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d3627e-ff4b-43b2-8fc7-46925fc6eef1",
        "cursor": {
          "ref": "87a00cde-f483-4976-b595-c314ade02006",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1c70a8c5-86c7-49e5-89bf-896af755481b"
        },
        "item": {
          "id": "f7d3627e-ff4b-43b2-8fc7-46925fc6eef1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1cb4e831-c070-4d0e-9b72-7648e7eeaaaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71abce7d-a7bb-4b2d-9d9f-0131961d8af2",
        "cursor": {
          "ref": "5e48944f-d4a5-48ff-a497-f723a2b79c25",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "69078df0-5f81-4413-9bff-fed20be6699f"
        },
        "item": {
          "id": "71abce7d-a7bb-4b2d-9d9f-0131961d8af2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "84e13e44-3d76-45b8-95c8-99b30de5b366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba25855-35c4-47ad-9aee-d11fac868c03",
        "cursor": {
          "ref": "7a6173b8-9d2e-4cb4-8546-5f891bd6b2bc",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f91d36d3-4526-44d7-aee0-417190ac7738"
        },
        "item": {
          "id": "5ba25855-35c4-47ad-9aee-d11fac868c03",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd2e6426-ccae-4fdb-b5b5-02a11aa20fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 427,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32da2529-7c8d-4579-a1df-d0559add1a57",
        "cursor": {
          "ref": "f782053c-72ec-4737-8918-eae782be9fdf",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "db5aabf8-ac9b-4748-8dbb-ac39f34adcc9"
        },
        "item": {
          "id": "32da2529-7c8d-4579-a1df-d0559add1a57",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2af9eaf0-b3e4-4906-98eb-03fc3242e621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87408475-7957-40c1-ba46-50666533d565",
        "cursor": {
          "ref": "499ff6ca-72c5-4f37-9611-62c93ca5eb1a",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "96820fe0-4048-4d4a-bec1-d224de4b9029"
        },
        "item": {
          "id": "87408475-7957-40c1-ba46-50666533d565",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "296f02f5-f26e-4044-939c-00184130f41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce2c310-7351-4bd7-91c2-3d3d09124c18",
        "cursor": {
          "ref": "dd28b907-65bc-43f7-9f5b-d3871384987e",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b8ec9226-15fe-401a-8611-0f95994f68d5"
        },
        "item": {
          "id": "5ce2c310-7351-4bd7-91c2-3d3d09124c18",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "83d9b7b4-7b06-41ed-8916-1f53c262c090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05f0366-ac09-4e35-baa6-d960265b5061",
        "cursor": {
          "ref": "738c5112-24bb-4366-b5c5-5a34c8a500dd",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2d1f2652-5806-446c-acb4-af61d3c8ff6f"
        },
        "item": {
          "id": "f05f0366-ac09-4e35-baa6-d960265b5061",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "57381c4f-2fe6-44df-9955-84fdc2832c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4befee-965f-4f21-8a86-be269b1672c9",
        "cursor": {
          "ref": "acdc2401-dc5a-4fa7-b473-c46d371ef289",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7b17b320-3f12-4dec-ad47-06d962081048"
        },
        "item": {
          "id": "ad4befee-965f-4f21-8a86-be269b1672c9",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "9cb50951-8b53-42da-8867-ff7ab6521ab6",
          "status": "OK",
          "code": 200,
          "responseTime": 2110,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "ac240512-800b-4213-820f-5cc7dba8c62f",
        "cursor": {
          "ref": "4fbf3d06-8dc7-41a9-a89c-5a14f59aeb17",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f5303ab2-faac-4055-9e97-d7645510bf3c"
        },
        "item": {
          "id": "ac240512-800b-4213-820f-5cc7dba8c62f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "22bf018a-1653-4c11-8356-6e3240246fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78113378-e876-4022-b1ba-307a38e66c45",
        "cursor": {
          "ref": "f6399fb0-581f-4af0-b257-79245f319cf6",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "30466855-70da-4bf4-8c0d-904261a64af0"
        },
        "item": {
          "id": "78113378-e876-4022-b1ba-307a38e66c45",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d51759d6-88dc-48be-bcfb-243fcfe571e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e64598f-b8bf-4a9b-8901-36bddf78d4b3",
        "cursor": {
          "ref": "645694d0-8924-4ef9-978d-cafa18854fee",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e4735a67-78b5-4706-9239-b56cc6c3f2f3"
        },
        "item": {
          "id": "7e64598f-b8bf-4a9b-8901-36bddf78d4b3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4bc86a0b-3712-4265-b444-202246adad87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67452c46-70aa-4e0b-bf86-aeee112c576b",
        "cursor": {
          "ref": "561ea167-6e60-446a-97dd-6615457c3fd5",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e53a8865-b38f-4efe-a092-ab8bf2628192"
        },
        "item": {
          "id": "67452c46-70aa-4e0b-bf86-aeee112c576b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3167af54-2bc0-4263-a5ce-5f6073410807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed241984-8821-4176-a13d-3d4b590a961f",
        "cursor": {
          "ref": "fa993355-caff-4e9c-a732-eccf69139390",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9b3ca88f-149e-4d13-93f0-e126a858911b"
        },
        "item": {
          "id": "ed241984-8821-4176-a13d-3d4b590a961f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "11500331-1f46-4556-a544-1f4bc3a0f2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da683d71-96a0-4489-be2c-2d338098f3f2",
        "cursor": {
          "ref": "b34c9e06-4621-43a2-ae7c-1a0f5ad7b244",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "60159c12-2bc0-47b3-823e-c05bf71eb0c1"
        },
        "item": {
          "id": "da683d71-96a0-4489-be2c-2d338098f3f2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ad9833b6-b1fa-48d4-98ee-048868fe23f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009ea581-e730-4b91-aab3-f87e9b065a7e",
        "cursor": {
          "ref": "2d837133-a8a7-4546-823c-b5a13c41f419",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f403fe20-02d8-43cf-922a-9c93ac35ebeb"
        },
        "item": {
          "id": "009ea581-e730-4b91-aab3-f87e9b065a7e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b283b3c6-d012-41e7-b420-52c353188921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3ee83c-aefd-4425-8ec9-4d92ef15575a",
        "cursor": {
          "ref": "01ac22a1-db5b-405b-901c-eaacd950a5f0",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e5de33ea-0216-42a1-89bd-ed314e34c90b"
        },
        "item": {
          "id": "5b3ee83c-aefd-4425-8ec9-4d92ef15575a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6ba27d65-9480-44e2-801e-6c323037c4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23194f1-54aa-4e2f-96c8-f8a557ac10ff",
        "cursor": {
          "ref": "2a763a74-acb9-4682-a0eb-43c0a7089bed",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "42908926-adc0-4668-aed3-c5aa912049f4"
        },
        "item": {
          "id": "c23194f1-54aa-4e2f-96c8-f8a557ac10ff",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "880b55b6-f288-4ff7-a500-29e3f913b366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa3485a-3f1d-4779-b0b1-ddab7873354d",
        "cursor": {
          "ref": "6b0c0697-6648-4892-847e-6e966dfffd90",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cac9a4a2-0b14-427b-a3a8-d78b918be2f2"
        },
        "item": {
          "id": "afa3485a-3f1d-4779-b0b1-ddab7873354d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bea88438-aa59-4d76-95d4-ff64c7b58ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c5fff0-1150-4481-89e6-9a4056022aa6",
        "cursor": {
          "ref": "b123696a-fb24-4173-9d96-87426bbb913d",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c44d6155-2702-4cd1-a95f-de68be15f984"
        },
        "item": {
          "id": "f2c5fff0-1150-4481-89e6-9a4056022aa6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "719fd38c-0b35-415e-8079-db34fc507deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1180da52-12aa-4dc4-b138-2992ad0a9c13",
        "cursor": {
          "ref": "2be0fb6a-d000-4e98-aa9f-8afa5e5be0d8",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "84ec4fed-bb98-49cd-90a4-be2a2e73ba8f"
        },
        "item": {
          "id": "1180da52-12aa-4dc4-b138-2992ad0a9c13",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "890dfb1f-345a-49ce-8319-200597d18890",
          "status": "OK",
          "code": 200,
          "responseTime": 404,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "978e0caf-7fc3-45c9-9719-e095d84e0016",
        "cursor": {
          "ref": "0df3864d-bc3e-4d13-805f-e2d5a5e5bca9",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a11283ce-52d7-467b-b5b5-f822ef1fc242"
        },
        "item": {
          "id": "978e0caf-7fc3-45c9-9719-e095d84e0016",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "60efff57-56a0-4af2-b964-b6d18886db81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aea6234-5fa6-4183-bd9d-a0d69f455534",
        "cursor": {
          "ref": "1f35d977-365e-478d-b82e-44b76800b0fc",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a8576773-fed7-4d50-9de5-170b827ea078"
        },
        "item": {
          "id": "6aea6234-5fa6-4183-bd9d-a0d69f455534",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1870f5d9-0fb5-4189-bc93-f8dedb6f5666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b248798b-0c7a-41e1-b82d-55d624543398",
        "cursor": {
          "ref": "ab8e87d6-1680-40d7-b6ef-80ff5af11bf3",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cb7944a1-8fad-4893-b5ff-aba09860c51d"
        },
        "item": {
          "id": "b248798b-0c7a-41e1-b82d-55d624543398",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b0af042c-84ae-44a2-80f2-fdb32a7185c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b69275-5c80-47c2-bc0f-06ebd0c3346f",
        "cursor": {
          "ref": "8d953703-b617-4bc7-b6d5-dadce49e9d6c",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "692c747f-e580-43c2-8105-24b3cee88add"
        },
        "item": {
          "id": "60b69275-5c80-47c2-bc0f-06ebd0c3346f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "849998c0-7154-4886-a4d5-2de992572a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee8bb6b-b5bd-4ffc-a288-6825acf41346",
        "cursor": {
          "ref": "ec2ca7d0-9b26-4e4b-a95b-d771f126c2d3",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f0c3a621-0686-4493-8332-e70eb6892bc1"
        },
        "item": {
          "id": "8ee8bb6b-b5bd-4ffc-a288-6825acf41346",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "63611418-c725-4c9e-aa2a-eae6f8892eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b90c79-323c-474c-ab25-7ffa001b0906",
        "cursor": {
          "ref": "4a0ffae2-3fbc-4a5a-9d30-138477c6cbcf",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "64a0fa97-199c-4db9-98ce-65d06c4f203a"
        },
        "item": {
          "id": "a8b90c79-323c-474c-ab25-7ffa001b0906",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ad10173b-849b-43db-b4e0-11b3fe60e68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d71847-1a8b-4466-9318-66598eb7e8ca",
        "cursor": {
          "ref": "3ab1fcd8-cdf2-4550-be62-fd3a43a7ec79",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5cefe411-cca1-4c62-a597-2ca8dbda836a"
        },
        "item": {
          "id": "38d71847-1a8b-4466-9318-66598eb7e8ca",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b239433d-3cdf-478c-bc52-8af3dff0b5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37fde7d-48a8-4cd3-8d84-b7f6bfdf14e5",
        "cursor": {
          "ref": "4399111c-7284-4bbd-9feb-1893763f5818",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "aa587a45-9840-4924-b4ee-157f79db657b"
        },
        "item": {
          "id": "e37fde7d-48a8-4cd3-8d84-b7f6bfdf14e5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f519e037-595b-4ec0-bb8f-bde984952f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556fa942-58e7-4c4b-9906-3fab74c6091d",
        "cursor": {
          "ref": "f8490193-9a6f-44ef-a949-39072c838c4b",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b641924e-1885-4b4b-8d52-98e6dd0078f5"
        },
        "item": {
          "id": "556fa942-58e7-4c4b-9906-3fab74c6091d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9a68079c-3f64-4f14-a09f-3b594c563a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01c6351-a15e-4c02-ba69-33b72e321618",
        "cursor": {
          "ref": "63da2f4f-9bf4-4bee-9ef1-09274f9941dc",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "087c6ec3-2767-40d6-a83a-0aee22347000"
        },
        "item": {
          "id": "e01c6351-a15e-4c02-ba69-33b72e321618",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b52bf100-efc5-4254-aac2-cb98c0876fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 423,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e67edd-35af-4307-ad60-41e67de6347c",
        "cursor": {
          "ref": "842bbcc6-8d32-4811-b57d-02f0bfa9f595",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5ef507ab-5913-4b8c-ae8c-2ec717c496e8"
        },
        "item": {
          "id": "95e67edd-35af-4307-ad60-41e67de6347c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9588b9cd-f854-48b8-a609-d4b330a2ad11",
          "status": "OK",
          "code": 200,
          "responseTime": 780,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "fdedea4e-a691-405f-9e00-0d6c915c5cda",
        "cursor": {
          "ref": "8208c81a-4bcd-460a-a31c-1ad690ba9683",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "54651afc-a849-452e-b505-323ac1caffe6"
        },
        "item": {
          "id": "fdedea4e-a691-405f-9e00-0d6c915c5cda",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8af412a6-9fa8-411c-8c02-39f28b7630b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b541705c-1412-43c0-8d01-5a13ec4d9748",
        "cursor": {
          "ref": "78c07344-aa89-4212-b876-5097f43fa16a",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8c802c03-1470-48ba-b184-3c0a080a83f6"
        },
        "item": {
          "id": "b541705c-1412-43c0-8d01-5a13ec4d9748",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ad3de197-b969-4eba-a832-f368614df168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1164,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d84005-06ef-41ca-a3c1-d20a9c20d2c8",
        "cursor": {
          "ref": "e3335d46-2ddc-401c-be88-45d05327f4fe",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8add3f8f-9622-4fc4-813e-b658d0e10b61"
        },
        "item": {
          "id": "22d84005-06ef-41ca-a3c1-d20a9c20d2c8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "97b6d6dd-d58e-431f-b9cb-c32cf62da2fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1299,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5faac680-e11d-4fc2-a1de-102abdcde3da",
        "cursor": {
          "ref": "d589075e-8b8b-4e5c-b571-2d72b491dae3",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fd46d517-9dda-4e32-8804-bfba9950aaae"
        },
        "item": {
          "id": "5faac680-e11d-4fc2-a1de-102abdcde3da",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "53bbb79e-1fca-41c5-ac6c-58512c0483f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1338,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7933d3-ffa3-4de7-b8a8-e3211db44a49",
        "cursor": {
          "ref": "fd1cb7b9-bc6c-41fb-a95c-eff262ef15d4",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f2b2a53e-ba89-46be-945b-489b4708c221"
        },
        "item": {
          "id": "4f7933d3-ffa3-4de7-b8a8-e3211db44a49",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8cec1f28-ea20-4095-9c7e-d1cb39d91cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885048a0-db48-4636-b820-f1a8ba3a578b",
        "cursor": {
          "ref": "7b7e3f93-4c90-4896-94cd-5371aca41db2",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "daf736bc-a4ca-44f7-8efb-2b27138505f9"
        },
        "item": {
          "id": "885048a0-db48-4636-b820-f1a8ba3a578b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1508f7bb-a766-4e49-bd33-3077ec5878fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b3f7db-77be-4da9-be11-e8456d797433",
        "cursor": {
          "ref": "561083a9-756e-4a30-a15f-65b9cdcf9f23",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1e0786bd-98f3-4cb4-a207-684b6e069f8c"
        },
        "item": {
          "id": "05b3f7db-77be-4da9-be11-e8456d797433",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8fa6e77d-cd3b-4978-b25f-7fb10d79d27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1594,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453b6c95-3193-4052-92a1-efa0ea4417fe",
        "cursor": {
          "ref": "01304ca6-9cce-490e-b7b3-2275b2cb03ce",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0ccb7eb8-e465-4041-8f5a-bedcb8b57663"
        },
        "item": {
          "id": "453b6c95-3193-4052-92a1-efa0ea4417fe",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "55f0b9b4-b9a7-43c6-85ba-46e3a5d5fc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc389e2-9eea-49bd-837e-a7ea48d3b185",
        "cursor": {
          "ref": "eafcb962-19d9-4a06-88cf-1c303160a28a",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "aa16fd05-515a-44dc-887b-7259ac6a2530"
        },
        "item": {
          "id": "ecc389e2-9eea-49bd-837e-a7ea48d3b185",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "33256d10-90ea-46df-843b-7b2d9fe72275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b7d1b1-5f65-4a60-b4d5-367f3f4ef9b9",
        "cursor": {
          "ref": "7cc26845-a533-44f3-94f3-9c8ebc7f41d0",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ceb9c037-f677-4b21-87d0-8cbb7559ca64"
        },
        "item": {
          "id": "f5b7d1b1-5f65-4a60-b4d5-367f3f4ef9b9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "79d02719-06e0-49a6-aa20-98649cd363a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6816840-3053-4bad-8d7c-6b1fb61b5e59",
        "cursor": {
          "ref": "0e17ae5e-31b4-4716-a422-800178af295a",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dae495df-05b9-4c28-8913-73d987ec003d"
        },
        "item": {
          "id": "a6816840-3053-4bad-8d7c-6b1fb61b5e59",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f46e0269-f17d-4c1f-90a7-e3c4594f87f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50146ea-7024-4c81-902e-039cfd313ef5",
        "cursor": {
          "ref": "b76d609d-90be-47c5-b02f-45c39d425137",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6a7eb997-4c9d-4b58-9284-60eb0222fb56"
        },
        "item": {
          "id": "d50146ea-7024-4c81-902e-039cfd313ef5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a999404f-9e47-40d5-9a54-f675f71a2f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9de082-05a6-4e07-b904-351b5711bae1",
        "cursor": {
          "ref": "887b10d3-5ec8-48c6-aac0-393560d8b0d5",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "29aa6be3-95ef-4f61-bd7a-eebca2eee31c"
        },
        "item": {
          "id": "ce9de082-05a6-4e07-b904-351b5711bae1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a548c935-30e9-4088-8593-40cfefc4306a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21268e54-b9f1-418d-ae03-057a01098d71",
        "cursor": {
          "ref": "1e58235d-b32f-4291-8918-a435b5df8789",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a244c3cf-678f-4ff1-9f06-c37b05079e5c"
        },
        "item": {
          "id": "21268e54-b9f1-418d-ae03-057a01098d71",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1c1447dd-e5ef-4630-add6-243fdd1de507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ad441e-3a4d-418c-9ddd-6f0a05ab331a",
        "cursor": {
          "ref": "f4f74187-b550-4ba8-b58e-74cea2c48cd0",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "faa43f19-5b4d-4c4c-bdb9-043c0e045b98"
        },
        "item": {
          "id": "37ad441e-3a4d-418c-9ddd-6f0a05ab331a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3f6e6341-d18b-4c50-add6-3e46fd93a9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af41dd6-92cb-4173-97e9-7b94f717e101",
        "cursor": {
          "ref": "4b2ed0ac-957f-4855-892a-35e32e0151d8",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "73866203-958b-4047-b1ef-51a0eed4b66e"
        },
        "item": {
          "id": "5af41dd6-92cb-4173-97e9-7b94f717e101",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "cb8d009d-0bfd-4eb5-892c-11b6330e53c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc38b7f-db68-4e79-bc33-260079b63a2b",
        "cursor": {
          "ref": "757ecee1-6e80-4639-b39d-e85e643e6bdb",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f065853d-c798-406b-8c40-8e5ce49afb92"
        },
        "item": {
          "id": "2fc38b7f-db68-4e79-bc33-260079b63a2b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "996fa605-b332-4c68-839b-7673fb576322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c61ef9-ad4e-4cb3-b209-ef6460706262",
        "cursor": {
          "ref": "43875c20-4560-4495-8c95-0b2bf66f472f",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9db09b18-63cf-4c56-902f-f36c6de012d0"
        },
        "item": {
          "id": "92c61ef9-ad4e-4cb3-b209-ef6460706262",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "978de24b-ca54-4b6c-b890-3d9ab6ba1169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177ec152-faeb-4e15-95c2-9d39cd440df2",
        "cursor": {
          "ref": "17272b5e-56b4-4592-b1a1-6cd5c96cb1aa",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6d9188a2-8eef-443a-9546-478f260c8845"
        },
        "item": {
          "id": "177ec152-faeb-4e15-95c2-9d39cd440df2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5215f27d-0614-49d0-8faa-a372adf5d478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c042a2-3553-426e-910c-6a40f2e4b407",
        "cursor": {
          "ref": "9d6f1872-a678-4f88-81ed-8da2fc580f26",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dd322cf9-1491-4d4a-9ed9-217b25f9246c"
        },
        "item": {
          "id": "47c042a2-3553-426e-910c-6a40f2e4b407",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "50c63e85-29ea-48a6-8627-bb6c80c07bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd773658-8cee-4ac0-9431-d221bb9b4de4",
        "cursor": {
          "ref": "41a9fd61-3b3b-4b73-8bc0-570e95db1b8e",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "cdc7e4f9-d885-4b76-ba51-daad21a3cde9"
        },
        "item": {
          "id": "bd773658-8cee-4ac0-9431-d221bb9b4de4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4798a5af-3483-42fb-884d-ada913fc615f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9f3e10-0ddb-4e37-95a4-1457bd53218d",
        "cursor": {
          "ref": "2445b0c7-33b0-4e2d-a0ca-ddffd4adb95f",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "df8e9c66-0958-40d0-8bf6-580025b3e608"
        },
        "item": {
          "id": "ca9f3e10-0ddb-4e37-95a4-1457bd53218d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "bb785843-dea9-41ff-b2d0-844f428de002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9558926-1731-4ad7-ab63-0a0ed5f9d68a",
        "cursor": {
          "ref": "0015b68d-0f7a-47bf-88dc-513460e0a6fe",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bb82b01f-24c3-459a-91f5-0fdaf58f5e26"
        },
        "item": {
          "id": "e9558926-1731-4ad7-ab63-0a0ed5f9d68a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "683a31ac-49c6-4d76-be3b-e87f7f35c94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9e37d7-ea82-445f-8e4c-a2631d4812ff",
        "cursor": {
          "ref": "662eea72-3372-4284-a947-20249bca4c5e",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "924bbf8d-9432-4d87-98f6-ae0e72d467fd"
        },
        "item": {
          "id": "7f9e37d7-ea82-445f-8e4c-a2631d4812ff",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "5e32b4fa-8433-46e0-884f-3ae2df366cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b92fd4-ebd5-4f61-9b05-e5731c47bf59",
        "cursor": {
          "ref": "cd07bd62-0533-4608-b568-9ae8926a5b2a",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d4727abf-624b-4970-9001-fdf2ded33ae2"
        },
        "item": {
          "id": "54b92fd4-ebd5-4f61-9b05-e5731c47bf59",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4ba4a099-7e88-4bc8-a178-7f6cd646516b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de516c60-b7ea-45ef-9601-de137a72cc5f",
        "cursor": {
          "ref": "4c448d21-ac6e-411a-a5a1-0a5082c60018",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "24dae692-aaaa-4d55-8280-0b0eeba3d579"
        },
        "item": {
          "id": "de516c60-b7ea-45ef-9601-de137a72cc5f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c37428d3-baf2-44b9-9fd3-8b44c51db890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c885611-52a0-4c50-a211-bc16e741c718",
        "cursor": {
          "ref": "efff6b02-5c2c-4739-8407-1f23a2031b02",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "407a7d74-f601-4ee6-93e6-a611e69e7090"
        },
        "item": {
          "id": "7c885611-52a0-4c50-a211-bc16e741c718",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3a8dda7a-8242-41fe-8b8c-f2f99345b4c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c4d108-d6cb-4ed3-a25b-d6fc5b548619",
        "cursor": {
          "ref": "000386d3-5c58-4f0e-b1aa-e440bd56aff3",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "56232a7b-eee4-40bd-9b7f-f5db570acea9"
        },
        "item": {
          "id": "59c4d108-d6cb-4ed3-a25b-d6fc5b548619",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8c355e18-1340-4d81-a816-1e366be64506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad707897-6585-4b7a-8249-0074cdd5e637",
        "cursor": {
          "ref": "38f47196-9e7d-4ef8-b948-3c3dfa09e7c6",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6d9f9b4e-ae65-46e7-99de-dd6cd5b5e021"
        },
        "item": {
          "id": "ad707897-6585-4b7a-8249-0074cdd5e637",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "237e8887-a3e5-4214-8761-f68db2d018f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737f5b0b-a2eb-4a9f-8da6-cd5b13d1ec02",
        "cursor": {
          "ref": "6e3de0fe-7a83-4289-918f-3b968ea56476",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e8727bda-ab66-46e6-9944-723e6873a472"
        },
        "item": {
          "id": "737f5b0b-a2eb-4a9f-8da6-cd5b13d1ec02",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c62261db-0ec5-4c7b-a260-cd82474a5a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f24c5d6-7d5c-4977-8c51-ee27a1099397",
        "cursor": {
          "ref": "16bea41c-6044-4f43-9c2d-72fe7d709beb",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ea4469a1-bde6-48a1-aefe-d146b2782cf6"
        },
        "item": {
          "id": "2f24c5d6-7d5c-4977-8c51-ee27a1099397",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3da3b6f5-281a-415b-af40-f9aebab4a742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd8e3e5-9d2d-4289-9d6d-25a1cf86ce36",
        "cursor": {
          "ref": "8148b76f-95f8-406f-871c-d246562abd90",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f6502c8f-44fc-4f7d-ac0e-bfc8b07a2445"
        },
        "item": {
          "id": "3cd8e3e5-9d2d-4289-9d6d-25a1cf86ce36",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d2e1796-4bf1-4974-aada-96502f47a6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc82f87-0f72-4005-a0a5-8c384447773b",
        "cursor": {
          "ref": "16e33112-f536-4f75-bccf-4a7c92fa02db",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e9e88ef1-64d3-44da-894e-9b165fc0696b"
        },
        "item": {
          "id": "9bc82f87-0f72-4005-a0a5-8c384447773b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f2e0e92e-3e58-40b9-84f7-21a0246b5e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6da109-8ab2-4d33-8f46-0265e69f0753",
        "cursor": {
          "ref": "45686b51-63e7-4362-9123-375ac7c1fb74",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cba8c834-34e0-4f29-aa8c-662dec837fce"
        },
        "item": {
          "id": "cc6da109-8ab2-4d33-8f46-0265e69f0753",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d4b5ef1d-69f5-4764-9e4e-809b207b2472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223e352b-66ca-483e-bded-6bffc62e5a13",
        "cursor": {
          "ref": "b8b70f44-2a1b-4203-937d-56e87555bd89",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ec64ea86-5f53-49c0-a0aa-56db7118542c"
        },
        "item": {
          "id": "223e352b-66ca-483e-bded-6bffc62e5a13",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "856fa616-3138-466f-8762-42b942a01653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02017d9-2857-4745-aef7-65ef5b35c9f8",
        "cursor": {
          "ref": "2318c868-f02c-4419-8d85-c6812dbb928d",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d301454f-9c0d-4dee-a8cc-d249e0e28c7a"
        },
        "item": {
          "id": "a02017d9-2857-4745-aef7-65ef5b35c9f8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7bd02ba5-277f-4e3b-a84a-ff51ce2728c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912d278d-aa48-4479-a1e8-bb6d4732fa44",
        "cursor": {
          "ref": "aa9bb17a-49e6-4eec-ad8a-0c94f50e60db",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "db3a5770-8684-465c-9d47-cfc81451b493"
        },
        "item": {
          "id": "912d278d-aa48-4479-a1e8-bb6d4732fa44",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cc20e38f-24d5-4dbf-9132-ee09c579c4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 414,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f5a69c-dfaf-4920-ba5f-4eab2f295637",
        "cursor": {
          "ref": "24ea73cf-4f54-451a-9074-3e3581020aee",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c8fa3200-a16a-4a15-b5a4-579586875eb3"
        },
        "item": {
          "id": "16f5a69c-dfaf-4920-ba5f-4eab2f295637",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a75e6aaa-1989-445f-9208-8daaeb04d85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ddc919-a88e-4e8c-b260-3e0ef41c2245",
        "cursor": {
          "ref": "818970b8-f8ae-4917-9343-e4440dcc9c87",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a3db507e-86c3-4ef6-b14a-795a565182b1"
        },
        "item": {
          "id": "21ddc919-a88e-4e8c-b260-3e0ef41c2245",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1559dc2b-cb70-4261-9725-737eefa31ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ff96b2-250c-4f07-87a9-82af629203c0",
        "cursor": {
          "ref": "bd8c6f60-debb-41ce-8b7e-3a5d19af9010",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "04fc4058-ea3b-47ff-8fc5-14aae8b07c54"
        },
        "item": {
          "id": "b9ff96b2-250c-4f07-87a9-82af629203c0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "498873c5-95f3-419e-bd9d-58673f95de4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbef1b66-70d4-4a76-b03e-9de2df9800eb",
        "cursor": {
          "ref": "d11816a8-6d86-40c9-8eb5-7ae84ea5ef95",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d5144217-3bce-47a7-a448-c14dba0ba418"
        },
        "item": {
          "id": "dbef1b66-70d4-4a76-b03e-9de2df9800eb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "da84d527-f072-4ca0-b8cc-796ad1bc6661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d2a540-b02f-48a0-9fb0-10ea2a8c51c1",
        "cursor": {
          "ref": "6b3b46e3-3056-4951-b5ca-8c30c6cb141d",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "22b361e3-5845-4a45-8e64-83d0287be3d9"
        },
        "item": {
          "id": "b8d2a540-b02f-48a0-9fb0-10ea2a8c51c1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bd9e5570-aed4-49f4-b228-302c07518ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7f8680-f6c7-496c-9e83-17857e4df5bd",
        "cursor": {
          "ref": "8c72a2ab-f4eb-4bfa-b743-5ddd06107163",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "55fb8901-8e6b-4c96-92cc-a4531cab98fb"
        },
        "item": {
          "id": "2c7f8680-f6c7-496c-9e83-17857e4df5bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "977a73ec-3b9f-4520-b13a-af31781e5d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63172cdd-05e0-4ac2-8ea9-2bdebe5ad5d7",
        "cursor": {
          "ref": "d78562dc-a9fe-4c90-8105-3b172b1c34e5",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "389b0228-fce6-45f1-bdc0-b8750f2425cd"
        },
        "item": {
          "id": "63172cdd-05e0-4ac2-8ea9-2bdebe5ad5d7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0b3d333e-802c-477f-b8d7-26aae6ebafea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca100bb8-f810-4dca-bc73-334a7b1f48da",
        "cursor": {
          "ref": "b6205c9d-91b8-4d5d-af7a-403124136d00",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b411e2be-9290-4995-992b-44ed0cfdd25f"
        },
        "item": {
          "id": "ca100bb8-f810-4dca-bc73-334a7b1f48da",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f996ef10-3217-4e19-bb74-651ff3e4022e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 965,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2feb4754-7e30-4b12-99b3-5f8f1663e694",
        "cursor": {
          "ref": "8a5cf39d-2830-47fd-af19-3f55782153fe",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "80fef1b5-7df5-476f-a248-a1b7d1ba673d"
        },
        "item": {
          "id": "2feb4754-7e30-4b12-99b3-5f8f1663e694",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cad0270d-51e8-405e-ba0c-a23f46ca4619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086498dd-d469-46a4-ac84-35775b4c3dc5",
        "cursor": {
          "ref": "662ea084-4315-4e45-88b0-e667626c6988",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3bdea3ce-c949-40fd-8cb9-683d2eb57fb4"
        },
        "item": {
          "id": "086498dd-d469-46a4-ac84-35775b4c3dc5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0d4f2b7a-ea32-4a5a-8dfb-8d27b6e362e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0808c18-2f89-4365-b531-a5d8b9060884",
        "cursor": {
          "ref": "1e0e3882-f83d-47bd-979a-991db5d22048",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7339e9c6-54c7-4e34-aca9-d7095e6598e1"
        },
        "item": {
          "id": "c0808c18-2f89-4365-b531-a5d8b9060884",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8e21b544-5cd2-4438-abf5-6f762a296617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576404d3-96a4-4bd4-b535-544048f7e539",
        "cursor": {
          "ref": "ec5d3e00-dad2-4994-b3d8-65573d68ffb7",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6ba051c2-51a7-4df1-8676-83dcd3665789"
        },
        "item": {
          "id": "576404d3-96a4-4bd4-b535-544048f7e539",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "25793fe9-8e1d-4366-9027-3c0972a74271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f124d7-d465-430c-ae4e-82dbee30333a",
        "cursor": {
          "ref": "cb6c1bfb-390a-47b3-adfe-f64af8bc9bc7",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "307abae8-7645-4615-9ea3-4b32071a9e51"
        },
        "item": {
          "id": "f4f124d7-d465-430c-ae4e-82dbee30333a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ca3ee310-1908-48a3-a529-e4315e6cd939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b31a556-e515-45e8-9b1e-e698ed391030",
        "cursor": {
          "ref": "70b91538-8f2c-442a-b75a-c95ea8616242",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "288863e8-bbb3-4807-993c-5db7a20d7c5c"
        },
        "item": {
          "id": "7b31a556-e515-45e8-9b1e-e698ed391030",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "56929c78-53f6-40cd-a2b0-756f8d23c490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2536f7-13e8-4da1-a1b3-293b29d9ea99",
        "cursor": {
          "ref": "c2b0d58f-84d5-4ab1-be5d-635ce66a8062",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f8226af1-9c6b-4707-acff-8383e9e54f4f"
        },
        "item": {
          "id": "5a2536f7-13e8-4da1-a1b3-293b29d9ea99",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f71c7e1a-d2da-4adf-abcb-e0f0007a5973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa2feab-ec9f-4f42-83d2-2a337f7d16cd",
        "cursor": {
          "ref": "00a8a9e0-1874-4de6-aa17-d4a3065a5cab",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5de4ddbd-5ea3-43e3-b41a-f464ffa50abb"
        },
        "item": {
          "id": "6aa2feab-ec9f-4f42-83d2-2a337f7d16cd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "93d4d9bf-720b-42c4-864c-266500ce3fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da948914-7f14-4bae-8310-1320f140149c",
        "cursor": {
          "ref": "897744df-5883-42c0-927e-8a6c3f1513a3",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5a7a11cd-492c-4ac2-b012-35a0a568367b"
        },
        "item": {
          "id": "da948914-7f14-4bae-8310-1320f140149c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f5bd1645-f59e-44a3-bf10-f715091f45dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5c6830-e5b8-4e0f-be4d-9dfaec0d422c",
        "cursor": {
          "ref": "7a1ba979-1932-47c6-b4d8-03b69237f7d6",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "845f464e-7b7e-4617-adbc-3570894dd0a2"
        },
        "item": {
          "id": "7f5c6830-e5b8-4e0f-be4d-9dfaec0d422c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ea2abc5d-3ad6-44f3-a15b-037853fbf2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd36a26e-b0d2-40ba-baf1-2f469fff66f3",
        "cursor": {
          "ref": "6e274031-6d49-4a3c-9033-31ac82144449",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "268a5b5a-d381-43c8-a55e-79c1ca5c3ac8"
        },
        "item": {
          "id": "bd36a26e-b0d2-40ba-baf1-2f469fff66f3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "904f4e2e-81ca-49fa-af45-01ea35edf9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148c8f9a-7a6a-4975-a1ed-991ddfd1bcf7",
        "cursor": {
          "ref": "9c084826-7b6e-4a1c-90c3-ada688101bb8",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "097fd6e5-f06e-419a-8474-b22a0b12fe2e"
        },
        "item": {
          "id": "148c8f9a-7a6a-4975-a1ed-991ddfd1bcf7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d2b0c7c0-9ec6-44a6-9ff7-797a0224cdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a381e2f-3e20-408b-8f19-bd7aba0def14",
        "cursor": {
          "ref": "a8e5886e-740d-49ff-9dd4-6e59ca54fcd7",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b9a2a8c8-974c-4508-b54b-2163a17c8c44"
        },
        "item": {
          "id": "2a381e2f-3e20-408b-8f19-bd7aba0def14",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "98c6353b-25a2-4318-b26e-eda3d11ecabc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3633c180-9d7e-4156-9bb0-ec3cf84f5a62",
        "cursor": {
          "ref": "8b291b46-7acf-46bb-8160-257bde0fe19d",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f696bf35-adf8-4f24-afd9-cd9c7e11bfcf"
        },
        "item": {
          "id": "3633c180-9d7e-4156-9bb0-ec3cf84f5a62",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "49d88b8c-de6f-4117-96f1-6c348bd5b64a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 498,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dd8dfb-d1e5-4b4e-a4cc-4dc0e3a56793",
        "cursor": {
          "ref": "2639c564-204d-4d32-bd13-d1baf2d63116",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1180bab5-09a8-4e3d-a24f-2fe6493d2647"
        },
        "item": {
          "id": "92dd8dfb-d1e5-4b4e-a4cc-4dc0e3a56793",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "af0ec3b4-e95e-45a1-b0ae-0e0adb67763b",
          "status": "OK",
          "code": 200,
          "responseTime": 564,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0bcae6-9c92-41db-9894-9ef936fecaf4",
        "cursor": {
          "ref": "6b6fef95-7126-4a22-872e-94e13910d5e0",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5f6ad56d-9783-4cec-8d2d-bdf7fc2cd33b"
        },
        "item": {
          "id": "6f0bcae6-9c92-41db-9894-9ef936fecaf4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fa92c21d-c28f-4482-be4b-dbdd03412a57",
          "status": "OK",
          "code": 200,
          "responseTime": 2202,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "740192be-f7fa-463c-a550-d72dca339d2e",
        "cursor": {
          "ref": "3d4c6dc5-d0e9-4be2-8aba-1ad5d64350d4",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ddbb49fe-1b13-475f-91b4-b9d2ad1828af"
        },
        "item": {
          "id": "740192be-f7fa-463c-a550-d72dca339d2e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f801bdef-9cd0-4d35-b7d1-21d08d7c3f3e",
          "status": "OK",
          "code": 200,
          "responseTime": 1991,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81885dc1-5108-40a1-b787-ac513b6827fd",
        "cursor": {
          "ref": "7ba2e9e4-880e-4398-b4e2-fc8280f8da0a",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "885d3018-13c9-4ec8-8419-b0e2265f1867"
        },
        "item": {
          "id": "81885dc1-5108-40a1-b787-ac513b6827fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa70f0d2-8e89-4ed2-b55b-d5e8730d0a7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81885dc1-5108-40a1-b787-ac513b6827fd",
        "cursor": {
          "ref": "7ba2e9e4-880e-4398-b4e2-fc8280f8da0a",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "885d3018-13c9-4ec8-8419-b0e2265f1867"
        },
        "item": {
          "id": "81885dc1-5108-40a1-b787-ac513b6827fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa70f0d2-8e89-4ed2-b55b-d5e8730d0a7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81885dc1-5108-40a1-b787-ac513b6827fd",
        "cursor": {
          "ref": "7ba2e9e4-880e-4398-b4e2-fc8280f8da0a",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "885d3018-13c9-4ec8-8419-b0e2265f1867"
        },
        "item": {
          "id": "81885dc1-5108-40a1-b787-ac513b6827fd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "aa70f0d2-8e89-4ed2-b55b-d5e8730d0a7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9f8b2e-33d3-42c9-9fb5-6400c93a69f7",
        "cursor": {
          "ref": "aa0a11ee-b138-4168-991d-bfe7df422b30",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "09dcb1e8-12ca-4670-bc3d-c8c27d74ca24"
        },
        "item": {
          "id": "ae9f8b2e-33d3-42c9-9fb5-6400c93a69f7",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "be9fde6c-dadd-4b68-a223-8582978cd74b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 394,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e86c7f-933c-4320-b92b-334d7b6c0b5a",
        "cursor": {
          "ref": "abb2579f-86b2-46b7-9eef-159e92733145",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "690aaae4-41af-45b1-a703-a3eadf144c8f"
        },
        "item": {
          "id": "46e86c7f-933c-4320-b92b-334d7b6c0b5a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ed9b8a7-29c2-4fc2-8f82-683e7342fe38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e86c7f-933c-4320-b92b-334d7b6c0b5a",
        "cursor": {
          "ref": "abb2579f-86b2-46b7-9eef-159e92733145",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "690aaae4-41af-45b1-a703-a3eadf144c8f"
        },
        "item": {
          "id": "46e86c7f-933c-4320-b92b-334d7b6c0b5a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6ed9b8a7-29c2-4fc2-8f82-683e7342fe38",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca722a9-cbba-4743-973f-32584ce759c0",
        "cursor": {
          "ref": "24ae87dd-1cee-4e66-9fd8-0877b2f56804",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1780d5fd-4158-4041-bb42-176d0b033d52"
        },
        "item": {
          "id": "5ca722a9-cbba-4743-973f-32584ce759c0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bb56d40c-5b24-4f85-b7d1-e30eadef2add",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 646,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9607941b-8827-4b5c-badf-29702b690a63",
        "cursor": {
          "ref": "b2c09d57-0fab-45d0-8ad6-36566398c967",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "462abf33-f5d3-4597-9e2c-103e1eaabced"
        },
        "item": {
          "id": "9607941b-8827-4b5c-badf-29702b690a63",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b1ce704-922b-4e1b-8e32-555bbc2e2469",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9607941b-8827-4b5c-badf-29702b690a63",
        "cursor": {
          "ref": "b2c09d57-0fab-45d0-8ad6-36566398c967",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "462abf33-f5d3-4597-9e2c-103e1eaabced"
        },
        "item": {
          "id": "9607941b-8827-4b5c-badf-29702b690a63",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3b1ce704-922b-4e1b-8e32-555bbc2e2469",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6a9680-236a-4bcd-9f9e-9237683cd39f",
        "cursor": {
          "ref": "ec916b0e-78c3-48c1-8180-211ca8a7e1b0",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cf62d206-6f36-4a1d-beed-ad3309ef0bbb"
        },
        "item": {
          "id": "be6a9680-236a-4bcd-9f9e-9237683cd39f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "c1fc9779-2045-4b3b-a37c-31a60a544a5a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 765,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}