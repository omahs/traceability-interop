{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c6ff3d41-adb1-4f11-82f5-96df899e4595",
        "name": "Clear Cache",
        "item": [
          {
            "id": "06125b95-6f04-4b55-b0c5-197b177ce2d0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94bc93bf-dc4c-4faa-8acc-5fbd8e72e631",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "04b66081-5f5d-4901-8200-9746a6781bc2"
                }
              }
            ]
          },
          {
            "id": "f89a4e1c-a8cf-409c-abeb-abb7386159cc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "915e2a76-fff4-4401-8dbf-ca152f6b1681",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cdf84ece-58e6-4c71-a525-9932855acfde"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9d2e3687-31a1-4e94-af55-b955e0bdfdec",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "deffa6f8-4053-4aca-955e-47013814df79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "488f67e8-05ac-4135-8416-82739dddd6c7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "418a31db-ef88-4a28-8e86-5ba053120b35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "599c216d-dc07-42ac-a63e-bb209b2b9b40"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89465094-69f0-401d-895e-0baddd8b764e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd9f8e8b-3828-4867-8760-ab629ee43a95"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cad358f4-1871-409a-9fc3-e20a4a7f1323",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c79d8ba-aa9f-4e37-8ff9-e22766d2eb62"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31b48d5f-dc45-455f-bc9e-8ad874fe97b0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "95b973b8-59fc-411f-ac13-018c6f9274a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf30a31c-e4da-4f88-b318-51f6bb28369b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84cefb45-0c39-49bc-954f-9a87cf2b26c7"
            }
          }
        ]
      },
      {
        "id": "a206fc61-dcda-4497-b8ae-b6ad43b56e28",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "14b92deb-53f0-43e5-b33f-d023317d9d87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2322d772-04bf-42bf-911e-9eae2f12b0af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05dd43e0-3ea7-42dc-b86d-fa74ea7859f3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86de988b-c8a5-4a4d-9b88-f164d242ff09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc7852ff-f5dd-421f-8b37-1650b1fea5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecfe405-f177-478b-9094-6a56e46a04cf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e21cb63-93f9-4f33-ae75-c243cffc4e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b16aef0-2296-4cc1-a4d0-b5f50701e5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64ba62b-e279-4fa4-9365-af0607ef3591",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a5a8d0-a02f-47ff-83c6-f12b4ffecb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4c5e5d9-0fc3-4474-b12e-7f37767b98d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ac1c24e0-d7fb-44d1-9ac9-395a7fbc64b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7748af68-8d7a-49af-a9a3-57debeda729d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7553b6-38b7-479c-b4bd-e0efa435fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "232fb7a0-6a34-4e59-b3e9-be6b1452c26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcb72a1-c4f3-48fc-b585-faa67a248061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c78a6c-e03a-41e2-a623-13016e756191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a650b3-c212-4b94-8c01-ee9dc5cf96a1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f0d809-3a11-4b9e-80ba-e6d7cd4cdb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07485dc5-cf1f-4fa0-9226-be1d7e7791b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fcd4fb9-6387-4e23-8c3b-a88132c88c58",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "87e53e7b-5a5f-451c-aaeb-1f8c42f9b696"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff8e2fbb-f1c1-4fdb-bc6a-cd5d0835d058",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7dac2ff3-55ad-422f-9ba3-8f1cc682e45c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a84814c-7c1d-4f7e-97c0-f23470f6fc43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "19c6fb42-70bb-45d8-ae75-e051086e09b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ebf8715-0a67-40b1-bc47-e4151b5145f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "3f34964b-6e18-4875-9f1b-b6ec29fe7a0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a28f4c38-20f6-4391-93b6-7e50a6b468e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0393de5d-c371-4b0b-98e4-b05e0822dc3d"
            }
          }
        ]
      },
      {
        "id": "0a36c87c-2ced-4c8a-af30-1079a9c9a78a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b87668e9-8db5-4772-9203-92e4e670894b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7449555-d8b9-4dc7-b529-826a9e0a429c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "026d77f1-24e0-4a08-a0ef-2940fd9c9385",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bc7471-56cf-47df-9b64-5bbaf7cbc960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f757d9b-635e-4d7f-84ab-9cd0a807462b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66576617-1187-4c64-861c-a93779767618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e39fa0e3-c2af-47b7-a7fe-f93473f48602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa56b8a-9b19-462c-9eaa-2af5d9793b48",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7328731-406b-4ae9-997b-7b881375d925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a8fc58-3a87-454d-bf29-6a49df1f470f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe0b4b0-c868-4eed-897c-59b36cab6993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dbe2796-c052-48f7-b2d5-5c251144b5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b19bbc0-06a2-452c-bb4c-69aadbddc408",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cd9ae3-65b4-43fc-9da4-57aece73bf9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08cd84f-b726-4d72-b3eb-f75db5db9019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a84d47e-fec1-496f-a810-654107711ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5fe4073-62a9-4ed5-9d52-71930b0ec54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff9a0d4-ac2e-4c81-813c-2747e3de9977",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66522eb-0582-4615-86c0-d61e7e6353dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44502d4a-6f5f-41bd-bcff-42c7f9780bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0933a86b-ead2-4939-a9bb-8641f6197913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e49f8b08-9996-4f13-bb56-ef016e8b6629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1ce720-2018-49bd-891c-1b483e531d61",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d6d4f5-8392-49ec-9026-b549aa397f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b6ed8ff-cdec-43f0-b34e-ca0b29da65f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df920652-094c-4200-971a-f39c481eec5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "555d9289-57a9-4fa7-967a-16a473a35a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52912d01-4bc2-4105-991a-8643cf7fef14",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ff5d5-6e58-46bc-befb-872edfd453f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92892e8-1f0e-4961-8e92-a2e5525a9438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0705bca-8e6f-427f-b3e0-783770ecd1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee344223-911f-40d5-ae6c-02b74dd54700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fbb3d5-659d-441f-852e-5f5c7f48ba2b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b778ae-006f-42ec-9f91-e5291ca7d1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c986a0-7be8-4a9d-99be-596d7e22a26e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fbc777-b029-43ad-bc25-c3c96ac44f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ca238c-116e-43f3-9b84-3bcb8f121c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35fef2bb-349c-4459-9fcd-19b146033389",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da01c23-36a4-4303-87d2-8d8df1787e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9639128-4bc0-42af-97bf-a8c85ccbe36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bba698-a111-4ff6-9519-12ed5d266f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0cc6cce-4189-45d8-bef7-c947057a443d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07ff8e1-8156-4bb9-aa23-35338cd8d2b5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f59279d-e481-49f8-98f3-6c240149ed9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aef0428-174a-4e39-9517-4b45210e4931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d6484e-a88f-457a-9f37-378ce8b6fb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "365c4eb9-1b01-4cd9-8c18-234542d8bae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9471199-b4e9-426b-bdfb-b29b98d1b71c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17dcc6d-da18-4d51-a511-0b40c9dda025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428f28db-b277-46c1-bac7-01bb7732418c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0262871d-372c-4178-9cf2-9c34c04cb8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d93033aa-f4e0-4ebf-8cc6-304110797258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d1ab14-9ae1-4593-b79e-cd24a94fbb01",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e1a9bd-6e79-4886-89ff-9131075b1f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e913f6b-830f-4204-be4c-4c3b8a58ab98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e337c6-7a23-41e3-a9fb-ffc26c9db80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c3a2ec6-91c1-4989-9ab6-4e422cc7db6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fe13d2-e555-4845-95fb-081ac55caf8a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a2a855-70ee-423e-8d5d-aa2199db67ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2653be88-861d-46f2-8ea4-d5c30753d4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc3056c-5bd8-4b65-8634-957b0b9a530d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75063030-9d09-4483-9a0c-71338a4c98d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c43213-c39c-43f5-9fb2-e84001a000a3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebd7661-c895-4256-bffd-0e633e3f629e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7fe783-0402-4fbe-9f3a-4cf1071bf365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c491c7-a9eb-4104-a499-aa2597767ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2818900d-18c5-49fa-8b68-e0484aaf0a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee28e90-6c43-4eb8-860c-f5447d22b70d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8b8e94-6790-468e-986d-be613ab968ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a479615-1a33-4ef5-b886-dcc3eb8c25e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2e5fe5-ff8c-4267-ab2d-bce2a9893c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3530f50-a794-4033-aecb-e7be46808a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab610b1-444f-44e3-9103-ed37c23a82a9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccfe35f-d4c6-4202-a80d-5e6b90e5c4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0da45aa-21e1-4e13-995b-f5e963656a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8c0dec-becd-4633-a572-3da374b6984d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e989e033-9de0-4909-9880-29e114cd9e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280203c0-41fb-4da1-b19c-37a9e32f3862",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2963542b-b6ac-4010-a4e0-1c0d72203883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f580239-27d2-4820-b2b9-72b50a4793ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103576a2-8f0f-4059-9d46-ec8447da41e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "220f0267-b2df-4213-a52c-e1042e80fa72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9792fd3-5f39-4da9-a087-db5c2d227b8b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c53a721-36f7-4682-867c-a8c3cbe93628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d48bb32-9462-4fac-b0ee-0a7942b29bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1d4085-13fd-4d2e-8ef3-b632b7abdf6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "150f395b-ec6d-4570-a2be-6e75477481c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd097a4-d09c-49a8-b55c-f35f9ac58086",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32747b0d-ca31-49ae-8eb5-148959fbb2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9db3f03-051d-4957-99c9-2e39928b5cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93c9dc-07b4-4900-b541-13b1b7a5478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf05f51-83a2-4aca-ae90-0f2560c87f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70efb8ff-1e9e-435c-a2ef-5baf57d46058",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e65be41a-fc70-4236-a8b5-8e40a48724bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b8cd35-36be-4c07-9a07-ab4a5819f64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c94e90f-46ca-4645-b7e4-8dd216f52b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e88bebd-965e-4746-8cd4-c82b343286df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4105a28-33e4-44d5-835c-45a1b81b8b92",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a9cf39-2e9a-45bd-ae77-60cbf5e0197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a3caf9-2d6b-40ec-ad90-9afae3ba029b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eff02d-42b8-49a4-9421-c84541a96055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c20046-ef46-4610-b7ed-4fec84ada973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d96417-fc2f-42ff-840c-1d5a3f5ac9e5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcf3eb2-32ee-44d8-b6be-40e8adb3146e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c3014a-0014-429a-8ea1-70ba482bb32d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "696a1bff-d598-44fd-a6f0-3a13e0c83259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04626afd-e1c9-4a09-9d63-a657573e8cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae796ea-b347-4fa2-8edb-f10e4f400c55",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8703b7-1db4-4246-a162-252429143976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e554a5-61d2-41df-b018-553d3f43c6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b6569-ae5a-45bf-93d5-5abdaba0fd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "090d1917-a867-46b7-a6fa-711419018207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1d62c4-c7f4-4e37-8dc5-adf2df8afc09",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3ce63d-29f0-4b2a-8e3c-0b2a0304fb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf01877-d031-408a-8e18-5e8995582115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c759cb9e-b689-4f98-85ca-7a129dd464e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94622723-49ef-42d6-b1c7-3163ebe9d3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d790423d-20c2-4f2e-a798-02964d6d80ea",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d1393d-d03b-4df9-a17b-329fa9154f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061b0416-577b-4ff7-a067-4ae8ac21ae35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee97f84-dd2d-4062-be73-9ff1a89738c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87240c2-b5f2-4b74-81ca-e9898224677c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318ed3d7-438d-40cd-93a2-44fef2e8b028",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb77a7fe-3665-41c0-8b96-41d3da1fbb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd2ea08-ab3d-472c-831d-4daacfe19b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a321de9b-2c4e-4fd7-83ff-904fc5d37258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96fac1eb-3a53-414a-ad57-38a5616282db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd7abea-5fa9-41e9-bc7b-fc46a7d91f1f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3f3e24-f850-42cc-89a5-c4ce9729ddf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95989061-4808-44a7-973c-fabb9c7a8653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e527315-21bb-43c3-bf7e-fb56216ad44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "71046031-521f-479e-b8a4-bce34b3ac962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6718c5-083f-40e9-b3f9-ef229a5812d5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3543036-c2e7-4225-a93c-b4fb2ca6b08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71993ca3-8422-4568-a5e0-a1deaeb91d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731056ae-ab1b-4cbb-9e25-935a85a04686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0549c2-66bc-4922-970c-baf799a42c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7ae3ef-f978-431f-8c9f-f2ee6c13f23e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2078374d-cac6-4d25-ab3a-e6a0ec5bdeb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f51d5a9-b69e-4312-ba63-fcdc1a07c6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ba8009-a90e-4d83-81dc-464a7fc8d137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7850d7-a7e4-4543-857b-f83f4d413938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43485d02-deb2-43d2-81b0-eb0e5029cb96",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b2c9d5-389b-4fdf-ac87-73049b47bab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b759acf-9d5c-4669-b439-27675c27ccdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99768880-8eb3-4ad3-8a0d-2438cc2b7c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "73b254f5-3b9d-497f-b802-f471b99acc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850d44d1-04e9-4ac3-ad9c-31483fc0f837",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d172e353-d2b5-4297-b1db-69ede396bcad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce86929-076b-4b0b-a47f-0deb8cba9aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9643b959-122a-4ab7-addf-763e6bc59632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbdfe93b-c676-4b63-bc40-ca37eb425f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd97f08-952a-4463-b74c-ab1e72551aab",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ad64b3-eb63-4f1b-a954-f8953564e6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981f66d0-0ed3-4d44-a9a7-0e0ebba35f51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e61096f-efab-45fc-bb86-b37207a57101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f96c0cd-e9bd-464e-b919-c6de99773ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3c5a9a-22ae-443d-a2e6-8064fdffb751",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "439a02ad-073c-4c55-8c9f-073776dce232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5cb13c-cf75-43ad-b271-29d044649e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584cfe2f-b5c3-4590-8fe4-821eaef339ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc32e07-47c2-42e2-9a5d-247f26d85662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416180f9-6297-44fa-92e9-e5968ea09b1c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65322786-043c-4660-982a-f98c68a110c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a85254-08d8-4b72-a404-c5c1bd050c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a98ab79-3d0a-4857-aad3-df6871bca4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e462b792-2f9f-4529-bb08-f8c2281015fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faf1249-4def-4c7a-86c9-1ff078d6a68a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240dca90-4a42-4777-99ac-956c1efcfdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88285eb1-8196-4a5d-b2db-039c850d424a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b15afc-c60a-451c-8e0e-fc905551cabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "25d12516-65a1-464c-a71b-9b105e1dfdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96426321-657d-4358-b8da-0528d64f97a3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980b1a59-a663-495e-9a5a-0959f9b11e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577b03e4-4796-4b9e-ad92-faf0c6d70745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e52423-4daf-41a2-b3a3-53dbc3b2f4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3104055b-bddc-42a1-bdec-6087c6005ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706a81dc-16b9-45bf-9568-72b25972cd3c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61514e7-184e-4968-a732-fe805a868640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9efcd8f3-bde9-43fd-b087-5fbafd3a908a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191d5ccf-0ddf-4bc2-a71c-ff906383f20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b625ac61-6646-4a3b-923a-eedfd1634f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592d6262-83f7-43f4-b25a-7a229f950587",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edadca1-201c-434d-a4b0-fa9074fe523c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512b862e-dff9-4b50-ab1b-397ddb4fe0d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc860539-82af-4641-8c7b-fc6f8d7cbb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89234784-b190-47d0-a2d7-e7f803bdbfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d24542-679e-4632-95ec-4ce09dd07e06",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7ac78c-0e69-4094-a26b-199ca1849674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21436789-bbb5-4fc1-a654-3de985177977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccc9e39-4140-42c3-be38-54a20b8ad7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d51adee-30d2-40fc-8247-4a825b4b7b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c37baf-ee46-4fca-bdf2-1633882bcc2f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "987a4570-83dd-4f55-ae7d-647a0f0fabc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2690c886-7216-4c7e-af5a-dcc1ddc0174d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83271ace-4045-4118-a4ec-1032605ca018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b841d9-ce15-4810-9d46-7260dd8f8bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50552ac-c5ac-40a5-8dee-fb0dd41c248e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb7d6e3-2913-460a-a1f2-7b389ef71842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6662896c-fa6e-47d9-bfed-466b39f4628d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1989d44-d32f-43a9-adaa-02696e125e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "efeac269-5981-474c-a5c1-d2d238e0a55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184a05c5-d268-4422-8c24-cc99b5ec744d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4b0478-d974-45ca-a84c-9c85ec3689d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101cbfc7-5ff6-470c-b6e5-c1f991b2d9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adae50c-ec59-4200-9475-a926f2db1381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ad9f89-318f-46f6-a616-ab8ecd4ce195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00785258-1b36-498d-8d0d-7d6700481a51",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd27589-9a4b-4fff-8eb5-19231b65d332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61451f3-db70-4685-a652-a75f76d957e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50ddd7a-0d43-4e43-b2d2-73afcde4dcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a98637da-439d-4874-a44d-2491f37c7c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b57789a-3a02-4f0d-95e5-7bd8b844d344",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c224a20-93ff-4e5d-b204-ae428300968d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca552d73-0a62-4a58-9661-7c5434b20d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80e667d-2c9b-42a3-a7ce-ef8c6a793cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "12d2b213-35dc-4b47-a7ab-fefcf3175469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3966ada0-419b-4978-b84e-6e49097d164f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c3f0c-85f7-4d5d-84ef-ed85462464cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15eb52b0-886b-4e21-b89a-733adf8ff02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a011400-ee44-40d5-806d-66800b92e595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef54920-fff6-4bc6-8c68-41526995ae85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70740736-9e68-4f45-8d9a-2bdf99edc095",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfc3624-4657-4bfd-ab7d-89f707d3716b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6afbe403-c4a3-4e1b-89c3-4706a05cf7d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16abebac-eee6-4e35-bc31-d69301373665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "90a07f47-0923-4d90-a8c2-419f5c203ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38570ffb-d1b0-45a2-9409-e261418c8741",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f54e78-45ab-4abb-a47b-c32e144d57b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d17a6a3e-6aa0-4f1d-99d4-6a9731a52cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd0e8f3-5a34-410a-b393-06334edf7f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00ccb300-d63f-437e-aac0-2da548b1793d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87e4b05-319d-4a90-8b57-e8671fad80c9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be11a588-2f14-4e92-9010-9353347b3242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179cea21-7c19-4882-a8d6-256fbb7c3db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83f8fe6-e124-45eb-a6d1-8c13dab3caf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7accd687-b101-4ef2-986d-f8a58af30a5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f195179-009c-4485-ba79-b1f078a3c621",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb361369-e316-4a4a-8620-492aeac46d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd9e7b9-8d62-40c1-ad41-4be4f1ea7f27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9146cbc-774c-4404-a6f5-1365dafd9e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fce27680-a367-4367-b729-63b1abac6017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da151294-dfa1-48ee-8052-096c5eb07632",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2175b9-81e3-4e67-8f31-9f5801b1b3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5986fe-6b1a-4b0a-8eb4-408d068324c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9d54ed-1790-4613-a9d1-6a6132d5b836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0240c3e7-9aae-4505-b12b-e2aaa69dfb4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364fe4e6-d16c-4fb0-8c2f-1d19c72428a6",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52a6abc-9bd6-489c-bbf9-8f4890d3589e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8cae4f-f77f-4092-ac67-4f924cc895c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ba041-2565-47bb-ac6f-1ccc7ed259dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0a30ce-1f61-407f-ae5e-b540b2c3f791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ddc6ba-398c-4ace-a937-afb4acda7674",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af881401-44e9-471b-9479-fe26a9e0f8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5263effe-efe5-489b-aabc-eafdd8ece34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dae877d-ada0-466b-bf64-4c6b6c18877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "beff0136-cc13-4808-9472-013028cc281d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3aea03-fe3f-4f1c-8c4a-539fe85d204d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b12cbb-e414-4ded-bdfd-94912a673d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3fa5c8-cb1c-4ff5-8ed6-07522db95cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8b45c2-1905-40cf-bca0-b2b0a5358d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa381daf-6a3c-4608-945b-6072d815286a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636dd605-763a-4e17-9f6c-199e138e1b4e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9be51c-52b4-4c04-9ca6-0a851ccf1616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa835c78-2f44-4029-a515-404014122a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed41224-5164-430a-be5a-aa87902fa4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44caf6b6-ecf2-4ac4-8d13-e6c0aba271c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85133975-80dd-4af0-8dab-1496baedc569",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44516374-5e74-428e-af57-b5fbc88e443d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1fc85cb-8d61-4374-911b-af7b1142b078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8861c8a1-dfe0-4178-9a07-425b674e20c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87887c62-ab2b-42c7-a8d8-10303cd4e644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ea6c5e0-16cf-4bb1-bad3-e93818322a52",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1935c5d6-6b7d-4b73-9c43-f11863b648f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262d6ac2-c215-4fef-8c9c-ce1c576f10e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1e2120-f3a5-4dda-acfe-b82555efddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a5d4c7-f676-425d-bbcf-4c2e534dd7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7fa44b-aa49-4825-bf4f-dbf9cb13f4f6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee12d255-f023-4658-9f40-24ed1d8bf834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426be282-bb6c-4cc2-8c91-20de8bbe4aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a215f8d-024d-4549-8587-89b676218132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bf3b208e-67d7-41fd-8b7d-f5a8ee7bf9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e823058-196a-40c7-9551-b838d13ae626",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63602f45-0f8d-4d59-b4d9-33e0b6e1ccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a0d4ba-8714-417d-97cd-407d11f4357b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d271c13-9ee5-4b34-a1e6-290a6f307d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7296084-cfce-4cbb-b43a-ad1eaac6dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5184e8aa-f9b5-4141-bc9a-3a19a0928b41",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d01a934-d79a-4a52-9e42-367105c8f4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7263522-006f-4a89-b4f2-3a41bf24f5c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4bdec6-6236-4280-8998-60cea69e2823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "01b72e74-c28d-4c72-927c-5bde8a09f461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cee54f5-055d-47e3-b687-a24d19a5752a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b0fee1-87a9-4ab1-858f-462ad0a785aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b84e34-44a0-424d-81a2-24987d25d053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f70bf0-4915-4e67-9845-9d2ccc3e1d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bd3ca2-dc24-4a13-8299-63aa6d6cf83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71053bce-2bd4-4a33-bb24-640d8a1e1d96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64745237-4f06-40e2-b21c-180f57a1f091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d706ad1d-20f1-455b-94be-716ba5c936dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33eac44-56b6-4df5-becd-1f8220bfb81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5c0e7d-22fa-4fb0-9d0a-d99a5437be7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7af13f-3440-4306-9133-9a1041f9b253",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c611ea0b-2e5c-489f-984a-002e2ee55c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f62a404-a91b-4edb-9958-68e0b9260aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c210c11-ca4e-4523-9391-1e309054534f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1ea9d3-84ef-4843-af92-03cd478319c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f628a6d5-a102-4e28-bea6-19ac38d85681",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94191f06-fcfb-426b-84b1-e05b903dac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bddfca-d45b-4811-a9c1-246007b5ea9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe18179-b4a1-41bd-ae5f-4ffdf7ab62c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4459153e-a963-496e-87a3-25dcfd324e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dfd24db-f8a7-4bc1-b4d8-3b1560859b14",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c77397d-8b6d-4d45-9798-bcfa99664c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee49b0e1-9d38-4452-935d-228baa543e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b67eb42-6a12-4394-91de-456e414bddd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "528952b0-045d-42be-9486-b0fcb2f496d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64f0c50-eca8-4559-8bab-ec87484e19c6",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8570cf3e-e295-4e47-b247-d9e5a67adea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da4d4df-5f40-48f5-8585-391495f0791f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3105025-f8e2-4155-bc29-3884075a36ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a0f3de-1006-4004-afe9-792d8b6d2a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d4a4fa-761e-439d-bbd3-2d2eede25360",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6ab40-b50d-4577-b0d7-4066fe400776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f54c89e-02b7-41bd-963d-37ba492f52ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d505cbe6-e251-457e-8811-6a281cc463b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2879e683-5ade-4ced-a1ed-d58ce25d682a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3d007d-55db-4fa1-a69b-6e06f21922ac",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6283009-6ca9-436f-8c73-2cb2456f6088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dd2699-22c7-4d36-b701-a3bf38379273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4aa2a21-615d-4818-ad93-1ed57c0b77d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a98e7b0c-b4be-49de-b259-9c82cd5ce933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ea3751-20b8-411d-86bb-f270436a80f8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78372ea5-7535-4774-9ba7-44629a765fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a770f5d-7b7b-400a-88bd-6f2c40eea265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cc9dd2-6ea9-4dc9-8318-c404bf924aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17a91c1c-0fb8-4399-b34c-f0a85ab5cb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bbefd2-837c-412f-b68e-a9bcbed246a8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d31fa19-fc5f-4450-b3df-e305bda42a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6ef358-37a0-48a8-bc5a-f7478c4ddf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e6aa62-916e-4b50-8378-2fc7169c5f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d4791b-a1b1-4862-8940-4b217d7e01a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a8b81-c2dc-4f48-a4ee-3610b61bd038",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89eb5050-7946-4de4-ba67-bd52cf1d206b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd878273-0e19-4e29-877f-3ccab47c7ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6e664a-0d1d-4b7f-a00c-85929e30cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75970872-712c-4213-814c-0341b422d5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd50bee-1d89-47c6-8c23-368dceb62261",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471192ab-7943-4c23-8660-f4b0c6ea8fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b134cd-4bb5-4168-a6fe-574b9df6b000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca6fb62-2b6e-452d-812e-42967762e4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc53557-b97e-45e5-a0ae-b311dd74fa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1172acc-457d-4b23-a681-1f5eb0b76a3e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b31846-73cc-43e6-9551-a72200cf5003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0baee4d-ee8a-4974-a3c4-7f1d562f1af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1dd2d84-95a3-471a-b024-8f2a44a79928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f0dbd5-c6cc-4c03-ba76-cd098a406fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5536fbed-7300-43e3-8029-39433b1ec5e2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b45b16-2841-41ac-8377-1c6cfda597a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7775c5-c375-4c3a-acad-0954c70094bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2275158d-2791-4cbf-9491-86f046819c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb225af9-f89e-481e-8ec7-819924e5d37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0a5891-639d-46ac-9e01-2869b76c7816",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6051b946-f8a5-4b6f-bb9e-c405fac1bfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ace2d8-c8b5-4f41-990f-14ddc1449e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d920847-16a4-4700-ac9b-2b7f906c879a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58bee538-fbc7-4984-be72-12aafebf8c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5718237-8f62-4dd9-b763-218643db2d45",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86435fc-926f-4f5d-acd9-f24f52ca03de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5111f412-b7ac-4bfd-bc75-0e00bb5bc59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e957fd-679a-41fa-b541-0afe18efcf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "261207cb-0e79-4164-b239-93d33866b6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3092f953-9bd9-4788-9b44-8aabe6da75aa",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6d66b2-398b-4b66-8c5b-01ca780ad0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adde5798-c978-47c6-97ab-1b58077a82d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d6ec83-951a-4598-8dc4-0e1317f84a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a07d96c0-9d5b-4f51-8d0c-80c4332441df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a0f245-9fce-47f6-9625-e76757a77aa1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf9d17d-1670-4223-b009-010787742d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f128c26-f81d-4151-b1b3-d2126ef0f4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa6d132-17ce-4099-94fa-7fc48f5bd199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "75f5b3cf-5141-47c0-8f74-bd7e61e37441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afffec71-9b1e-4494-9aa1-2c097c7453dd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500882ff-e201-4b15-bb3e-5c683bc40183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e1d312-d49e-40f1-ae18-66711990467c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bc6fc6-69f3-48f7-b556-179005e87050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2572d6-2d5e-4684-82c8-f2a93c201d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b85404c-01b7-4b40-b3a7-2ef15104381f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dad02c4-aa38-4325-817c-6d4a60c3a31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743661d5-73b0-429e-bca0-3e07be902fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff20d04-6985-41c6-8eb7-6281b89a1498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "870b209d-5018-421e-8050-4b1488f5d815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93166274-18b0-42df-bac9-2fa2cf3428bb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d139cc-5a65-4915-8629-4e97600b2a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b571562-2520-4367-be9a-640cfda0d7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7c355e-7e01-444f-ac2c-ddca87fee014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7913b95e-d863-4685-9c63-ac0f3164de27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd0c1c9-8b00-4d29-adf8-142139efe792",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a698b35c-f7d5-4850-81cb-e1258f931e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079a3c59-ccc7-42bd-8494-05ab747c7bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3b9412-2f14-45e3-86b2-179686a02cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a17ed71-9d4f-4f1b-b134-efe8e1f3d83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c75d20-f0d3-4879-ae59-28c2e181bcb8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30cfe2e-79c2-4de4-8a60-a45b99446b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2966c0a5-3780-4254-98e5-7397041a1ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b049406-28fe-4dbc-9a68-54293536e463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db99af43-c69d-4fe7-ae4b-d36e009cf425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df8a011-1994-4307-aea2-219b023649ec",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e60e1e9-aada-4aee-9a3d-beb58edd082f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517971f1-dcc3-4fad-b435-c94a5837f3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69ffe27-e7b7-4bd1-9ea7-a19afafae5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b895ceb-ac05-4877-8fc7-5db573842072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b327b4-d293-45f0-8276-fcefd3a6d835",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bd41fc-2965-4e24-be1e-f058fc0225df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa113c7-316f-4c1d-93c4-b37c2c305eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fcbbe5-fd08-4a75-859b-8fecc8fd09b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09dabfc4-4f1e-451f-9a1a-08811fc6c8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cec8a0-094d-41ed-b3ad-b80229ee09ad",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a530c350-bbe8-4850-9d83-a912aafd52cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2af4e6-d440-4d4d-bc09-8889822b407b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24f1e62-435c-404e-9b37-52c192781bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6774a2a-9d6d-4175-8977-a3bad1ccbfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a5b052-fd54-423d-88f8-bdcbc8968189",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b99a04-819b-4242-8a86-659509f199c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a829936-01f9-4427-89e2-769546833056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a063be-a54e-40a5-a31d-c18f348eaebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1704feb-6640-4d5c-9181-822affb4ceca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6de6ead-879b-4308-ac09-c23578a3fa19",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93b772e-8807-4356-b86e-6f648956ae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc2fabe-a576-460a-a13c-198f8171a26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693115ac-3110-4aae-b258-ffd995faa2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb25e13-6a62-4dfd-893f-25c883dfb5ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c4a3e2-0581-4461-b35a-c9e126979197",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51795dcf-ebb4-4d4f-a200-8e92fca3ff2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b1349d-f0c0-46fd-948d-cadef6db37e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed580c9-e374-4bd0-b432-7fd2b6398ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee0b1cd-fffd-4742-90bc-a60ec66d9ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f22cc2-e812-4ce8-a030-f5b6204ff453",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ceb0cb-75a6-4905-8dc6-cca9d8668e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66612e75-274a-4579-918d-75a41d9ddcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dcb94d-6531-48cb-ae2f-a40cfa706604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5401171-7540-422e-b283-84a1be61630f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fcd5d0-553f-4c9a-abd5-1f3fc13f1b2a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74543f2-20eb-4117-aa4c-45dcd649ddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6ad645-65cf-416b-b4f3-eb4f92373e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a8a42d-c2ce-4f0b-8e0e-d4f1d13a860a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21cd3bc4-2149-4de7-ab22-684e3cbed628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423acdf0-3b3d-4db1-85b6-8f2eac7c98d1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c559cd0-3404-4cd7-a64e-7996db0b085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40cb964-f072-4514-a94c-d9226d46c02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ce20af-0e3e-4a18-9815-3bc6fdc13071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e536a0b9-9990-40f7-a77a-3161ea24098c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09f8ee5-2df5-44d7-8226-ea747f81fbb0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe209dc-0735-4ae1-997a-58da1eab964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f466617c-dbbb-4910-a931-ad1150157be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099d1126-8f93-4d09-a9e1-6ef4823f6a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4510217d-b99d-4eec-86ec-728f0856b9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1ba7bb-e34d-4e6d-b947-54c57009c753",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a18c5d6-3da7-444b-abe7-7958bc6f9cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "73b5b720-19a6-48a2-a75f-c0b1fb26047a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d209bbb9-8020-4f7a-b245-14abff4c75b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9fbfaf-c6de-413d-8858-4867ac6300de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e980d3a-b2b7-4266-9553-088cdb91bbb3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e8e414b-c2bd-46df-8ed7-d77d30104294",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2333dc1-1213-4601-a5ff-bd939e9f1453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "128b8fbd-da2d-467f-8ee7-97198ef11d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cfa375-8d95-4afb-b654-ab59f04fb8e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b5e0c3db-29a2-4bb6-8cc2-e38d12f4ef8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20af5039-3b0d-4730-b524-3717001f3755",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5436639-746f-431d-bb1f-2f555ed9105e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58d725c5-93ec-435f-918c-77d6c0d28a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05964220-489c-41ad-be16-7f4884767be1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "9f58eaf7-aa2c-4477-ba3e-352800f7a2e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae3f89e2-ebc0-4eba-9e8a-61a12b6d9656",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3fe96e-cfd6-4a8f-b4bc-7faf3f9b40f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a1710e8-57ca-40e1-b372-de570d94cadb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac162cac-4578-4ad0-8116-86fb7ce9a251"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "984c5e0a-c82c-44f4-96ff-3a4797ea5f42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b84cbecc-6b0a-44a2-9c26-4725a067d6a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4ad9e858-8105-4e86-831c-597445641efd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "84b87f51-5d3e-441e-a739-1d0b2fa11d3c"
                }
              }
            ]
          },
          {
            "id": "c52fef05-99c4-4a7d-b90f-0be11dae15b7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fcda70b7-2d31-40b1-8f86-4d0234ba534e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e8a2c77-76f5-4659-8a25-c2f72328e78a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json();",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a550864-e432-42d9-9119-fb1fd1970130"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7303db6d-06ad-44d8-9ffa-72fb049beca3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "60299c81-ff96-4722-8dcc-2c015af8ed05"
                    }
                  }
                ]
              },
              {
                "id": "7549bb02-548b-4d8d-854d-d03fc35d64c2",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d617e622-1c86-4c0b-bc16-2eda670f7e00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09bbae10-5d5d-4f7d-877f-6b804553b3b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e97cd682-c7ec-442b-987a-9609aa930792",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f5d00cad-2fc5-4bd9-9ad5-ba49f51bd3d0"
                    }
                  }
                ]
              },
              {
                "id": "df39f5a9-c4de-4d4d-b3bd-d51f47f72439",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e31eee66-b3fe-4b78-8b01-42a82d66fa66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e7a6022-2f05-4175-87a4-79a1ff2b375d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54321d7d-df28-4900-956c-4ac039b9de76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "274a9428-ea09-4075-9292-b917f7304313"
                    }
                  }
                ]
              },
              {
                "id": "bab4aee4-d6e1-408f-bd37-2391223b9398",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfcfa68f-62eb-4470-8ccf-681a0c580721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43eefd7b-f07d-4385-8707-641344fbe441"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81f8d44a-f731-4320-92bc-9e450cfa921a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "327e8a3b-d81a-40a1-b241-ac180f535536"
                    }
                  }
                ]
              },
              {
                "id": "ca1b3c6b-9d22-4a9b-9325-065ca8efb159",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a9736e5-001f-468b-a48c-5a1c37e690f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7cf179a-c781-47b8-95a6-2c59ff88f854"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "953ec95f-c5c4-4166-bf87-1fdf78bcd5c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9839509b-1c3b-443c-b58e-f4bc68beeff1"
                    }
                  }
                ]
              },
              {
                "id": "d66947a3-cd41-41c4-aeb2-58021dc229d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "928b5342-21f8-43c2-82be-055ae5cb6039",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94cd778e-d632-42d4-9aaf-6c7c4d7fe8c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca5102fd-61e0-434f-b452-207580364a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "af70f0f9-02cc-49c8-99d2-81e15d8e6c8a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "74d1ea96-4fdf-4c89-a97e-9520ffeafcb9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "712be704-55fe-4575-b634-056bb8092950"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "34c458af-c44f-46d4-9d74-93305ef81efb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5ac71f43-2284-47ed-bc94-4b3c89c80e32"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f351aa25-1b6b-44ee-b5b5-a202bac95ec0",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "182a1c4b-b883-46c4-9c48-5851d9ca35c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82ff6ee7-87ed-4ec7-9fe8-8d8783d1974c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79e276d0-0278-4a27-8258-9e588eab644e"
            }
          }
        ]
      },
      {
        "id": "ba39ffde-588b-42c0-a7ce-d46d6a5b555d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7c79895b-aa4d-4657-8dfb-ae3ffb832249",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b4cff91-16f7-4861-9ac9-763220b6d7fc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "24a89435-7245-4f78-979f-8879b820537c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e119d1f-72f7-4d2a-ab3d-a697f7d0f5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7a26c2-ef53-4433-8c88-63dda151b092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b6ed761-afa2-487b-93c9-c89dbc488832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8439f6-808f-4741-b2c8-758724ec5216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317aaa04-3dbe-4c58-a948-0bc3b1c95d1d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9c67f4-8638-46c1-9f3a-7f4a40b2ab29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322fdf18-a974-41cf-8d20-945d6701f401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2da83bb-0a94-495b-9980-82484a575263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c65adc0a-5276-4003-9ec4-acb77f78e6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f9086d-c3a8-473c-927d-cc5f6f451534",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eb766a-7d65-41ec-a3b1-1512275dd623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33055bd6-ed52-4279-a5cc-0371750a9ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c3d022-0142-4395-abed-53d985ddb990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aefd1fad-8eba-4468-9aa2-d32ce8794424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dd4a6b-1ee8-49fc-a038-766068370f13",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2514ef23-1bb0-42e8-9ccd-409535b654fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82a120d-76f1-41aa-9693-9c72279ebafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb692071-fccb-4575-b79d-c5e804905316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8c5484-04c7-48bb-8cec-de977b86c7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b783b4-8cf0-4ab9-8b80-63691011903d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406a4c4d-0ce2-4575-8bf1-0fadd2ea0bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29debb0-fdc2-4ba4-a78f-446a71d86b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412d35b9-75d1-49a9-b325-9b76ae459f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00270748-4a8d-4f8b-ba4c-2e9273ab1198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de041cf-c0fe-456f-b3cb-7f940e81670d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cfbaa10-0bcf-46d8-b5ca-80d70c8099af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "501bc930-343c-4aea-a7af-98f7397ae37b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0613558c-bf92-4693-a2f9-0ea5c6aa3cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "854d7455-f5be-4463-aa9f-818662a818d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c6370a-b9d1-4f72-a66e-142158a28668",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03e933-936d-42b9-83fd-6ea82d9ab449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c47d605-cd3f-42aa-98e0-7c054c41cabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd542cf1-2ead-461f-a8a9-9cd51173af7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "893e0c42-2676-4699-82ee-01a331038f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510eefab-297e-455a-a2af-751465c9ea90",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9c3dc4-b628-4703-9f38-a037c3a7dde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f698133c-74ee-4c42-ba86-9d8bb883b812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6b9f77-a897-47b7-80fc-3ef92e99721e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2232699-b8c2-4e6e-bdf0-9ab372cc7da6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b3af2f-f1c3-4efc-8d9e-5e28c8446663",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6d3469-130d-43d0-8bbe-2c8ba49b9f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5dbe56a-5347-4406-8908-87c08b1b1a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ea8d46-1034-4f95-8e51-3269e5c4bf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59561c8f-c48f-4a5b-9530-e376a2b06d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096d6bae-d523-44da-9813-9077d0a472d2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc54d41f-f5fc-44f2-97ff-cc1a7f78c0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2839783-1c71-404f-9561-4ff67cf3d795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e71231-7c58-405a-a5c4-0c062b0de165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "632fe1ed-7f5e-4a06-9128-8c7b13139421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107e1c54-816a-441b-b238-1e437ab566c6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ebf58b-1508-474a-a9bd-23136463b5c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04de67f-9478-4e2b-ad95-72029483b0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1113e4-968f-47ad-b2a8-d77ebabf09dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "30aad68e-e772-4ba2-a4c9-fc280b785a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a539a29e-3e5b-40d4-8980-72b97cd643d1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5110e9c8-e280-401f-b010-9863da4032e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e898afa-410b-4c89-b5a3-aa45c3b15a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3530e392-1dea-4760-ab18-bed1ce439144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e58b51-0b48-4eff-911e-2dd05b98c8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed066f05-8acb-45a4-a498-f3661f8480c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd678a9-c798-449f-a406-01129c800605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfc20c0-0043-4e2d-b8dd-b02e3e6e7624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4176070-5382-4b93-8ef9-d8efea9d40fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c027520c-16fe-45fe-b4d4-ea08a01f4576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cdeadf-e0fa-43d7-86b4-c1760cf880cb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010d533b-f25e-4617-88ee-c59c575c41b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff0d60f-c9bf-4d19-89cd-0ff72665c272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5119b3-ac53-4876-80fd-5dee94a51963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ac3bb8-0e0e-4c2f-a5fc-0864b722dce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2126a1f7-d46a-4e53-9137-62b92fee41e0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57545b8-5f70-44aa-8af2-a2272f0f247f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "169b1925-a3f7-4686-8b62-736b5b4f825b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd20b6a5-e689-4419-aded-d5313a66caf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cfb556-9c60-44f0-a086-72eee040b902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217479f8-e5c9-4015-b97a-bfbb4b529c73",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b87fcc-14ca-4d93-83ac-e694ca72020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539e1c78-2476-47e5-b0ea-c5d939d9b662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30fe79-a636-4a9c-9b0c-c6fa4e335db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcb8448-1f10-4979-a720-d1884d563721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce27cf6-a86b-4168-9059-6030177cfa76",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f8d38f-9688-458c-a9da-ebe5028079cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea3106c-451e-4294-b3b6-313840423b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cc9e98-0f9d-4bf3-b03e-58270e2a0927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "97bf4c05-f21a-489f-ab26-2ac68a6b141f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a1de91-0804-464a-b692-d49cdbda9809",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b2d36e-dd47-4060-939d-e42d7afb1c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c40fa6d-7bbe-4c57-bd91-0fad16c420b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4626a262-0829-44b9-8f40-cc70e8140066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb0c0a5-e6a0-484c-8010-6ff39000187d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44b376e-3cec-407d-9446-ca70178ab70a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf655bb-cb13-4942-9b22-24f3d8e5829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8551119f-fd56-4ec4-be6b-b84b9e7415f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5e95e2-ade4-4620-8325-989c62878dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf4df55-b82e-4a18-a76e-742695f3d735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935d578f-3488-4bc3-90af-d65042c56c8e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c8a468-c9ae-426e-8451-6cc28f338597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e7dd2d-da63-4067-9ac7-c11bcada1093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3db290a-c445-4875-816f-d7ee5f72df6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aad922-6164-4ee0-86fb-55e6539232f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b963aa-1577-480d-b774-f6d1c171da56",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31228cb6-78c4-4da8-9dc5-031fd2f906ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3669c78b-f294-47cf-9e7f-06a468fc83f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a43d977-c3cd-4d5a-987b-4ccfbda0ce29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7824262d-b67c-452e-9a84-c8f78152fbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d773d40-ae6c-4891-be39-db6b3d4000e4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223100c0-2af7-4cc9-8b3b-e4b04958a2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c15024-a40f-4379-ad8d-9c167e48720f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a99600-47ea-4c26-8343-83b9f08338be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc2ffdb-5ba1-4a40-a11a-a4136c6ccbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5761ebe0-a8c4-456c-ab7f-00ff9d5ac43c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30010ca-8dbd-47fb-85f4-183d01cb0f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0071a2ff-49a1-42f1-b7c7-61df3baff87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f05e344-ac4e-48f9-a597-ed0ac94f958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb42ff20-de39-4338-8a0e-e68a0409932c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f96d454-58d1-4c6c-b2b4-34aed87744ab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38995249-6c59-4fee-b268-1fb121df5d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5c3e35-595b-4b40-a135-f67e9ef11222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fb6cbb-13ad-4796-9147-cb88fd4c3247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa93b321-e4b8-40ab-a0f9-1924b3f8e35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9f9a7b-a516-449c-b372-adbfd23348b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45b70c0-41d5-46aa-b07d-d44a505cb110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78504714-0e80-46af-a3a1-8bd3084cd323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb2db4a-0f05-4cfa-85f4-c70b92a940c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1622004-3550-4614-b0a3-b3ffe00a7fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dff1c42-67db-4387-b6d3-e6105844c479",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e473c61b-9d04-4f4c-90c7-424e846b45b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8fffa7-af9b-478a-9db5-16d743a4d85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a12a26-74a5-41eb-a8c8-ffbcf4786838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53de976a-7f94-4f86-9fc1-0a5179cfb6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa909d1-6f87-4f66-8c05-64fcf4fc6f8f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3a877c-af69-43aa-9237-408579b7e716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58f6428-0f57-402f-8f81-7de3dcdeaecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dce054-1393-48fc-a670-00dbcb977bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "786f8965-8b9f-4d52-a10e-7678e5d387e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d26f77a-7b59-44e8-a86e-20ca0aaf3ab2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5827437b-6a51-476c-a057-b8cb0c5e56de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e145290-2341-4ff7-8c90-6f9c41518b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966bb223-3968-424c-803d-15d5e32a69b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6578055-9799-40e1-bcec-0dd1e601cc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e603063a-c360-4688-bdd6-abfa97319bea",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df7377d-680f-4e11-a509-7c5b8a3f5fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe949664-796a-476c-ad90-9283b2d2765c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d963bc-9e94-481b-9373-ed93c53a76a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b67df0cc-df01-430d-ad40-bbeb900aa399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec7d6e0-4c74-4d04-8e37-d22c84305d8f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65e109-0250-4a74-baf3-11830efdf510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1052be32-7d39-478e-b685-3837a3d0142f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a85807-9404-4e09-be20-755790b69028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a2e3ba-2f3f-45cf-9117-aee71786605a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb6040a-d53b-4f74-b078-400d32c99268",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b2bb4e-fe1f-4f99-8c82-d0c36a1e8585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4416082-51c7-40c2-8c5a-4d2a2c945583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecce662-94f7-4e2c-94ed-19275db69c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ea1778-ef39-4112-9892-b564da63cbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c674bedb-f175-43c1-8d15-723db70de3e1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc81ad1-c4dd-46bb-9460-3f4f91c2dcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c61432-3173-41a3-a9e9-2ec753ebba95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dc88de-08f5-4bec-8154-ea5187cf02f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da90bcb-f6d7-4124-bc06-206cd20fe834"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47190ebe-a50b-4e46-958a-0b09599d132a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9bfe159a-6580-481d-87b8-64b4012ef936",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3990258c-6168-44b7-b182-f4996ffd314d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6345ae21-4fb8-4036-9346-628fc3a09fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4dd2f0-bfb1-4ebd-a30d-e77c448126a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25a64c78-a633-43f1-bb4d-8672e5b76fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27464080-d392-4113-a23e-1b735bc106c0",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38ac341-8809-44a3-8c86-a89e000d6065",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "dd9971cb-fb7e-4bd0-965f-581022276f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72d1370-5373-463f-99fc-5a6ba421efd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f013712-ec37-45a4-b316-6ce50ac6f58d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5357da-8f8b-4479-a178-9d44ce5ee0c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5a6133c-35a8-40f0-8108-a05925da18a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "139acc40-fac0-4321-85d8-9b6a91a003f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1c042de-78c4-4717-a5fc-b60eeafa6b9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "550a72e9-a14f-43f9-b5e5-99f6195c4179",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2c286c94-732e-4334-9de3-4bdc86198d32"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed1b6eb3-ae6c-4439-82ba-6aef05e2128f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d7f7659a-a7bc-4923-befe-253ccf10ae6a"
            }
          }
        ]
      },
      {
        "id": "efabcec9-1c98-44a8-a846-7f9aeb7d7479",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3493eedb-7f8f-494c-a936-867079df842e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "afe889cb-d33d-4f22-9678-011cb0e1041a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c3ad62b1-5a1a-41b4-a1ca-0522ec930cfe",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f163b3d-28de-4d72-8e9a-cb5a0195052f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441faa2a-1dfc-457b-bb9e-b0fc2e6945c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c3b13-dc24-4ad4-b1af-b8c851ea908f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af1d600-36d0-47c8-b2bb-3808a0cb9f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba9c04f-b883-43f4-aadd-d136dde6b8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd3a0b4-8584-47f7-b0cc-7de67261e93b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb6caee-5be0-4c26-ade0-57fba781e6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7206b2cc-ef14-472c-8324-bf9c60223174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f059308-98a2-4701-b768-76818d7024e1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6099c627-8d19-4b45-be9a-1d9f61a7ad2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d68b07e-1194-45a2-9c6e-8b4fc0107a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a74b85-fc63-4657-b327-c24477518c5d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130d0674-234d-44b1-80c5-85ec1a84eeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e332e733-6e65-4d10-bae6-34b28ea3d766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b741d35d-c8a2-4334-9ee6-bcdf8c47cf46",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec69ab3-4c9b-4479-aae5-cdf812a3e213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef7d95c-3773-4620-b587-6978ac2af6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca21ed7c-80e9-40a5-9714-dd33b7f0158b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6ec13a-ae8c-4eef-85f3-76c1869d3803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2a134d-3b8f-42be-addc-e3a06dc8a7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d38815b-7b90-4a8c-8355-a99d115804b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c489fa36-63b5-495a-9b5f-25064673ede2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3db6cb5-a4ed-411a-b5d4-84977a56bd91",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494b07df-c3e6-49d2-8ed7-57ade6f42bde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6bfab15-e4cc-4fea-bcce-c1d2d676c5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37854fd5-4eeb-4c61-8f20-5e38cb973fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e08719-76a0-4321-9acc-4d5ae76716f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313fb206-abea-4f0e-aeb8-023792a12085",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0caeebb-d133-4d44-8c23-486f023ef98b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f380606-f0e8-476a-bc37-218f2f49f335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a20e11-9401-4bf1-9bb3-01d3b124c77e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5afc07-cb30-4f33-968d-adb82cfffc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25437ba-dfe3-4033-8765-784ef9098d43",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e297eb0-eb31-4d5c-8b7b-f4f7dc09272c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b72f9b-1ae8-43c4-8af9-4cd17cd500fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fd0ea5-f053-430b-acde-be54aa399b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a01a21-a2a6-4725-90a6-e52a9917cce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f485c0c4-0c8c-4dea-b4e4-6cbbdc3c9688",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f086d2fa-e61c-4519-8308-f2f6a2f980c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8fd45f-574a-435a-995f-7e23b1ee4b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dcdc14-b2b3-4274-bfe9-3e62966f54ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89384969-e587-46a3-890a-148010748595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d17b8e-874d-406d-93e5-a86c59685ce0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8372ef3a-09ac-4de6-936d-1af2ed689d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b9169f-7f04-4139-bf77-73930f842dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11d8a93-96d9-442f-94e8-21144395ab7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3ca19b-010b-403d-ac0d-ed329f8aff22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2441e7-e9fc-4919-a60f-72fd440816f4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b87eb1-6b35-457b-93ba-f4d4fcbd7c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e8f3e0-d5ea-4b12-9cbd-af5418815f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cecf5ef6-b051-4d99-9893-95dfe2aab188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93e462f-fd95-44fa-8dce-266aa4e494e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340fd39b-a49c-426b-be49-be9dd3406a84",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e909ce-ddd0-479f-9b71-f7c9d382b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3378bd36-65d5-410b-a861-412c25cf712e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc63f66-b486-472b-9382-04fd97050df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54957cac-013f-4f9f-a576-9219680ee3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b36e4e-c23b-45b3-9afe-601e299e884c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e62eed-261d-46ae-a628-61a7885cbc96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a9228a8-6169-4d33-b0dc-f0fdf67f4cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d387eb25-47f8-481f-97b4-3159605bef50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab63124e-936d-4b28-ae2e-d57f3fa26017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0040ad16-04fa-4c9d-ae39-5e1e9c384192",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0ac9ab-9d2e-4277-ad4e-e4e21532382f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35e84d39-9258-45ba-b534-499ca1d52fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7525851a-60f0-45e9-ab85-02a76e6d8bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3acf6a5-9563-44e5-9b8b-41e1d96c7324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8d9f4a-acc4-4982-a9e2-c25272f9aa3a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef1c022-e831-47c6-afb7-4f1f9e8fd964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d22b6d7-346c-4dd0-894f-a1f215993e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c73ba1-8cff-41d8-9736-9c92089246cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41daf1e-bccc-4423-9e7b-b28a991c34ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf158515-bc4f-4f2b-9659-fb9ce3d20db6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6622ceee-bf6a-4991-b508-9b878d0769d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504fc685-d613-427a-8e37-9b36bdd529e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608dae8c-97b3-463e-9d9b-bc3b63dbef30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4bbf25-e78b-4bef-b866-83ecedcccb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56df39ee-ab8a-417b-ac09-0acad72f270d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511ad016-3f45-4a44-81f9-3d5e441ed4ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bce461da-f194-4320-922a-1244706c4260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6977710-cb40-422e-9c38-875cd80c1e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbaee5ae-5718-44b5-8d03-35329f612ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b45c594-fddd-4fc8-b11e-7044d118163b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb9ae84-498f-49cb-ad7b-c8e38adb9301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b82f074-6668-498e-8a00-cb738ca8b99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f497913-a40b-45a6-a4c6-588313f75f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1affd2-3c7c-441f-840d-bc6320e01af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f79422b-a869-46ad-9a03-3e164115ea13",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b3a22-c6a3-415a-90c9-76dccc3aac52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ce2dc5-f49f-40d9-a48a-2d96c252f501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13bfafe-22c3-4ea6-a565-8fbd89f9c704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8154e174-c5bf-4d6f-a1d9-b8b920bd200d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6146bdda-2b87-4479-8ac0-e908c6c6a5db",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6befcf8e-604c-402f-98dc-444d41234b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cb8a2c-2c07-4ae3-b70e-ea1a6acd1f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e658a8-cafb-49b7-be6c-186a66e73eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e483e3f-c116-4491-a25c-432a3bb939e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e38a2a5-f44d-4d0a-b806-2411e53968bd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89ab40a-f153-40ca-8a48-1441bf1c180f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "905814da-6a0b-47de-8597-42e5e07120fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5f0ccf-8ba7-47c0-a00f-998207c658e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289dfa24-e82e-4eed-a543-bde656732a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1a71f0-96ba-4732-817b-f8f09cf8e05f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb41f90-ec1d-4a55-b7b2-ef6e8d41f42b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3bdd9d8-e713-4da9-a176-ca476edbaa02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031ca934-1faf-4e87-8412-013d7ce3e4da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9a42f8-5ab2-4807-b4ae-e429d3b7b9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daa2f2a-85c5-49dc-853f-c95b8f636815",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5c15f0-51e3-445b-9e10-e799a70d2f9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1776fd52-e868-4d69-9c25-4e6a3ba37f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034de254-7e5f-443e-a9bc-ce27ea462612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b738f84-6460-4122-9324-193b947818b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ea6530-0b02-4fa7-b563-17a256ea6eb7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18af590c-8bae-4bab-89ef-7f8d5b9b1699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92989455-7463-4558-85cd-54a5b159f542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e72dee-4de4-4bcd-a4a8-64e9860d2452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbb3fe5-324e-491c-bf80-ae1f588ea2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dde1b85-e1d0-406f-b0ec-479b39d0bfe5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cad6db-9246-43ef-b611-4220753c7a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79f0e836-4e81-4199-bd4c-fe3296976bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8950c7d7-634a-42cf-938a-20fea60d5109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800b00cc-eed2-4de3-824f-404245d11d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b86941a-b2c8-42da-9f4a-3bc027698b3d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af6fa0e-d87b-40c4-9551-06710f650ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38328a81-e807-4bbb-a42f-e22b0e555345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d060e780-1fde-4bac-87f3-4c18a213144e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d9abdc-5b08-4f74-8321-c313d402c87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e86909-5d91-427c-b79a-2f1f8c7ad954",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901e3984-bcf1-4808-9239-f9a6d85febe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9eebeb7-bed2-4677-805b-68fb7dbfb053"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472f3424-95b7-4882-8113-9e4011d016f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3d782c-555c-4c5a-985d-92afb98fe0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0247dff8-ccf2-44db-9f14-f13e319e6b29",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8476ebb-8009-430f-9b23-063dbcfcb8cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd727ab3-15ed-4857-80d2-1bf0b0e93b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf77b40e-fc6a-4741-8323-edf919105733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0d7b79-6c4b-4f0e-a4aa-5bc9c7d843f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2de85f2-91af-4412-80d0-a2986ddaa2c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d22257e-0302-4234-b679-8eff946183b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49be7b63-8e5e-45a9-a72c-6d361453d9d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fab4f1d-fdc3-4b88-b828-2006d16efc16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d12a7695-9680-4ba8-8b67-cb3b143170ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a258d4-1517-4a2e-b541-23d0f06b6823",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4749d40-6c98-4883-a411-bbeb4de709d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731a13be-6e63-4fff-8b67-51f4bbbbd2f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095d5c5a-ae99-4634-8d4a-1f1078bbdf03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26d495e-f5ae-4ff5-bb97-b29590e60133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22560786-4594-4466-b30c-82caecaaa3f2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b987fe-1895-4a43-ab21-fe10a5f3d079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c45eee3c-4ce9-4c94-b2ec-f4304ae3586c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a67abd-8ee8-4e22-b259-0e8fcf2829a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fc874f-c6ea-4f54-ad94-7a5747de4543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b95ddde-d559-427f-af9a-d11885b38a12",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938e2ed1-f7cd-42b9-9e46-17bed7ac179e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89c8bcf7-c038-4f84-946f-f8b7cd649c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef050d1-1664-4a29-8221-cc9a55f46dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0f3115-0142-4b0b-a77b-fa0dc1416361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8b4e1e-4fad-4db8-a604-4b32bc2ca9fd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537ddb8b-7072-41de-a82c-061f9e93155f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c219ce4-51bc-44af-b3b4-cea21ea75369"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee66220c-5dd0-430e-82ee-7ed2aac87e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a49eb70-7ff4-442c-aec3-c4d3f7d81b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab53221b-9f10-4f83-a3a0-e49cd006fdaf",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fea12f5-1e82-4b18-b1be-f3861384fac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a64dc85-dcc1-4979-8bf7-9fd0ed0df8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e057d7cc-9c0a-4722-9cd6-5270af5c62fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4735399-0d51-485d-9288-610fc2d3e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee84e92-6037-449d-8d67-5f6d9e7fb4db",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeee1931-c530-4c8a-874a-414d8be59985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfae0064-a37a-46fa-be97-15fc6ae3d040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dd4e49-77a0-4e1c-b65c-856d3c154946",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a84ce62e-9394-4f76-addc-0a9ef5327437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667088e1-14df-48ce-bd02-b2750c7cde69",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9476a56-44a0-4488-bdc2-27859d2ee960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f34a7c2-0da2-4191-bd0f-4566ffc28786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c4491c-4fc4-4a3b-a8e0-65b7fcc18c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cab4027-a6e0-4c14-9947-c83945b2ec37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0bb3bb-8bc2-425f-a3c2-3334f59b1146",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bb4a68-83f3-428d-8c84-50244dbcdfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6693d1b-94b8-4f15-aaac-3073a66f910e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d36d3f2-8c1e-4ebc-96eb-f662d5453171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5457d8-6244-4867-b42e-c8a47c299ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c1a055-3d47-4322-a1b6-485dc75da2b9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e662aa84-70f7-466e-996c-5455db7d39e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd225b6d-4b62-4e21-b018-1e6e6f7e623d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65a731b-d075-448e-9f25-9d168703dfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c50f72-74fd-4ec7-b612-8e9483db54db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813e1264-7ffa-4e12-ae01-c1151eb9f1c7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29df7dad-5c13-4cf3-9108-3c785f2de222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3beb572-0dc6-42f2-b91e-bf9d0827e879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59690367-ee67-492e-9674-5b0b82331724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79e5d1d-4a6d-4dd9-b86b-4519ffe61158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14513f3c-fd53-4386-abf8-bd283dbd4e06",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b359fe7-e61e-4061-8b69-815b28d88a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6ad41e-b007-460d-b5c5-1460768639bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6decbc-02a5-4491-8456-cb04cb92ef06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb38179b-4a5b-4d45-81cb-fdbb8d8e7268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef08df2b-4d7d-4d38-b979-fa517aacdcf8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2c976c-fa7b-4050-a64e-187f8069840c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9884e3b-a045-4ca9-ae50-355dda53d786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf746866-7c56-4c39-b221-a0d60bc840d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27d8d67-dff2-4cbb-a52e-92aec755ade9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fe507c-dfd1-4f3d-a019-481bf757202c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c22543c-fcba-4525-8745-57a03a9fcf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f781bc-de22-48d3-884f-79066814be48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b93e852-a3db-47eb-81af-165057bb41be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9f24f2-940a-4075-8158-9b5de68e0d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a71444f-32ff-43ff-bfb1-7f45494ea6dc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "819158aa-bfc2-45b0-9b71-d3edb7ffab95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c237fb98-8cd1-4993-9a6a-76dce55b8d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d45a1-54de-414c-8054-71906270c65d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0041ffc-ef90-47d3-8951-b13e41c7789b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e696e0c5-daf9-4d75-916f-5ac495de0e71",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4dbe35-8027-4f78-bb04-c61faaad55aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7076abef-3d02-4265-a2c4-4a7ca6a74f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f557199-fdcc-4077-b870-ff53a1093af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e755b5-d49f-40c9-b755-30087cf6e308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c7e9cf-b88f-40bd-a131-1a027f35c5f2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4335f461-2c91-4d0f-ba94-c16ed4fb6077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77765e2f-089c-455b-b278-4625f9a63085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "439775d2-0901-47c1-93eb-7627e9b97a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d6269c-75f0-4e1c-ba64-4db9d318182f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6763471e-3395-44c9-84da-9a6cc6019687",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e1e056-2383-4554-a1af-8d4c9af3af0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076041e8-0ab1-4967-89e8-35a09df0ce48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e136e0f-977a-4262-9eb8-89ac2119db28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862adf7c-0423-4248-903d-98f121093ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3dd095-0988-4a5b-bed1-7c1ba7e920ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1add1-83af-439a-9b93-43ecea8a8652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52651fbc-b66b-48b2-9128-636846858f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55d7b9e-c532-47cf-85a2-ad0442c5c075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d97ef64-e8ad-4d99-a2a7-3ccc016d22a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab9460f-323d-4747-a813-50b65d522027",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458c45d7-dcd0-4974-8402-c5efdaf128b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad93b2d4-2193-4094-ae12-fb7931bac4aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86dd96a-d45e-49d7-90ff-1e67c6dc205e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aba4a5e-60dc-4da0-84f9-8198e3a3f175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41fef51-da85-49c1-8b3c-fd78c0ef2c60",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe0eac2-1398-44a4-a35e-207b00525091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a3ef10-2e87-4fc8-a798-3d309ca86352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5f50e8-569c-4b24-8de1-443cc1ce9699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ab82fe-ea79-40d1-8092-9a3673bbc4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654a8c43-5393-46cf-9897-f0c411fd3b25",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5eee62-9634-464f-8d5a-0777a9c8e589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758d57f2-e408-4d2f-b589-6fdda4019494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12666ba-5a3a-4f4e-a5c5-e8bc8556a97b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5138b500-e6aa-4cb1-9df4-51331d8baa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29549b9-9436-4777-ada5-139cb24d5ac1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47354140-2d93-40f0-aac7-1c1416be731d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d82d1dc0-fe4a-4512-8f85-3b02353e5c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a39fe57-878b-4872-aa4a-05286fa9f423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c559b963-f1aa-4585-a510-70489df568bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e0879b-e4a6-4066-9c87-9bf32b49d83e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f74c8a-a6ad-4754-8215-c8c73baeea00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66effaad-184c-4d40-b07d-66193db4239d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78865cd2-42d9-4397-841a-6c49e0740c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7376ee0-a522-4ba1-8814-bfab37d46b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d2e7ae-84f2-44ea-88dd-cfd8ab499d7d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e035a2c-124d-4182-ba8d-587b5b172105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae9e1cb2-4ece-4dfe-a324-0dee50013088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830c62c0-b3bd-448f-b292-4bfb8f1daa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337f4a3e-9d4a-4575-88fc-2b43e842dce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22f116a-54b3-4635-ad1d-bc9a91f0434b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8ff4a1-7295-4ccb-b3bf-3616c973ee57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe55065-73ee-43a7-a746-56e744a46078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c5efc2-2412-45ce-be54-9aa243667edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41d5445-76e8-4c10-bd45-0fc2ecdb77a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01e8f51-7fbb-4894-b8fb-e45a4a0e4b00",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe46a2f-6a1d-4597-86f9-6dbe2cef4067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc9ab090-266d-408c-b715-a50e53fb921a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd3af2-632c-4da4-901b-a668562e1bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c83413-68b0-4ef8-b593-a42265a81776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee942fd-00a2-4c1b-8e86-2f6384ee24a5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9be5a2-bd3d-4afb-ab59-11ed0f83bfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762cb146-3bea-459d-bcc1-ed015c57c53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fba2d5-f3ed-489b-9b4d-852dfbf700ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ddb971f-4422-408c-ac22-23e737246d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cf72e1-0bda-4684-a4ff-11ce2f4eaae6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a198754-bc6b-47f2-9203-b95b1e370ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a25e8a8-856f-4abc-820e-1ea4ad183bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cb44e8-5743-4f4b-b755-eae70ae49424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec8abfd-25fa-42a6-b2d3-0867961b5b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df452bf6-4dec-4e21-9763-a2d8bfc8e9d5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faa6bb2-c6e6-49c0-b0d9-47b51763bde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73bb576-d693-4c50-880b-d1395c902707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a5119e-c950-4ff2-8579-c0e30e9061bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b3075b-6322-4b83-940d-42445c5744cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73dd08a-e476-40a2-9751-149cffbc43ac",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e92b654-3b00-4a56-b5de-09f6da5b5d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd31c28f-3f55-4246-8011-5f6ccc9bc094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4bbf065-0df6-4bea-958d-4866d4dfdbcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddc5c54-cd18-4524-943b-3ac10a40dab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e980d4-cc83-4e6c-9a96-16ef90448acb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38fd859-80bb-499c-bb9c-84915dd8ed55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3c79ca-bafe-4366-9b35-11118097a5bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f196d097-832a-48fe-ae22-e1cfb7629ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9459dd70-828a-4aab-a860-810ea79369ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17402c0b-672e-4ad7-8107-fbde8a19c723",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383a1e21-33b7-4c3b-8d8a-11ac0642cc02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8256d457-ce12-4044-a9a5-8f5b5da00e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac69d35-b08a-4992-a75f-a91067efe3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc19089-7ba2-4e7b-849f-73fd745cf7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169209f0-2b56-4ae6-a5ac-bcbfab52f91b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6544c57b-b58a-413f-be15-935c06be2387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ceaa2e3-ef64-45d2-930d-fa724daf4aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "234abc10-5e59-4695-ac67-9c62c9597b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92466c6-daf9-4787-addc-5da2434584c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c92a410-a6a8-4fc7-a1eb-92e26618eff2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2850116b-927c-4afa-8833-fb9a323e75df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab3852a0-d03b-4867-a6f6-1a41fe90ae14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0d2a94-b5dc-4cc6-8c7d-742b44b4f8e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb27031d-e465-411d-ad52-a563cb72042a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6265bed8-495a-4c8f-8ec5-d73b46ee99bb",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cfd8bf-173f-447c-98ec-e30a360d0984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "081f8baa-26df-42cf-a0ac-b27844cdc770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99029b49-41ea-47c8-9eba-6c6d09218a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe26fa2b-5e68-4270-bf32-9977589bda64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3280ccbc-6de5-4f8b-8d11-e24fe6c4b0dd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b05f50d-705c-4fd0-b07f-77d0c391c53c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d366c85b-f3e1-4887-aa14-f03df6ae3f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e909bf-18b5-4ac6-bfa0-6550d6550eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3ff6a2-0e1b-4ddf-b061-f24e6bbf5cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c8908b-1142-4b78-98fd-54610f6c2551",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d6aa6b-0bea-4f3e-aaa8-ce2b4d8fd9f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d34f168-917c-4c59-bde1-ac3618b97d2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e40025-8ec1-4984-accd-1f5cc1be9dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2530e4fe-0ac3-458f-b09a-ea17920782e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e395c2c3-94cf-4b94-b699-10530ff6d63f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e462283-8925-4562-9e45-aa5c12c1c72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4789b330-f7b9-4c19-bf4a-36a1192d30d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ca561c-4153-4f33-b492-90dd7ba90e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd36247-025a-4098-b959-2c075df777b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bc901d-91b7-43d0-9216-3c311501e94a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862f34e8-dc0c-4e9f-96a5-7b74fe8f1276",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1c8a45-6c2b-432d-9e0f-6a882b8167eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb377ad-6fae-427b-b9f6-cc6dc7fb9c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4966a23c-524f-49da-abf7-9c0840cd9615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f153a2-10b9-4562-9cf2-467de2b32019",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c257f1-78e6-4a17-89de-cc0ede4d2013",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af050e1-eac7-4dba-ac45-50aff93faf23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a343a351-e650-44b8-8200-916231b132f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4d186a-9453-4399-a7e5-6aa424c2d3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244ebf56-9276-44df-b01d-b7454535af9d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee97a1ce-6499-4bd7-a4de-ca4c48b134b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b73d74-1273-4287-88ca-fc5921bcafa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bde0bed-96c7-4b99-9ce8-a36ed6e6f8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f600e762-8443-4b9b-9eee-94cc959b1a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc67f42-1063-4bbe-af7e-1a684508f5d8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb00afe7-8ebc-4a45-b37b-8187d0c0d95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d438d8b0-adcf-4c7e-af18-c0404da54986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0440cd-ca1e-4298-af42-72ff755bc4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34882cb1-71e0-42c0-9729-d1bba7b99847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b614df-0018-4fc9-b65a-838c5c0d64c6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eec523d-3d15-424b-bdee-f19b6c8b4dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "929289c1-40f7-4004-ac58-7c2cac25be94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c946de09-dbb8-4b32-aeb4-a707bf699e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0b1e8c-24c0-4d85-b8c7-2b55c9830915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a827ad1-8695-492d-bac4-85fb7ef38f5c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71a02f2-c092-4d6c-bb3e-03c8deef054e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74b6df61-5d2c-48f9-b678-4441064b05da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00dab2cf-9408-4263-8668-4ee6bce47e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2faaf0d8-b208-48ac-ae05-773fb2c94804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e482ab72-811e-4363-b5c9-cb5b6f8c40d3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1737d70-bce4-4ef1-9cc6-84c767210d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b64881a-7a25-47ce-8a13-6ae28270b272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d6e419-e73e-445f-b154-71f97c771e47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da06bd7-893d-4490-8394-25961109b192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a3d5b0-7955-4c4b-ba6e-a87e5f69ebd8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06a0f90-6693-4a76-9918-e99090268dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c3a6fd-6e85-41db-adf6-8e7380f0cd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db2ec0c-580c-4b21-96a0-73595da74820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa1a805-4a23-4604-bd2d-8d81978430bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892a264d-a2bb-42e7-b6e5-4fe2d20de3de",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd001156-8fb7-47bc-bcfa-e95b10e9d4b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9077f161-e3ed-4f60-99d0-e36f7fc06144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562c4c1e-89f2-4dd2-9489-3ceba5ac5823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4e2261-45f8-4dba-ae65-a6b707376ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a426989-b22c-466d-8111-d2efa4c3bdc3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4986d2fd-60ea-463b-8275-bc397a6eee20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f38af17-430e-4c2b-a0dc-23ef99f77223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858997e6-9e59-412b-ae8f-12ae0f18c29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb49f7bd-2a35-4591-8393-5d02b0242a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b6cc4-c2d2-4d32-bb5a-b35ddbd3ae6d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb9a1b9-8982-4fcc-a99e-4acc9a50fdaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "420a7086-b5e5-4335-a4bd-8bec6e94fd00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd4c3b8-516a-4a1f-ade1-e0d0a0f1f400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c315a8f7-cfd8-4d89-88e2-df530ad342fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebab9b48-125e-48bf-ba29-f0e8f985ea5b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee371b5-c0b1-474c-84e4-3755b63910fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c0ee10-4a08-46ea-bde0-1f0dcc6a7827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a27ec6f-2093-4e9e-a9c2-9f89b1d76456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6b106b-5b4f-45d7-a705-1e64438fa22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d7078e-8148-4a6b-80e2-ea6827bbea93",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608c162f-48e1-436d-90cd-797d8b50c164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5359e83-315f-4090-9dfa-d5d03b9042de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91cf1aad-d40d-4691-b1b0-31fd6be316fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f659d8-6f54-4696-aa6f-0c88919eb29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399bb0ed-3050-4dfd-a5d7-32481257e3de",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636c4290-70fd-444c-8155-c23dbf7da806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb9add93-7f8b-4682-9218-448b5b65c7f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7fa3f1-dcfc-49e7-b1ea-5abad40d041e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514f5969-f6ae-474f-a50a-b12b065346f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13802797-ab2b-4e29-8f21-70feb1466bf4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d44123-36e3-4fe2-b563-8221dea75f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78fe3ed7-579f-4565-841b-fa5182b4a150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be98d2d0-dbca-4209-918b-75f9e5095de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5142c751-02cc-4659-a321-fd9507fe978e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ef7d39-f9c6-4ad1-9062-2ba57d689fb5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed032ae-febc-42b0-b628-f56c12e87619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94d1c7f8-dbf6-4417-81c0-bb705016f6a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448ad60d-75eb-4a8c-8214-db2335692951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b85b1c8-3f20-457c-a607-14ada786b841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5c1ef6d-c485-471f-a25c-f2dccdb31703",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4606c3cd-187c-447d-92f7-64a05edaaafc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea0d96f-9056-4626-84b2-2976932e700c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e6c207-d5ce-4912-9d40-166228a4250c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891e4976-3454-4145-a21c-0ee69184b9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320b7e02-7379-4009-b02b-d457b95daa08",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b770700c-694d-4692-b048-0a1563e2d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ac843c-ffad-474f-8d1a-96b0ffd54bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61906d7-f2bd-40ac-aab1-d5f46cb97b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9427a8fb-7ab9-4e34-964f-1e73a3cdfb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14137120-d533-4a70-8527-158a147b974f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d175be-bd3b-4f03-a992-bdc12eaff55d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7d5199-6b6f-4eba-aa55-fa49503ec2e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf5b930-9414-4461-bbc6-e6b66b799472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a16e8b-d9d6-4f4f-b2a9-a7971fb80fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24186ae-651c-4c25-9e50-c7f0c8beb728",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a714599c-ed8b-4719-9620-b2338b4a5656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e46f186e-d29f-40d4-9da1-a685d540cfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a269869f-81a2-49b1-8530-11323eff0d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31344c6-e26d-4f75-a26c-0094e9cf3d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60170d3a-58dd-4677-a94d-70f527587656",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0167ae-f5d6-47e2-a1ef-febbe6ac705c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a1c7b93-0450-4610-b85a-74444d0c4f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74cf883-9e87-4db3-8b49-c0522e24a812",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "028ef41d-6697-4699-ad78-296ad238e24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de9dfb1-2b95-4e96-8dae-4c4dc3919993",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf944256-1251-4e44-b2c2-afb497690099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d41a88a-9625-4e69-9454-885f439a393f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db73c0fa-77d5-4065-926d-6b30b8bc2f2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234eef36-ec19-46a6-aefd-82fc12534c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09759fd3-d41b-4d24-9f38-e7639f5f06c8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde506b3-d927-42a0-aaf7-bc503f551f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cdd7cf8-7a51-472e-8225-3f92def15089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d06598eb-e82e-4302-b67d-544a68282449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8daa3f6-5312-4eb3-b863-a8258b1cf664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d49b6d-f0dc-47c1-b8f1-b61bfa638ff6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb4fed9-8d4d-407f-8504-eb062c9fbe98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a069ce4-6830-4b2d-a756-013aa8647852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157bd6bc-694a-4bf5-84d3-e82ad7a3083b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c8b932-b1c7-4bf3-9484-31bc90fa5f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f1b4fa-4a0c-49c9-9094-7945c774c2b4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f27eed0-8faa-484e-8dd5-0de217799bcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6e31cc-2972-46d0-9d26-dc1fa2570325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92662f10-cc6f-4f2a-b4d9-6ecd3c72e96e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4899de-63f1-492d-be54-2e17f81346a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96ec80e-d97d-4dc2-ae5f-c4fab180bcd5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3372a8be-7d86-4e79-987a-6a9f06719bef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9033ebfd-b397-4d84-9c01-1285301d8917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9bce13-01ec-46c9-b887-a4bfba3c1be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73109f9-ad08-4401-9add-ae109864e25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e855bd87-7186-436c-b93a-580124b6d0da",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbb2e36-b779-4dd9-bfdf-70fef402fe42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b17962b-b44c-48c0-b08c-a8b2d7a2c70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef249c5-e30c-4ae9-9d92-615d6108d08a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cf3493-a699-44c1-9581-6a17c87a01fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a2c6db-e09f-4bbe-a8c8-f68124e7a104",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83ae824-d9da-4a55-b297-8ce2f9a0664d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd87ab0e-638c-4a0d-9dd3-b0fd31b398e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb020297-38f4-48b2-898e-b40182c80d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921f204e-3f2e-4521-9ccf-c69a6cf3d53e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edc8c93b-f20c-4fd8-b57c-c70292cb3f4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8bc388a8-f684-4f34-908b-dd66179bcdb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc951ce7-132c-48fb-9aea-6617df8e6d6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aabe0cec-5695-4674-b655-b08abe3abf06"
                    }
                  }
                ]
              },
              {
                "id": "4a7b259e-4416-4182-be20-33898351b154",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "447ad713-3cfc-4767-8037-ff592e9b4e72",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e36c7a-b201-4ce7-9250-17db999676a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6821a236-e8d1-4133-a675-8edceab9f2ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af59e4e6-a7b8-4544-afc6-738c785294ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fbcbff9f-a155-4ee2-bb44-ea1f8bbb85a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186900ae-e328-4791-a913-1512caaeb3bf",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6fb7df-54b0-434a-a1b8-8aa80aedc5ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b55e2e8-43c5-40db-a8c9-4219cf2991c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1a7cab-fffd-433b-99fe-bda0cf9b64eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e8f1a70-ec84-4d0e-a68a-248a89dfd4b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f1ec4f8-a0fe-4f58-8cf6-27f997881d1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7e83cd5-7527-4af8-a8a1-7a0ba5867196"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fefdb0e-89fb-40a1-9698-6d68c067c42e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "066ef8bb-605a-4baa-80c5-0dc82f900558"
                    }
                  }
                ]
              }
            ],
            "event": []
          },
          {
            "id": "fc5e028b-1002-402b-a062-14f8b4722d4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a50d2c6-ea4f-49ff-84a0-0a0eb968d9a9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9852aafc-bc21-4ce8-8a52-feecdfc5286d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f93bfb5-ca89-44d6-a148-a731d12aaa96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "467e985e-5773-4fad-8ed7-c866a26e9e54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7fddf2e-7105-48cd-a6da-aab8f3bff062"
                    }
                  }
                ]
              },
              {
                "id": "b9b1a414-988a-4d43-a811-e1943c6f1fec",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1296608-d248-49cd-91cf-19ddcb22d49a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e0d0622-c056-4162-99ed-137588a86296"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da7023aa-ed91-4c01-b110-15e39fa42355",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8eb97aa3-e0bc-4a54-b6b7-b7dacb4fe8de"
                    }
                  }
                ]
              },
              {
                "id": "6bb001e3-57fb-49ef-b0ff-10867b6fe306",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dac22ab-44ab-4feb-bf58-27fbbafb4b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a239b03-1ecf-487e-9497-fd58180455d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df640c5b-d2f1-4b3a-8da0-330b52cb20e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7911b55-1132-4dce-8af8-656081af6ae4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db57bcbf-7797-4fc5-89e2-1d8044fd9c11",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7cdd5b33-e162-46d5-8f0c-ffba6698e5f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "524daf9f-8620-4157-ab23-d18b9f29e74f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d667ca4f-a4a8-4b02-836a-0b7a3791df1f"
            }
          }
        ]
      },
      {
        "id": "aaaac188-61e1-437d-b2eb-fb91658dab0d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9ecad4e3-c058-4930-979f-eae7f0cd479c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "451310e1-099e-42e2-b917-12dfa48477bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc34227c-a3fd-4f12-852f-d1ee82bcbec7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67159dc2-deee-4c92-8aa0-6ccb35ff0842",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8f85ff62-9e27-41ef-befc-35a71c1d04a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb87cb9-24c1-4b31-a61d-3582e147ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "488121b2-52d2-4821-9dc5-50dbd15e935b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0888fd3d-287e-4099-8e7f-7b8a5df7254e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1d4f3dc-23d8-4a8b-abcf-e5e85a7ebbc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0765346b-6905-4842-9b0a-92c626f71311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadafa7e-17e4-4a74-84cf-7859127d9517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8f790566-32ed-4e88-90a3-12b672b81330"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fbc7b17-4618-48de-8fbe-cc3a325c1ca4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "286f6d43-2fd7-4f51-8ef3-b767d2554ef8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f14b9461-994c-4e6b-ba91-3073fe32f4da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a696462-afbc-417d-a3c2-a7f486896074"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e102c58-7a76-4c9f-b7f1-02d600f9338d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "edd51834-4307-454c-a67c-e1c703d0fd2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "509b9476-57a0-4635-82a8-86bc54f88cc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2916d85c-cce4-47dc-9a8d-3beec599af9a"
            }
          }
        ]
      },
      {
        "id": "111ef43b-4d31-411e-8a26-20a9cce13924",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "edc200df-f0ec-49fb-84ba-dbb19db97bf8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5fb34c69-6297-4eef-8b05-64542585f4ef",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94425763-28f4-4bad-b9be-a7b08241693b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5cd772-a841-4930-ac27-4b6e6195e689",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e1631e28-6413-447a-8b63-199c5857da12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f843675c-4419-4fb7-9326-04578ef4c680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8051aa8-f0a3-4551-864f-b5e644ce10bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d322f7-d460-4135-86ce-f5e2ab5fc831",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63479bb1-f043-437e-8a0e-995028c2e02c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "664795b1-d531-4dac-8557-72f3bcf706fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "515ff7c3-1c94-4d92-bd34-8c1b94fef38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cc45dc2-9651-4b22-a44b-158f9861d44c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2812a126-f3eb-499f-b625-a92f6e899907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a31792ff-c287-435d-9633-e5379dd4fb9a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69e581a2-03d4-4907-aa4e-23df25add642",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b148e89-3649-45e3-af84-522ec658c5e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f05c8db-11a1-4cf5-aed4-bef1c3636358",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "096322be-7604-4708-a8be-cd46e3a06ce3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c579eeee-9f35-4085-b0db-c003f4572e1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee455833-2382-45ec-b8cc-9291abb686c8"
            }
          }
        ]
      },
      {
        "id": "1e95d708-37e7-4c6d-83d3-e0bfa4a7fda8",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d301d48f-61c5-476b-97bd-1b080041f245",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4f53776-1d98-4406-bc0f-08d4f2186fde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d0237fa-471c-4b95-863f-1aae08aa0a75",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0be3b64-fe6f-418b-b2c2-c5ba546d4590",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "58b8be97-e571-42c0-80d2-d7bfddbe6c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b9847a-f7e1-4f2c-a476-6d010affb214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a767938-2c77-45ad-9d60-4f7b31e3cc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac2ca48-78ed-459c-b556-5e64ff499ce4",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286a0fc7-2ed3-4eb2-82bf-10eb0c7728b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6a73ca8f-6422-482f-b5c9-364808f9b009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63be55cc-c32e-4554-afc5-0595c582efcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e121a2e-f9ae-40e4-91f6-701505186818"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c15c7d38-5bf0-4c2d-a2a9-10841bbb6b6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47a669af-663b-4566-9357-26d2a4326cd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "944bd30e-7897-465b-9dc6-49de3fa8deec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a452e0c5-9785-4df7-9f3f-a5fcca5831fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b890a70-b7be-42b2-8d3b-15582d842688",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dc1370c3-f8da-4762-b61d-b7cd30f9a1c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb7915f1-d5a0-4f73-8687-97c49927c30b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2145713e-cd04-4ada-b48f-c55871f00fe1"
            }
          }
        ]
      },
      {
        "id": "d8d78fcc-bf06-407b-842d-2594498cf5a5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e39e090-10ac-4ddf-acab-bcaf3ef65e0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c629bbe-c29b-458d-b885-823613b66f99",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "def43db3-b399-4930-b6d3-ee589e40a583",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce695cdf-5f99-4c12-85b1-9c99952dc2ea",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9f4286f-c567-4758-a56f-3c66faee6b2c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 505,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 524.2076923076921,
      "responseMin": 10,
      "responseMax": 5254,
      "responseSd": 471.16486900763584,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668041213287,
      "completed": 1668041360200
    },
    "executions": [
      {
        "id": "06125b95-6f04-4b55-b0c5-197b177ce2d0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7808907f-0530-4fc4-97e9-76456dd3ce61",
          "httpRequestId": "ca7408e2-594e-4ccb-b46f-d10b04b3eed9"
        },
        "item": {
          "id": "06125b95-6f04-4b55-b0c5-197b177ce2d0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "25daea88-5c08-4a18-8208-0a25f8097ae7",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "f89a4e1c-a8cf-409c-abeb-abb7386159cc",
        "cursor": {
          "ref": "1ce07d27-c3da-4110-8e3e-4ed3d257a74e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7bd1da94-6cab-4946-99e2-07cbf17ecb1f"
        },
        "item": {
          "id": "f89a4e1c-a8cf-409c-abeb-abb7386159cc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0a4c2a5c-6b7b-43c2-aa37-a5b66fdd119b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "488f67e8-05ac-4135-8416-82739dddd6c7",
        "cursor": {
          "ref": "9b6a05a8-1a85-4aff-acf5-ad06875098ca",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "48d14f40-5e80-4fe1-b8a6-64c0430a458d"
        },
        "item": {
          "id": "488f67e8-05ac-4135-8416-82739dddd6c7",
          "name": "did_json"
        },
        "response": {
          "id": "4a5b6954-ff51-4e8c-8339-bf59188a0090",
          "status": "OK",
          "code": 200,
          "responseTime": 933,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dd43e0-3ea7-42dc-b86d-fa74ea7859f3",
        "cursor": {
          "ref": "705e74bd-a49d-4158-bf31-5c5499e81d39",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b2e5bc8e-7c14-4e50-895c-f9f04c0aa6e3"
        },
        "item": {
          "id": "05dd43e0-3ea7-42dc-b86d-fa74ea7859f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "0643fb12-3c04-42bf-af42-5a3904983587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05dd43e0-3ea7-42dc-b86d-fa74ea7859f3",
        "cursor": {
          "ref": "705e74bd-a49d-4158-bf31-5c5499e81d39",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b2e5bc8e-7c14-4e50-895c-f9f04c0aa6e3"
        },
        "item": {
          "id": "05dd43e0-3ea7-42dc-b86d-fa74ea7859f3",
          "name": "did:invalid"
        },
        "response": {
          "id": "0643fb12-3c04-42bf-af42-5a3904983587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecfe405-f177-478b-9094-6a56e46a04cf",
        "cursor": {
          "ref": "2be63d1e-dff6-4472-9c04-004bed89b440",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5424eb18-05b7-4736-9dea-ccfc5e834e07"
        },
        "item": {
          "id": "2ecfe405-f177-478b-9094-6a56e46a04cf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "da13e2be-5a08-45aa-9dd0-b75a3201bdba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 540,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64ba62b-e279-4fa4-9365-af0607ef3591",
        "cursor": {
          "ref": "ce70b310-bc80-4138-af48-e007a5ab4830",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1911fab2-8150-47d3-a622-9da6ad0c67ba"
        },
        "item": {
          "id": "f64ba62b-e279-4fa4-9365-af0607ef3591",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6765eac5-f240-4d04-b34a-08e7d802d73f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 452,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7748af68-8d7a-49af-a9a3-57debeda729d",
        "cursor": {
          "ref": "64dc655b-1092-42e7-95da-66436923e4a4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ba1867f3-e484-4489-b388-e06d17000ea8"
        },
        "item": {
          "id": "7748af68-8d7a-49af-a9a3-57debeda729d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7704b68b-4e31-4b34-9479-b1632baed0ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a650b3-c212-4b94-8c01-ee9dc5cf96a1",
        "cursor": {
          "ref": "043135ac-f942-485d-8983-1bb542503c6e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "57ab243f-2af9-497d-8090-dc7097f323f1"
        },
        "item": {
          "id": "01a650b3-c212-4b94-8c01-ee9dc5cf96a1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5ec75221-4fc5-4832-a065-eb720ff92e46",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a650b3-c212-4b94-8c01-ee9dc5cf96a1",
        "cursor": {
          "ref": "043135ac-f942-485d-8983-1bb542503c6e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "57ab243f-2af9-497d-8090-dc7097f323f1"
        },
        "item": {
          "id": "01a650b3-c212-4b94-8c01-ee9dc5cf96a1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5ec75221-4fc5-4832-a065-eb720ff92e46",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 493,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dac2ff3-55ad-422f-9ba3-8f1cc682e45c",
        "cursor": {
          "ref": "595c3c26-60fc-4077-8661-5d6c4a6cce85",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9c8966ae-2b6e-4a31-8fba-f709ebdbe05f"
        },
        "item": {
          "id": "7dac2ff3-55ad-422f-9ba3-8f1cc682e45c",
          "name": "identifiers"
        },
        "response": {
          "id": "d90898fd-5c4b-466a-93bf-548943a44918",
          "status": "OK",
          "code": 200,
          "responseTime": 721,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d77f1-24e0-4a08-a0ef-2940fd9c9385",
        "cursor": {
          "ref": "d07729f1-2e4b-4d30-a511-b0a8eab70c2f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5b602b9d-d8fa-458f-8a4e-96f0c1af645a"
        },
        "item": {
          "id": "026d77f1-24e0-4a08-a0ef-2940fd9c9385",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3cfcc7fd-7e5e-4914-92a7-21568dc85b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d77f1-24e0-4a08-a0ef-2940fd9c9385",
        "cursor": {
          "ref": "d07729f1-2e4b-4d30-a511-b0a8eab70c2f",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5b602b9d-d8fa-458f-8a4e-96f0c1af645a"
        },
        "item": {
          "id": "026d77f1-24e0-4a08-a0ef-2940fd9c9385",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3cfcc7fd-7e5e-4914-92a7-21568dc85b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa56b8a-9b19-462c-9eaa-2af5d9793b48",
        "cursor": {
          "ref": "7cdf2ff6-c927-45b5-a00b-814b34c6e084",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e58bb42a-534c-41c2-af1d-9e8919f57225"
        },
        "item": {
          "id": "eaa56b8a-9b19-462c-9eaa-2af5d9793b48",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "03768a0d-c3b9-4c0f-822e-3b4c4767e715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b19bbc0-06a2-452c-bb4c-69aadbddc408",
        "cursor": {
          "ref": "a4160e00-331e-44ec-88ca-6af16fb1071d",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e24b0585-b054-4231-bdfe-75f949441d1e"
        },
        "item": {
          "id": "0b19bbc0-06a2-452c-bb4c-69aadbddc408",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0a0b75e7-64c9-4b30-ab50-f59d4812ef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff9a0d4-ac2e-4c81-813c-2747e3de9977",
        "cursor": {
          "ref": "42523ea3-6b7b-4ff8-8ae9-1b8a0595d8e7",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b0afadf2-1b17-44e0-aaf9-6ec6d12a5e93"
        },
        "item": {
          "id": "8ff9a0d4-ac2e-4c81-813c-2747e3de9977",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bfbb3c30-8aeb-43de-ab04-73a8d275102d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1ce720-2018-49bd-891c-1b483e531d61",
        "cursor": {
          "ref": "ddc40e07-c4ec-4aaa-aa7d-b8d9d407841d",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "238f9ef8-4eb8-42c4-a9ba-aff4584ef437"
        },
        "item": {
          "id": "7e1ce720-2018-49bd-891c-1b483e531d61",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bb294034-7e57-4ad0-a2d7-44e005d6889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52912d01-4bc2-4105-991a-8643cf7fef14",
        "cursor": {
          "ref": "e0c26df5-02ae-4b01-ab8b-d696b216d92d",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a9aba5b7-947b-4916-afe6-d03251110cff"
        },
        "item": {
          "id": "52912d01-4bc2-4105-991a-8643cf7fef14",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1591b2a8-a20a-496a-a7a9-efab69050c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fbb3d5-659d-441f-852e-5f5c7f48ba2b",
        "cursor": {
          "ref": "c9fa5970-7ccf-401e-ba38-8ce90934716b",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a33cf4aa-4fb5-4395-b4b3-9abedd7d197e"
        },
        "item": {
          "id": "c4fbb3d5-659d-441f-852e-5f5c7f48ba2b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fcda2435-3cb6-452b-b38c-27756644c4dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35fef2bb-349c-4459-9fcd-19b146033389",
        "cursor": {
          "ref": "dd340bfb-2b36-44dd-b4b1-9035e73af4a5",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eecbc521-4aae-4796-9922-3bf7fa0784c2"
        },
        "item": {
          "id": "35fef2bb-349c-4459-9fcd-19b146033389",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "deb01343-e891-4387-88ab-eaa002185242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07ff8e1-8156-4bb9-aa23-35338cd8d2b5",
        "cursor": {
          "ref": "5af8c0aa-ff6b-4db5-a734-8a4fbd36f232",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5e69c52f-1f3b-49e1-90ef-241268ace204"
        },
        "item": {
          "id": "a07ff8e1-8156-4bb9-aa23-35338cd8d2b5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a3ee0b25-c9fd-4b5b-b093-030b13a34cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9471199-b4e9-426b-bdfb-b29b98d1b71c",
        "cursor": {
          "ref": "11960c7e-3aba-4f1c-8ae3-2bd8d375172c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6ccdaed1-4855-4ad0-857d-502ada7a148d"
        },
        "item": {
          "id": "f9471199-b4e9-426b-bdfb-b29b98d1b71c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "456845d5-d7c0-4ed9-887e-ab00989a2df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d1ab14-9ae1-4593-b79e-cd24a94fbb01",
        "cursor": {
          "ref": "1ec25d8f-d98a-43a9-8807-a0c0be82900a",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1434fb0b-cc95-4f61-bcac-2a3f3ce6a72b"
        },
        "item": {
          "id": "96d1ab14-9ae1-4593-b79e-cd24a94fbb01",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "72e08616-2749-4668-8320-cae02fa91f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fe13d2-e555-4845-95fb-081ac55caf8a",
        "cursor": {
          "ref": "f4d96e98-3879-49d2-bf79-374beef67ba9",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9f187722-fd6e-4b5e-bdea-79e5365d64e4"
        },
        "item": {
          "id": "69fe13d2-e555-4845-95fb-081ac55caf8a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2011a26d-de8c-48e9-85f9-6f3d64f2ab81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c43213-c39c-43f5-9fb2-e84001a000a3",
        "cursor": {
          "ref": "91b48d7b-0ab2-4b67-88d1-5bbf35bb99dd",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0d9502b5-1c42-4e5b-a58f-14e26b8cb79f"
        },
        "item": {
          "id": "f0c43213-c39c-43f5-9fb2-e84001a000a3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7f53a03e-9d6b-4598-80de-1f7f218c9bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee28e90-6c43-4eb8-860c-f5447d22b70d",
        "cursor": {
          "ref": "102df95a-2a77-4fe1-a748-a0e02cd7c296",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7172d8f6-c1b8-4f9d-aba6-0ab0bef35bcd"
        },
        "item": {
          "id": "9ee28e90-6c43-4eb8-860c-f5447d22b70d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6d716a8f-5e7a-4a6c-ab57-f746853cc834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab610b1-444f-44e3-9103-ed37c23a82a9",
        "cursor": {
          "ref": "0eb0bbeb-5e85-4a35-b783-69410ea9a08d",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "18af82e3-1761-4860-8cfe-f7bad74e4708"
        },
        "item": {
          "id": "4ab610b1-444f-44e3-9103-ed37c23a82a9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9752d3a2-fec5-4df9-a8b3-330deaee62be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280203c0-41fb-4da1-b19c-37a9e32f3862",
        "cursor": {
          "ref": "8d09246b-5abe-43ce-8914-07c480013970",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40498140-37a1-412a-a4d5-e7bb12b4b281"
        },
        "item": {
          "id": "280203c0-41fb-4da1-b19c-37a9e32f3862",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a2d24d13-617d-482f-8250-04a7dd0a5643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9792fd3-5f39-4da9-a087-db5c2d227b8b",
        "cursor": {
          "ref": "9ca6fbaa-3349-4aa6-9afa-6102faa56f85",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "af0d356b-17aa-4db3-99c9-07c479f7cc09"
        },
        "item": {
          "id": "c9792fd3-5f39-4da9-a087-db5c2d227b8b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9fe488fa-f46f-4b5b-9b4f-f8c90a0d2e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd097a4-d09c-49a8-b55c-f35f9ac58086",
        "cursor": {
          "ref": "4b50eb57-009e-4bb3-9145-654232e063ef",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ab5f506d-d72f-49f2-bb5c-9271044b3ec2"
        },
        "item": {
          "id": "9cd097a4-d09c-49a8-b55c-f35f9ac58086",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "78133547-418d-40aa-851b-9a649ae3758c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70efb8ff-1e9e-435c-a2ef-5baf57d46058",
        "cursor": {
          "ref": "e9342767-665e-4629-8994-5ae7d1741cdb",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "597664be-1176-4a7a-b4e4-1f1877b3df3f"
        },
        "item": {
          "id": "70efb8ff-1e9e-435c-a2ef-5baf57d46058",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0d665d96-7ee7-40a0-96c3-4973a3e4214b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4105a28-33e4-44d5-835c-45a1b81b8b92",
        "cursor": {
          "ref": "bafd379e-f2ae-42a3-bfd6-c953a71a06b6",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c210f7ca-0f40-4e60-8b0d-e000e7373b35"
        },
        "item": {
          "id": "a4105a28-33e4-44d5-835c-45a1b81b8b92",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1125806b-4647-4abc-b17b-8fd83b96d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d96417-fc2f-42ff-840c-1d5a3f5ac9e5",
        "cursor": {
          "ref": "4edb717a-8c38-4bda-b8e7-bc183d289f2f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c191239e-c510-4fed-b51e-2c99754ae9a3"
        },
        "item": {
          "id": "23d96417-fc2f-42ff-840c-1d5a3f5ac9e5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dbdce31e-a9e4-48c4-96ff-44780b013be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 671,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae796ea-b347-4fa2-8edb-f10e4f400c55",
        "cursor": {
          "ref": "85e74ab8-a088-423a-97d6-c422e04b5267",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d0caed2d-8c6e-40cd-97ec-3919f2940ad5"
        },
        "item": {
          "id": "dae796ea-b347-4fa2-8edb-f10e4f400c55",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a1d58e8e-c30b-4db9-a1f7-d1702bca1dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1d62c4-c7f4-4e37-8dc5-adf2df8afc09",
        "cursor": {
          "ref": "1f7e9bcf-57c7-41bd-bef3-591d5ea8ba77",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cbad0f6a-055f-4103-81d5-77f3dbdf88be"
        },
        "item": {
          "id": "bd1d62c4-c7f4-4e37-8dc5-adf2df8afc09",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1b7313fd-43c8-41ef-aec8-6f4c6fa2fcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d790423d-20c2-4f2e-a798-02964d6d80ea",
        "cursor": {
          "ref": "2c9c718a-e2f5-4529-b94e-2fc9723aebf9",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "435caf4a-b890-4c6c-810d-b4637301c226"
        },
        "item": {
          "id": "d790423d-20c2-4f2e-a798-02964d6d80ea",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "20b442f3-45b5-4793-baf9-0de05285a6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318ed3d7-438d-40cd-93a2-44fef2e8b028",
        "cursor": {
          "ref": "3be609d4-cabb-48d8-9b79-71f95275d953",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cdacf1d0-865e-4b93-b836-f9a9ceefc2b3"
        },
        "item": {
          "id": "318ed3d7-438d-40cd-93a2-44fef2e8b028",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "27890886-5be5-4ece-be63-366152eb3f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd7abea-5fa9-41e9-bc7b-fc46a7d91f1f",
        "cursor": {
          "ref": "6929f0d6-4d5a-4e06-b744-c1467408f7c7",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4a12685c-6def-45f2-b0d4-f4db597b7763"
        },
        "item": {
          "id": "efd7abea-5fa9-41e9-bc7b-fc46a7d91f1f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5bd3a459-c003-4f50-943c-25f50374f62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6718c5-083f-40e9-b3f9-ef229a5812d5",
        "cursor": {
          "ref": "5e96ed07-ac92-4b89-838b-df1f13c74e04",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "06aacec5-8528-430f-b3e2-49cc25d33f4c"
        },
        "item": {
          "id": "8d6718c5-083f-40e9-b3f9-ef229a5812d5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e1e4882d-96dc-4e24-96de-6a9a2a868936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7ae3ef-f978-431f-8c9f-f2ee6c13f23e",
        "cursor": {
          "ref": "5904a1d0-da67-4415-be81-b27ca17a07d6",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6602f6c9-69ee-4cd2-aca4-15d46ea7718a"
        },
        "item": {
          "id": "0f7ae3ef-f978-431f-8c9f-f2ee6c13f23e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b92140dd-8268-4661-890c-ec830db0c1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43485d02-deb2-43d2-81b0-eb0e5029cb96",
        "cursor": {
          "ref": "6a1926b8-cf19-4e37-aac0-9c3e88d8542d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9eb86835-ffbd-471c-8e8b-9b426e196523"
        },
        "item": {
          "id": "43485d02-deb2-43d2-81b0-eb0e5029cb96",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "bb0a0a7c-bc52-406e-94fd-debff5cf2491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850d44d1-04e9-4ac3-ad9c-31483fc0f837",
        "cursor": {
          "ref": "fca02a83-ac50-45bd-aed2-abcd43f56394",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ea419d7b-87e5-40e9-a21d-787958e29352"
        },
        "item": {
          "id": "850d44d1-04e9-4ac3-ad9c-31483fc0f837",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "84229de8-ab2c-47a2-aa90-bcdedcdc6134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd97f08-952a-4463-b74c-ab1e72551aab",
        "cursor": {
          "ref": "f5fe185d-7717-4218-93bb-29f7e243cc12",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "008f5fb6-436a-49ea-b1a5-ebc7e255b933"
        },
        "item": {
          "id": "6cd97f08-952a-4463-b74c-ab1e72551aab",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "108f1964-252e-4cee-a12d-4e5023990b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3c5a9a-22ae-443d-a2e6-8064fdffb751",
        "cursor": {
          "ref": "9e9a149c-e8e6-42ca-bfb1-506f2fd0598c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7c3cd895-26ca-4d41-a3f2-8014fcc4e4c6"
        },
        "item": {
          "id": "ee3c5a9a-22ae-443d-a2e6-8064fdffb751",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "29700d98-1f88-4f66-bf82-567f2b49960a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1001,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416180f9-6297-44fa-92e9-e5968ea09b1c",
        "cursor": {
          "ref": "515b89cf-3df8-4dc5-804a-bffc16fffd57",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b5188b8e-61fa-4296-a889-22e20b398f51"
        },
        "item": {
          "id": "416180f9-6297-44fa-92e9-e5968ea09b1c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "535376e3-07d5-41e0-8c27-84d34ff242fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faf1249-4def-4c7a-86c9-1ff078d6a68a",
        "cursor": {
          "ref": "ed2a736e-856d-409a-8373-baffa4c1ba44",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2fa7e4dc-b6f4-45ee-bee8-ee5161851a4a"
        },
        "item": {
          "id": "4faf1249-4def-4c7a-86c9-1ff078d6a68a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6525b9e1-eb96-4c96-9cfb-8bfdbb3ac60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96426321-657d-4358-b8da-0528d64f97a3",
        "cursor": {
          "ref": "0f3630c2-50b3-4a02-a709-9aa947969416",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ec22a4b2-e7cd-424a-ab65-fd278abafc7d"
        },
        "item": {
          "id": "96426321-657d-4358-b8da-0528d64f97a3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fe59f99a-6c65-4c3f-a7fd-e87abaab1f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a81dc-16b9-45bf-9568-72b25972cd3c",
        "cursor": {
          "ref": "8334e540-34f0-4bf2-a33e-8cfd057834d2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "56535d5e-039e-4d66-bef1-60d130a231c0"
        },
        "item": {
          "id": "706a81dc-16b9-45bf-9568-72b25972cd3c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "99ef9899-1ec6-4d2a-b80c-7ca0d3f0004a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 794,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592d6262-83f7-43f4-b25a-7a229f950587",
        "cursor": {
          "ref": "4e162ff2-50cf-4933-9395-683d677ac479",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c3398a22-2df5-427f-860b-9652228e5a75"
        },
        "item": {
          "id": "592d6262-83f7-43f4-b25a-7a229f950587",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d89dc356-f005-4767-94ac-58843cc2ca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d24542-679e-4632-95ec-4ce09dd07e06",
        "cursor": {
          "ref": "c22014ee-8eb0-48a8-bea0-d3962c3c26c3",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "86269e2a-907d-4e5c-a2b9-6a07bd431829"
        },
        "item": {
          "id": "47d24542-679e-4632-95ec-4ce09dd07e06",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b15a0407-7104-435a-97a8-3cd5edbbed8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 850,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c37baf-ee46-4fca-bdf2-1633882bcc2f",
        "cursor": {
          "ref": "0cfe1cc2-ce93-4c77-8948-ddaf4792f5d6",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "29266898-40cb-476e-80f4-2fd42f01cb51"
        },
        "item": {
          "id": "94c37baf-ee46-4fca-bdf2-1633882bcc2f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f556684e-31aa-4b65-8a68-94c6a4b7d529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 838,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50552ac-c5ac-40a5-8dee-fb0dd41c248e",
        "cursor": {
          "ref": "9d73fa4f-a0f8-4072-bd0a-1b14344485d5",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4b15b9f3-b9ad-4fb5-ae00-602836bfd82c"
        },
        "item": {
          "id": "b50552ac-c5ac-40a5-8dee-fb0dd41c248e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "85286ecc-aa7c-42c6-b03b-bebad1a535ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1129,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184a05c5-d268-4422-8c24-cc99b5ec744d",
        "cursor": {
          "ref": "8ea09ce4-00e9-4457-be28-d193759100ce",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1b3db09f-b8ab-42b5-9fd3-f1ca3dff9574"
        },
        "item": {
          "id": "184a05c5-d268-4422-8c24-cc99b5ec744d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0dde5063-a8c8-423b-a275-aeccf6a67cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00785258-1b36-498d-8d0d-7d6700481a51",
        "cursor": {
          "ref": "83dbf85d-cfc3-4bbf-885c-cf31d48574de",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6604b16b-b862-4dbd-a177-5f3608a916a3"
        },
        "item": {
          "id": "00785258-1b36-498d-8d0d-7d6700481a51",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e18711de-a37d-4214-a460-5bcd7c725e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b57789a-3a02-4f0d-95e5-7bd8b844d344",
        "cursor": {
          "ref": "59d12cf8-4b63-49a5-b0ad-7e33c6c03dd0",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "746d1126-258c-42c9-8e03-32a24ca85363"
        },
        "item": {
          "id": "1b57789a-3a02-4f0d-95e5-7bd8b844d344",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bcefc92f-7a92-48a0-88e1-678bdce2b152",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 658,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3966ada0-419b-4978-b84e-6e49097d164f",
        "cursor": {
          "ref": "e3fafdae-b53d-4cd8-99ab-12908a96679f",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8635e307-d376-4717-81ba-d2e9caebafc3"
        },
        "item": {
          "id": "3966ada0-419b-4978-b84e-6e49097d164f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8e7b0c0-a118-4b2b-a5e8-d4395510e007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70740736-9e68-4f45-8d9a-2bdf99edc095",
        "cursor": {
          "ref": "abad243d-0685-4d54-a494-da514b7add52",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d3efd825-1e89-48e7-b2b1-dfa999d323f6"
        },
        "item": {
          "id": "70740736-9e68-4f45-8d9a-2bdf99edc095",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a3628307-378b-4fff-91e8-9c9c995a475d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38570ffb-d1b0-45a2-9409-e261418c8741",
        "cursor": {
          "ref": "78ba33b2-fc27-4763-8096-a4a63e871333",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5cb8f286-81c9-45b4-a0f5-94f54ea84246"
        },
        "item": {
          "id": "38570ffb-d1b0-45a2-9409-e261418c8741",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a66e64f6-de29-4476-b741-3270b25942f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87e4b05-319d-4a90-8b57-e8671fad80c9",
        "cursor": {
          "ref": "ed3636a6-bcfe-4830-b783-c6e15ef9af22",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7b1e1d4e-f5b9-44f7-a4fe-ec794345049f"
        },
        "item": {
          "id": "f87e4b05-319d-4a90-8b57-e8671fad80c9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "da69acd0-1f62-44ac-afc3-7346526eda83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f195179-009c-4485-ba79-b1f078a3c621",
        "cursor": {
          "ref": "ca1a4d2e-cfef-4a47-a7a8-03bbbbe66296",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0d9a4916-7ff7-4f53-9536-7f7fecdc6eaf"
        },
        "item": {
          "id": "8f195179-009c-4485-ba79-b1f078a3c621",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4716ba7f-cf20-46f1-a03e-01e42f563b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da151294-dfa1-48ee-8052-096c5eb07632",
        "cursor": {
          "ref": "17415b21-4f0a-45f0-89c4-d99f12df3275",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d097b174-df33-4fbf-812b-f622910680bb"
        },
        "item": {
          "id": "da151294-dfa1-48ee-8052-096c5eb07632",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "64f13031-64b5-4d6d-b130-9c2d6053e6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364fe4e6-d16c-4fb0-8c2f-1d19c72428a6",
        "cursor": {
          "ref": "5594ac96-08d8-4e76-88d1-628d367edbde",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b2cb5407-071f-4445-bf99-a2b7cf82ccd0"
        },
        "item": {
          "id": "364fe4e6-d16c-4fb0-8c2f-1d19c72428a6",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "ca390706-1e12-4db9-af1e-8f88dcd53ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ddc6ba-398c-4ace-a937-afb4acda7674",
        "cursor": {
          "ref": "46d87948-d998-4c9f-894a-2f125bdc19b2",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "11ac1ee9-b4a9-4e18-82c8-70846d55a9d7"
        },
        "item": {
          "id": "f3ddc6ba-398c-4ace-a937-afb4acda7674",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1f751e4e-d3de-4d1d-9677-4f1948fd6c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3aea03-fe3f-4f1c-8c4a-539fe85d204d",
        "cursor": {
          "ref": "28fc2d17-14fd-4870-8f7c-dd3131e9ac58",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "305db948-2803-4e3a-9855-e80cfbdab5ec"
        },
        "item": {
          "id": "ae3aea03-fe3f-4f1c-8c4a-539fe85d204d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "cf97bcbb-7db2-4461-b17c-cf602852cefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636dd605-763a-4e17-9f6c-199e138e1b4e",
        "cursor": {
          "ref": "bfc249a7-eeb5-4e14-8497-e6d06973b5ba",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1d01f513-5104-4d0b-83cc-6d50dc35c42a"
        },
        "item": {
          "id": "636dd605-763a-4e17-9f6c-199e138e1b4e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7d676383-4b0e-4933-a0e8-6783e8ea15b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85133975-80dd-4af0-8dab-1496baedc569",
        "cursor": {
          "ref": "ff3529fb-2878-42d9-b233-f0bad75ed110",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "908b480e-4200-4ff0-8351-19395c256bc6"
        },
        "item": {
          "id": "85133975-80dd-4af0-8dab-1496baedc569",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "81874204-3c57-462c-b811-e825827d817f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea6c5e0-16cf-4bb1-bad3-e93818322a52",
        "cursor": {
          "ref": "0d1120ea-d92d-4c4b-b05b-de31b21c3b95",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "15a1067e-0b0a-4b1f-ac94-d7e06a389a1d"
        },
        "item": {
          "id": "5ea6c5e0-16cf-4bb1-bad3-e93818322a52",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9eb28eae-7b9b-4ff6-b9be-fb63bc6f4041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7fa44b-aa49-4825-bf4f-dbf9cb13f4f6",
        "cursor": {
          "ref": "0f2f81fc-d1c1-45ae-9123-3ebbffd556b2",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a6e6a521-76eb-45f4-9019-b20f0e420725"
        },
        "item": {
          "id": "6b7fa44b-aa49-4825-bf4f-dbf9cb13f4f6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9cdf11e6-93f2-4e21-9290-b34f57c159e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e823058-196a-40c7-9551-b838d13ae626",
        "cursor": {
          "ref": "f8624c59-4fbe-47ab-9312-c7f434517787",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f145987b-0341-4bb6-9890-6349d8ad19bc"
        },
        "item": {
          "id": "7e823058-196a-40c7-9551-b838d13ae626",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "76ba1f17-0a01-4bea-a061-8daf0439f05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5184e8aa-f9b5-4141-bc9a-3a19a0928b41",
        "cursor": {
          "ref": "2d841cf5-60cc-410f-992f-ff870c2d29be",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f526c23b-f433-4763-b391-d308e8aefc3a"
        },
        "item": {
          "id": "5184e8aa-f9b5-4141-bc9a-3a19a0928b41",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bc30a86f-f2f7-47ee-bd5d-c4de628e3942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cee54f5-055d-47e3-b687-a24d19a5752a",
        "cursor": {
          "ref": "193cff73-7189-41e0-9cf4-f54445ba3cd2",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b56eaad1-a15c-42da-8fe0-9f004e8c6d52"
        },
        "item": {
          "id": "5cee54f5-055d-47e3-b687-a24d19a5752a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "48de332a-a6c0-43e6-9dd3-af9f41bd1d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71053bce-2bd4-4a33-bb24-640d8a1e1d96",
        "cursor": {
          "ref": "1a80b052-5e12-4f34-bbd6-9c853ee7057b",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "28d18e27-cd97-4018-b972-baed2a82ec18"
        },
        "item": {
          "id": "71053bce-2bd4-4a33-bb24-640d8a1e1d96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7b478801-0fef-4e27-9967-ff603adb5f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7af13f-3440-4306-9133-9a1041f9b253",
        "cursor": {
          "ref": "32e2ef30-fd4e-42b2-998d-3bf569c0f107",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6dc7f414-71a8-4ecf-b009-eff141f08687"
        },
        "item": {
          "id": "2b7af13f-3440-4306-9133-9a1041f9b253",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d6d3e890-06cb-4477-a9ad-49ed858f41ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628a6d5-a102-4e28-bea6-19ac38d85681",
        "cursor": {
          "ref": "c7fd892c-ffd8-4b59-9f15-52d26189ac6f",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9e2f72c0-a4a1-472e-be1e-b39dfe7c6414"
        },
        "item": {
          "id": "f628a6d5-a102-4e28-bea6-19ac38d85681",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "537c839c-a69b-44b9-a50f-32d9b7801b9a",
          "status": "Created",
          "code": 201,
          "responseTime": 2131,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "6dfd24db-f8a7-4bc1-b4d8-3b1560859b14",
        "cursor": {
          "ref": "3656b15f-7e9d-4004-a16c-30c5e7a46bcf",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "992822ec-ebfd-4176-a54b-7a3adce4de7f"
        },
        "item": {
          "id": "6dfd24db-f8a7-4bc1-b4d8-3b1560859b14",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2375e5d9-05a4-4d69-8891-f5bece3a09d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f0c50-eca8-4559-8bab-ec87484e19c6",
        "cursor": {
          "ref": "5f895c77-3689-48a1-9680-d5398960bb5a",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ccc99b4a-72be-4abf-b515-926462c8abce"
        },
        "item": {
          "id": "a64f0c50-eca8-4559-8bab-ec87484e19c6",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8a0b7f44-f939-42f2-8538-477f4660b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d4a4fa-761e-439d-bbd3-2d2eede25360",
        "cursor": {
          "ref": "26d54e4f-fd4c-4b4f-9ef1-dcd2b87ec942",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6700bd1d-6b49-4c13-b814-14173d257244"
        },
        "item": {
          "id": "11d4a4fa-761e-439d-bbd3-2d2eede25360",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a8e2f2d0-b733-48e1-919c-38018618820f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3d007d-55db-4fa1-a69b-6e06f21922ac",
        "cursor": {
          "ref": "df04e6d4-9fb4-494f-b1dc-9f947b037a6b",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "13c7962d-e72c-484b-8d2a-3f586e217789"
        },
        "item": {
          "id": "2a3d007d-55db-4fa1-a69b-6e06f21922ac",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "34274a78-3cdc-4a94-9a3b-2b7eef65d383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ea3751-20b8-411d-86bb-f270436a80f8",
        "cursor": {
          "ref": "1119cdbc-f8e2-4492-a519-4a4de35cac81",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7654daad-1719-4a9b-839a-0e5e8fd74d5b"
        },
        "item": {
          "id": "47ea3751-20b8-411d-86bb-f270436a80f8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "586282be-4fe9-4c53-9612-fb692b634430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bbefd2-837c-412f-b68e-a9bcbed246a8",
        "cursor": {
          "ref": "923158e3-3696-4104-8012-7ad4631f54a0",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6e76356d-24a5-4608-9a41-105274e6547a"
        },
        "item": {
          "id": "33bbefd2-837c-412f-b68e-a9bcbed246a8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7d957ee6-a8cd-4ec3-84fc-103f0cceef9b",
          "status": "Created",
          "code": 201,
          "responseTime": 1951,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "249a8b81-c2dc-4f48-a4ee-3610b61bd038",
        "cursor": {
          "ref": "c11fffd3-ce8f-41b8-84e6-7f698e8024ba",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c3f11828-3e82-4966-9f10-275ab2a253b7"
        },
        "item": {
          "id": "249a8b81-c2dc-4f48-a4ee-3610b61bd038",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f4941e72-8f71-440c-917e-a290c395d9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd50bee-1d89-47c6-8c23-368dceb62261",
        "cursor": {
          "ref": "a031e0b0-a81f-4f86-aafb-4f4fe6fe6295",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a3e6942c-56ca-4a3c-ba61-3a58caa07149"
        },
        "item": {
          "id": "4bd50bee-1d89-47c6-8c23-368dceb62261",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ff4d00de-1f95-438e-805e-9bc2301492c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1172acc-457d-4b23-a681-1f5eb0b76a3e",
        "cursor": {
          "ref": "0d478e56-8afe-4218-954e-4ff1d29b2186",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6ae537ee-88b6-4de5-8cda-d7320dd2516f"
        },
        "item": {
          "id": "f1172acc-457d-4b23-a681-1f5eb0b76a3e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "39486570-5d1b-416c-ad82-e67d56e6aeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5536fbed-7300-43e3-8029-39433b1ec5e2",
        "cursor": {
          "ref": "6b54397d-2789-4edf-a1e2-d0fe2650908d",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4fd5aafa-2a0b-49e5-80ee-30118376139f"
        },
        "item": {
          "id": "5536fbed-7300-43e3-8029-39433b1ec5e2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "18cce892-bfe9-4e47-8032-d469b374af2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0a5891-639d-46ac-9e01-2869b76c7816",
        "cursor": {
          "ref": "352aae11-f5a2-4b32-aced-dbf01dae46fb",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "36396751-69bc-4c92-825c-45be616ee2a6"
        },
        "item": {
          "id": "8e0a5891-639d-46ac-9e01-2869b76c7816",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7f82d32b-fbcc-4106-b89f-c243aa0171bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5718237-8f62-4dd9-b763-218643db2d45",
        "cursor": {
          "ref": "27b7927f-b0e4-4d8d-84d5-564728b64057",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1bf55e81-7606-48b5-a280-b9416d27ebd4"
        },
        "item": {
          "id": "e5718237-8f62-4dd9-b763-218643db2d45",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ecd472fe-40c5-4c0d-8698-e110db4dc2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3092f953-9bd9-4788-9b44-8aabe6da75aa",
        "cursor": {
          "ref": "60d8e097-4208-41a8-8fbe-d6bb163fe813",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "309a8218-7b95-4595-80eb-704460fa217f"
        },
        "item": {
          "id": "3092f953-9bd9-4788-9b44-8aabe6da75aa",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "dbe9272c-dbaa-413f-b0ab-7d4efe7e8f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a0f245-9fce-47f6-9625-e76757a77aa1",
        "cursor": {
          "ref": "2db1d053-8f88-4d53-b55d-e2827b0848cc",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc7a2681-193a-47cd-81f7-c104ce74cea1"
        },
        "item": {
          "id": "d5a0f245-9fce-47f6-9625-e76757a77aa1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f17cbad2-7215-44e1-9efa-516b78781612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afffec71-9b1e-4494-9aa1-2c097c7453dd",
        "cursor": {
          "ref": "9103a0a9-d764-40b9-a19f-4603246e2616",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5d508e2f-e83b-4a50-9bfc-0de4d88b73f9"
        },
        "item": {
          "id": "afffec71-9b1e-4494-9aa1-2c097c7453dd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "04738304-156a-4572-a243-b97904634929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b85404c-01b7-4b40-b3a7-2ef15104381f",
        "cursor": {
          "ref": "14204cc8-0489-4d2b-9fe7-853259969268",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2da2c9f9-c832-4758-9266-10f7231a6031"
        },
        "item": {
          "id": "5b85404c-01b7-4b40-b3a7-2ef15104381f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a022e7b1-32b0-4d55-8413-f2c32e5c3ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93166274-18b0-42df-bac9-2fa2cf3428bb",
        "cursor": {
          "ref": "4459dfbb-dba3-48f4-ba2a-201b95966880",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a7bc8f9f-6fb5-4c83-979a-3114d124f602"
        },
        "item": {
          "id": "93166274-18b0-42df-bac9-2fa2cf3428bb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b8238ffc-678c-483c-9f67-955938b1c3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd0c1c9-8b00-4d29-adf8-142139efe792",
        "cursor": {
          "ref": "c72272d4-f6f5-40d2-a339-48084ff72b85",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5721182b-adfb-444c-8423-80e68157aeb6"
        },
        "item": {
          "id": "5dd0c1c9-8b00-4d29-adf8-142139efe792",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bfdb8ee4-a07a-4e3e-a374-d541bd4af7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c75d20-f0d3-4879-ae59-28c2e181bcb8",
        "cursor": {
          "ref": "87cdde2c-7666-4451-84ac-e1eb1acc7b1b",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a453606c-6d62-4f91-bf0b-b9bd8a97ffc6"
        },
        "item": {
          "id": "f1c75d20-f0d3-4879-ae59-28c2e181bcb8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c78ac4aa-181a-465c-8ddd-543ada9d2239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df8a011-1994-4307-aea2-219b023649ec",
        "cursor": {
          "ref": "0327548c-dd47-476d-b2bd-b963cfac8f86",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a23a938e-f744-45bc-93e9-acf4487dd483"
        },
        "item": {
          "id": "4df8a011-1994-4307-aea2-219b023649ec",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8588e0dc-4461-4949-9624-0b3d3efe6e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b327b4-d293-45f0-8276-fcefd3a6d835",
        "cursor": {
          "ref": "94018d3a-ef24-4007-86a7-56fc56f8bf13",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "63e4d56f-3bdd-48ea-8e10-229f670fe9f0"
        },
        "item": {
          "id": "00b327b4-d293-45f0-8276-fcefd3a6d835",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0aacdf7a-76d9-4765-817d-38ab635ee254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cec8a0-094d-41ed-b3ad-b80229ee09ad",
        "cursor": {
          "ref": "e1508c43-1500-4e07-9778-847697864eb3",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3302eee1-03d1-4597-af99-eade08bda915"
        },
        "item": {
          "id": "38cec8a0-094d-41ed-b3ad-b80229ee09ad",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "39cfe24d-cf6d-4356-b0cd-55fce2d839c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a5b052-fd54-423d-88f8-bdcbc8968189",
        "cursor": {
          "ref": "cdb0e03d-f53d-4b19-bf2e-f81b7ebdff1f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "237a39b2-f79c-4ea1-a867-52dfc2bd128f"
        },
        "item": {
          "id": "a4a5b052-fd54-423d-88f8-bdcbc8968189",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0816fb9b-5976-48dd-8ad5-9ce254db5a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6de6ead-879b-4308-ac09-c23578a3fa19",
        "cursor": {
          "ref": "7549d08e-e1e3-4064-b2d7-dd5a87b3b181",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ab0c14be-eb27-4871-833f-c16cf57331e0"
        },
        "item": {
          "id": "b6de6ead-879b-4308-ac09-c23578a3fa19",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "07bbf6c8-c088-4f0d-a523-2857318e0ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 468,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c4a3e2-0581-4461-b35a-c9e126979197",
        "cursor": {
          "ref": "5eeed673-06ad-4e88-aad0-992031d67246",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "59fe9e38-e7f9-4826-be7b-fa7d92b04374"
        },
        "item": {
          "id": "63c4a3e2-0581-4461-b35a-c9e126979197",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1fb3147f-0b57-417b-a2b2-af1466ed5754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f22cc2-e812-4ce8-a030-f5b6204ff453",
        "cursor": {
          "ref": "663d4f98-5504-4205-8336-3082bd451b91",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ef3d05b5-d653-46fd-ab01-c60ea5fce00e"
        },
        "item": {
          "id": "63f22cc2-e812-4ce8-a030-f5b6204ff453",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "94d7c8b7-a47f-4389-a538-3eea4e11a8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fcd5d0-553f-4c9a-abd5-1f3fc13f1b2a",
        "cursor": {
          "ref": "e44ade15-ef9a-45e3-8116-cd26f083bb21",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "039484f3-d267-4be1-ab9e-e8a2567e071b"
        },
        "item": {
          "id": "a0fcd5d0-553f-4c9a-abd5-1f3fc13f1b2a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ead32c24-4bc1-4342-9ab6-bf0d4ce36014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423acdf0-3b3d-4db1-85b6-8f2eac7c98d1",
        "cursor": {
          "ref": "c76a46b4-c63c-4de0-b19f-ebc9f30b46ad",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d73eef0a-ac4b-426d-a08b-76641d856dec"
        },
        "item": {
          "id": "423acdf0-3b3d-4db1-85b6-8f2eac7c98d1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cc96c13d-750b-4ae2-ac47-f148784810bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09f8ee5-2df5-44d7-8226-ea747f81fbb0",
        "cursor": {
          "ref": "6b970e7d-4913-4a1e-9cea-0d5f68277d97",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e03830a6-5362-4599-8718-a343fff13e55"
        },
        "item": {
          "id": "e09f8ee5-2df5-44d7-8226-ea747f81fbb0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "557c601a-176a-461c-9ad6-89af90ab94f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1ba7bb-e34d-4e6d-b947-54c57009c753",
        "cursor": {
          "ref": "db5013ed-974c-4cf1-9f11-55d1f0252a64",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b5650190-2b01-46dd-9152-8ec015a8ca2e"
        },
        "item": {
          "id": "0c1ba7bb-e34d-4e6d-b947-54c57009c753",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7b8a9e88-e0b4-458d-8082-6195b8871435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8e414b-c2bd-46df-8ed7-d77d30104294",
        "cursor": {
          "ref": "fd334e06-3758-4404-b0aa-d61524a3ceff",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "307a962e-111e-4469-8a78-15d2c1e0f378"
        },
        "item": {
          "id": "2e8e414b-c2bd-46df-8ed7-d77d30104294",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "088661b0-6cc6-4cd0-870a-e29817c410da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20af5039-3b0d-4730-b524-3717001f3755",
        "cursor": {
          "ref": "09ae8821-5915-4af7-9172-29cfa3192b7d",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f69b66dc-6daa-49bc-98a9-92575e7827f4"
        },
        "item": {
          "id": "20af5039-3b0d-4730-b524-3717001f3755",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "5d911519-cbb3-4f0a-8f96-1ead1a3c242d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 495,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcda70b7-2d31-40b1-8f86-4d0234ba534e",
        "cursor": {
          "ref": "9cae5eb4-20d5-4e15-bc4b-9b6ca7556fea",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b6a0dbeb-66fb-4925-9835-c6a1fcebb033"
        },
        "item": {
          "id": "fcda70b7-2d31-40b1-8f86-4d0234ba534e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2e4dcdce-8799-4494-8460-b4096b712458",
          "status": "Created",
          "code": 201,
          "responseTime": 2105,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7549bb02-548b-4d8d-854d-d03fc35d64c2",
        "cursor": {
          "ref": "29018a4a-2bc6-4ee7-af48-c92804dfa1fc",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7f94d09c-b6c1-4e76-b15f-a795c37804ab"
        },
        "item": {
          "id": "7549bb02-548b-4d8d-854d-d03fc35d64c2",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "b2cdebac-1793-4be1-923c-c79b618b3419",
          "status": "Created",
          "code": 201,
          "responseTime": 2196,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df39f5a9-c4de-4d4d-b3bd-d51f47f72439",
        "cursor": {
          "ref": "f0720077-92c0-4d5d-b082-77720e9ed942",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e53d6ff8-b75e-49ac-a634-81ba0cb2469c"
        },
        "item": {
          "id": "df39f5a9-c4de-4d4d-b3bd-d51f47f72439",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "01a2dfbd-eaf8-495f-a8d2-fb93906e0926",
          "status": "Created",
          "code": 201,
          "responseTime": 2175,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab4aee4-d6e1-408f-bd37-2391223b9398",
        "cursor": {
          "ref": "8702c4aa-a512-4ed0-9751-bb6f669d258a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f48de0ec-8bbe-4d6b-8e71-18da46363815"
        },
        "item": {
          "id": "bab4aee4-d6e1-408f-bd37-2391223b9398",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "820dc99d-89f8-4d82-afb8-b59ad80970a8",
          "status": "Created",
          "code": 201,
          "responseTime": 5254,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1b3c6b-9d22-4a9b-9325-065ca8efb159",
        "cursor": {
          "ref": "2a28cd3c-21ea-465d-b709-afd1bb491637",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "be46fbe7-f32b-41ad-abe5-42611d55704b"
        },
        "item": {
          "id": "ca1b3c6b-9d22-4a9b-9325-065ca8efb159",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "40c34f95-b8a6-41ac-a25f-35c0f226d18a",
          "status": "Created",
          "code": 201,
          "responseTime": 2559,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66947a3-cd41-41c4-aeb2-58021dc229d0",
        "cursor": {
          "ref": "abb42171-4aab-4a0d-86ea-25bf810da597",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b25dcfeb-c573-48b8-a20f-4075b55c7a7c"
        },
        "item": {
          "id": "d66947a3-cd41-41c4-aeb2-58021dc229d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "727ea59b-982a-4cf3-b970-97b5b8a70023",
          "status": "Created",
          "code": 201,
          "responseTime": 2953,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a89435-7245-4f78-979f-8879b820537c",
        "cursor": {
          "ref": "ac5a0018-bd1d-46df-a967-b97cc96d0d47",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "997a936f-1912-4ab8-a0b4-6239ab1e3c57"
        },
        "item": {
          "id": "24a89435-7245-4f78-979f-8879b820537c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9837d05c-d98e-4dc4-876d-c42eea0b07dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a89435-7245-4f78-979f-8879b820537c",
        "cursor": {
          "ref": "ac5a0018-bd1d-46df-a967-b97cc96d0d47",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "997a936f-1912-4ab8-a0b4-6239ab1e3c57"
        },
        "item": {
          "id": "24a89435-7245-4f78-979f-8879b820537c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9837d05c-d98e-4dc4-876d-c42eea0b07dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317aaa04-3dbe-4c58-a948-0bc3b1c95d1d",
        "cursor": {
          "ref": "56805edf-ac65-4a0c-bf56-60b10ccc7210",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "86b0657e-8083-411a-85fe-4fcd00a063d7"
        },
        "item": {
          "id": "317aaa04-3dbe-4c58-a948-0bc3b1c95d1d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c91d532d-75c0-41de-9d2b-c16294d0a93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f9086d-c3a8-473c-927d-cc5f6f451534",
        "cursor": {
          "ref": "53161762-fa16-4dc3-8f6f-22323a213f30",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f089a068-9672-4e3e-9dc8-6cfb3d38e49f"
        },
        "item": {
          "id": "50f9086d-c3a8-473c-927d-cc5f6f451534",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "281f53cf-d566-4a9a-85da-aca1598f44b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dd4a6b-1ee8-49fc-a038-766068370f13",
        "cursor": {
          "ref": "a51f757d-f54c-416c-858b-b135222a88b9",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "370410ce-5f08-4087-8c5f-33e1537580c4"
        },
        "item": {
          "id": "c1dd4a6b-1ee8-49fc-a038-766068370f13",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3664e7f-54d1-4568-ae47-8ca805d7752a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b783b4-8cf0-4ab9-8b80-63691011903d",
        "cursor": {
          "ref": "f8907a18-a844-4f59-b494-e229e2e46c71",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f77675bf-98d3-4141-81ee-31c9aea42dc1"
        },
        "item": {
          "id": "37b783b4-8cf0-4ab9-8b80-63691011903d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "949249d5-5447-4742-a3c4-b737eb6b9f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de041cf-c0fe-456f-b3cb-7f940e81670d",
        "cursor": {
          "ref": "95c08783-9e23-4c90-a8c7-88bc86b08ca3",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "886a0df2-5f48-4547-9939-08e5bf4a05fc"
        },
        "item": {
          "id": "6de041cf-c0fe-456f-b3cb-7f940e81670d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "24ddc5f5-a8db-4bd3-abbe-2bd73b85d92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c6370a-b9d1-4f72-a66e-142158a28668",
        "cursor": {
          "ref": "ab74f631-2e21-48c5-b6d1-9abe58cda612",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "87325779-8e63-4e88-b6b6-0799760242c9"
        },
        "item": {
          "id": "01c6370a-b9d1-4f72-a66e-142158a28668",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "05dfe57a-7790-435b-88af-0975afec5669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510eefab-297e-455a-a2af-751465c9ea90",
        "cursor": {
          "ref": "0b28c3b0-7a78-41a3-99b0-237f2ad90d6e",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "769c0c55-1b5d-42f2-9baf-ade478af1b19"
        },
        "item": {
          "id": "510eefab-297e-455a-a2af-751465c9ea90",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12e362e2-482b-42db-a0c7-15040d56b685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b3af2f-f1c3-4efc-8d9e-5e28c8446663",
        "cursor": {
          "ref": "11b3d19e-3964-42e7-9b52-d4804a3b25a8",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3a7814ad-7050-44e8-9f46-edda63672a80"
        },
        "item": {
          "id": "b6b3af2f-f1c3-4efc-8d9e-5e28c8446663",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9471e268-1891-441d-a126-be52c6ac7757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096d6bae-d523-44da-9813-9077d0a472d2",
        "cursor": {
          "ref": "7c1a0e27-6a2a-4055-b38f-8e12e0c33154",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e5fcd4bd-e797-4044-b582-9eec15e616d2"
        },
        "item": {
          "id": "096d6bae-d523-44da-9813-9077d0a472d2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "811b4138-0f86-433c-9d1f-a9283f797994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107e1c54-816a-441b-b238-1e437ab566c6",
        "cursor": {
          "ref": "6ce29702-3e6f-401b-bcbb-d90a2a0708c1",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94e63840-7edf-4c0d-a884-cd9fc94a231d"
        },
        "item": {
          "id": "107e1c54-816a-441b-b238-1e437ab566c6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b263bd88-bcb6-482c-a672-3cce3889ef98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a539a29e-3e5b-40d4-8980-72b97cd643d1",
        "cursor": {
          "ref": "759a0fe0-e6d9-4793-ba0c-8899c0d88d21",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1da09a39-ae29-4c9f-908a-5db62dc686b0"
        },
        "item": {
          "id": "a539a29e-3e5b-40d4-8980-72b97cd643d1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6b8726de-68d6-4da3-bece-092187781f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed066f05-8acb-45a4-a498-f3661f8480c5",
        "cursor": {
          "ref": "4081dfc0-6994-43ab-adcb-e54a84c03cbb",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "97a78416-6c87-4313-a8a0-399c6b976089"
        },
        "item": {
          "id": "ed066f05-8acb-45a4-a498-f3661f8480c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "26ad034f-9b9b-4d53-b0eb-73dd8eb03d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cdeadf-e0fa-43d7-86b4-c1760cf880cb",
        "cursor": {
          "ref": "4df69375-d963-4a90-bc9f-4f043f11a0cf",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "304bbbd5-b025-4261-a480-7495b479982f"
        },
        "item": {
          "id": "b5cdeadf-e0fa-43d7-86b4-c1760cf880cb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a76e8c1d-0b25-464c-8543-b4e88a769a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2126a1f7-d46a-4e53-9137-62b92fee41e0",
        "cursor": {
          "ref": "fc76ff15-3f78-4733-8e31-8e017b3a3abb",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "eabdc163-5b08-4a8f-91f4-27e2af2aa7ba"
        },
        "item": {
          "id": "2126a1f7-d46a-4e53-9137-62b92fee41e0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "fc6b574a-379c-43e0-b77e-d01816e24cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217479f8-e5c9-4015-b97a-bfbb4b529c73",
        "cursor": {
          "ref": "9dd70c9f-b2b4-4bde-bc2e-bcb9dada9aa9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0020ada0-04f9-46d9-9cde-6fa3d87da461"
        },
        "item": {
          "id": "217479f8-e5c9-4015-b97a-bfbb4b529c73",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aa1618dc-5159-4215-9350-f1369bf1ef28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce27cf6-a86b-4168-9059-6030177cfa76",
        "cursor": {
          "ref": "ad0a4a0e-eec0-47c8-8e27-3ac27fb29067",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c544a2e2-9012-41e8-b426-74f7b38234a9"
        },
        "item": {
          "id": "5ce27cf6-a86b-4168-9059-6030177cfa76",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "26fe33ec-f5d9-4a1d-b01c-ac2977c02cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a1de91-0804-464a-b692-d49cdbda9809",
        "cursor": {
          "ref": "c9d7eaee-245e-43d7-8398-2795393fa20e",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5beef825-0c6d-448a-a4fc-1ac7f74cf841"
        },
        "item": {
          "id": "36a1de91-0804-464a-b692-d49cdbda9809",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f22546bb-4535-46ee-87c2-935fc48f3d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44b376e-3cec-407d-9446-ca70178ab70a",
        "cursor": {
          "ref": "ab4c6c3d-08ae-4605-8e0f-c653867f2c88",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e7beb2b9-cd8e-4c23-8ffa-b04bbd02b9a9"
        },
        "item": {
          "id": "e44b376e-3cec-407d-9446-ca70178ab70a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5c1161e8-ad11-48b2-9bfe-ec274a01befc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935d578f-3488-4bc3-90af-d65042c56c8e",
        "cursor": {
          "ref": "550d9100-3f66-49d3-b540-1c0abcae06f3",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2663df86-d364-4e20-bcd5-73e1a1102497"
        },
        "item": {
          "id": "935d578f-3488-4bc3-90af-d65042c56c8e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3373c012-17aa-430a-8d31-5b33520175d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b963aa-1577-480d-b774-f6d1c171da56",
        "cursor": {
          "ref": "6f340c31-1bda-462c-811d-d7add647c019",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "abbc4327-e8f2-417b-a41d-9bbfe5d1bf24"
        },
        "item": {
          "id": "f0b963aa-1577-480d-b774-f6d1c171da56",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cfc7370a-678f-4f12-afac-e163ba69181c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d773d40-ae6c-4891-be39-db6b3d4000e4",
        "cursor": {
          "ref": "8757b576-6359-4f6a-af35-448f893afe0b",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "75ce0dc2-69c2-41e3-92cf-f3ea7c0543b2"
        },
        "item": {
          "id": "3d773d40-ae6c-4891-be39-db6b3d4000e4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b47a9947-0bac-4a48-94f7-6a8f7cd6597d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5761ebe0-a8c4-456c-ab7f-00ff9d5ac43c",
        "cursor": {
          "ref": "74800242-feb5-4ee9-a906-36754954368b",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3893e6bc-32a9-454e-8c2a-d6a5f311d36d"
        },
        "item": {
          "id": "5761ebe0-a8c4-456c-ab7f-00ff9d5ac43c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2fcafe55-de20-466a-8099-298bdc8d9b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f96d454-58d1-4c6c-b2b4-34aed87744ab",
        "cursor": {
          "ref": "c34992f6-b7f4-4c99-acf1-c9922d9adffc",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c20bbf0a-c48a-4967-9391-7598d75b2f36"
        },
        "item": {
          "id": "1f96d454-58d1-4c6c-b2b4-34aed87744ab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cd798ae7-c03b-44f3-95c4-88b92e598859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9f9a7b-a516-449c-b372-adbfd23348b6",
        "cursor": {
          "ref": "d9dbb753-78ff-4a2d-a589-6ff6572f051a",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "98fa8acf-18fe-4fc6-9db9-5b18863a3679"
        },
        "item": {
          "id": "7f9f9a7b-a516-449c-b372-adbfd23348b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d9b27e77-c7b2-45c5-83ad-ca08d7cbd6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1243,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dff1c42-67db-4387-b6d3-e6105844c479",
        "cursor": {
          "ref": "2065d936-14b4-4a1e-9f21-96d93f323397",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5ce89f50-6f55-4a40-b7a9-5d848dbdf201"
        },
        "item": {
          "id": "4dff1c42-67db-4387-b6d3-e6105844c479",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "38e68b9a-fa4c-4e90-b5a6-8c42767944cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1154,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa909d1-6f87-4f66-8c05-64fcf4fc6f8f",
        "cursor": {
          "ref": "336db1c7-6e74-45f0-b309-49b9b409519d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ee7f5353-4c4f-45c4-bb71-9284f389a16a"
        },
        "item": {
          "id": "ffa909d1-6f87-4f66-8c05-64fcf4fc6f8f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c341388-8692-4a49-bc17-d64fa79ab4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d26f77a-7b59-44e8-a86e-20ca0aaf3ab2",
        "cursor": {
          "ref": "5d361565-2ce0-4b05-ad54-7d3e5a3a30d6",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ad920204-6deb-4550-88ec-d98d335561c0"
        },
        "item": {
          "id": "0d26f77a-7b59-44e8-a86e-20ca0aaf3ab2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3d20bd47-05e3-4bf0-8945-ff70d1a4d82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e603063a-c360-4688-bdd6-abfa97319bea",
        "cursor": {
          "ref": "4169ac56-adc7-4d61-bef8-0f7090d957ec",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3347df10-5b85-4a66-8513-04eb5825b3c4"
        },
        "item": {
          "id": "e603063a-c360-4688-bdd6-abfa97319bea",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0e85a673-ad99-4ac4-990a-32913d893a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec7d6e0-4c74-4d04-8e37-d22c84305d8f",
        "cursor": {
          "ref": "380b3cfe-ff5b-48f1-8de3-1d9ed2fe0d6c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6140e9cd-d2aa-45ac-8341-d92c15afbc28"
        },
        "item": {
          "id": "9ec7d6e0-4c74-4d04-8e37-d22c84305d8f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "44c04407-3ef1-4630-a3cf-369995be11f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb6040a-d53b-4f74-b078-400d32c99268",
        "cursor": {
          "ref": "6e939e5e-ddd0-4a50-871d-2cc1b04807d4",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "061670d7-68f0-4761-9c9b-8c9bead1c3a6"
        },
        "item": {
          "id": "dfb6040a-d53b-4f74-b078-400d32c99268",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5d1b36bf-e3d0-421b-86dc-413f929398e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c674bedb-f175-43c1-8d15-723db70de3e1",
        "cursor": {
          "ref": "a34f6c1b-99f3-4701-9094-68aa3493e5a9",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "99449cfc-2a4b-487b-9f9f-9412d3d05a73"
        },
        "item": {
          "id": "c674bedb-f175-43c1-8d15-723db70de3e1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ddf2a054-a85a-4dee-824a-887786ecca0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfe159a-6580-481d-87b8-64b4012ef936",
        "cursor": {
          "ref": "70a90ffc-3cf6-4880-966d-dbed5c3a985a",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eaad700d-1340-4271-8bda-9839148e1e1a"
        },
        "item": {
          "id": "9bfe159a-6580-481d-87b8-64b4012ef936",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2edc25f8-bfcb-4a3b-a9b0-cfa9ef988169",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27464080-d392-4113-a23e-1b735bc106c0",
        "cursor": {
          "ref": "bdc25cb5-3cfd-44ce-9c0f-30dc88a80ee1",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "225a3731-b022-4193-81b2-f528a6bae84e"
        },
        "item": {
          "id": "27464080-d392-4113-a23e-1b735bc106c0",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "22fb6695-60db-40a3-af63-4a688310eb0d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 887,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad62b1-5a1a-41b4-a1ca-0522ec930cfe",
        "cursor": {
          "ref": "a4c14587-4d28-4437-9935-d546820df0a0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "30db9417-a92a-4063-9490-d0304d11c9d4"
        },
        "item": {
          "id": "c3ad62b1-5a1a-41b4-a1ca-0522ec930cfe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e62ec79d-211c-4154-b281-eb9423303805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad62b1-5a1a-41b4-a1ca-0522ec930cfe",
        "cursor": {
          "ref": "a4c14587-4d28-4437-9935-d546820df0a0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "30db9417-a92a-4063-9490-d0304d11c9d4"
        },
        "item": {
          "id": "c3ad62b1-5a1a-41b4-a1ca-0522ec930cfe",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e62ec79d-211c-4154-b281-eb9423303805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c3b13-dc24-4ad4-b1af-b8c851ea908f",
        "cursor": {
          "ref": "ed69189d-8fe7-4f8d-99e5-952b42740f68",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cd35c081-a67a-4d24-a543-797041a58d43"
        },
        "item": {
          "id": "292c3b13-dc24-4ad4-b1af-b8c851ea908f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "30768659-1031-4676-9a52-0e9e5c5bc0e2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 621,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "ebd3a0b4-8584-47f7-b0cc-7de67261e93b",
        "cursor": {
          "ref": "33f7acf3-825f-44a8-bbb5-4a4eaa7c693c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1a89663f-41cc-46a8-8b41-c25fb3382feb"
        },
        "item": {
          "id": "ebd3a0b4-8584-47f7-b0cc-7de67261e93b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cbc9575d-51ab-42ab-af9b-e45180be56d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f059308-98a2-4701-b768-76818d7024e1",
        "cursor": {
          "ref": "b20cba73-46ec-4319-842e-b521b9cfcb93",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b06efb5f-8e5a-45c0-847e-ee3ded3d931c"
        },
        "item": {
          "id": "5f059308-98a2-4701-b768-76818d7024e1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2772cfb1-2410-4aa6-8eda-18f8fb8e7925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a74b85-fc63-4657-b327-c24477518c5d",
        "cursor": {
          "ref": "b5516684-cbe5-4b77-97dd-9ba17fcb0e3d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "333bbb55-4119-4a88-b923-316120ef04e3"
        },
        "item": {
          "id": "93a74b85-fc63-4657-b327-c24477518c5d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6affd5b3-4d00-43bf-92f9-535a6460c749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b741d35d-c8a2-4334-9ee6-bcdf8c47cf46",
        "cursor": {
          "ref": "d1eab05b-0f20-4740-9699-8dae7837c0ad",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "10b06e62-9c5a-4ffd-b17a-7412fc950cc2"
        },
        "item": {
          "id": "b741d35d-c8a2-4334-9ee6-bcdf8c47cf46",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8b5b83de-daa3-4e19-abd7-3e5b1224e870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca21ed7c-80e9-40a5-9714-dd33b7f0158b",
        "cursor": {
          "ref": "4de94742-dcdd-471e-8862-bc031af55538",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d2c2ad3a-1501-478b-aab2-6a411fd483c6"
        },
        "item": {
          "id": "ca21ed7c-80e9-40a5-9714-dd33b7f0158b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f91945f1-db25-4047-94a0-fc380f269eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3db6cb5-a4ed-411a-b5d4-84977a56bd91",
        "cursor": {
          "ref": "4f592696-dd4b-4a73-89c4-88e3b804f9ab",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5036efa4-b504-48e5-867d-eeb7f6936458"
        },
        "item": {
          "id": "c3db6cb5-a4ed-411a-b5d4-84977a56bd91",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d13bfcba-a221-4143-a2ed-1785afd42d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313fb206-abea-4f0e-aeb8-023792a12085",
        "cursor": {
          "ref": "f76d451a-e696-42c4-a3fb-9aee680d0892",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0ef07a7b-629b-43df-9436-cfe480cf622a"
        },
        "item": {
          "id": "313fb206-abea-4f0e-aeb8-023792a12085",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "55fdbc6f-4e43-4523-b849-635d8cc3c440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25437ba-dfe3-4033-8765-784ef9098d43",
        "cursor": {
          "ref": "a2e63bed-688e-4788-ac2a-16b4c083e04d",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a8c31098-ab9c-4ce6-83df-d4fdd7aad4b4"
        },
        "item": {
          "id": "e25437ba-dfe3-4033-8765-784ef9098d43",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "383bd669-e7fd-4fbf-8817-a9363ed1a924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f485c0c4-0c8c-4dea-b4e4-6cbbdc3c9688",
        "cursor": {
          "ref": "ff9083fc-02fc-4c64-9ae6-db13fd73ae63",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6a961114-7ae6-43cf-87e9-814f2d83cbbf"
        },
        "item": {
          "id": "f485c0c4-0c8c-4dea-b4e4-6cbbdc3c9688",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "90667293-bfd6-43a1-b545-0cebf1f62672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d17b8e-874d-406d-93e5-a86c59685ce0",
        "cursor": {
          "ref": "73e27578-0f13-4b94-b0cb-f29f746f4b21",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "56a4de40-05f7-4ef9-b606-438ca4a9bbe8"
        },
        "item": {
          "id": "04d17b8e-874d-406d-93e5-a86c59685ce0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f2e1aebc-8094-4fec-8a0d-86ac72f96783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2441e7-e9fc-4919-a60f-72fd440816f4",
        "cursor": {
          "ref": "58bac041-fff3-436c-904a-95c7cf4d559f",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9c23acae-2537-4c70-873c-28456b5a5dcc"
        },
        "item": {
          "id": "ed2441e7-e9fc-4919-a60f-72fd440816f4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b315d8d3-30d5-4ad3-8d52-7bf559fb5a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340fd39b-a49c-426b-be49-be9dd3406a84",
        "cursor": {
          "ref": "5caea514-eb95-400f-97dc-34a9ac102601",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f96234ae-fe63-48ae-8ecf-311a0ba56190"
        },
        "item": {
          "id": "340fd39b-a49c-426b-be49-be9dd3406a84",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d7ba43fb-1e45-45a9-981d-eb1d6978e7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b36e4e-c23b-45b3-9afe-601e299e884c",
        "cursor": {
          "ref": "3904060b-e017-471f-9ab0-752d3d4fc742",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1217e0cc-758d-428a-bb09-2680e3862b1a"
        },
        "item": {
          "id": "b1b36e4e-c23b-45b3-9afe-601e299e884c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9329dbdc-b405-472c-bd4f-efc091d5c52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0040ad16-04fa-4c9d-ae39-5e1e9c384192",
        "cursor": {
          "ref": "450cc089-aa32-45ff-b30a-20a38230dd2c",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2b11bd02-87c1-43bb-9abf-8dd1f5005859"
        },
        "item": {
          "id": "0040ad16-04fa-4c9d-ae39-5e1e9c384192",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "504cae4b-9bbf-49b0-9bc5-4f2b98b99cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8d9f4a-acc4-4982-a9e2-c25272f9aa3a",
        "cursor": {
          "ref": "07298f2f-9c0f-440e-9c70-c38cd94f1079",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4da251b5-ab91-43fc-932b-eaef5c496e43"
        },
        "item": {
          "id": "4e8d9f4a-acc4-4982-a9e2-c25272f9aa3a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fed18788-e56e-41cf-b7b6-5a4ba889e127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf158515-bc4f-4f2b-9659-fb9ce3d20db6",
        "cursor": {
          "ref": "66d8a771-9059-40d9-9e76-2f30b13d44f6",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "68a08256-90f2-45b4-ab24-723ed5cef103"
        },
        "item": {
          "id": "cf158515-bc4f-4f2b-9659-fb9ce3d20db6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "7c2b9476-dc0f-413e-a62e-1f4857f1dbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56df39ee-ab8a-417b-ac09-0acad72f270d",
        "cursor": {
          "ref": "624817a2-4c29-493d-8c2b-27a7a42b38f5",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0d35d092-0c89-4224-b306-4286efa134f5"
        },
        "item": {
          "id": "56df39ee-ab8a-417b-ac09-0acad72f270d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cf418990-03e1-4569-bfb3-736226f9e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b45c594-fddd-4fc8-b11e-7044d118163b",
        "cursor": {
          "ref": "8d281362-9836-4003-af10-580c09957732",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "68a49528-5771-4475-9a3a-915d579a59e8"
        },
        "item": {
          "id": "7b45c594-fddd-4fc8-b11e-7044d118163b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5e5466e5-0903-42ab-bb83-099995ac93bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f79422b-a869-46ad-9a03-3e164115ea13",
        "cursor": {
          "ref": "a4f6f17f-85fa-4c67-a952-8fe3aa51b3bd",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0fec061d-4033-4f1d-a835-52e2c4266e6e"
        },
        "item": {
          "id": "8f79422b-a869-46ad-9a03-3e164115ea13",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5a22d960-657a-42ab-86da-69cd4c02b519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6146bdda-2b87-4479-8ac0-e908c6c6a5db",
        "cursor": {
          "ref": "d41fb29e-6878-49f6-a525-8f968efd77b5",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b0baaeac-722f-4e47-8888-d24c24c7b910"
        },
        "item": {
          "id": "6146bdda-2b87-4479-8ac0-e908c6c6a5db",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d584e940-b3f1-4002-84cb-927ea904fa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e38a2a5-f44d-4d0a-b806-2411e53968bd",
        "cursor": {
          "ref": "7889428c-e193-448c-a38d-463aff6b16ff",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "19ee4f89-27a4-458f-9152-bc90d50015d3"
        },
        "item": {
          "id": "0e38a2a5-f44d-4d0a-b806-2411e53968bd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "73c8a3be-7136-4ac4-b9c4-b6f2c43fd1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1a71f0-96ba-4732-817b-f8f09cf8e05f",
        "cursor": {
          "ref": "650419db-4402-4406-ba79-a49517e7b0aa",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "cbfbe138-ed3e-4d10-a6c8-d1a9bd347895"
        },
        "item": {
          "id": "bb1a71f0-96ba-4732-817b-f8f09cf8e05f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "53a6cdde-3ba7-4579-bd65-f3c0242c7c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daa2f2a-85c5-49dc-853f-c95b8f636815",
        "cursor": {
          "ref": "8221fb77-6fc6-4d0c-8bbf-06dad9cb0d31",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "0926b291-8ce5-41c4-a4d4-9d670245c4ca"
        },
        "item": {
          "id": "7daa2f2a-85c5-49dc-853f-c95b8f636815",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8d8a71a8-2650-4522-a6a4-ded0ddbe0284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ea6530-0b02-4fa7-b563-17a256ea6eb7",
        "cursor": {
          "ref": "64e1f469-2d96-43e5-9e33-8c1ce0b488a4",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "14c09952-1213-41ab-9607-21f147a86b5b"
        },
        "item": {
          "id": "96ea6530-0b02-4fa7-b563-17a256ea6eb7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1a1a004a-7ec3-4f93-81a4-cfc38f001293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dde1b85-e1d0-406f-b0ec-479b39d0bfe5",
        "cursor": {
          "ref": "e04e451b-dfad-4573-b81c-51a2604e06eb",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a4035ce8-3850-4bf2-8418-70de0ca604bc"
        },
        "item": {
          "id": "8dde1b85-e1d0-406f-b0ec-479b39d0bfe5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8e0e9558-c05b-47fd-b9ee-1b089f0f8c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b86941a-b2c8-42da-9f4a-3bc027698b3d",
        "cursor": {
          "ref": "06d46aa9-8bd9-4d90-8a5c-d8c81788fd71",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "835b4fe0-30e9-4863-872e-89564e01dd5e"
        },
        "item": {
          "id": "1b86941a-b2c8-42da-9f4a-3bc027698b3d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a6fc1d3a-9939-4d64-a817-a1f9d7af1f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e86909-5d91-427c-b79a-2f1f8c7ad954",
        "cursor": {
          "ref": "a44210c1-d0c7-407c-b13f-d5f1b8ddd41e",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bf223d9e-f030-4d91-8b8e-f4d5e21112b7"
        },
        "item": {
          "id": "f6e86909-5d91-427c-b79a-2f1f8c7ad954",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0f5652e6-e1ac-4c5f-8810-dbfafc6cf8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0247dff8-ccf2-44db-9f14-f13e319e6b29",
        "cursor": {
          "ref": "97c85d3a-99c7-4b4a-8628-78a7245d7e07",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d69b8d6c-7e8a-4955-bec5-b4476683eedd"
        },
        "item": {
          "id": "0247dff8-ccf2-44db-9f14-f13e319e6b29",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "aade9e4b-4d70-4911-9195-750cc5bd64c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2de85f2-91af-4412-80d0-a2986ddaa2c7",
        "cursor": {
          "ref": "855a541e-4634-4b42-ac24-b9eeaa88a1b0",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b4eb9cc0-9632-486c-8ef4-8e257ad979ae"
        },
        "item": {
          "id": "e2de85f2-91af-4412-80d0-a2986ddaa2c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ed759cc3-5b5d-43ef-b068-da72773f390e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a258d4-1517-4a2e-b541-23d0f06b6823",
        "cursor": {
          "ref": "497c303d-2a6a-45c0-8559-86f66aa2a3d1",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d07481f5-e472-479d-b1b6-41b2eb627b44"
        },
        "item": {
          "id": "52a258d4-1517-4a2e-b541-23d0f06b6823",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5d4db993-921a-4661-b5ba-472d3b496575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22560786-4594-4466-b30c-82caecaaa3f2",
        "cursor": {
          "ref": "0daa3dbe-09ca-4bde-93c0-a65726bf34ea",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f6924610-0ccb-4e55-976a-a7b5d8a09dcc"
        },
        "item": {
          "id": "22560786-4594-4466-b30c-82caecaaa3f2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6698111c-b0ff-4fcd-8ab1-0b2be4118a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b95ddde-d559-427f-af9a-d11885b38a12",
        "cursor": {
          "ref": "ea2bc604-30e8-46ca-b601-25671b037d6a",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a4961b2d-6400-42c4-b6df-4204b998586d"
        },
        "item": {
          "id": "6b95ddde-d559-427f-af9a-d11885b38a12",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4a39ed84-997f-4f12-8f8a-517a0245cbd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8b4e1e-4fad-4db8-a604-4b32bc2ca9fd",
        "cursor": {
          "ref": "e0bc4ced-e4a8-4043-a5ff-cd4e09d44bfd",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6b2f3f31-408f-4491-ac53-18224f2cb275"
        },
        "item": {
          "id": "0e8b4e1e-4fad-4db8-a604-4b32bc2ca9fd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "64932f5d-4e9b-459c-a3c3-7e0555f4a8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab53221b-9f10-4f83-a3a0-e49cd006fdaf",
        "cursor": {
          "ref": "9869af91-61f5-4675-ac3b-163c0ce63fe9",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6110a1e1-f10d-4585-b60d-24cf35c18d46"
        },
        "item": {
          "id": "ab53221b-9f10-4f83-a3a0-e49cd006fdaf",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4a62d9f4-a890-46ba-a3d9-df896675f22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee84e92-6037-449d-8d67-5f6d9e7fb4db",
        "cursor": {
          "ref": "b12771f3-bbd0-4d55-9458-3038c962ef2a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1e8fd650-a557-4f2a-8949-9157bc4ba4cb"
        },
        "item": {
          "id": "4ee84e92-6037-449d-8d67-5f6d9e7fb4db",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f56547ea-1ec5-4bd6-9ec1-eb6be6f3208d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667088e1-14df-48ce-bd02-b2750c7cde69",
        "cursor": {
          "ref": "9f6cee29-a0a4-4f58-934b-4a23102ad322",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0799796f-0780-438a-9c82-01ba6de8aaa7"
        },
        "item": {
          "id": "667088e1-14df-48ce-bd02-b2750c7cde69",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2d3cf05b-5668-40cc-b4e7-8b10dc95f29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0bb3bb-8bc2-425f-a3c2-3334f59b1146",
        "cursor": {
          "ref": "28ea556f-cfd5-4aaa-b3d8-31400abfd4f2",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f587efcf-eb44-4871-800e-3093d9426e60"
        },
        "item": {
          "id": "4f0bb3bb-8bc2-425f-a3c2-3334f59b1146",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0d6c07f1-27cd-4d68-be1c-ca88909acfde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c1a055-3d47-4322-a1b6-485dc75da2b9",
        "cursor": {
          "ref": "0ff600a8-e13e-4495-a2cc-526e008727c3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8b2207fb-377d-463e-92f0-43aa6ce99a85"
        },
        "item": {
          "id": "14c1a055-3d47-4322-a1b6-485dc75da2b9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2fcd0e9e-2ae8-401e-8a5b-5bc2a8a8381d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813e1264-7ffa-4e12-ae01-c1151eb9f1c7",
        "cursor": {
          "ref": "1f4fcd6d-0a34-4d4e-aa66-f3ba572a9b55",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9296ab3d-913e-4f72-8173-a3062c818029"
        },
        "item": {
          "id": "813e1264-7ffa-4e12-ae01-c1151eb9f1c7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "209bf6b6-62f8-4e3b-abe8-c6a22918550d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14513f3c-fd53-4386-abf8-bd283dbd4e06",
        "cursor": {
          "ref": "69227a82-143b-4425-bf68-7c65211ec908",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dd1df11b-ed03-43b6-97b4-60767cb03c78"
        },
        "item": {
          "id": "14513f3c-fd53-4386-abf8-bd283dbd4e06",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "827043cf-2c81-47a5-8bf9-5e987dc4b5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef08df2b-4d7d-4d38-b979-fa517aacdcf8",
        "cursor": {
          "ref": "29e8b3bb-e412-435b-afc5-14de3bcc4469",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c519843f-fa00-4fc0-bc78-92380dc3d3df"
        },
        "item": {
          "id": "ef08df2b-4d7d-4d38-b979-fa517aacdcf8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2550bfc4-41e7-4848-98c8-f29cba2f08dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fe507c-dfd1-4f3d-a019-481bf757202c",
        "cursor": {
          "ref": "c4dacac8-00f5-4089-9c64-b08b68876591",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "aced658b-7e4d-4f69-986e-f954721b8745"
        },
        "item": {
          "id": "47fe507c-dfd1-4f3d-a019-481bf757202c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e68595e6-488b-4f3f-b4c7-cda44271210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a71444f-32ff-43ff-bfb1-7f45494ea6dc",
        "cursor": {
          "ref": "22fa8d89-6ab6-4a88-8519-4a32941e8900",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0ce4d1fe-4a42-46f1-a8cc-09612fb3e156"
        },
        "item": {
          "id": "1a71444f-32ff-43ff-bfb1-7f45494ea6dc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8f02dc51-1889-45fe-8562-472caa5f3dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e696e0c5-daf9-4d75-916f-5ac495de0e71",
        "cursor": {
          "ref": "9b2518e9-1c37-46cd-a532-e17ea8f928ee",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c0d9bf86-429b-4818-86c3-6162e0effee7"
        },
        "item": {
          "id": "e696e0c5-daf9-4d75-916f-5ac495de0e71",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "94b372fd-c450-447d-933e-57ab69765c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c7e9cf-b88f-40bd-a131-1a027f35c5f2",
        "cursor": {
          "ref": "6477fa02-aeb2-4757-b439-f26b89a708e9",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "27281871-b9ef-4683-ac1f-cfc3f2c16490"
        },
        "item": {
          "id": "67c7e9cf-b88f-40bd-a131-1a027f35c5f2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "190836cb-caad-4da9-acfd-fe51e9c3584a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6763471e-3395-44c9-84da-9a6cc6019687",
        "cursor": {
          "ref": "501ab9a9-8f6a-4285-92ba-eb0436ef842e",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d21f825c-889c-42d9-abbe-5c422a7df385"
        },
        "item": {
          "id": "6763471e-3395-44c9-84da-9a6cc6019687",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a7acca4d-1342-41d5-9748-071f7ca37f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3dd095-0988-4a5b-bed1-7c1ba7e920ce",
        "cursor": {
          "ref": "c9f3d36c-14fb-4ba6-af6f-21c425de83a4",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2e074efb-14d9-48f0-954a-c764e5d8638f"
        },
        "item": {
          "id": "4e3dd095-0988-4a5b-bed1-7c1ba7e920ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bdfc8633-6fbd-4546-ab10-fb65efd2534c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab9460f-323d-4747-a813-50b65d522027",
        "cursor": {
          "ref": "224f9e31-b6bd-4c78-bf0a-324e7325d41e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0f2363b5-8324-47fe-b559-83f918d8e77f"
        },
        "item": {
          "id": "3ab9460f-323d-4747-a813-50b65d522027",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "85c3b80e-9aab-43d5-9e35-d9b25bfaefbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41fef51-da85-49c1-8b3c-fd78c0ef2c60",
        "cursor": {
          "ref": "48f8c9c4-ccd4-4f1b-bb11-2c5e3bbb01fb",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e75ebf65-4f39-4dc7-8d5a-11d0e8ffa780"
        },
        "item": {
          "id": "b41fef51-da85-49c1-8b3c-fd78c0ef2c60",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6146f850-3130-4412-b6b1-7884b34e51df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654a8c43-5393-46cf-9897-f0c411fd3b25",
        "cursor": {
          "ref": "31c360fb-b124-40d0-ab52-96a79d7b7c2d",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ee78b5f8-676c-43fa-8156-c2cb568d1d88"
        },
        "item": {
          "id": "654a8c43-5393-46cf-9897-f0c411fd3b25",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a5286e74-7903-410c-a6db-458ec18e182a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29549b9-9436-4777-ada5-139cb24d5ac1",
        "cursor": {
          "ref": "dcfeb4cd-5216-433e-89a6-5eb7f131073c",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "019b3a93-fa09-456a-8b70-30ed28fe5923"
        },
        "item": {
          "id": "b29549b9-9436-4777-ada5-139cb24d5ac1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e94bd3cc-3236-4bc1-b966-dfd576a3b0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e0879b-e4a6-4066-9c87-9bf32b49d83e",
        "cursor": {
          "ref": "bd03f178-2fa5-45a3-9a0a-c1d82ff7ab5c",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b1c1303e-7873-401b-a7af-c5b7241e4b14"
        },
        "item": {
          "id": "09e0879b-e4a6-4066-9c87-9bf32b49d83e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0a8d4dbb-d2c0-4ecd-a184-d5d4372b7cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d2e7ae-84f2-44ea-88dd-cfd8ab499d7d",
        "cursor": {
          "ref": "c5b7cf1a-99ff-4968-b89a-5a9576123f0f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c67c923e-55d8-4417-92f8-4244cb3be301"
        },
        "item": {
          "id": "85d2e7ae-84f2-44ea-88dd-cfd8ab499d7d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0604e034-f9b9-4193-af42-0703b501516b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22f116a-54b3-4635-ad1d-bc9a91f0434b",
        "cursor": {
          "ref": "9f313e08-04b9-44ab-b5ea-fef1dd021cb7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ef9354fa-b2c7-4efa-aef4-be061823a9bb"
        },
        "item": {
          "id": "f22f116a-54b3-4635-ad1d-bc9a91f0434b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e10618ff-f90d-46fe-8607-0f0cccf3c7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01e8f51-7fbb-4894-b8fb-e45a4a0e4b00",
        "cursor": {
          "ref": "ded545d7-3b8a-4e7b-9365-3ebe2acfba37",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "323ca2de-1a9b-4b07-8597-73d5cf865e2e"
        },
        "item": {
          "id": "a01e8f51-7fbb-4894-b8fb-e45a4a0e4b00",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e335ea3d-35e5-44a5-9a72-4cc5dae1d3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee942fd-00a2-4c1b-8e86-2f6384ee24a5",
        "cursor": {
          "ref": "0ee5d240-9dcc-4e65-ae4f-e7fd2e84f71a",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "6fe8dfd0-2786-4386-a6e9-53592b6ac24e"
        },
        "item": {
          "id": "8ee942fd-00a2-4c1b-8e86-2f6384ee24a5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5177390e-a830-473b-bab6-a68cb9fcffa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cf72e1-0bda-4684-a4ff-11ce2f4eaae6",
        "cursor": {
          "ref": "92cf6f3a-fb9d-4033-87d7-6a1dcac2134c",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "76fbeb36-04cf-46a1-b254-f9e7c105163d"
        },
        "item": {
          "id": "c3cf72e1-0bda-4684-a4ff-11ce2f4eaae6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5ac81974-7596-489a-bce8-37ddc1f8527c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 769,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df452bf6-4dec-4e21-9763-a2d8bfc8e9d5",
        "cursor": {
          "ref": "16bb76cd-196f-40c9-a25c-08f94f8b6b4e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "17cd1b24-ce34-4f9b-8213-73f84802ab65"
        },
        "item": {
          "id": "df452bf6-4dec-4e21-9763-a2d8bfc8e9d5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a0aae844-31af-4bb9-8a93-f4ab56caa1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73dd08a-e476-40a2-9751-149cffbc43ac",
        "cursor": {
          "ref": "a7fedd6f-e850-4891-93b7-0e878f4a9d65",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "661fe61c-a20a-450c-8595-a2d01be95bcc"
        },
        "item": {
          "id": "e73dd08a-e476-40a2-9751-149cffbc43ac",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "22cb97b9-fe50-4c3c-a48c-0d1e1df22d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e980d4-cc83-4e6c-9a96-16ef90448acb",
        "cursor": {
          "ref": "39596522-c6e4-40b1-976a-cee2ace9eebd",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2c862bb6-d046-4f5a-8160-39258eacc0a1"
        },
        "item": {
          "id": "b3e980d4-cc83-4e6c-9a96-16ef90448acb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f6fbaa14-4aa2-4a7c-aa67-b75e7af95300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17402c0b-672e-4ad7-8107-fbde8a19c723",
        "cursor": {
          "ref": "3f196705-bd91-4585-b036-7c86d8cd91a5",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b90b3f86-f391-43ce-9534-7afefe9797fa"
        },
        "item": {
          "id": "17402c0b-672e-4ad7-8107-fbde8a19c723",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "583cf2f1-57e4-487d-9927-019b9c78c999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169209f0-2b56-4ae6-a5ac-bcbfab52f91b",
        "cursor": {
          "ref": "8edc5e80-5239-4206-a2c7-7e507d084b09",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "00f504df-6340-4438-9900-516e993314b2"
        },
        "item": {
          "id": "169209f0-2b56-4ae6-a5ac-bcbfab52f91b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b542dd38-9ec3-4557-87e0-2f8869aacb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c92a410-a6a8-4fc7-a1eb-92e26618eff2",
        "cursor": {
          "ref": "7ba7d8c5-c990-40af-b941-b175597c3e6a",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "372495c2-0850-4be6-aa53-72b6d3bb13bc"
        },
        "item": {
          "id": "3c92a410-a6a8-4fc7-a1eb-92e26618eff2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "14b881c3-5866-4b78-9818-99a114e7da29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6265bed8-495a-4c8f-8ec5-d73b46ee99bb",
        "cursor": {
          "ref": "ac3041b4-bfda-4cad-884f-51fc2d9cef77",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "10d00c52-7ec7-46ee-bf71-9d2cf5430fa8"
        },
        "item": {
          "id": "6265bed8-495a-4c8f-8ec5-d73b46ee99bb",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "efd80ec5-badf-435b-aa9f-83a191f217d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3280ccbc-6de5-4f8b-8d11-e24fe6c4b0dd",
        "cursor": {
          "ref": "4e4cdd36-07da-4ea3-9f01-d9892e21b16b",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c0b35a44-2e61-4288-b4da-20bdc202fcc3"
        },
        "item": {
          "id": "3280ccbc-6de5-4f8b-8d11-e24fe6c4b0dd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "277445bf-dbdc-4b8b-9b6e-46ceb4d6666e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c8908b-1142-4b78-98fd-54610f6c2551",
        "cursor": {
          "ref": "c26f78a7-8208-493b-acca-bce25efbba13",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4a4e2143-25a0-4821-b33f-1a78948e3c46"
        },
        "item": {
          "id": "a0c8908b-1142-4b78-98fd-54610f6c2551",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "49d3635e-7605-4558-bf63-25da07a0f796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e395c2c3-94cf-4b94-b699-10530ff6d63f",
        "cursor": {
          "ref": "cf85f09a-da8f-4b22-94b9-a4e1568f7a3d",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "239c92ba-1e2e-457b-9cf7-06b10d8a651b"
        },
        "item": {
          "id": "e395c2c3-94cf-4b94-b699-10530ff6d63f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5150c39a-883a-46ba-ae93-9eadfb9bb3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bc901d-91b7-43d0-9216-3c311501e94a",
        "cursor": {
          "ref": "c8e530b6-3f6b-4707-bc51-7e4e5541fca1",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f46fa76c-ea2e-4ec6-94f1-8b4b95defb41"
        },
        "item": {
          "id": "05bc901d-91b7-43d0-9216-3c311501e94a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d5577d01-2d70-4ddb-a6e9-16298cc09ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f153a2-10b9-4562-9cf2-467de2b32019",
        "cursor": {
          "ref": "62746d3d-777e-4bd1-9b0c-c1f667bf30a7",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "420ee173-db17-40e4-bf6c-6f61cb9db3c2"
        },
        "item": {
          "id": "56f153a2-10b9-4562-9cf2-467de2b32019",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "667cf1f6-818f-4ad2-b932-0ccf643d2a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244ebf56-9276-44df-b01d-b7454535af9d",
        "cursor": {
          "ref": "e01f7ec9-1344-4bab-85b7-6de3becd017e",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cbb33ae1-12f7-49e2-aac4-19633dfea477"
        },
        "item": {
          "id": "244ebf56-9276-44df-b01d-b7454535af9d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7ce74d6d-002b-4120-8344-c621b8656674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc67f42-1063-4bbe-af7e-1a684508f5d8",
        "cursor": {
          "ref": "1211c521-01d9-4a31-9037-9c034c67aa45",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "bc9dc92e-2447-48bd-99d9-94f1a611e41b"
        },
        "item": {
          "id": "adc67f42-1063-4bbe-af7e-1a684508f5d8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1b73c905-003a-4bf0-a4ee-579932fd0c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b614df-0018-4fc9-b65a-838c5c0d64c6",
        "cursor": {
          "ref": "2a62af56-dbbe-4c67-b2e0-bd4cc64bf429",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8d48adc-6a4f-4ee2-99d7-7a82344e46f5"
        },
        "item": {
          "id": "d4b614df-0018-4fc9-b65a-838c5c0d64c6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ffac69cb-2ddf-4897-8f11-d60c7af349f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 444,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a827ad1-8695-492d-bac4-85fb7ef38f5c",
        "cursor": {
          "ref": "757104e1-9743-432a-aa18-5b4dd3608ec5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c36b27af-1008-4d2d-b0ec-5f8461b1da55"
        },
        "item": {
          "id": "5a827ad1-8695-492d-bac4-85fb7ef38f5c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "187743fa-b713-4769-a8bb-6eb217c0fb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e482ab72-811e-4363-b5c9-cb5b6f8c40d3",
        "cursor": {
          "ref": "54b65a4f-3bdc-4692-853e-d18f57a66ca1",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b44e9703-3d8b-45f6-a830-abae63f68be5"
        },
        "item": {
          "id": "e482ab72-811e-4363-b5c9-cb5b6f8c40d3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e5806159-cb88-4578-9ad8-eb4c2c8a3b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a3d5b0-7955-4c4b-ba6e-a87e5f69ebd8",
        "cursor": {
          "ref": "47c2f511-b5f1-4628-ade3-c745e5fe7cae",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "351fd65c-d79e-4259-8717-26df86796b50"
        },
        "item": {
          "id": "e7a3d5b0-7955-4c4b-ba6e-a87e5f69ebd8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f80bfaa6-b235-4826-b0d1-c42ebe2a03d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892a264d-a2bb-42e7-b6e5-4fe2d20de3de",
        "cursor": {
          "ref": "5eb28ce5-2846-4800-b7e7-da4a4d48f5a0",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "951fe47b-b79f-421a-9bef-e76f0ff0a848"
        },
        "item": {
          "id": "892a264d-a2bb-42e7-b6e5-4fe2d20de3de",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "40a00b69-47ac-4c97-a75f-a934fc2e8bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a426989-b22c-466d-8111-d2efa4c3bdc3",
        "cursor": {
          "ref": "c07becda-aca0-4f61-802d-e471fdc9e76d",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "732b8b72-3885-4683-806f-f9e729ab1198"
        },
        "item": {
          "id": "7a426989-b22c-466d-8111-d2efa4c3bdc3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d84393af-ee05-4523-a749-43788248f46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 867,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b6cc4-c2d2-4d32-bb5a-b35ddbd3ae6d",
        "cursor": {
          "ref": "22d9621c-34ea-4e56-b1d5-d6513be28151",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cc84bf77-c02d-4e14-a257-0a7a09946d31"
        },
        "item": {
          "id": "8a6b6cc4-c2d2-4d32-bb5a-b35ddbd3ae6d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c513293d-641d-464d-8b61-0eb78bdbc3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebab9b48-125e-48bf-ba29-f0e8f985ea5b",
        "cursor": {
          "ref": "73850490-c891-4f6f-8fa2-ab59330c89e0",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b3ac24fd-c4a2-4244-a4cb-f33d524516f0"
        },
        "item": {
          "id": "ebab9b48-125e-48bf-ba29-f0e8f985ea5b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d02f5f97-f6cc-4fe1-a425-5f84b501b2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d7078e-8148-4a6b-80e2-ea6827bbea93",
        "cursor": {
          "ref": "b88d83ee-bd13-4b94-a824-200d23b5af34",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0b4eb328-2b28-4eeb-98e6-da1fe7bb5f9f"
        },
        "item": {
          "id": "74d7078e-8148-4a6b-80e2-ea6827bbea93",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4467adb3-ca44-44c7-adba-fdd9c3ede8e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399bb0ed-3050-4dfd-a5d7-32481257e3de",
        "cursor": {
          "ref": "723f4494-1a0c-43b0-b5f9-12c5c156a4b7",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c083edfc-1049-4664-ac37-1474961b1835"
        },
        "item": {
          "id": "399bb0ed-3050-4dfd-a5d7-32481257e3de",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fbe02594-2ed0-421d-aafc-3d727b31859f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13802797-ab2b-4e29-8f21-70feb1466bf4",
        "cursor": {
          "ref": "b61f040a-cb86-453b-9421-df8cf09ead1f",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b87f128d-2506-4db4-80b8-16b4542d24aa"
        },
        "item": {
          "id": "13802797-ab2b-4e29-8f21-70feb1466bf4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "012c59fa-3128-4edf-802a-5974090bf3a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ef7d39-f9c6-4ad1-9062-2ba57d689fb5",
        "cursor": {
          "ref": "6df2499e-37c4-493f-9e23-edd08da3cf57",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "975372c4-6076-4b67-9d46-78503c77878f"
        },
        "item": {
          "id": "22ef7d39-f9c6-4ad1-9062-2ba57d689fb5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "013aa814-5c99-4dbe-b8af-5a94a742d79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5c1ef6d-c485-471f-a25c-f2dccdb31703",
        "cursor": {
          "ref": "03290399-d5af-4aed-8a6e-c55b6fa16629",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "19fda29a-2181-4413-8df3-26ba0282722b"
        },
        "item": {
          "id": "b5c1ef6d-c485-471f-a25c-f2dccdb31703",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "52042ddb-0db5-4419-ad8f-de68c40adab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320b7e02-7379-4009-b02b-d457b95daa08",
        "cursor": {
          "ref": "10a05117-73ac-49ff-9dd9-dfdcfe02fb66",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1545d955-ee6f-4fed-952a-4c91f5f693b7"
        },
        "item": {
          "id": "320b7e02-7379-4009-b02b-d457b95daa08",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "41186ff8-1a84-4622-9004-475bce2b2a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14137120-d533-4a70-8527-158a147b974f",
        "cursor": {
          "ref": "377c47e5-34f6-4eff-a06b-89a3364d0d6c",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "882a47a5-808c-44e3-ae2d-2246b0855c45"
        },
        "item": {
          "id": "14137120-d533-4a70-8527-158a147b974f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f71d13c4-e52f-4d34-9a72-3f9082b4355a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24186ae-651c-4c25-9e50-c7f0c8beb728",
        "cursor": {
          "ref": "3d2d8ce3-9175-4c7e-a303-91fe0949ea79",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0b65f5d1-0639-4d30-9700-4de03185e35d"
        },
        "item": {
          "id": "c24186ae-651c-4c25-9e50-c7f0c8beb728",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "36fda2a5-f196-4842-a66b-e1cc38fab2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60170d3a-58dd-4677-a94d-70f527587656",
        "cursor": {
          "ref": "df49ee76-fc98-4466-b336-dff8aec933a9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f181635-5ffc-4624-ae22-f3a70537a9dd"
        },
        "item": {
          "id": "60170d3a-58dd-4677-a94d-70f527587656",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bdb72213-ec81-4b04-828e-14cae51a2487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de9dfb1-2b95-4e96-8dae-4c4dc3919993",
        "cursor": {
          "ref": "231ea068-3ebc-4682-aace-046fe7131a01",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "925b8e8b-ac27-4ef5-a568-01fee7b330a6"
        },
        "item": {
          "id": "8de9dfb1-2b95-4e96-8dae-4c4dc3919993",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "74a8b5d3-3591-4c53-846d-8a27c9398a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09759fd3-d41b-4d24-9f38-e7639f5f06c8",
        "cursor": {
          "ref": "4c5d59d0-f591-4eec-99ed-266aa37d1c8e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8e2b56d9-8633-4f41-963b-e301a51a7033"
        },
        "item": {
          "id": "09759fd3-d41b-4d24-9f38-e7639f5f06c8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6323085b-d90d-4bef-bc83-8c1e448b3e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d49b6d-f0dc-47c1-b8f1-b61bfa638ff6",
        "cursor": {
          "ref": "a45da4db-0893-4d7d-91f9-323897821df5",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bbec1a81-018e-470e-a0e3-a81017b323eb"
        },
        "item": {
          "id": "e6d49b6d-f0dc-47c1-b8f1-b61bfa638ff6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "444b3173-5a03-4390-86f6-5c700af7592f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f1b4fa-4a0c-49c9-9094-7945c774c2b4",
        "cursor": {
          "ref": "6377f3ce-1886-4ef1-bb60-1b9a77a21a17",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a927c169-12ee-40f0-a62f-7c49e5b9f440"
        },
        "item": {
          "id": "a4f1b4fa-4a0c-49c9-9094-7945c774c2b4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7de44fb2-ae4b-457a-b2c2-560f0d06bd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96ec80e-d97d-4dc2-ae5f-c4fab180bcd5",
        "cursor": {
          "ref": "b5075bbe-98dc-43a6-9dcd-26ec969d26d0",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a9def97-8024-4c0e-adf8-1c43c8dfd510"
        },
        "item": {
          "id": "b96ec80e-d97d-4dc2-ae5f-c4fab180bcd5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ae1230e8-36cd-4db6-816a-79a00d9efb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e855bd87-7186-436c-b93a-580124b6d0da",
        "cursor": {
          "ref": "cdb95748-7f34-40ef-ba31-3b2e8a596c8c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "550e072c-ac6e-4f66-98a9-cbd23d43b5b3"
        },
        "item": {
          "id": "e855bd87-7186-436c-b93a-580124b6d0da",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0d6411a4-bedc-4b45-a6ad-ce87c552a6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a2c6db-e09f-4bbe-a8c8-f68124e7a104",
        "cursor": {
          "ref": "72e2a5c0-53f1-4b42-a962-4fead4ea7b3f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cf1326d4-4bf9-4b46-bb70-0af3aefd721e"
        },
        "item": {
          "id": "49a2c6db-e09f-4bbe-a8c8-f68124e7a104",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "235db527-6436-4b73-862e-6b87c287ec5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447ad713-3cfc-4767-8037-ff592e9b4e72",
        "cursor": {
          "ref": "da8c40bc-4e2d-4993-977d-d6e7feb6e90a",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f7f718af-ff87-4bf4-b7f1-dd1fa0e646d6"
        },
        "item": {
          "id": "447ad713-3cfc-4767-8037-ff592e9b4e72",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5f050499-6f67-4cec-ac8b-c9efd769aed1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186900ae-e328-4791-a913-1512caaeb3bf",
        "cursor": {
          "ref": "6e8e3fd2-441a-4b90-b8d0-461555bc6b90",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cfde2652-077d-45d2-9a4f-fbe797b83a93"
        },
        "item": {
          "id": "186900ae-e328-4791-a913-1512caaeb3bf",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1bed689f-af0d-411f-97b0-e8f120c1e40d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 286,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a50d2c6-ea4f-49ff-84a0-0a0eb968d9a9",
        "cursor": {
          "ref": "1fd6a0c5-27f6-40e9-a839-f32c40bf6de3",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "bfe8561b-b889-4b15-8c49-58990893cbfe"
        },
        "item": {
          "id": "5a50d2c6-ea4f-49ff-84a0-0a0eb968d9a9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "faa6358c-f019-4f44-8b6f-866ace8bcae4",
          "status": "OK",
          "code": 200,
          "responseTime": 369,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1a414-988a-4d43-a811-e1943c6f1fec",
        "cursor": {
          "ref": "f5430ed4-5eb4-4117-93f1-559d07039338",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2e78bd53-ff18-4333-ba8b-5c517cce2d8a"
        },
        "item": {
          "id": "b9b1a414-988a-4d43-a811-e1943c6f1fec",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "10a878c6-fa47-4c12-8ee6-55a4be3a094e",
          "status": "OK",
          "code": 200,
          "responseTime": 391,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb001e3-57fb-49ef-b0ff-10867b6fe306",
        "cursor": {
          "ref": "80464f75-558f-464d-b96f-5c832bdb630a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3106ebc1-5952-4f61-b876-3fb6e4158682"
        },
        "item": {
          "id": "6bb001e3-57fb-49ef-b0ff-10867b6fe306",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "26e85707-2d9b-482d-a655-21b61690e144",
          "status": "OK",
          "code": 200,
          "responseTime": 348,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34227c-a3fd-4f12-852f-d1ee82bcbec7",
        "cursor": {
          "ref": "cabb8a5e-cdb9-4dd5-9e0d-8f5b9da10556",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9fe37e03-0ab6-4f65-ad80-c0fc6fada226"
        },
        "item": {
          "id": "bc34227c-a3fd-4f12-852f-d1ee82bcbec7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "221563c1-f20c-4df5-9b1d-9a4ba35f3cf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34227c-a3fd-4f12-852f-d1ee82bcbec7",
        "cursor": {
          "ref": "cabb8a5e-cdb9-4dd5-9e0d-8f5b9da10556",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9fe37e03-0ab6-4f65-ad80-c0fc6fada226"
        },
        "item": {
          "id": "bc34227c-a3fd-4f12-852f-d1ee82bcbec7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "221563c1-f20c-4df5-9b1d-9a4ba35f3cf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34227c-a3fd-4f12-852f-d1ee82bcbec7",
        "cursor": {
          "ref": "cabb8a5e-cdb9-4dd5-9e0d-8f5b9da10556",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9fe37e03-0ab6-4f65-ad80-c0fc6fada226"
        },
        "item": {
          "id": "bc34227c-a3fd-4f12-852f-d1ee82bcbec7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "221563c1-f20c-4df5-9b1d-9a4ba35f3cf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0888fd3d-287e-4099-8e7f-7b8a5df7254e",
        "cursor": {
          "ref": "4157b74b-ce96-4548-86d5-f6f71b6d8176",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d1c3e997-4127-49c7-a5a1-efdc1dd1718f"
        },
        "item": {
          "id": "0888fd3d-287e-4099-8e7f-7b8a5df7254e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9d1183a7-09f3-4a0b-abe6-b2e6c2d89786",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 272,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94425763-28f4-4bad-b9be-a7b08241693b",
        "cursor": {
          "ref": "8db652ac-a795-4ae7-8df5-6df4fb1e97cc",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9af58920-2e96-47f5-a0f3-ace0f5dbed2d"
        },
        "item": {
          "id": "94425763-28f4-4bad-b9be-a7b08241693b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3a9187cb-1ca9-4a9d-ac18-06dc0becde29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94425763-28f4-4bad-b9be-a7b08241693b",
        "cursor": {
          "ref": "8db652ac-a795-4ae7-8df5-6df4fb1e97cc",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9af58920-2e96-47f5-a0f3-ace0f5dbed2d"
        },
        "item": {
          "id": "94425763-28f4-4bad-b9be-a7b08241693b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3a9187cb-1ca9-4a9d-ac18-06dc0becde29",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d322f7-d460-4135-86ce-f5e2ab5fc831",
        "cursor": {
          "ref": "898649e6-0b4f-46d7-95c4-cf7d8ae6643f",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "489dcaa4-65af-4244-9166-1500f3a75960"
        },
        "item": {
          "id": "84d322f7-d460-4135-86ce-f5e2ab5fc831",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e01c8f26-408b-4c25-904e-d8de0846824a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 482,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0237fa-471c-4b95-863f-1aae08aa0a75",
        "cursor": {
          "ref": "af9637fc-a441-450a-acdb-68b553c78c41",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8ad406e3-6d19-4c35-abe1-f4d1a184ff28"
        },
        "item": {
          "id": "3d0237fa-471c-4b95-863f-1aae08aa0a75",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac403ab3-51b0-4330-bb53-6eef57b73fa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0237fa-471c-4b95-863f-1aae08aa0a75",
        "cursor": {
          "ref": "af9637fc-a441-450a-acdb-68b553c78c41",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8ad406e3-6d19-4c35-abe1-f4d1a184ff28"
        },
        "item": {
          "id": "3d0237fa-471c-4b95-863f-1aae08aa0a75",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ac403ab3-51b0-4330-bb53-6eef57b73fa8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac2ca48-78ed-459c-b556-5e64ff499ce4",
        "cursor": {
          "ref": "4432d93e-c4e6-4031-86dd-afe4d06ede61",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "db0dec68-d132-465d-9b59-d747a65adf25"
        },
        "item": {
          "id": "eac2ca48-78ed-459c-b556-5e64ff499ce4",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "433c3ce0-7d3c-4570-b1f0-3611574ff410",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 619,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}