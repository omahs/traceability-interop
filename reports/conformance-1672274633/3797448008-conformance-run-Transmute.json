{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c8b1a1e5-1e22-4396-9149-e9f384215b33",
        "name": "Clear Cache",
        "item": [
          {
            "id": "511514b0-6d36-4c51-a52b-8ec5a64373dc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8c2d688-5073-4fe9-ba1a-d0d29d581bf5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "51ad00fe-b9cb-4169-b89c-d411b1c1c261"
                }
              }
            ]
          },
          {
            "id": "c9214558-163f-48e6-9ac5-d5f6a6b9094a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "936bdec5-9518-4067-94f8-eb15d35296ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c5b21e13-aa90-40d5-88da-ebcdb1bd7b9a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9fdeab04-9eef-4865-9891-0d91dc3ec382",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d41b8528-ccb8-4ee7-bfe5-115a5bf45752",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4e338bd2-6b1f-4c0d-92ee-183bfb5eb459",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72e1a22c-d7cd-4151-93bb-822a6b3220f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54e43955-0e73-4617-8a61-93ae3f88c1d9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1dde4041-92ba-4af1-abd2-e6b4564ddf3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ea5395f-4263-45b5-ae6a-46ac2172736e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93c824e5-86f4-4eed-baee-e083f14a0b47",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "147c768e-2364-40d6-a893-996117c33bc7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16574c00-5e88-43b0-aa99-a34c774292dd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "37d4d45b-e63c-4602-aa77-90540c5d6a16"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69868c3b-7050-4cfa-a310-c1d0ade048e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fa624f1-8d76-4142-90b1-6d5596c80c73"
            }
          }
        ]
      },
      {
        "id": "641ad9ab-d9d8-4863-81d9-8354edd4b94f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d4f6485e-9a1d-45c9-83bf-c88f82b827c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c0e8f7d0-eb15-45fe-878c-47989aabdaf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bff6a48-9f06-44ab-85be-1a91b9dd465b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771b8634-9339-4a41-b312-681d22b6d442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53710ab6-5832-40bc-8402-f16e9083439d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28290e5-ee7e-43b3-ab8f-4d33855d2b5d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f97d55-6800-45c0-89f0-9767665ac72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80e2809e-e6ea-4f1c-971c-f7ed4b4c6ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee282a4-d6d8-4ee1-8e6a-25f93e9bf791",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65a5025-a43e-4e2b-abe6-ca3e719d085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3afe7614-f5ab-4414-8925-eeb4185f75d4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff6a576b-6e69-4a3a-b656-3e1def74e60b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5cf4163-5452-4ec1-8a8b-98502c86949f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f25a69-ec9a-4183-a668-f609c7e12998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27c4e24d-902b-47eb-b5fb-ec3b13ff8695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c84c51-1be3-401f-8d12-10dbc8efe654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa4ac4e-6547-48f4-ad49-73db56a00a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d5f0fd-730d-497b-97b0-637a6964d827",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d798519-52e8-4521-a866-ca1357e97aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9142a3d-c7e0-4f07-a2a4-b795742a9d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c33116-824a-4f09-9297-72003ecde8cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "352c8825-3867-4556-ac2f-7ad70466e348"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3f3c66c-2661-4030-bf8a-a89d8cf94e4a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a1df809-8703-4610-a957-08de3b545782",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a7d200d-e3e8-4140-adee-bdbc5d40d666",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3c611ca8-6a33-487e-94a7-3d8eae6c86ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d3416fd-6066-4148-a16f-ff738580a727",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b436d5f4-c932-43b0-8c30-368cebcc3be3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "deb00fc5-d6e0-4d29-be20-9729a02d8a74",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c07d707d-c23c-40e3-b5e1-5e4a1687c43c"
            }
          }
        ]
      },
      {
        "id": "56ca618a-d81c-47cd-a074-ca49b1d4fe5c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c8bf4243-cba3-4d4e-941a-9007ee4e3818",
            "name": "Negative Testing",
            "item": [
              {
                "id": "254d20e5-830e-4bc4-8a9d-fc69370e94e9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "52d861a5-fdc9-4fa5-a8bd-e05642573735",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879741b2-8f55-4374-aba3-54a2af6ebf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "397fbcb2-dd30-4bdf-9977-8facee0fd093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e9f35a-abfd-4b86-946b-ee80c8179cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "330d8f6d-b767-4bf4-a17c-67e1f4d2d5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8991ada-4452-4808-8d14-fdb90a1293a9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e700ad23-4f2b-428b-9bb9-ca06d1b18f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102ccaef-29b8-4e95-85da-569a7b511b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206ed733-2286-418f-9fae-f7eb1d7cda46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6626ff3-151b-40cd-aca4-12ddd71d84f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43552cba-33c2-411e-87ab-3275ac9af5f2",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4591254-3797-4192-9bf9-5945839e9058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d7c1ae-ca7a-46a1-aafb-697a9d00433a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d7e444-0219-4c55-800d-faee2765a1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4851add-31ec-48be-afb3-4addfbb90b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0777498-657c-4034-870e-1d881b0038c7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9535e40-05da-4020-b913-7f66bedd8202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c46bcb-e32e-498b-9017-ca02bd811271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bebbb0-d5f1-449b-8427-4dc690eeac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c47984b-530f-4685-962b-afa7a3683db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1526f11c-f391-48b7-a9de-923d6a2732e4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfc05f3-fb0b-4bb8-b606-5c41ca904fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4cb97c-42ad-4a16-9d4f-199aee4f5da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6c181d-8dcb-481f-a503-23213314233a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55c242a1-d49d-4ef7-a785-beb0de254737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57d449a3-05f7-4a9f-985b-ba70a7487562",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42d9639-2030-48d2-bb0f-782531e32544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d5ddd7-1a23-45e7-97e6-6dfe09f232bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605026db-2b7c-4c94-b78d-78cb2c761fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93884b7b-5625-48ce-be17-b8771d6c466c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b267c9fe-ae27-46bd-aa17-4a7abb04b061",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "355c24c9-f2fe-4a85-b966-87567de123cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0795712e-511c-452b-85b0-291270fd38c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8d55bc-b088-4708-bb66-17f0f0e3236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d457e12-e11e-412e-a121-defc7736038d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8eee04-896c-4973-9cef-9d962fd142d5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80968344-8ad8-4d33-b06e-91b8a2ef27a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e7912b-33c9-449f-9285-84ecdf0d7a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778d025a-2d7f-4eea-9480-a9aad0636646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "012a4d2f-e9dc-4336-a7b4-a1318c6be4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b0fa5a-67d4-4f20-8596-2b155ac27aa1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4abaa8-e914-475c-89f9-e8d130ab9c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d7518fc-7d38-43ad-bc89-fe8d93e0ab00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566d8b55-29da-4d5b-bcce-f5ac9f2673fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53074986-fc27-4240-a8ca-553b765aa1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9886d7-9707-49d0-abba-06e0be7c15fd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dd2451-f167-4601-9f9a-855307945c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff99b44-064d-462a-9665-40eb4067e19c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cdcb0c-41c4-4142-8b44-5646e9e217f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af5d2536-8ea6-435b-b789-7d0392ce3472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15b0b84-2897-4ca7-b682-f987cfa12041",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a37e15-f358-41d8-9594-cfe2aaf0a529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0f2958-bd48-486a-911c-af886112650a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507cc26a-12ff-427c-91fd-e0cbf18909b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18716136-eda6-4bd6-b547-71c7bae33a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72cb015-67b7-44a9-a444-b6a722dd5162",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cff34ed-b793-48e0-94e6-20a913810cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c08b1ce-baf3-4ebc-8496-1194529aa296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0948df5a-20b7-4c17-a114-32912f88754a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf80e70b-16df-45a6-8966-74d71e5c397a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d1729c-65c6-4067-95d0-aa78c691dede",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922b90e5-cb8e-4dcf-81e6-b47548e1753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737a023e-f270-4c14-8fa1-a2fbba02eb35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea90d18c-b8f9-4628-a2c3-6890878e50e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3211e4-ec3b-4618-9e69-3e217d206b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72c726f-9e5d-44b6-bead-24feb10e4253",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601ada5-4d2b-478a-8dd6-9b53b4b07339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29187985-60be-4bd3-ac0e-ce124157c19d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c404c28-347a-4c24-8943-0d7318f6db2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "57304ccd-d379-4af3-aba1-29b3dd2ee89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae49416e-12b6-4a1e-9fd9-13a81970cf8e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac73aedd-9928-417c-8e73-90319fd174de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1225433-36f5-41f6-b609-5f1fc4a23750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6dff79-68bf-4145-b015-bad166adc189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7835272-65a0-4370-886a-e85c00bccdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f144dda6-cfea-44d9-9d7b-188cbc93d334",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d58b14-f81c-44e1-8f4a-2ca305de5d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d30b3dc-187a-436b-90de-620bc4427d36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e30fd2-65ad-4315-b163-93eb0ca99cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78e03268-c35c-458b-aaf9-0256fcf9a1b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c390eb0-4496-4989-8d64-d4321d2bee15",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d073c41b-b793-4c5e-a5ea-e0acec1b6d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5983034-20b6-4db2-9944-4dec95b96273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8728af-26fb-4475-a6e5-51a4656157ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84765bcf-0062-4e85-bc02-90f78e3d3b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bef9d02-9754-4b87-94d2-fc38015ee714",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6cf363-fbee-4cf5-bf07-8076b37b22a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e43a84-974e-4f0e-9eda-ed4c8e923504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cbce1ca-30d9-462f-9dfa-134e91d900ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71b9b643-3d72-4aa5-9004-811acd9a77ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93592491-7555-436f-851f-9755e0ab652e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b37097-5dd6-441a-88ec-b39a3fd24abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729ca19d-1860-4d91-b6e2-433d88ecb0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97932863-6974-4f63-b58d-f64f26487cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6fabbf3-2731-4eb7-a095-8f6dab0e0040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fdef95-41a7-4828-bd99-1608fdcb7624",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de9edf1-ec02-48a5-ba69-fd5ad03ad16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d756f64c-8f06-4df4-bf95-f8e1fc8eefb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7191ec-5b28-4718-8054-5f3e98f157ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7d1dd3-26ac-4798-94c7-72fbd364ef65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51042238-6f1f-4c9f-8770-f166636c8fa5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9267190c-6272-4fc9-9159-6410ae1dbd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b86c581-9307-4a6c-8f34-1acfb14db532"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e0731a-4374-438d-8abf-6b939f374800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b42ea36-20d8-48a0-8495-add8db852000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9268e456-bb56-4b46-8e10-d029e1d5215c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374c6d96-a9cc-4af2-b68b-56a66d601b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cce17a-ad76-444e-bb60-a1ea27141d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d072ee3-6947-4bbd-b05f-f4f1d2a3e196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "befddb98-0d44-4aff-9d86-06a76d7ba526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228b0444-bbcc-44ef-8da4-6e9a82df44a0",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e7c4ed-c6ac-48b1-bffc-6e24af0ab0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6aa30e-a9ee-4dfd-a787-e37ea52c7884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a832f0-f5ea-452b-ba98-cc7b31de3b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48f6a24d-c70a-480a-ba7d-fb3404e48e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c4b764-d010-490e-b2f4-ce719472601f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320ecccf-1d0b-449e-8b1a-f741cb1f9c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce1779e4-53eb-46a5-bcc3-934d9f76d40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404175ac-335c-452d-a554-144384990f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c54532-6b35-4d5b-9623-b7e99689aa27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2354ad6a-1a92-474b-8c76-5191d3476827",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e47a4a-89ec-4f19-a21c-7f7a67a21fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63064fae-edf4-4013-a863-df28e36d0196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8d929a-3505-491b-b119-a89fd72ed53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17e5f901-f0f5-44cc-a11f-b41050ba9dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1cc8fc-1f17-4b2d-95e2-1bcd12046c29",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69381361-cafc-4cb1-a9bc-9ff71141ef1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f15da15-2d97-4504-8168-1a00b6c22fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15cb3d7-f501-40c2-a67e-5ded2fb76612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a5886e-13bf-4e05-acdb-ae456e606abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c141539-ca34-4304-9a61-4b4e7a44c573",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eadad59-6428-44c9-9734-58e62dd8578e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e385a17-1972-47aa-aad2-6a02803e3f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9360e1b1-32e0-4f7d-a727-e69d604d5663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9721c0fe-486b-49ef-af7c-53e4ff0efd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd40ea4a-81f5-4b72-b3d6-3e24d9ac13cf",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b088e145-ebbe-437d-a680-c82eee104814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9d2e04-5ff0-4732-910a-d1b69ac05df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee9c1b-4632-40f6-9294-7708e4d4486a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0151130e-a80e-41b5-aeb5-22c14e1eea6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39c6efe-7477-48a3-9737-0115e3e01d98",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b353fe-df08-404e-a043-eedf3d088a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d24eefe-d37e-41ca-af94-08f79d258c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f28f4b-5777-4305-8c26-894986ecd4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8acab1a8-ad1f-472f-b5e8-b79fd63f696e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a55fed6-d7f8-4d6b-b5ba-51159311cf47",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e146e18b-34f2-4300-ac29-194aed26f6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6de1b52-e553-4dfe-9f1f-aa605283270a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269613e3-81fd-4e3d-a347-69ef04de79d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a73b272-8f68-48ce-910d-12ddf67932cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51049249-6209-445e-a5f1-bfe462f0580e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e81f8d-82df-4a71-a6fd-c796874a0eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a8e675-6547-4fb5-9007-b95e49704d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a023597f-1716-4f35-9dc4-bd94187408c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5487d62-5a49-4427-8904-e4601d91096d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c436ff64-541b-4deb-a7ef-5b6a16163ada",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02156242-1e8b-424e-b9bc-b028a1671732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0f507e-ccec-4168-ba89-5325873b20de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8e70a8-2eee-4a48-a5cc-ef817f0929a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ff3dcd-3d9e-4963-a88d-e49d9eb0bfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e79dcd-f0c3-46ca-9771-aec5abd30967",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063e671b-bc52-4b77-b8e0-a96bcf63d88c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91eb0bd6-fde5-4866-853b-29a92616a2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be933ccb-da2e-466a-8579-5176f995d0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "887607c7-f9c3-412c-b242-0b16270b0b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e208bba-bd86-4a89-851d-8695595419cd",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af5d985-ea3b-4399-9628-2fc0c8fd5d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad59845-6b33-4c49-b221-8c035a6c8951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8979a5f-c051-432b-a5db-b34a553204b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec25072-d605-489a-8a39-ad921ab4a24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1c70a8-0220-43eb-95c3-8e08304c50ac",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984da1af-4ca4-446a-81d2-37dab01b8340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53b9c4a-1980-4e76-9963-2eaaaa0c2aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16e4247-ecef-4875-8062-3cf16e1845e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5973ced0-8ac3-4c5c-b76c-019b39b24a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30063100-7e85-4522-9c15-f752acedb88e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c74c41c-ef26-4c36-8bcf-22baa818eff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4f8af0-8137-43a8-90a5-eb6ca33e6bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3db7e22-1ec8-4df9-b00d-d320048ca138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "470c6aff-2655-4e0a-8364-c6545dcf2496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f77c1ea-f808-4071-be53-0ab3f6b25b95",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2158efd-7d35-460f-8ba0-800758b9574c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd9f8d71-86b8-4874-80d0-78d5b55fca13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9702a13d-9b16-4c77-b033-16ae0ceaa86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "169b2cc8-a6e0-4766-a8b4-ba668243a52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0522e7ea-c24b-4e97-9bd6-7a09f37a25dc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfbed23-9117-40cc-96bc-475883b87cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21a352b0-2986-42cc-9b17-0db350d3eaba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a188cc7-c2e8-472a-8346-628fa0b5ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0804826a-2e4c-487b-9b9a-2bced61c3782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936191f7-0c5b-42e1-ab79-bb6adc5ff8fc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4b011c-4230-4473-855f-6a109d14e343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b95198-a520-42e8-b7aa-cbcd16bc8684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ffee241-b11d-413e-a200-1df31ce7b519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2232b86c-fcb5-4c60-9fb2-a796d6b3818b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e91bc6d-cdad-482c-83ef-f60723451921",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1ac53b-59a3-47dc-9302-964bbceb8673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f220588a-a352-48ea-b2eb-e230e5af4490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c670c460-7680-4e97-94ec-d9d23276a8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "525e5c09-347e-4ff2-ae4e-54748e40eb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa9769c-cc19-4348-8d0c-a0c6194e8c77",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e88299-36fe-48f1-aebb-369bbb3ba617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9405be-23a5-4ca3-8cc1-79d4dc9e6cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d1be68-bc43-4bf6-b4a0-e9f1db39f23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb99cfc-c9ea-4ada-826d-13297ed67556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67a6d19-a9f4-47be-89e8-34c04bce3355",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac0b49f-1fa0-4fcc-a4f6-fe05cb410bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b26694d-1d59-4f03-8387-c8b625629ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7ccaef-b09e-458a-aad1-ae97dd36e8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba6afcbd-4de7-4f81-aa3d-07dc0154a47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449ce112-3df1-479e-b4e6-482f65f1d421",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e0f5cd-c5d5-437a-96ac-ed01e2007871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d0fd6e-a2dd-4fee-ba54-6efd5cbbd62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec692c5e-63f5-4ebe-8671-baad38939ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2069e46c-1bce-47de-9281-02f212906689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff44328-96dd-4680-a24f-03f507003a63",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5626fb4e-8cec-4604-80fa-9a17ada2ba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697dfe3f-7f41-4293-8370-8793787dafce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3173c6f-f85f-4fea-a834-7fdec06b5e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "03de8354-b7d5-4d53-b8ee-eb225d32c3c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7f800d-acc6-4f1c-91a9-bdf7f66f9e1e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b51af72-b47e-4275-b25b-71443d735ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86364f88-7af4-48de-bb99-fcbb36698f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b14699-5647-4134-bed7-8f1d31e83de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5647dc-1cc6-464a-9912-2be563ddcdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1802b6-7868-4c36-abef-095b70b725b6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73ad728-7e47-4c71-b9ea-7810c3f9af7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7516f7c9-f1b5-45a1-b1c2-de6519b29c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24270241-b8a9-4837-9a1b-901cfdfa6665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0cc6ef-9590-4c5f-8dc0-b25f58a56e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2023c0-d8aa-46f7-95e8-31b34769e9b4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb74a9c-f882-4094-bf74-c9bf09d9eacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d38aba-5484-458c-887b-3ff262bcdb47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730c8052-6667-44d8-aca7-01b4bbf4346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "930ec12e-7aa0-4e9e-ade5-c94176434c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8025a363-1f40-4eed-bbf3-c7d6d0e91718",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d07e187-90d1-4f6c-8240-6e622d98cdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db98ff8-5c13-4aa8-be03-e21a4f95fa1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc71854-d594-4d85-a73b-bfc9748e21fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71497db7-2f9b-4bc5-8cce-d30cb4fad775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c863a3a4-2398-450a-bdc5-a5e5c7da27e8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c269ba3b-ce81-4258-8415-d84740fe404e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3057de-92b0-4e71-8ffc-4b82f05b5d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a706eb8-36a4-4cde-9494-2b38b8463702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cddf719-4c94-4227-835d-c8ba5d798d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb222cc7-11ed-4db3-a2ef-ebf11f73cce5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e3f7fb-1e02-4f74-9102-e239a8394605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c42eac-1ecf-4fda-b8ef-29bbe589917f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f0d378-ee39-4665-a842-e4abe817bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04858f24-9f68-41aa-baf8-8d6aef87b361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355162f0-0079-48b0-b67d-345b8923ce39",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a29669-4d85-42fd-a898-13148145f424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da26426-e179-46c5-ac70-d58e357e30f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5acd8f-b25d-44e6-9415-8d3fec871ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6d2dba-2d55-44b2-92e0-9ac20f5b6825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf42596-98f6-4e38-8fb3-6e8471557bce",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12190f9d-8502-41ac-9786-d9ce25424831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b4edac-c4ac-448b-9415-7da2ff500a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1570be9c-2b8c-4709-ac43-a417b33059f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d264f49-cc6c-481d-a082-fe394f670c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8d4b38-4d40-46a5-a9f0-2fc931b03852",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af65a18c-4066-4dee-9f0a-68d70da89a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d5ebde-2716-4544-ab22-a75344c5b748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ea41d6-6ed3-4a3c-92dd-9def424ce984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2282ceaf-b7e2-417b-9353-777fa71b4123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4a0209-4268-4da5-b97f-69158e67dd43",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4791188-efec-410d-9ba4-f02d5869d328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04b1dd0f-0fd3-482b-b6f8-ef4bd2be6729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bffb3e-7467-4813-a8c1-037596160caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "514539e6-1b43-4079-84f0-cb355d15442a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdee797b-d842-4055-96a8-79253e6ce30d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7204f9-defe-4618-bc24-a0b978b2acb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644ceda4-0ffc-44dd-b220-e17a6a467ef0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a145ac2f-164d-4abc-bdd7-0c6eb6f2716b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64009ca9-0c1d-4a2b-9a50-08c7dae899ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21950aee-a88c-4da4-8ea7-b05f4e8f619c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64ec337-be6d-4433-919f-ba1524ef84ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2739d90-3ae9-4a17-b03c-b6a096a8c6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc531fe-5f22-4856-96bc-1870deb196ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9948916e-9d16-40af-baca-2fece62d3335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4c3580-3dd6-4013-9a0a-744b57a31a16",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dfe77a-51de-4e09-9082-a3367731fb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304c800b-f9e8-40a4-86de-92b0e8791c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2269edf5-613d-47a7-ace3-88ddbd7b9ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da3a55be-0f87-4a86-90f7-ebf4740dd5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba45144a-c06a-46c0-b1e5-1e8dd205ffff",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52f7362-6f40-4539-8389-72da54030058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496b7feb-741a-419f-8e39-4d5b84141223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa37dc6-7f33-4515-8ba7-694a483f5946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec972ac-cc76-4a1c-a84a-6b10a26b3ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78e3215-fd5b-4004-88ef-197320659d82",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a466e51-25b1-4b8b-9d76-da4d4b9f5b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae50593-1fc8-45cc-b320-dd0d2c1e230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b14039a-980e-4f75-9914-d2ebc7969b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e952706-6d56-43a0-b9d4-d57d3fc4f029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9c433f-ea20-4d22-aff8-9daa38129a1a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5649ebc3-6e8e-41a0-ad0a-16d2811791fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c880f7-d367-420b-ad3d-591f088ca468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9747ee77-0832-478c-bfda-fcd07f3bc04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "60b9f43e-3399-41f9-9667-4db51c6225e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15976413-d0df-4578-8daf-d53b4b49ed55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c0c41f-577c-480f-82dd-f279d9102c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d58126-3be5-4c64-a809-3ec4fbce63d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2b9e8d-2e09-4b7a-9f77-49bd79573e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e90b2021-6d34-436c-8104-257705a5e0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b1b14-abcb-4f3b-9e63-3d5f5414dd28",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca995bc-5bec-4b66-b9f2-b0f0e11f15b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce998b0d-71d3-4237-b2d1-b82e19e5ae1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d42251-ac03-4d55-802d-3b8f18e39834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "404f4e12-5c2e-41e7-b09e-a7b1104fbf5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a366169-5112-4bb0-a117-b2257b25dbeb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e77e377-ffb7-4629-bf65-1832c52d7405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aadd27-e208-4e1b-b005-b4d8ce1d4dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef616760-a7d4-462b-96c9-a09b60d94486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff17d7f6-0db9-4022-85d3-7d9f070955e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab7ac2e-f609-42f2-9557-db301f1711d9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d17be0-95b0-4acf-8ab4-20bebab84031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a86628-e2e9-49fc-b811-0caad55f20f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ac7984-b95e-4fb9-8c33-6f106824c8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc03ecc-de95-4e08-9bed-3e029db35818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d728e4-8a5c-49d2-8d84-59eb928017cb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3f9177-e5b2-4cc3-a75c-a642bd63ce06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca6961b9-abd4-4662-b414-009ec6eb48e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63dbc8a-ff87-4ee5-b251-84ce64892472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b13a4fb-3223-4c91-83d1-63c7802ac2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a18383-42c8-4614-a2e3-492554461685",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c1c54a-a271-42de-996a-4531df987cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18ec5ce8-2431-4740-9d5a-221c5aa0dc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70f44c9-7fb3-4664-bb1b-12a5575286c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a737174f-b570-444d-9a47-ca4aa59fdbcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adfddfd-b9fb-4c2e-8c86-07d219825812",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e1eb6-fdef-4c54-8f4d-35b3a366d385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d84b20f-b850-443b-b30f-6343052b3aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10db3f03-3973-4386-834d-b6cff267e9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "440ad299-0761-4423-9db9-d8f92c206664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf857626-5024-409b-bd2a-79d8ec5991bb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40460574-e87c-4d80-8822-b939cf45f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1d8dfd-8e76-4ea3-88e7-022ef93192d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8f3ecd-98d6-4dc7-a653-71debf8d5be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b67ef4e-8606-4f86-9126-fd4d5aa767c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc549048-1e24-45e1-81f8-ee49640f56de",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6f9e57-b1c6-47dc-a61d-a9fcd6ac8e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2211aac8-1c86-4d1a-827e-301075cd2437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377c053b-9d07-4f85-b420-d5f90e71d179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b471f0d-16a9-480d-affa-719029fe5d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a180a9f-ed3f-4a23-a0f8-c84c8edeff73",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cb19f9-a02f-4fb3-b2a1-06461d8b2f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938ed2bb-f3c6-4869-8395-3e3a5e1c9819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f1e715-214d-4410-96ce-e4f08d2d1632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7af672-5bcf-4735-9476-486ef4a15b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c97653-3517-4852-9a39-4032e1033335",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a10ea4-88ad-4469-8e27-d1344dda1a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4cab71-8e22-4c30-94d9-dee0567ff199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e3e590-321b-4eed-8322-0a9ff3f6ef67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92db7f9c-282d-4c51-aed3-8508a790f5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b395a5de-f006-4f85-802a-d041b838722a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac0e20b-1069-4e0a-b6d4-e95bddf92a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6eccfba-e276-4d23-b132-3074c32611bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e37a7a-2db6-4d3b-a47b-d46bd387deaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac8b436-2d94-483e-8b51-2812ac57399c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79235ed-8821-4dd2-a283-7f02b83a9cc6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b103f05-03b3-4e4e-baf8-b185f651ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc48cfc-cdf7-4959-a47d-e2f2a298e343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a3f7e7-4e31-41e2-8c7f-11b1b4e61db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "260e3c1f-2234-4316-916f-0c956efc12b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d7cff9-63e2-42a0-bfd2-80a43b4fafdf",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08f9989-2f69-43c1-91a7-c15db95d658e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaa6605-e22c-46a4-8fa2-7db2167e8eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0af788f-f5a9-4ec5-82a8-82f6f105eb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6c0404-6586-4852-bf8b-294175874daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3320d95e-f209-45bb-9980-528ad07f37a7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f3174c-4531-4864-b794-625c5d85fba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef93162-eef9-4339-add6-a7066601ca3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dacb69e-aa63-4f0f-b946-6e54bd9339b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c16071d-6802-4ff7-aa7c-f1a62dbc86b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d96a72-a14a-481e-a3f1-d8a12f271728",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71a91be-646e-4456-85c9-8e7c15e59143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332f6d5f-4c26-40e1-9fc6-5629be1adda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4702fdbb-6065-4422-9750-c9dcc6f6b131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f5d2ddf-6d43-4baa-a34d-922b7a264ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfeb6ee-2e30-4e40-8e99-fade545d624c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff52509-ff6e-461c-8d6b-a211ac9fabc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22dd269-ec41-49cc-b01d-49ab78a22f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b758bc31-bfc8-4161-9215-fa130d3c0d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a321e975-ce27-41cd-bcd1-84d4a9cab262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacf6420-4ab6-440f-9b03-fb0d3594c7b6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81f8d83-0f24-4152-8c58-fc3751c311dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb8b884-9b26-46db-9f87-d88dcc7e4192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7b7d69-a4df-43b3-8464-c3ed07e4dd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff6fc25-4262-4c6e-b231-c7bf68dd3edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454a9076-5b6e-4418-8fd5-8d709701f9cf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6afebe-e22f-4069-9a3a-6dcde062a29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f7b9e9-daa1-43e1-89fb-5af14db14fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bcf765d-2385-4b9c-99bf-3e78d514cb91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2454ee79-344e-43cc-9a29-982786aca7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b6e54f-e611-445d-8e21-055e2971bf1a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f782417e-b3fe-4734-91dc-724042067525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80dffe38-92ca-4d99-a7bd-033ee72e90ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27841934-0afd-4386-8bfe-2dd0f9205c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad48518f-b1a1-4d7d-83e9-bb6bbe20ec94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad00daf-f8ff-4d15-8695-0961ebf14a53",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ad743a-cc19-44bd-a0d8-7b09f642d0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6b5f02-6f22-4050-bc43-bc4aa5987923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312f5f28-5d21-4f47-a1ec-42645836cef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef61a87-e33e-4cd4-9214-d019f9a0ac7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c04cc16-0489-442f-8007-dbe2bb0107af",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca94cf86-0520-4d09-a550-ba817f20f4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390d7d59-72df-43f2-8f57-5b5d5cf945d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f108f21-55a6-4c71-a7cb-c14ecf7251e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e63766f-030f-456e-98b2-c0744964c05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8becab67-7d48-4a68-a7b5-14f29d68eef2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3c672c-ca4b-4fec-b36d-9512c57b8aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f264c401-ba91-45f8-a3fa-8a8b87b82055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae95397-83b1-4169-9018-6ae08ac54b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "790b8cf2-e4de-485d-a987-560521f0384c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186ba614-3d55-4b8f-9b6d-9d8c1b929d2b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdcdd7e2-c3bf-4d67-8a36-7927ca0d307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7423af83-f679-489e-b63d-2cc465ca92fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03386d35-91ec-4035-bf0b-cd3d33ea2730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ab7d4d-7a5b-4268-b5a2-6fd53b7b5080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6983811d-9325-482c-8378-cf75ad15ed33",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60536de6-1a7d-49b6-9e6b-fcca58078cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7ca615-99b9-4b59-9ae7-ebfff7a0a203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b952429-f083-4354-bfeb-56517415b6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dae79931-7839-4f8a-befa-a1dd86131155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9175bf4-c707-4d9f-968c-1f42e1cd05fa",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd043e9-5ade-45b9-9043-aa22cbd53387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8c8b236-d625-4ed9-b40f-e172827c150f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571922a4-7575-41a3-b3a8-1621671a54a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eef00d4-b36e-4318-8a6c-771a9b9f78a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc71b116-24fd-40f7-b2d8-a228c5cc5188",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b1d3f6-4812-47c6-b488-8a6934ccaa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a59a67a-c9bc-415e-b966-f0312060a52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d27b8e-19c6-496f-b3bb-081b2ade2d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f85bc744-b59b-4b30-adba-8511801758ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644f931a-f4a5-4667-a5ef-c2f25403c2ab",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b850ee-1984-44f8-bd5e-11b34c50c69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3262639d-1214-429c-8d13-3dc7a8dcd6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d418060-dfee-4e4c-85be-94168cd8cc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "822dcaba-cadb-4ee4-bc94-fd162b87a425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cff771-4713-4e76-9670-b294b0533757",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6503e81-7229-43b3-a621-58fed7aa5369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc66e2b-7c60-43f6-9f8c-aa86c1bd3480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c3587f-f9ef-4cc1-9c6c-b37817315687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bc7314-445b-49fc-b0e8-c41066c2cb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813ed349-ccd1-45ef-9338-ec261d1518c4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bea9ee3-0fe9-47cf-a837-7287f1bf042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dc6dd9-9b0e-4f4e-b2f2-29795da9f6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34639267-5e9d-41f3-99a6-660e81f1196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbf8d7c-2f08-4981-80c4-b662854f46b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db36104-c601-4281-917d-77e884ad009d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d5b1cb-a3a1-4828-b177-4a8e4870b746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc7f38e-a089-4ada-aeef-9a9090a6efd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5317917-e5fc-493e-8db3-b6f9b7fdd62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6412ae2a-3b48-45ff-a5dc-aed735474ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2684d1ed-177b-4a62-96f4-abe1740d5d9a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1c171b-52f2-4121-b1d1-98b9898de925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adab4849-784f-41dc-b467-5232ca10bc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11b63e4-3b7d-4d27-bea8-c86094738abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5d176f-4b95-430f-9e5e-d9a7583647b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e453249-4060-4ec3-9c4f-6497ba41065d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a613b21-53fb-4cb0-ab36-c22983e4dc68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0200ea0a-a477-4dcb-a64b-bf5a735080f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7c9607-bf4c-49b8-bd9f-668591cea052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "96d0adb5-a721-40f5-8bc2-0ea804b05662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697e3d74-6d43-4e66-bc07-cf9ac361a712",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f401496-717f-44bd-a585-624d09520819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "26c6419a-22f2-4f27-b585-4058400b8ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936f6052-2270-459f-b0d3-0391795ec9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6c2227-d151-47b5-af3e-8e89e67b236a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "562acd26-9f24-4f43-8919-6af7f5462810",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15c081cd-29bf-45e2-914a-994e08c49d1e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b87111-e37c-40b2-bad4-234005b3ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b6e229b6-c9a5-4c85-8326-53405a572006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef921cc-ebaa-4c2d-8598-056b87152d97",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "6058b6d9-833f-4c54-81ce-eaa59c31f99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af68a8d2-6b86-4041-8b68-a8994ae7e982",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dc9809-8142-4ed3-98a2-c1e5a8e81efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df52e0cc-21ae-4b3f-94e2-e0e318dabf3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9336b2d-3a59-458b-b5fb-9cfde71849cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "742e7c6a-9892-4b85-8809-3ef0f7539ba3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d927a6eb-131e-4b1b-9d21-6f345f43df32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ed3823f3-cd46-4886-b44f-402638464adb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0d53502-9d7e-4c47-b39a-ba0f73384253",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab52926c-5be8-46d8-b380-c0f0755c1953"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "edde2279-2230-424b-bbee-3f8dc42ca764",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9961042a-56f5-4014-8233-82205cc81b67"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ecd41fe-7e68-4aae-a4c7-d3d78714f722",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f9bfd297-5f14-47e9-a72b-a42e38f104d7"
                }
              }
            ]
          },
          {
            "id": "59778d97-9649-41f6-8f21-45bd40e18ef6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f0ded5ce-adf4-4045-819e-8a6c545c84fb",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2a8e2b1-124c-47d4-8b1f-eb1458a3c2e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1575895-ed05-453b-b440-97f98c317559"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb53fb10-f8dc-4a8f-aa04-4e8b70b7ef43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96ee02a7-4e36-4f82-942c-37fc5bcb98c7"
                    }
                  }
                ]
              },
              {
                "id": "3bcebe6b-65e0-452e-b4b5-53dc3eb1b67b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1436089-da2c-4bf4-8062-4d0ebc2c9d97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fa20cf4-4b51-4e17-978f-bba9acc98976"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69c2d0ee-49f2-404b-a102-4275dcceb4a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "caeb2d5d-72e0-4cc1-b17d-dfe080a1071c"
                    }
                  }
                ]
              },
              {
                "id": "294ecef1-341a-43f9-8f77-64e133d97b1b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6edecb09-139f-4e60-88c0-de0080fbe999",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fa1b175-7531-428c-b07c-d7e11c25be7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f29d52b-e5a8-4959-bc33-0732e903927a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "561f65f8-e035-4214-9fab-9c98a2d7816d"
                    }
                  }
                ]
              },
              {
                "id": "8c5b50ce-0e94-4f94-9723-464f2a8f01cf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "550af1eb-857e-45b5-aec8-2e0bd575ccfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bdec87d7-c826-4590-82b6-7a07445687a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d36dd1a-c8ae-4369-9a57-e7b47893485d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7dbf0255-80c0-4cf2-90aa-ee49fe8d62cb"
                    }
                  }
                ]
              },
              {
                "id": "3b27a582-18d7-42ea-b086-81d085ec4473",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "865fa96b-f8f5-48af-865f-e2537e9dd6ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4935c1d2-8e97-4204-ab6d-c56ac0b22e33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad7c2478-98cf-4be1-884c-83ec403752d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4770b65b-ec70-4830-807c-919cdb55e6c1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4eeeb22-3138-4cea-b555-1094a1018fe8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03f4f83e-1162-480f-a8db-f40d3549efde"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c5369af-2512-4740-99c5-0adbee7d4573",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8c8f3e4-a74e-47a4-afbd-18f38124347e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "abc6bb99-8d22-48db-a5c7-8a9f1499c25c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aa8c2794-ad49-4a56-b52d-50b2cce5c330"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2262c0b-3cc7-45a0-a900-366be16940df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62a84272-4c02-4fe9-a3ba-19e923d6623b"
            }
          }
        ]
      },
      {
        "id": "793292ac-f43b-48d8-8135-e2fe00b2eff0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "14e2f233-92c9-46df-88c8-69948da963d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb43f18e-ba1d-4724-a658-23974c642ff1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "858fa05d-dc4e-4f58-ad46-af09dccfc827",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d71fe7-ca33-4ca2-b7bc-ff7b5edca336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf78f91-6bf9-4069-bd31-66c6f550086a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ac0de6-6f84-4683-a19c-b99a0a49d292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9d885a-e7a4-4ec6-9b54-ae69a927a55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dff0f4-5fed-4f87-a6d4-c607b9a65e96",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bfe4d9-c1bf-4dbf-93b3-5f2c72b09e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90732e0-c8ac-4429-92d2-c771a0ae7609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee7ce7b-b7a9-42f6-a495-a6db1f747590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a5ba02-94d6-4b8c-a2e8-d60a617e776a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d01e6420-570b-4bf7-8218-c6db46fc9636",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "097abb85-f550-469e-8a87-6eca1ac98221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e188ea4-f3c4-4091-8cfb-1e6802cc3ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9179a9f-3e51-4219-bce7-5169c070d0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0724d32a-f70c-4c88-abbc-cf161ef07b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68192926-93f3-4b8f-ae88-ae8b8899a8af",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa2528b-8cec-4bd9-a9c1-0e7f68a5d154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c827533-f157-4d15-91a1-36bfc198fc1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449c7672-f243-4deb-b40a-03c499974794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "828ef0dd-3f6f-4344-8947-6e50be65072b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b76dda-345b-467d-8ca3-dd3548c76f88",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3275d329-2747-46b4-a82d-d171c51d78a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0467ffa-de2c-4fad-b269-8a388508f1af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13805a63-3c16-4037-b935-206d00e68eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a25267-1484-4c34-ba04-97a07dcac8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cd240c-99c3-4dca-bf36-e7357ffd2614",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a30d637-2cac-4ffe-aa79-788ebe1a9bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbee5f5-4da2-48e1-9405-1c7264f1f04a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48203bac-6cb9-4400-a340-a036603a5b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bebdd4b8-72e5-4fce-b92b-79c127a98957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1f4d60-9100-4a73-9749-ee570a6b809f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9135acc4-c047-430d-99bc-fa43e4d08804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235bdfc2-7090-4656-8f60-c59f6311e027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00322e8e-fc6f-41b4-b788-5368b57e3114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb43930-2e48-44c8-8560-f6d2b9556489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35b9518-80b8-4610-af4a-f030a798a033",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe0dd1d-9794-4a37-a88e-1dff96481b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f8f9c6-e6fb-46a6-81a2-d74af0e7381a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1041689-caca-40a7-8762-647ae42911ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d811e38d-cb45-49d9-9b31-3a2fa95744e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3080f8-30bb-492c-b8b7-f2707cbdf8a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af02c2fb-f525-4c7a-8007-84c3881962c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c83f3a-c2b3-4593-a47a-e7f90a940459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4a97ee-b24a-47ba-bfbd-bdd2ce3326ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f27029a1-f566-478a-966f-e31fd4cef1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98c6b19-1f4c-41f3-87f3-2bb21bb1b289",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5063c23-f493-4ee2-8d22-65a30f9010ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38885442-69a7-49ba-b1b6-fbe01205f38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a765e7dd-a54a-45a3-b465-365e831eceb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db040c43-b996-4066-ba75-55d9671e30e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e303877-9150-4185-b3cb-f4b5521cfc91",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de618f4-8a61-42d6-87a1-08b91bea061e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd1d3abd-e096-49a7-b1f5-8dbdd77cb3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5eec71-b4d4-408b-a035-1c6b6d46edd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "18a381f6-2d5c-41f2-8785-d8640b98a8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655716e0-c79f-4c8f-a13a-9a05db073669",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c40677-2320-4560-92cb-491743f6e033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43a7866-dc5f-47b8-979a-c751398b224c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee54a5c-334e-462c-9713-e79b3b267e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c13673b9-348a-40e1-8f48-b454ea252e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f100717a-fb27-4304-bfd6-5e65b893d605",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3437290-7b35-4154-81d5-7780d8a54a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe487c5b-d583-48c8-becb-a79f7f48a33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec1c39c-43f1-45a5-89fc-b7a952ad373d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfeff784-e9bb-4572-af75-5f8728c7e72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f59950-feb1-45a1-8ff8-66b131c37a3f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f914b3-a9ed-46bd-96b2-14c23071b75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed33e17-f04c-42dd-8e76-f4ba15324fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34aeb475-fb95-4560-bb3d-0f17250855b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "886b819a-667d-413c-813f-e007a59e27b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4442090-0cc4-481e-b1f7-2934cb1613e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840badd6-4e32-416d-80a8-e16c9caec61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d35b9c-00e1-4ace-9e37-8014e3fe36fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621f991a-f150-4c61-8a38-a938e2d07af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f52562-33ae-492b-94f7-e04f2a27066c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca76cb66-146c-4c00-9f99-30e6db66df65",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd62f303-afba-494f-b54d-7aecb5e9ecdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13a22d51-8f91-4270-9b41-d42c88dc6056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8017466d-8fae-4652-9707-6468e2c420eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "84df1c13-ae9c-4419-a012-0034de7c14aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbf2965-908e-4746-baf4-aa953124051b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b10876b-ea9b-4ff9-a8ef-0b9c4dee0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f4941a-4c75-4b3d-8e8c-3c14c3145c93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a761358f-05db-406d-818a-b029f55250fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c25d8396-a0ac-4a21-8ad0-f2fbf22a467f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9908c2e-fcc2-4102-9a6c-74be3d977a10",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8a9621-0f69-4319-98c3-acada38a8d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a868ff4c-4a40-4aeb-be45-60197d36e22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66536a4b-f10f-43eb-b17c-c878ed24e921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dfd1d1-4409-4970-a6db-3fc478a80d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d8d7a6-e821-4358-be25-5c91bdd7d984",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5407681-5a31-427c-a400-f335a7b52404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f986da-a172-407b-836f-0847d7407291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16996c83-72e8-42b0-96f4-83231b5c4e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7183f457-57a0-4005-a889-325c55124c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6b5c16-cd09-4385-a3ed-e3559cb1f326",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd5ea0c-3e37-4465-9aeb-6b5bc0f83d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6fad05-0c9d-4958-ab43-036939b37731"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c571e74-a4d3-4b80-ad36-dc2eda7d9c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66273af8-a685-403e-a1af-096edf2820a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d824e837-0705-4d37-96dd-bc3e06ec7666",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2d917c-4643-4f6f-a491-7523a8a9933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b7565e-9699-4933-a4ab-20c7bea7f61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313d74f2-e5f9-44fa-9653-8c328702f1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9b41e8-f263-4c4a-a426-9e9a3cb90e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fb6774-f5ee-4b07-9e79-d32f64ef2aee",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bac2f3-8ed8-4565-9d14-2d3d3bb0e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf05dd8-a0f7-4c8c-af4b-873bda92b353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4867db-b454-48d7-bd77-9169c802ffd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93a672c5-bc75-474f-b57e-4c0708708903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f944d17-bc4e-4f72-97a6-9e03e025da49",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdfdc28-d4fd-4d8d-830a-2b07b0f4a055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a71f956-00cb-43b2-b0e8-888c204f3780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e9ae1e-b660-41b8-b58d-2178a7730ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c97c287-929c-4bed-a096-422abbd8f86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb80c5b-c731-4642-9209-d4c1e72a67d5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dadc39a-6f3f-45f7-b67f-1bdeaf978d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8f2eed-6838-4523-83c7-6621775b2535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232f94fc-458a-4f80-ba40-ee660f518cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "509db83f-b6b5-4455-ad4a-895a458af031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee3dc9c6-f7ae-4f5e-b736-f4a3dd33d006",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb37ae10-9f66-485c-8aac-c83f114f276f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9865f1b-142c-4c6b-a81e-ec35e33428a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cb8d5d-fe19-4ff0-83af-83cffb36d20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93dd0942-0169-4401-b76a-bf794fd81498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eae551-505f-416c-b536-f509cf818f7a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab07260b-a455-4ee7-88a4-1b38ad4eb0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47c885f-a7f4-44f1-94c6-2bdf765df10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41879a2-a40b-400c-8774-01b8299d0a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4621aa-86d7-4202-b29e-2d20574d3444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f8ae64-fffb-411e-b27d-4bb194fae9f5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79bdde4-6848-4944-94e4-d51c8b226a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5bc955-933b-4346-812f-76b782d17997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710ae87f-f111-4f75-a7ac-9a46bb26d7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdbe612f-63a2-46c0-9958-cf3088cc9ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03646a42-aade-45c5-bf98-b7c355269a1f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "749b445d-f017-4b90-bc98-f360d54bcd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74aab653-ca80-4998-acb5-a0007bc244a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3530ae36-61c8-4bfb-98b9-f0ad58aef033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c29a5d6-b657-46e9-a5a1-dd0197ebd562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5ef26f-1e43-46e5-b0c8-3830ef4b3dd7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c471aaa-b1a3-4060-9b7d-ee656e3e2c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80018301-4b32-4da6-bcff-b6acefb792e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55b029f-84b8-4178-bb4b-ff757eb60643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aea769c-ab7a-4551-b686-451359ba0b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3ac312-90a9-4ded-b064-fd9e890df946",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38983888-b42b-4d28-a07a-b81cad7eff1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87700a4c-773a-4f35-a54e-90af2e4b0761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a94c84-9b7e-4c56-b682-a64c5fc563c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec57c6b-a9f2-4337-93b0-f337240d4629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbabdf9e-848c-4743-94ca-fa37a5ecaa96",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f4b8fb-53a2-49c7-bc4f-27c38dfd01d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee54de54-4a2a-460b-9f36-f0fd4bb41cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad96851-8560-4ce0-935c-a10ac451f277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "453f668d-eeee-4d1e-a4d4-c4b7823de6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9538fa29-fd40-4751-a8df-39023c869d1b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bc2733-06e0-4c2f-863f-6e0bf81dd00a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8786a2-ea6d-4259-a188-db938927e156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848efd37-3be3-4031-acf8-1428da2ace23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4336dc8b-f4fc-484f-9b8d-b71436e819f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2191face-0d7f-4f46-90a1-d76bf1f0c72d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8883331f-055c-40eb-b46b-713f5191027d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf503288-ee13-4309-a643-227dc5e0978c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df432ed5-1252-4623-afc9-981fa66bd5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2d577a-fc32-4722-b722-e8e2ab0db6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ab8dfb2-302f-4be3-8762-3e3bb2b230d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2d5e19-e5dc-48be-a013-da0893e9b568",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864a9ea9-94bf-4778-8d87-442f0cd8ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "26efbaf0-49eb-44f8-9949-56553daa361f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a847973a-eeb3-489f-976d-0324328178cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "992c090d-d8ec-4b3c-9f79-57be870cd58a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be34c4c6-2b77-47fa-b490-ddf6f497c2aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f14c1a4f-d80f-4b39-b5b2-6082a0217347"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33dcf18d-98d4-4e5b-b3bf-8c8540bc0b4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "477fb33f-e703-41fe-81a7-476abbc43a26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c088e7e-b5c0-4d74-9aef-08448c6f07ab",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5582ea6-23ec-42ad-8bcc-74344c795ce3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c3966ed-1d9c-4eda-a013-e48b05e7d54f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fbcb61c-e7be-4a4f-b485-d9da3946f49d"
            }
          }
        ]
      },
      {
        "id": "11143fdb-493f-415d-a490-d51cf60f0c86",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7b534d34-4faf-45fe-be5d-9a3364365a58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "812a17d5-212a-442c-b906-6f50a2fa9f08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a57b787d-9642-441b-abda-e1c7c5f305ba",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a9b355-150e-47ac-9110-1ab9b8661c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d25355c-4bd0-4be6-bac5-7eaffc539992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0fe428-555a-47d7-934f-8858147b9448",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf1068-6b49-4ed7-a90f-5f4f2d0a985b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9235d2-353c-4318-8086-e7fbfb203a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a99c191-86c5-43be-bb9a-6e5c71ba622f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b22b9f-76b3-4f88-81c7-f527ab59e994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ca6576-6205-4595-82b1-d36002867376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4f6571-a4aa-4116-8e44-ba590531ac11",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6336ffd9-14b1-4f64-b0df-70fb618b20bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a494aa-8819-4a7d-a26e-d3dcb32981dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f81df0-8c60-497c-9a7e-2660dbfaba40",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "667091c2-5233-47f6-8916-5cd75313af7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a692ec9-86a9-4eb9-a744-5f56e2b74d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc8b51e-d811-4949-b5a9-a9efbf6107a6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ace7c92-09f6-4aef-9ed6-51b598893457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1904450a-fe27-48ae-bc42-7d7aa6ac1379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ddc544-a28f-4132-9310-ebc413188ca7",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b18f104-a31b-4e36-8b66-05596db280de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2af9d92-a1ab-4af6-b050-f9f6c1b0c753"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a7e6d9-15b3-47f0-bdfd-929437eb69c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc43974-0169-4914-bd19-f9a22a5c02d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff20b174-622f-487c-b69f-82fd00b4d132",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f32c2c7e-e34d-4171-b5a9-0c303ed00ea8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13aaba3b-80a5-4d57-b712-f09ca4addce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bffaff3-18de-4818-8b44-1b3dbb60d4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48e2dae-ff17-4b0f-8332-65395d225e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d599e401-c47f-42e9-8b52-abf901fa37e8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c41206-02aa-4b97-b14f-e7447b11c361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97fd41cd-34fd-41d2-933f-e4265366dd86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99232812-9617-4c01-b250-2d3f19df4a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bfa75a-7b60-44a6-8365-1c1a004042b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9763dc7d-d226-4c92-b45b-717f6319c826",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e75b7e-b075-4b0e-9538-f43eee6e8baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3d6999-9043-428d-8929-74a2b4612a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e135c108-9cf2-468a-b301-8c940fb262a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cb8591-2af9-46ed-92c9-b9c54c14bdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4e161b-9c46-40b9-bd51-5b5debfa1d8a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef974b8a-5440-42d2-8b78-8481d96c0ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbec778-3212-493f-8e3a-8242cf546c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "365a4c0b-bfa1-4343-a071-54880b6eae85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cccd18e-faa1-4b02-930c-f9a93f880d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2829583c-a263-411c-b2f3-bb4712781a64",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb501979-3240-4eee-885d-5a7de4bcbc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b16ed1-2e87-4d29-9848-75eed6780d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c9c0c9-1c7b-40bc-bf95-4517669a3c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f3fa23-9b84-48e1-a51a-3a45cb845ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acbfb30-b59b-4963-9566-0b7e8d93bac1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "526d4d61-c3af-4d94-a03f-7fc1d3ae6d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c62a5ec-5bb6-45cb-b1cb-9ccc28be6d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e690e8-4bf4-487c-9b00-8b56e02a5558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be8c8a0-9b68-42be-8674-b42951e5956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88bf6a58-fc94-4030-a07d-27961272f3e5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e057f188-906f-4e0a-8684-e67f14f1e774",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8170b0a3-77e2-4e6d-99ce-62eb877718a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9ed90d-475a-4e17-b1b1-1fd84e678534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d574ea-7dd2-49c4-aeae-0873ac4f4891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01533f8c-cfb9-4ca4-b871-f542ef96c14f",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388b5110-abe4-4d47-ab80-10a1b88b442c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f9911a1-9188-4867-9f4d-4e23a76044a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f075608-90ea-4b48-a8f7-148b562a0311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2877f48f-93db-4f85-af71-6f8f917db354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e89ca7-0573-4585-9c34-c4b5b31d7002",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50ada45-f4b5-4a50-aab7-48e6e172e93b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21743e9f-15be-499a-9e0f-498fc1685588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f00e60-be5f-4146-b634-b78a9e830d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbf9fd8-2bd1-4a98-8c02-eacee8758dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b70ef9-adc2-4adb-bf53-8c8578cafbbc",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f559d531-5f1d-4b98-919d-c1f42a72482f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a168fda2-c209-47d5-b743-d07c910502e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b7bdf-3079-4014-a9cd-c2d706b0ecba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d20c888d-140c-4455-9d32-18dbc12a6a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608ad830-cc1c-4391-8eee-f614d2eca776",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3c82c0-326e-44b9-8fb8-467d1119c3c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f336848a-5c4d-424b-9a98-1a0e766c0a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7541593-8dc0-462c-9076-e9a99af71fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc9f0c4-0585-4ec9-a2f6-e4ee55e2aa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2a0dd3-2067-4e69-b378-17ad731307bc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7516044-c3b7-4c92-a516-e5b933cee09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a82144a-3a79-45d2-91e8-92d123bf9615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac25812-db6a-4a1e-b08e-ab2d0132c314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f41c73a-984a-4229-b8a5-e2c6a5e589c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e212fb95-61b0-4974-86db-8173a42ae12a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cced9825-1385-46df-a3a2-eae117e434fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922220c9-fff8-4093-9df4-0feb651421d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02e72f9-e9d4-4246-8123-e752d429a874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0be5239-8816-481e-837e-296dff82c068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7c45a5-2b83-41a9-a7e9-02fd6f9196e5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12015940-5965-4b87-819b-06c556f1835c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4168541b-ca1f-4191-ac20-a402416b8a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90471526-357a-4416-a734-472e8ac57ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d070041c-0d82-41a0-8afc-2a32d2144297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169a110a-2fd1-44d8-93b2-38d9651d8838",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94406b40-e255-4c91-b2ae-94bcd2b92b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f0a7df1-4554-469f-aea5-90e4553684b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2498b568-4ff8-48a1-9b0e-466833cee3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13561082-155f-4643-8280-e00efba21895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe1560c-0e7c-4e94-9dec-41fd65856868",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d690d8f-ad69-4998-ab57-32d6ed609ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39123386-a725-48ec-a50a-2b1a55866985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019807b6-3e0c-4688-85f6-0a156b53dd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e933150c-049c-4171-927d-2fe1150074f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe6ab72-1c97-47fa-a671-1eb616a99a1f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68df35ae-27f1-40d4-9070-8bc90c6789e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c2f559-161e-4157-8d24-be72fe778ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1841c524-5543-40e2-88f2-410a49ee6b60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b44cd29-b7fd-495a-ab81-07c66bf3e62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7628d8cb-5f02-4b12-b89d-22ffb0723f18",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c212d95-328b-4ce8-9bbf-79c1331ad159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c56c734-51bb-4c5b-8d29-d3e85d304895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00255fa-5a6e-4ce1-98b4-2b16dde1445e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e015f6b0-a9c7-4849-ba5d-6f2033dcef38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb545206-b438-4dc5-98e8-28541cb7b870",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7d13cd-4b0f-4c79-bf13-ebf1e204531d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fd9c603-fa5d-4aeb-880d-71acc704302a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba79b4b-1591-429d-8656-f39fa8a98842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "752daa7d-21a2-41be-9fc6-7e617889ee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bd2bb1-4c02-4208-9911-0e6808b0d708",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a88f91-abc6-47da-bc69-7f5ac693b5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0c62694-5cd6-41fe-b5f6-e840b30f9b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f80a51-9ae0-4849-a476-042a7c6ab93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e0a183-e0d7-4857-ab3e-58d69cbad6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1175b1-4469-4f1d-a731-ba663ba3de2a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e7668d-958a-4efb-a007-4d4bf8776ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09b2d427-72e4-4108-a529-f3dc140155bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d47e59a-e57e-42bf-9c4c-eb82273cd48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9674ae-e399-469a-a9dd-725bb8e419f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d40ff4a-5a7d-4888-ab07-abe663d66331",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9bd8607-0494-4309-8fe8-1eca53ca90f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c5755a-8b51-4c15-974c-c61f7c9f099b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d1425e-70a8-4765-aea8-d7cb1cf4336e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b6e1b6-a2d7-40a3-a5b9-4dc70135dfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ed1e82-cc29-42c5-a4b9-c1875a11c7fe",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55098d32-4de3-4bd4-bd8b-41df20764f4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "815260dd-f115-48d1-915d-1f6f9d66b768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bae8892-9d28-4140-b175-dccc0dbc9b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27a0644-dfc4-4f94-885b-6852f4aac0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a0c0ad-7338-44f4-a932-ae2784d6973f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed7930f-124b-43d9-a7e1-d1f50bfc47da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbb8611-9244-4c3a-8643-0ac10ff31111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95976cc-b68c-4544-96e3-80c6451343dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d72953-978a-4a28-a595-a6853bdc6155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939add53-dcee-40e3-8a18-daa7f6cf135d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c5896e-2111-4476-84ed-ffeb329d9cca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea45e4b4-695a-4c80-bc86-70c6d7346765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c198feed-7236-431b-bae3-d74b4a8a5890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f2ffd9c-77a2-430d-8b7c-b8df9db1676f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5816129e-b8fb-48db-90a9-5ed2ae2c90a2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24182b3-5fa2-4525-a3eb-507f789cc2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb88c41c-794a-423f-b8e6-1443075fd2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73765a96-77aa-4d27-9ec8-2c9b5462bf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530a8ed0-443f-4d61-9a27-db194cb89f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1e7f35-71b3-48b4-8395-3681782e27d8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1939c79c-1426-4131-be7d-2b95c4c3dc5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e7062cf-6f99-4039-afb4-ad43d6d34666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53957fac-98cf-4105-975b-1fc5c1605214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0f1ce9-331b-4c64-b3a4-a9b028b2d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a651d7-87d4-4e45-9267-564c83e23a57",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c43c899-f424-40ba-a0cd-171850b89b86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d209c2-eb2a-498a-9784-a60187432668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa762dd-3b2a-4555-bcf9-be46d4cc59b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813bbf15-b7c1-411a-8254-aa9cde10a57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35cda9d1-d820-4f22-b5f8-68ce439c1ff6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f672ab4-4db1-4e48-9486-878c37a8851e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c93844e-f618-47e0-8653-c95ea0404e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793494e4-7b5c-4179-ae0c-99c051cb9671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb1f744-7b98-4dab-890b-27b687386990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07632f72-c6e0-4c71-8611-f40e5928e1a6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6df1b56-7324-43bf-8213-0f24f8539b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701f3ef6-b9ac-4d91-9334-b2405f292019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a12a4e6-04f5-4cc8-9e74-6d9e648df115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed83156-918e-4507-b169-24a90abe71cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaa3beb-a0fb-48f5-9106-52c852fdc753",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70de15ca-e13f-4fdb-9702-d29e7f632da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b534e0f-736b-4eee-84a3-067e89a0ab72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f343c83c-8799-4f05-88db-d2d7f750afbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663a76a1-0d55-46d9-88fd-4cb672606811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc0e3d7-540a-45f9-a916-a4cc401e8222",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebaf298-2f7d-4b81-b719-d75abd8317e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42b13e5-e62c-458e-a3e1-d2a82fc8f7ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef2c38d-c352-4160-b16e-37b13b9a16a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb01b28-47cb-48f2-ab51-6b49f7f12d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b01c90-469e-4814-a416-8ecc74c14988",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b9b850-9e58-41f0-a58c-6721749c01eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299df807-c07c-4a90-8bbd-b7c97c5784ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace81d30-9a9a-4112-9e41-632f84164e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bca97f-1d81-40c2-958d-ead67e9bef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236b4578-dfd5-4d24-ae11-b1df484157d3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ad683c-2e27-4013-b368-2b024cf1741e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f78afd6-fcfc-4f7c-bf2c-03ea6a5bac89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6534b8b9-4221-43d2-aa7b-a32bd19484c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e074f0b9-5dc8-4525-b824-5a3a02a0ca0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e8a0de-b993-4ad6-bfb8-73c847f5d669",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9603f4df-3196-41d4-8f6f-4a3c673c9ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc4a2d06-1992-443d-9f1d-408059c52706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07dff27-6969-488f-9580-a67dc6f1626f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c77fc4e-68f6-461f-93da-9af2c2f15699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa9fb19-f271-4559-b4e3-8c16e4532b9a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963c8033-e309-4024-8776-a0bba13a2196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02a3275-f68e-43b1-b6d7-9828bce8bac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa00bd8-5ab0-4a6f-85b5-4f4f8f21653d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b68821f-984a-4e5b-b1d9-97219c30389d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2284ac-91bd-428b-9b04-faa3ea9bfee6",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76daff3c-332d-4b0e-a324-d612afc7fb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e15407c-6dc5-43b7-95dc-b778745ffa1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c7619d-c005-4043-8e97-6fe5d831b3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9b8351-d57b-4ff0-97a6-02099ae40f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5594e7-965e-4ad1-bd2f-bc9e90147725",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b26029-b4aa-4cf5-8f16-24866b71abcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8da3224-4a55-40b1-aa07-2c92793378f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6465e197-4f50-4cde-9c1d-58b79e08aea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2badd1f1-830b-43bb-8822-34a6d05f6fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d27356-2069-4b05-9ae1-c81b92aaa0c4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd40770f-b3bd-44f6-a6be-d44fff22f273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92d0cf7-3c88-47df-916d-f12237a492ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2c295e-66e5-41a2-ad55-386c15d53aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94474de5-ff59-4e66-be77-6356806edc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0e46ae-e2f5-457b-a3e4-11d834d4d288",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8118e2-b6c6-43c1-9ded-89394627f32a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fb50ea-d89b-4679-94f7-b0900a21ec7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd562c77-2652-4030-899d-c0c79e86d5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230b54b3-877b-4edb-9ed3-f78364c33c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3c3a46-f1ed-4214-bd83-3ac71725c390",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd030635-2fd8-4a75-8247-e680b3b52cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f614c05b-4e48-4d15-b515-908733712dd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaa882a-6c51-4286-818a-6bd5b76c5018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3486c4ad-e81a-444f-92f0-2629692a8845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532c2cb5-f282-4c25-ac19-f26820e00780",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a4f2dc-e87e-4ff7-9d3b-f84b7eef6932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd7c28e-7cc9-44cf-bc7c-7ef0bd62349c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f02a32-7fca-46c0-a2e5-e8debc7df0af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df24ad5-f3a1-4e98-af2d-150b1afcd537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc29e835-df4e-4006-b249-d95f0a9b5aa2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8863476d-e96a-4652-83a6-9e069e69ed51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7920525e-e07c-443e-8e64-7180d1eabd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed358ec-65a9-4b75-92a9-1322bdb4de87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3a4b55-b7a9-4d13-ab00-e5358e960a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92ac971-d94c-41d4-90ac-e34fea788bbc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b505cedb-a8fb-41b3-b975-904ae1597be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc3583a-abef-46e7-a85f-571a78de7c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e82cd2f-2d3b-4164-b64e-018e0267cb5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc4ae46-1187-4bc9-a468-871b3075c378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67cc755-165a-431f-b004-61abf036d99d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa8a46a-eb40-4f03-93b9-be9f4d07ac84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bb92fc-9c48-4b19-8a05-e13e67efba0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e52fb2-76d5-4b19-b8f9-1bb75c64ce1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3666856-d422-44b4-93d4-6ed6cbc38f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34d0f30-27d8-4726-afed-ab5493156f43",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cb389d-5d50-4b46-8271-274f8e635e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee49e89-fb0d-4939-9545-0881892451be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb776b2-f6eb-4dba-8da4-e6c98e92f41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84dfa90-15b8-4a2c-808d-0e74cc6d7a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a6f936-a047-41a6-8ec4-bc2212829609",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650dc8af-ab2b-4d62-8384-7d0aecf83405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f125ac6-cbff-4f3d-93b4-62928af3a3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3614e1d4-7a06-4a0f-864a-2bf52b0648d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ac47d9-6cdd-4493-86e4-cc07817ac607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d6c03d-197b-4af9-bb5e-91bd2828260d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ee0522-b433-4821-91c3-9c265b182f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8592292-c9ee-477d-8287-be51024762f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4778526e-db82-4f6b-89cd-d48540470bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c96909f8-9c43-4fa7-9bc6-8e6f3db237c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d700a6-f344-492d-a5ac-8e49bde6fe1d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7368c9-e05c-4d00-81d2-5345a39fc307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ec70a9-5f5c-498f-92a1-e296a9d22f08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b81d5c-3e58-4999-9f3f-96a4a232d034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194810ed-f439-4a2d-9db3-01b6323a37d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3aa7e9-db62-4f5d-8848-ab971f449924",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abe054c-bb12-40b5-9c8f-61a37b6b4be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830537ad-8964-4015-aab6-f5046bc7c6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b7a298-7ff7-419a-bb59-6cef34354cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dc1e47-f06f-4918-808e-1fb4734c2c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec2c50c-c009-474a-b81f-f48d6b7255fa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e9a96e-4d12-4557-9bde-19420471eb19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593ef11b-62f8-4a55-9cc5-34cb8a2f9419"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedcd008-fb73-41a3-b794-afe771640316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab232f79-ef07-400b-94a8-2eae7f42d858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7400d9a6-a1c8-4d0a-9ae5-2b52cdcbcd30",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d88daa-eee4-41ed-ad13-887e392c70d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116b628d-2714-4fbb-a249-1f71639fba8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa197b1-0f82-4bee-8342-91d0f4fa531b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d246c4-d1ee-43b6-84af-200f9fa8180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20862df-d8c8-4d76-8a7f-c6a72587277d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339e3eae-1085-49be-abe5-b9c4a957eeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8818bf6f-d5f1-4c68-b333-75de40a58553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2fc800-9796-477a-8b4e-8bc1f12477d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8995b603-c3a6-4223-b14c-a55af3d27a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9495bdad-1a71-4cfc-8235-e78c07b3018d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2febb017-bfdc-401a-b8c9-5c912b65e155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d064481e-f8cc-499c-8eb0-12546aac4caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3e4adf-d342-40b8-8154-90db7e1abb9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84352cb8-6c18-43ab-8f64-fa4007e2c0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e951966-12c6-4301-81fa-e6198a04af52",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d57c538-e424-45f3-94ef-d4c35c7658aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5537cd-a504-425e-b8ab-f070ff012b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ab1b4e-62ed-4202-a1e1-f544c15e781c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d813ef-4580-4467-a89b-87f5d98086f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6be88ba-e517-4611-b6a9-75509578a3b9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1311727d-94ab-4ef4-9376-67f4043dcfe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2007f9-058e-4553-9a67-2942fa31b874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b584d3b-ba7c-45be-bdf6-13d5c0f8cc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e59a532-d90b-432b-a051-bdb627443ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3a79c5-344c-485e-89f7-6afac15e45a6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af498485-343e-45f1-9685-7761fa595ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704039f1-f48f-4110-b821-ad06370510e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42de1932-0742-43f9-a7f8-945d7d10f6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2be4842-68ae-4377-9bb9-e31eb8731f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e14c53-863c-471d-b489-fbf2e7da2f4d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f7301-b420-4bf6-aefa-dccf1aef5695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "398b302a-4eff-4447-b4b6-4012112fcc0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60f1f88-b4cd-42c1-8b7d-2794f4e80176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee21e795-e709-40f3-be07-f3292f94384a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8aac15-8e5b-4c8b-821a-f39f324e7d88",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaa37f2-67d5-43e1-ae60-e1b6032b12b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35835d56-d4ac-4afa-ac9a-7b8249cc36d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3baac7e-7ef2-4686-9efe-65f9005b49a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5f2392-d66d-497e-821a-73f1d0864b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4da2b1-9e95-42f8-b7fc-1c02c258f69e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ea0c5-2443-4777-a446-3de1e02f4b51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a76d12-d617-4398-922e-112e4e468bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb9d69a-cecc-4db5-8990-f268e6bd15b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4b3cc1-f31e-4082-8baa-20722cb6aa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704e60a2-9ab2-4833-8903-e3cf22474432",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d741b7bb-45b4-4830-b1a4-d66d9d2e9273",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b26b87d8-349e-4869-8dfe-2a8c79932bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f792687-3c11-45d7-b714-f81a6d3ebb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecc01aa-f98f-424e-9dad-91ef286dc243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14ccdb7-8e38-4dde-a54c-4978a55649f2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bd99e0-7a98-4986-8afd-802d04ba40a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf4b0a0-8b74-416b-9e11-512a14be37b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6150a2f-4342-431f-8fbb-20efe52de865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f20f69-6f53-40a3-ba6d-72efe46b7f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967066be-5ade-41a5-87a7-0d8c4c3cda9d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7bcdef6-9c9e-4a4c-8722-b0115e4f74bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b538c1e2-805b-45fe-9bd0-e4af031a0c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a680c3bf-3669-4102-a21a-68a288b61cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6579f6-3865-4fcb-bdb0-8030cfb84669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8d8162-fe57-4e8f-8785-ad3b80cc4157",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e850df11-17e9-4c69-b1c5-246e57b08e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "601cde40-8508-453a-a72d-c86027fc24c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7692b65-9279-42f2-9daa-704af0f5f901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a7655b-8e1d-45a7-8d91-1228db390572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5983954d-d034-417a-a0a1-41e84bc3bf72",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bbfe5e-831d-4a64-9b3c-58e7eed9f2b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74bd88ef-646e-4000-afe5-d49d377c1dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ecd6dc-aba7-4f04-8e14-e2dc718dba65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a81d52-4271-464c-8961-41ccab515c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d1f852-2bbf-4c43-8f70-0ed0dcb9daf1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e66c33-c3b4-41fa-8766-5746fe009b7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e307ca0-2daf-42f7-b802-b07657f0c630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71f347a-ff6f-42f9-a8c0-93dd4be07b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5be3a63-166c-4702-a580-e6b33d66b187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea75c6b-f860-4ff8-be15-0fb5dd376d8e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac575aa4-8958-454c-a153-8d853d72ee7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21107e19-8a73-4418-873b-de18fdeddc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f30c69-8239-4aed-8228-15fb57f602d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f940c37-80bd-4a17-a256-0e957a6a1c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626e0f50-71f3-4601-8be2-3358d9f8cd68",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514ec6de-bea1-4fa6-a5a5-4c71170576c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dea13c68-9b66-4831-b692-b62450d2ee37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b046d592-4e54-4cd8-b3c0-25f4c6a1fd58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f466e636-f46e-4054-906b-bc999fd1aeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c411c0-58d3-4f5f-a768-2fb8db3e10d0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355f040d-8a98-4bb7-9e54-dbbd8cbc2242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79a63ad5-4ee4-4999-933c-fa738074a351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa3374e5-b731-4e0a-a449-ccfe73775062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9357e7ec-5c10-4c28-b48b-8b0864898e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a648100-2f76-45cd-8f48-c05561ddc86d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20ed9c6-73bd-4a1d-a792-9661cd64c703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6389e5-b0cb-4019-a439-e3ef8ce1a2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b002e2cf-3412-463a-a80f-e15b7ed14e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dac6f95-32fd-44fb-b737-293310e1df07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57001e6e-bd51-4f01-a601-37f9c7b9b09d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b133217b-721f-475e-a1d8-9d12b2c176d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f82bfba-84c0-4706-ab7c-387f4d7dc4e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e3c36c-016e-4821-8f03-a7d965f0c1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a11fb9f-a787-42d7-a9eb-59c490d268fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e9b7a-3ad3-4102-bda8-5d32df1b55a6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b18c25-6c82-46d3-89fb-0879cfee19f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9074049-b166-4155-ab2e-b2fbd5d20307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6258560-4088-4836-8c26-e7205955b23c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70015c7c-cb96-4096-9092-e863af6466bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c795bc43-ad8e-4c7d-aa14-e62f8ea3b9ff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb108600-20d0-4d5c-bfd7-7f9f3c309036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde1b701-8a81-46fd-8f53-47df7583a881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3de63b3-09a3-45c4-b6e3-28f55f31f320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9f3cc6-518d-441e-9adb-b2a9d9085310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f1fc12-149b-4b73-8d52-0aa47a35ded7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2028bb7b-aa6d-4c36-be6c-b852f54b4dcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d655ef27-4843-481d-974e-77c3c34d7c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc687a6-487e-4717-a4da-efd2db3321df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace8892c-28ab-469b-9ac6-881963bd5cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff1a651-84d1-4bc0-93f5-0537bc1637a7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a2bffc-ba1d-4f46-9555-05cf1bcc0078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96b6045f-80b9-4d37-b468-e25c9250eaf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed828e37-2ede-48ae-9b87-ef18c115ee6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273274bd-5ff7-4f9e-94c5-056eb4a2ebe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f271bd73-2f46-4b8d-8c6a-15d56a0945b1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88df47a5-e922-4f0e-b737-02c3268cf08a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d3a6ec-7821-457a-98fd-6f9ec21a6d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d297145-fc91-4ae1-9b0f-f11531f0aba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cb830d-431d-462a-b12d-f7bc87e2bf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7cc140-d3da-47bc-993d-0246342b1d7e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8523c8e-de25-4d92-b46c-c3eea220babd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "536567f0-25ec-4578-b82c-8f147a3b5982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c00a814-ba24-4569-92bc-167dff71f237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa761286-0ddc-4482-a14f-c05216c59c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed06a69-8c29-4308-908e-c8c1b3557a49",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e977bba-4ace-4c66-90cd-86ebb92bc665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993c3d11-2fea-443a-9c3a-cdb26c2b4a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb06e73d-7a1d-4939-a182-0e77b64cc188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a9c315-0b2a-4850-b37c-e08f31f539d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbd6054-253f-4b4f-a0a2-ec02a2fbac50",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9ab06e-a7e4-4366-b9f8-ab8792994c01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bce8816-a4ad-495b-b785-acad7909da41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "471be362-6632-4b3b-9889-8c7001eb6be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f3afde-1617-4bd8-8a19-daf9ceb1fe4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990249c3-e277-46ed-a6bc-14bed0237a4d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc40c3ae-01b3-4c1c-a219-4e11f98ef9ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8c1652-f542-49e5-b2b5-0284997c1d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00019ff4-4141-47aa-b9c8-c1c884e7624a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a98be1e-dacd-4230-88b9-364b6b6bcfa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60346629-b002-4dfe-b21f-d6b1f01de332",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdba207f-2ea8-402c-a3b6-819b0a0d3827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3433b1d7-e6e7-456a-af1c-4cf54c1214d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221e81a8-d207-47d8-9d8f-d7f63ed3d539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2dc52c-7cb3-4cd4-bd43-686b6179d59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd2d98b-05cc-4fde-8de8-d90dab9d51e1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cae734f-da9a-4a2f-aa28-df848dff98f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3b5a75-6ac7-42db-8e5b-e5bdaccdb61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621a299d-cf8b-438e-acd8-0776fb0825a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e7fb81-0d38-449a-817c-333b29c9ed34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963e4701-9cdd-4f96-a1f6-7bfd2b994590",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3c47ef-7dd3-429e-ac6d-8d433ab3a438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07051a16-d64f-4078-a3ee-d48d0081d6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4337dcce-1bd9-4582-80ef-7dbc0bbecd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa306dc2-6197-445c-85d6-40f357bdf0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ef2760-4bff-433e-bc00-6dc522d21db2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e38d280-4acd-4e22-b6ea-9fca0f5ea201",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0c461b8-7977-460a-82f2-eca5454e5224"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a0276-885b-49f3-92ea-cb5746cdac31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d46435-0d9f-44b1-85fb-3404cbb5d7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb9eb77-2a99-4e18-83ce-8c4a5a6f1547",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884c4cb6-c5a1-4ac4-92d2-edea664ddf64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b960f1d-0a1c-402d-8a36-6afdc5547f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a42ffee-7b5a-467d-be8d-32d66deaf1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2cf4a95-b7d8-4480-8c3e-f230ce97340d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8425b7-7eda-44ee-a315-7ed7e0ac5bc2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebdb74b-3b27-4922-8214-cc1f118f2bdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aeec68f-c855-48ce-9b56-74ecc6614fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38fb0512-6753-4230-a808-111d76cd08dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f72c09f-f014-4d2a-ba17-a6675ea60203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818ba724-afae-47d4-8af2-1bb8c151024e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580bb225-b31f-4d0c-ba75-0f747f753dac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d9530d-66e7-44b9-b13c-9f7701104128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c23e71f-7492-465f-be83-8ff66e29a395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7792bf1-a927-459a-95dc-7893844c1433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71768e31-c063-4ba4-95be-7c1ff2d1366d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774011d1-972c-4235-b561-25f6334782a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64778f9a-d7cc-47c3-808a-d8bdbf34f5fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7d4fc5-318e-4a99-9a36-c223b4e3d521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1e50f8-d601-4034-908a-50e56291e5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51420f3-949b-4823-82a6-4e3d666d14f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee77cf5d-5cf2-4c2f-b30e-11d66e163a10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd0b5370-38d4-494a-bf7a-7d42e91b078f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "454fc1f1-e746-4a60-8489-43c270fbc334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03321e04-96c9-40b1-b7ad-826162037cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acce265-b3e0-4ec3-bfab-084990a4df72",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968d8d3f-7658-40be-b60b-306b6fd1b764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145a806f-bf3c-4883-9a27-d6aec0d0064b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a4fb97-dc1d-4171-acc3-05b96e776a73",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24b88b78-2c4e-48f9-965e-62a49aeebb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82826ff6-db4c-442e-bb56-e42bcece74eb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cef39f7-9534-456e-8df9-a0bd0d5404c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65e737c0-1304-4dad-b8e1-e6731d6e7b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48519cde-9de3-407c-ab95-e1ec8be0eddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76084c5-c34f-4679-97d1-64eaf2395b0c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d26c66f3-8722-4e2b-9530-fe8fe70155e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5032787-c74c-4234-b87f-eee729e48abd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ced5a43b-e97c-4aee-bc64-9f0da1625c4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34b91d08-7969-4e7d-ad23-5e37d25bcc4f"
                    }
                  }
                ]
              },
              {
                "id": "800cb2a8-7cfa-4aac-a0fe-b059bd941bd1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe7056a0-88ce-42b4-a2f1-1322f97e1f09",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334212c5-6e1c-4c58-81ea-a8bb9c7f7b19",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0dc9f737-0371-46ed-ac74-486f33c1df05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787db6c5-ef2f-447e-855c-cf8e618cadca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41878f16-3eda-4fa1-b4ad-bde8656abe3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbeba9fa-8fd8-42be-a51b-122b200246cc",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2358cc6a-3fd5-4ee2-a858-c53701bd1112",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "77d780f4-5003-492e-9265-4047e8114b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "734f9ba8-2678-4272-b8e6-1e84d686d171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e96baa93-b882-46f5-ab79-ed1f7ac8881c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5df1f1d-105f-4121-a706-28e6fb85fbe1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9594062-53dd-494e-a2e2-6ac8f257eb9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eaf4de21-1f5e-4041-a8ae-8fb734a882bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf7d11ad-b6d3-475b-9150-2b821d186788"
                    }
                  }
                ]
              },
              {
                "id": "3ca2f529-0208-4eee-b440-e07b0c84be8e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "41022599-90a1-4180-84ae-720085893794",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc85648-abf6-4d49-beb0-d7196cea5b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e0bec5dc-9a40-4d1c-9ce0-25dec8817fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00f2e28-29d6-47c3-9d0d-24524c7548e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b8fcf2-d8c3-42c6-a45f-492fc2158a3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9d4af533-8bc3-46e6-9765-0a3801c3b372",
            "name": "Positive Testing",
            "item": [
              {
                "id": "667d6b7f-c2a8-4831-a283-aeec6ec4b9b3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0bd2978-5bff-4dc8-8540-bc3c23aeb1a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30dfc81e-df88-4ea8-962a-0d20b2b5a2c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c45cfaa-1e6c-4439-afa6-0bc696e4150a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62050212-5e8e-4334-a78f-7cd884e38759"
                    }
                  }
                ]
              },
              {
                "id": "80ab285d-26c9-48d2-849f-960956dc7478",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e28a1990-5ff9-4366-9bb9-e30e88422b08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39a887f6-e5d9-422c-a2a4-693cc870e545"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4f1eba2-f342-4c71-ac79-1356913d18c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f5428ff-a2ca-46af-ac86-144d3af43f1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0829b429-9e42-4f9f-91ce-88603b001b79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b05d49ab-c163-4b03-80f3-43aeaa70afb3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78de1dfb-ab35-4394-8776-d4d155035661",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f7f5ee11-afd8-4909-b604-1e9ecd13ffe4"
            }
          }
        ]
      },
      {
        "id": "8f73230a-ddfc-48d9-9fe6-c29562a705b2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a9e1a899-c382-47f1-a99e-ee032a112349",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da2e351c-1074-4ac9-ab1d-fd7973a596a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c4f65e0-dc18-4f2b-8be3-853adc5ae9de",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded7b609-2cc7-47b3-a8c8-2a28bc8f9b0b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "27490577-2145-4da4-a3c9-4c8bc36e82c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1841aac-fdb8-49b4-96aa-a53490fc1958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbac3a0b-df3a-4581-8984-0770f2e64609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7afa4da6-565d-4b5a-9f0e-944adc533c64",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c88fee-88ae-4a97-ab70-4fd143dbb9c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dfab9d8e-af7d-42e1-a982-f055987cb64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1585406d-ef0d-4b0a-ad13-ae9488c67558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aabc4ab-5dcb-4e8a-b332-64f99471c582"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86c555b0-b319-4743-83d4-6362cca287f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f6de0c4-4431-41ca-b784-b2690145b313"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "015a7823-c8c5-4bc0-ab75-c17eff4c7886",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d97e2587-3d93-4875-ae58-d27c61c637f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f287fae5-0b51-4c80-9f6e-c8f6a74fa578",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d5772a15-0d31-4322-835f-dfceede1113e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ab50f07-9750-4f47-84bb-082974da218e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fe89dd6-c29a-43ce-a8a0-1431a6a818ab"
            }
          }
        ]
      },
      {
        "id": "75f627a2-dec5-4807-9a8a-0f437c5746f8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4ede1147-c126-4b7e-bb3a-c8403a046d3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7d167f7-ed2f-45af-8a52-61b2ed677599",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a2a3cd6-74cb-4352-9845-6dd745f7c544",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad3e79a-e7a7-422e-baa0-0f511c9d24fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4d47c520-2460-4a3f-a1f2-f399b2ec41ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7d600c-68ad-4326-9deb-b37af034b729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a455297-a9f6-4ae5-a143-3a0e2d9a122b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c8bad0-8c6e-49df-904e-7c05665e966d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0452f7ba-0970-4411-8a8f-8f324cfd3eb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fe3479d9-0f1f-4f82-b9e4-5922ee3f0b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7700fc55-7c2e-4087-8a5c-f403797db056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "475f4d25-d81f-4c13-9f7e-db11b680c8eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21704009-3cea-4d7f-bf64-298d3e7c46d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "027df2fc-4d2a-4013-ad14-45be8b0be553"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a77d7b3-d5ba-4d53-9276-bb12e7117789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc70d590-e742-48e6-88f2-67eb689ec1a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ede2db64-761d-45a4-83b8-016f35ba039a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1840ee3f-b7e6-4475-aa2f-90123c22fae9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f60b27a-7ad1-4ee5-9717-053cbba0c230",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9932f348-851d-4081-9955-eea68d4bd10a"
            }
          }
        ]
      },
      {
        "id": "a70bd8fd-ea59-4d0b-af2b-05499a110a00",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f4226e56-cad1-4614-8879-7c62ab4e43fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "698c712a-b10e-4f3e-b601-a5629f1d2c5e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7a2f2a0-febe-47fd-86a3-86623a73dc33",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a989c1-e200-404c-88fb-c7228b95ba0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "44ed8452-4ee3-4ea3-9c86-87b33f217a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e795536f-43f7-4ac9-a551-59baeb93d648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0796d8d-4406-4aa1-a2b7-f4f559de9a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b795b447-0bb6-4185-9a1b-3be570736913",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648ffdab-5754-44e9-9f6e-4f6ca2951777",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c9fdd9e8-7de8-4341-bef3-3482c6ebdd21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fd6a70-9f01-4ff5-afbd-c1beb86b8ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e9391a4-5d17-41b3-b39b-8731db760abc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4c17fce-ab72-4e81-8100-79b976fe8405",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c08a7024-e495-4941-b6a5-de19df305de1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b751eb3-e9ed-497d-ab4b-4213e44aa907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4326e20-1cf0-4c46-b4fa-c7f9324ddf9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76e6cf8e-3ece-4574-a669-0fec5c5ffae6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cc90a4e1-458f-4793-9f53-8dd627d6feed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af937994-bd81-44a3-904d-1b276dc7387e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d91cc4c-fd1f-440c-8a15-212b7b60921e"
            }
          }
        ]
      },
      {
        "id": "f7b0df73-0bb7-456d-9fa0-40fd01f6f367",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1579cced-2ac3-4ec6-8e56-52ebb01f2c40",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b7cc010-9063-43ad-9653-1556945b14bd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "caa20841-e59f-40cc-8503-7e4d1115c164",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7e7c356-278f-4b49-ada8-51c0d97d489c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b59a5f66-7c8b-4d23-bd93-e612714546cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 598.5534351145036,
      "responseMin": 6,
      "responseMax": 5216,
      "responseSd": 667.0235948992522,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1672274332868,
      "completed": 1672274500292
    },
    "executions": [
      {
        "id": "511514b0-6d36-4c51-a52b-8ec5a64373dc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b6198678-40e9-45d3-9dab-589beeff25eb",
          "httpRequestId": "ff5a5c4a-d645-4f6e-9b7e-8c4f0cef00a6"
        },
        "item": {
          "id": "511514b0-6d36-4c51-a52b-8ec5a64373dc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "94692f1c-86a2-49ef-8fa5-5c00d11a939d",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "c9214558-163f-48e6-9ac5-d5f6a6b9094a",
        "cursor": {
          "ref": "20189e7c-d80d-449e-b840-99a2d182ad3b",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5f36ff23-9b68-4f12-adda-87d5076cbd66"
        },
        "item": {
          "id": "c9214558-163f-48e6-9ac5-d5f6a6b9094a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ad81f1ee-334f-4693-b9c0-b89068cc0bb5",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "4e338bd2-6b1f-4c0d-92ee-183bfb5eb459",
        "cursor": {
          "ref": "68f140f9-a061-4253-9033-8114c70098a3",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f7768afe-c78d-47cb-b34c-88cb24311bdb"
        },
        "item": {
          "id": "4e338bd2-6b1f-4c0d-92ee-183bfb5eb459",
          "name": "did_json"
        },
        "response": {
          "id": "1d1842a2-80f1-46d0-86f6-1cfbac2fced0",
          "status": "OK",
          "code": 200,
          "responseTime": 1269,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bff6a48-9f06-44ab-85be-1a91b9dd465b",
        "cursor": {
          "ref": "2ff11a6f-7aa5-4cc4-a6b1-d4449583ba4b",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75eb5a9a-86d6-4e1b-9741-0586d459f409"
        },
        "item": {
          "id": "1bff6a48-9f06-44ab-85be-1a91b9dd465b",
          "name": "did:invalid"
        },
        "response": {
          "id": "c21e5fde-f6a1-43d4-acd6-c33c4639407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bff6a48-9f06-44ab-85be-1a91b9dd465b",
        "cursor": {
          "ref": "2ff11a6f-7aa5-4cc4-a6b1-d4449583ba4b",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "75eb5a9a-86d6-4e1b-9741-0586d459f409"
        },
        "item": {
          "id": "1bff6a48-9f06-44ab-85be-1a91b9dd465b",
          "name": "did:invalid"
        },
        "response": {
          "id": "c21e5fde-f6a1-43d4-acd6-c33c4639407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 952,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28290e5-ee7e-43b3-ab8f-4d33855d2b5d",
        "cursor": {
          "ref": "f9c3ee5c-9741-4ecc-9dd6-9cea8a51efb9",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b64a80f6-a2aa-4785-b64b-077d653dc1e3"
        },
        "item": {
          "id": "d28290e5-ee7e-43b3-ab8f-4d33855d2b5d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9951695d-c18c-4dde-8ca7-bb9f3c72fd5d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 720,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee282a4-d6d8-4ee1-8e6a-25f93e9bf791",
        "cursor": {
          "ref": "76aad2da-2877-4772-ae02-fea6ffb11c88",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "34692350-8554-4a0b-8206-c332a00a5b04"
        },
        "item": {
          "id": "6ee282a4-d6d8-4ee1-8e6a-25f93e9bf791",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7f3779e2-2e25-4a50-8a3b-6ce2bfdbf964",
          "status": "Not Found",
          "code": 404,
          "responseTime": 528,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cf4163-5452-4ec1-8a8b-98502c86949f",
        "cursor": {
          "ref": "b27335c4-5d3e-4cad-aad6-20e3ad47b582",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "034cbd32-15d4-41ad-bb32-dfb373c00a53"
        },
        "item": {
          "id": "b5cf4163-5452-4ec1-8a8b-98502c86949f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "de2e4ef8-0dda-4f09-9860-fb882ed41b57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d5f0fd-730d-497b-97b0-637a6964d827",
        "cursor": {
          "ref": "0d0bd7cc-68df-4970-a07a-dd510812ab95",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4e9fd5bc-8bf3-4619-8161-43e5c30c920f"
        },
        "item": {
          "id": "05d5f0fd-730d-497b-97b0-637a6964d827",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a20f668e-2c29-4c4a-9cb1-221e80a2c4b5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d5f0fd-730d-497b-97b0-637a6964d827",
        "cursor": {
          "ref": "0d0bd7cc-68df-4970-a07a-dd510812ab95",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4e9fd5bc-8bf3-4619-8161-43e5c30c920f"
        },
        "item": {
          "id": "05d5f0fd-730d-497b-97b0-637a6964d827",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a20f668e-2c29-4c4a-9cb1-221e80a2c4b5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 527,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1df809-8703-4610-a957-08de3b545782",
        "cursor": {
          "ref": "703eb2b6-ded6-4e12-a0d1-f0b20f9d7249",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "34767d20-f977-4469-8919-dccb998b5538"
        },
        "item": {
          "id": "7a1df809-8703-4610-a957-08de3b545782",
          "name": "identifiers"
        },
        "response": {
          "id": "cee47bb2-3209-4a33-9539-d318a70e4ae1",
          "status": "OK",
          "code": 200,
          "responseTime": 861,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d861a5-fdc9-4fa5-a8bd-e05642573735",
        "cursor": {
          "ref": "a84781e2-b228-4245-97c6-96f709288ca2",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5ea2349-0a6a-4e8c-9fe3-c75f1b58b042"
        },
        "item": {
          "id": "52d861a5-fdc9-4fa5-a8bd-e05642573735",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b47aa2db-d59f-40cc-8c0c-a6ab52cbb790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d861a5-fdc9-4fa5-a8bd-e05642573735",
        "cursor": {
          "ref": "a84781e2-b228-4245-97c6-96f709288ca2",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a5ea2349-0a6a-4e8c-9fe3-c75f1b58b042"
        },
        "item": {
          "id": "52d861a5-fdc9-4fa5-a8bd-e05642573735",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b47aa2db-d59f-40cc-8c0c-a6ab52cbb790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8991ada-4452-4808-8d14-fdb90a1293a9",
        "cursor": {
          "ref": "4a66461b-43ff-4832-af66-dcfb980b7ef1",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3705b497-6f4d-4ab9-9561-5cea9dd06113"
        },
        "item": {
          "id": "a8991ada-4452-4808-8d14-fdb90a1293a9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae963433-f055-4ccc-aad8-0fa47da878f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43552cba-33c2-411e-87ab-3275ac9af5f2",
        "cursor": {
          "ref": "9c686740-db5f-44b3-a93c-0cec377cbc3a",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2b9f891a-4e67-4d41-a9b2-a8cee27da90d"
        },
        "item": {
          "id": "43552cba-33c2-411e-87ab-3275ac9af5f2",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "625b9a8f-02c2-4c24-ae3e-366efe75512b",
          "status": "Created",
          "code": 201,
          "responseTime": 2444,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "f0777498-657c-4034-870e-1d881b0038c7",
        "cursor": {
          "ref": "28c42fb5-168c-48ce-9804-a2339d315ddf",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0719dada-193b-4c2a-a2d8-f2336c01f53e"
        },
        "item": {
          "id": "f0777498-657c-4034-870e-1d881b0038c7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "55c91a9d-bd5c-45c5-ab5a-a53b140f2d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1526f11c-f391-48b7-a9de-923d6a2732e4",
        "cursor": {
          "ref": "a639073b-32a5-4e59-850b-c8dd98c4cbbf",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "02808d7d-729c-434c-96af-f549056cf277"
        },
        "item": {
          "id": "1526f11c-f391-48b7-a9de-923d6a2732e4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "97331cf0-88b3-4ef6-86fb-f27de75b1947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57d449a3-05f7-4a9f-985b-ba70a7487562",
        "cursor": {
          "ref": "40116da6-fe0b-429e-9c57-d1840f11ef81",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "854c7b54-2c21-4c30-9ad0-f20eea561c2d"
        },
        "item": {
          "id": "57d449a3-05f7-4a9f-985b-ba70a7487562",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f5958f6b-d45f-48cb-b1bd-6d4a384d4fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b267c9fe-ae27-46bd-aa17-4a7abb04b061",
        "cursor": {
          "ref": "d9d5f134-0331-464d-9c4c-7afcf3cce959",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "fea2ef3a-3066-4c62-966b-71069f8a4ffd"
        },
        "item": {
          "id": "b267c9fe-ae27-46bd-aa17-4a7abb04b061",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1633b66a-8f2d-4feb-97bd-47c4afe517a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8eee04-896c-4973-9cef-9d962fd142d5",
        "cursor": {
          "ref": "f9ee1d90-5615-4c59-8953-0b70281b9de3",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "11a91749-3ff9-4567-87a4-fdca931da5cc"
        },
        "item": {
          "id": "fb8eee04-896c-4973-9cef-9d962fd142d5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f9065fba-a563-4d24-b216-1abc495904dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 885,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b0fa5a-67d4-4f20-8596-2b155ac27aa1",
        "cursor": {
          "ref": "2dbd19be-0989-4ab9-84da-7ed7cd0f5685",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "743bafcd-d94a-4993-b8c1-0f5152848ed8"
        },
        "item": {
          "id": "25b0fa5a-67d4-4f20-8596-2b155ac27aa1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5ec45651-4e2a-42f5-8d10-389b8646aafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 917,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9886d7-9707-49d0-abba-06e0be7c15fd",
        "cursor": {
          "ref": "631221cf-e6c9-452c-86bf-462c05612648",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d043a971-cb07-4aba-bf6b-a747dbf1d951"
        },
        "item": {
          "id": "fe9886d7-9707-49d0-abba-06e0be7c15fd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bb4a995f-0348-4c2e-81d5-2aab0af6ccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15b0b84-2897-4ca7-b682-f987cfa12041",
        "cursor": {
          "ref": "480939ce-f48f-4b8d-9ef2-7b120c68394f",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9c507868-323a-4126-a520-84da68ff34cb"
        },
        "item": {
          "id": "f15b0b84-2897-4ca7-b682-f987cfa12041",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c2bd1f5a-e9cf-4ff0-a853-607dcd99c3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72cb015-67b7-44a9-a444-b6a722dd5162",
        "cursor": {
          "ref": "746241b4-10c8-4af8-96f6-adf576e6206e",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1de563ca-8436-40c1-b3d6-b6666ba06b56"
        },
        "item": {
          "id": "a72cb015-67b7-44a9-a444-b6a722dd5162",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a63da680-63ef-4cc2-850b-8542a0008c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d1729c-65c6-4067-95d0-aa78c691dede",
        "cursor": {
          "ref": "fdeefbb3-2941-4b03-81b0-dee44dcbcf1a",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f6748acd-3137-4cd1-801e-2020179d482d"
        },
        "item": {
          "id": "e1d1729c-65c6-4067-95d0-aa78c691dede",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7ee5869f-5b82-4c0b-829c-f4bc7a08bda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 688,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72c726f-9e5d-44b6-bead-24feb10e4253",
        "cursor": {
          "ref": "00d96c74-90f8-4ef7-9c5d-0591190ed11f",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "df575c0a-e595-4358-8fa8-cf4923446784"
        },
        "item": {
          "id": "a72c726f-9e5d-44b6-bead-24feb10e4253",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "ab29b984-9cb7-409a-9982-e57955afee73",
          "status": "Created",
          "code": 201,
          "responseTime": 4329,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "ae49416e-12b6-4a1e-9fd9-13a81970cf8e",
        "cursor": {
          "ref": "ffe10144-3bb3-4eb3-870a-815bc8de83b1",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "72ef78e6-dcb3-413b-89db-f5882295b1a0"
        },
        "item": {
          "id": "ae49416e-12b6-4a1e-9fd9-13a81970cf8e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d30ac6f4-ea9d-4b09-b235-e1444046fcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f144dda6-cfea-44d9-9d7b-188cbc93d334",
        "cursor": {
          "ref": "2224103e-c276-4727-9fb7-a9efa9ddbbef",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5e518702-5015-4e9f-9330-38b8ca6e4a5b"
        },
        "item": {
          "id": "f144dda6-cfea-44d9-9d7b-188cbc93d334",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "19ff0d98-d418-4808-8b39-95a95ef7dc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c390eb0-4496-4989-8d64-d4321d2bee15",
        "cursor": {
          "ref": "2b36df57-415e-4956-abc5-378500df4207",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ca4ef849-186d-4ad6-966f-11cb3f2427b6"
        },
        "item": {
          "id": "2c390eb0-4496-4989-8d64-d4321d2bee15",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fdc73dac-7438-4b5d-9fb6-6481ee6965e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bef9d02-9754-4b87-94d2-fc38015ee714",
        "cursor": {
          "ref": "88e5aebe-37c7-4961-aa9a-dc10c06531c3",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dd54a77b-ad79-4f38-9684-5d0c38421f33"
        },
        "item": {
          "id": "7bef9d02-9754-4b87-94d2-fc38015ee714",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9f02c202-e1bb-40bb-b46a-a5963b8122a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93592491-7555-436f-851f-9755e0ab652e",
        "cursor": {
          "ref": "56e9c19d-0645-4ca7-a30f-cf779f5a5d5d",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bb75aed7-1f3a-4a90-8c14-37be43e5502b"
        },
        "item": {
          "id": "93592491-7555-436f-851f-9755e0ab652e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f2c807b-5bf0-4d84-b402-7bad1fb815a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fdef95-41a7-4828-bd99-1608fdcb7624",
        "cursor": {
          "ref": "44e8174b-ec32-42e1-9182-ebf6c7f1ee5d",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8cdfb8e1-27fd-46d4-9bf2-5b7d6a8215c2"
        },
        "item": {
          "id": "b2fdef95-41a7-4828-bd99-1608fdcb7624",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6e81ef9b-2e91-4b14-bc7b-1fd6183f648c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51042238-6f1f-4c9f-8770-f166636c8fa5",
        "cursor": {
          "ref": "9af007c5-de5c-4778-8d78-c04c7737c664",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "59ad5b52-d566-4247-b064-4b8842be1b8d"
        },
        "item": {
          "id": "51042238-6f1f-4c9f-8770-f166636c8fa5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f7d29515-ea71-4a7f-98e5-a7edb102805a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9268e456-bb56-4b46-8e10-d029e1d5215c",
        "cursor": {
          "ref": "ebd5fa32-3c76-419a-9888-aed82a828356",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "decf453b-759c-44e7-a6b2-5ec41d95adfd"
        },
        "item": {
          "id": "9268e456-bb56-4b46-8e10-d029e1d5215c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "51a6d74a-a720-4b96-8d21-cf46cde5328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228b0444-bbcc-44ef-8da4-6e9a82df44a0",
        "cursor": {
          "ref": "df67ed66-886f-487f-9be2-ea4c0f45adc0",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7158b1c0-8894-403d-9ee1-e5762afb758e"
        },
        "item": {
          "id": "228b0444-bbcc-44ef-8da4-6e9a82df44a0",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "23600307-b2e6-4e33-8cae-acf5f441bffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c4b764-d010-490e-b2f4-ce719472601f",
        "cursor": {
          "ref": "ba2175ff-d788-48b4-be12-f73d7ca0c52a",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f0856e37-ff7d-47d3-952c-5b5892c47703"
        },
        "item": {
          "id": "20c4b764-d010-490e-b2f4-ce719472601f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "047276d4-1bbe-4ce5-83ff-acbb9579dc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2354ad6a-1a92-474b-8c76-5191d3476827",
        "cursor": {
          "ref": "e4118fab-5cc1-4397-bd24-b081178f21cd",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ffbe3cb7-e8c1-4929-9c44-8d5a5e0ebe32"
        },
        "item": {
          "id": "2354ad6a-1a92-474b-8c76-5191d3476827",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d1a8b31c-a307-4752-b869-c0ed88c9ad97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1cc8fc-1f17-4b2d-95e2-1bcd12046c29",
        "cursor": {
          "ref": "a9d5b6a1-9c72-4301-ab8e-6a262d7774f8",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "287b81d3-8c2a-457f-a83d-1de3bfc9b485"
        },
        "item": {
          "id": "ee1cc8fc-1f17-4b2d-95e2-1bcd12046c29",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d998bd90-bed5-4f6f-a85d-5bacbb506105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c141539-ca34-4304-9a61-4b4e7a44c573",
        "cursor": {
          "ref": "b0a63522-6fee-4996-a468-b2b8e6b9ad16",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9040a14d-9d47-46ea-94cf-12ee45b63055"
        },
        "item": {
          "id": "2c141539-ca34-4304-9a61-4b4e7a44c573",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8e2c1217-4f00-4a90-8fdd-6112d2771cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd40ea4a-81f5-4b72-b3d6-3e24d9ac13cf",
        "cursor": {
          "ref": "60cd8d45-5f39-4f2e-be16-08fda5717ad0",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4831a538-022e-4b76-8120-2a02fa6541f1"
        },
        "item": {
          "id": "bd40ea4a-81f5-4b72-b3d6-3e24d9ac13cf",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cba845e8-9891-4f3c-8cfa-3f3b27f11064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39c6efe-7477-48a3-9737-0115e3e01d98",
        "cursor": {
          "ref": "4a2bf7de-dfaf-474b-be83-337d21c35f22",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78ca8237-e8de-4ab6-983d-f6b7a9526119"
        },
        "item": {
          "id": "a39c6efe-7477-48a3-9737-0115e3e01d98",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "69bc4638-c9df-47b2-a63d-4e65e06756da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a55fed6-d7f8-4d6b-b5ba-51159311cf47",
        "cursor": {
          "ref": "4e961ce3-bf35-4add-9353-30e2d19f79d9",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "43704dc6-c1c8-45af-b9c0-63d6414577e0"
        },
        "item": {
          "id": "3a55fed6-d7f8-4d6b-b5ba-51159311cf47",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "54f363c2-17e9-4422-8a97-24f10aa11aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51049249-6209-445e-a5f1-bfe462f0580e",
        "cursor": {
          "ref": "cca9811a-2669-45ee-b9c0-26e1c14b150e",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bcebdfd8-bbb6-4905-a7d9-f26cfb3ecc5a"
        },
        "item": {
          "id": "51049249-6209-445e-a5f1-bfe462f0580e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d5674f77-5f81-48fe-874f-0d916de99af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c436ff64-541b-4deb-a7ef-5b6a16163ada",
        "cursor": {
          "ref": "4bd4baa9-a19b-4b36-b448-86f0ef2fb073",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6d327329-7f6f-4696-9daa-26edc639bf72"
        },
        "item": {
          "id": "c436ff64-541b-4deb-a7ef-5b6a16163ada",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7558137c-07a0-4df0-91aa-164f41da147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e79dcd-f0c3-46ca-9771-aec5abd30967",
        "cursor": {
          "ref": "c0545814-e7f9-4e0f-82f1-c3306b0e365c",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8bbd51b8-c9cc-457e-bdc6-d539e96ef2a1"
        },
        "item": {
          "id": "67e79dcd-f0c3-46ca-9771-aec5abd30967",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5abd8f1a-6c86-48b6-944f-29270c0fdecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e208bba-bd86-4a89-851d-8695595419cd",
        "cursor": {
          "ref": "36c81708-c0b9-4d6a-9734-6a5908c56945",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fb83672c-c8c1-488a-80e2-bb28477166a0"
        },
        "item": {
          "id": "3e208bba-bd86-4a89-851d-8695595419cd",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7d5c592a-bbbd-4a4c-8707-73fce0e06019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1c70a8-0220-43eb-95c3-8e08304c50ac",
        "cursor": {
          "ref": "7230f18a-bdaa-4553-adca-0c79dda0b4a1",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3dde0ac2-0660-4b0f-9e2b-3dc31e7268b5"
        },
        "item": {
          "id": "db1c70a8-0220-43eb-95c3-8e08304c50ac",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ece65539-9476-4a2e-8987-1cca601904a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30063100-7e85-4522-9c15-f752acedb88e",
        "cursor": {
          "ref": "85474162-2acd-4f91-b6ee-2fe28b38f912",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d2a14692-7c59-4e7e-9355-1752d1a8a1f4"
        },
        "item": {
          "id": "30063100-7e85-4522-9c15-f752acedb88e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bb779645-4833-441a-b342-31dde991d0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 663,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f77c1ea-f808-4071-be53-0ab3f6b25b95",
        "cursor": {
          "ref": "d5041349-171e-46f7-bd84-e2b11fd89b10",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "09db1481-6c5f-4f13-b810-36e8377aba52"
        },
        "item": {
          "id": "5f77c1ea-f808-4071-be53-0ab3f6b25b95",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0f8a044a-0180-467b-8e22-c9dd822aa391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 641,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0522e7ea-c24b-4e97-9bd6-7a09f37a25dc",
        "cursor": {
          "ref": "0219ecdb-c42e-4458-a47c-781eceddecc1",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1a45d6e2-2132-4ad6-a501-3da19e1765e4"
        },
        "item": {
          "id": "0522e7ea-c24b-4e97-9bd6-7a09f37a25dc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1baa23a1-ea59-4362-a758-e5880454ec60",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 801,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936191f7-0c5b-42e1-ab79-bb6adc5ff8fc",
        "cursor": {
          "ref": "31ff39e3-a7f3-4759-b0c2-6de800d8bb5d",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "29dcfcb2-6e3e-4c57-9fbb-efdd5af537c7"
        },
        "item": {
          "id": "936191f7-0c5b-42e1-ab79-bb6adc5ff8fc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "560a24b5-a315-4f3e-88a4-601873c87436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e91bc6d-cdad-482c-83ef-f60723451921",
        "cursor": {
          "ref": "e988fb41-5a40-4039-af9f-959926c1ee1f",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3e7cbdc7-08b3-4b5b-b4fb-3c92fced47fd"
        },
        "item": {
          "id": "0e91bc6d-cdad-482c-83ef-f60723451921",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7f32abd6-f9fc-4860-b172-cabf88826514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa9769c-cc19-4348-8d0c-a0c6194e8c77",
        "cursor": {
          "ref": "fffea4c7-8a5b-405c-bb99-1acb45760670",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e21d9814-1999-47c6-af9e-d9c72726bd65"
        },
        "item": {
          "id": "cfa9769c-cc19-4348-8d0c-a0c6194e8c77",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a1cff2c9-a780-4772-8407-1d49024206e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67a6d19-a9f4-47be-89e8-34c04bce3355",
        "cursor": {
          "ref": "ac394fa1-0df4-4b3b-8e54-5369523a5e9c",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "367748c8-5f70-47de-bcad-e3c4fae7fada"
        },
        "item": {
          "id": "f67a6d19-a9f4-47be-89e8-34c04bce3355",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ba336965-0ae5-4866-85f9-126910ffe98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 667,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449ce112-3df1-479e-b4e6-482f65f1d421",
        "cursor": {
          "ref": "7b550944-a6e9-4f48-8725-1d8787e4bd96",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "decf2388-8bae-4609-8675-722ce33af90b"
        },
        "item": {
          "id": "449ce112-3df1-479e-b4e6-482f65f1d421",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "de45919d-96cf-45d8-8344-1d1d879cb380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff44328-96dd-4680-a24f-03f507003a63",
        "cursor": {
          "ref": "adfdc2c7-01a3-47d6-b568-65cef94e58c4",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "04797372-de5b-491d-8d8f-9e7ac30045b0"
        },
        "item": {
          "id": "4ff44328-96dd-4680-a24f-03f507003a63",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b6d53340-e801-46b8-9818-083e7a94d799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7f800d-acc6-4f1c-91a9-bdf7f66f9e1e",
        "cursor": {
          "ref": "f7ef804d-95a4-476b-ae63-d8c08f45c7c9",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "476df3de-9e7a-4e02-957d-14f808815cc5"
        },
        "item": {
          "id": "4a7f800d-acc6-4f1c-91a9-bdf7f66f9e1e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f3b23f04-337b-432a-a324-012378b8a23f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 790,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1802b6-7868-4c36-abef-095b70b725b6",
        "cursor": {
          "ref": "36ba6b29-7c35-4f26-9502-b2d4fddbdb6b",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d5232716-b507-4018-aff8-049428567dea"
        },
        "item": {
          "id": "ad1802b6-7868-4c36-abef-095b70b725b6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f655afad-b232-4a64-9cb0-52661e497cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2023c0-d8aa-46f7-95e8-31b34769e9b4",
        "cursor": {
          "ref": "a767c4bb-987c-4cdd-967d-ba6ea52c86f7",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "69a8288f-ea43-4dc9-9a5a-7cebdd4c90e8"
        },
        "item": {
          "id": "6b2023c0-d8aa-46f7-95e8-31b34769e9b4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3530e372-5612-4711-908e-121cfce11409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 674,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8025a363-1f40-4eed-bbf3-c7d6d0e91718",
        "cursor": {
          "ref": "da43a990-6921-419c-88eb-08e89ba3f211",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d643934b-95c5-4b37-9a84-162586fbb8b0"
        },
        "item": {
          "id": "8025a363-1f40-4eed-bbf3-c7d6d0e91718",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "df83482f-33ef-425e-b324-cef02392e982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c863a3a4-2398-450a-bdc5-a5e5c7da27e8",
        "cursor": {
          "ref": "deb70bc0-78de-4576-aae8-95e315795096",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d3ecc3d5-a7c2-4113-9754-2d0bdafd3c93"
        },
        "item": {
          "id": "c863a3a4-2398-450a-bdc5-a5e5c7da27e8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "020ba4c5-dd89-461c-8bff-f6ac55445fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 682,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb222cc7-11ed-4db3-a2ef-ebf11f73cce5",
        "cursor": {
          "ref": "3e7183a8-198d-4440-87c1-6ad7c57a2d2e",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e0851273-c74c-4223-b947-cbaf82ed9f76"
        },
        "item": {
          "id": "cb222cc7-11ed-4db3-a2ef-ebf11f73cce5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a2b69f78-01b8-4711-8086-b96dcd86ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355162f0-0079-48b0-b67d-345b8923ce39",
        "cursor": {
          "ref": "5b1f50bc-ad81-48fd-b829-c5225ddb8584",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bc15d411-5b79-4dda-b8e4-7ca3121deaa5"
        },
        "item": {
          "id": "355162f0-0079-48b0-b67d-345b8923ce39",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "66d657c9-59bd-4bb8-a5fd-ac9475b8286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf42596-98f6-4e38-8fb3-6e8471557bce",
        "cursor": {
          "ref": "84745d6b-dea9-4ceb-80b3-d85f8bc8c739",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e0f2ab36-44b5-4826-ba10-bc1b17daf2f3"
        },
        "item": {
          "id": "faf42596-98f6-4e38-8fb3-6e8471557bce",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "89189ac7-98a6-4d0e-863a-443cfd41a376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff8d4b38-4d40-46a5-a9f0-2fc931b03852",
        "cursor": {
          "ref": "9079af9a-8561-4bb3-a0ac-27d650815b11",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "186cda65-b5e8-4057-9f26-6a5de1569b26"
        },
        "item": {
          "id": "ff8d4b38-4d40-46a5-a9f0-2fc931b03852",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "97bc94e2-6030-4819-8f2f-36675e414348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4a0209-4268-4da5-b97f-69158e67dd43",
        "cursor": {
          "ref": "d329bbac-d745-4690-91b4-f20d813a0e3a",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1bc44e91-acae-4c14-b5f3-6b1b4a74ae71"
        },
        "item": {
          "id": "9c4a0209-4268-4da5-b97f-69158e67dd43",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c7b06c29-b2a5-4ccc-b374-8304cfa8ccc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 683,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdee797b-d842-4055-96a8-79253e6ce30d",
        "cursor": {
          "ref": "a4662e4f-a634-47fc-be25-3ae4a010ccaa",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "92aa630a-9770-456e-8dac-a0265c258d71"
        },
        "item": {
          "id": "fdee797b-d842-4055-96a8-79253e6ce30d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d660e95-f80e-44dc-83dd-6c1599a13468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21950aee-a88c-4da4-8ea7-b05f4e8f619c",
        "cursor": {
          "ref": "37ed57bb-1a04-4793-964c-d8ca266a5c2e",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dfb5cda6-5fec-4fc8-97ab-35f61a753a22"
        },
        "item": {
          "id": "21950aee-a88c-4da4-8ea7-b05f4e8f619c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7dee8e19-4a5c-4c72-9d36-1d7de180c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 652,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4c3580-3dd6-4013-9a0a-744b57a31a16",
        "cursor": {
          "ref": "3bdb8954-37c2-4f39-8ee5-313baa8b5191",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "03e8756b-9bca-4af9-934a-ac85da2ce8a5"
        },
        "item": {
          "id": "ad4c3580-3dd6-4013-9a0a-744b57a31a16",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3122a45c-663c-4c2f-8e3a-dfef0e31956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba45144a-c06a-46c0-b1e5-1e8dd205ffff",
        "cursor": {
          "ref": "66ca02a5-6be4-4b70-b7b3-95e4c5d17144",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "03cd133d-fe59-4630-b69e-31fb713a505c"
        },
        "item": {
          "id": "ba45144a-c06a-46c0-b1e5-1e8dd205ffff",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f3bced7e-2f30-48a7-a4b5-d354e8b01881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78e3215-fd5b-4004-88ef-197320659d82",
        "cursor": {
          "ref": "98a3075d-cbe3-4ada-873a-978708ab3f72",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3d14dd6d-bbf7-402e-883e-04dfd78bda85"
        },
        "item": {
          "id": "c78e3215-fd5b-4004-88ef-197320659d82",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "acd5211d-b484-492f-bcc1-bca2605caae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9c433f-ea20-4d22-aff8-9daa38129a1a",
        "cursor": {
          "ref": "f591e56e-209b-42d0-9638-26b6899d4c11",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "93566403-f433-47bb-ad54-a5e0a1e2072e"
        },
        "item": {
          "id": "5c9c433f-ea20-4d22-aff8-9daa38129a1a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "04fe1a32-6513-4305-89d6-6687d9b87930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15976413-d0df-4578-8daf-d53b4b49ed55",
        "cursor": {
          "ref": "53fc0b1f-d2fa-491f-adfe-7ed2d0bd93ce",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "be109b82-e8d7-466c-a0ff-e75c07a24b39"
        },
        "item": {
          "id": "15976413-d0df-4578-8daf-d53b4b49ed55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "96d73a01-a553-45bd-8a28-34626a23623e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b1b14-abcb-4f3b-9e63-3d5f5414dd28",
        "cursor": {
          "ref": "bdd4b38c-c4dd-4fa9-a1f7-86d3bee9a5f7",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a234e6cd-5d87-46ff-8131-388e2eb31171"
        },
        "item": {
          "id": "595b1b14-abcb-4f3b-9e63-3d5f5414dd28",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ca54fa22-3a68-4f34-a9c7-3e75285f0298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a366169-5112-4bb0-a117-b2257b25dbeb",
        "cursor": {
          "ref": "88e3eb90-9e61-486a-a41b-aaa29e48c90d",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7fdd5e69-15d0-44f5-94a3-418a82c8b63e"
        },
        "item": {
          "id": "4a366169-5112-4bb0-a117-b2257b25dbeb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f52cc053-2f31-4ad8-9ff7-179e44e6cd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab7ac2e-f609-42f2-9557-db301f1711d9",
        "cursor": {
          "ref": "25509813-ac35-4853-8ad8-4731dde0e3ad",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "017348e2-1eaa-495f-831f-6a316fb5ff88"
        },
        "item": {
          "id": "6ab7ac2e-f609-42f2-9557-db301f1711d9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "daefcfb4-fe5f-4328-9784-41fadf637190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d728e4-8a5c-49d2-8d84-59eb928017cb",
        "cursor": {
          "ref": "81a18f1c-3fcf-41f8-b574-59e9cc276d3b",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8f679c96-1aa7-42e1-9cad-47d3f2c33566"
        },
        "item": {
          "id": "19d728e4-8a5c-49d2-8d84-59eb928017cb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2a88a659-dafd-432a-92d6-be852e47d065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a18383-42c8-4614-a2e3-492554461685",
        "cursor": {
          "ref": "385cbbc7-ccc7-45ed-8d9d-e4bb8f03b8d8",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "56fa1c34-bf1e-4f28-a17c-17f5a980a860"
        },
        "item": {
          "id": "c4a18383-42c8-4614-a2e3-492554461685",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "424b9161-6b34-48ce-9e99-881a72d969c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adfddfd-b9fb-4c2e-8c86-07d219825812",
        "cursor": {
          "ref": "097ba715-f718-454a-a78e-20a219f3f9b2",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c7efcd52-1a2f-4d98-a319-982285a9d777"
        },
        "item": {
          "id": "2adfddfd-b9fb-4c2e-8c86-07d219825812",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bcd9cb65-24ae-4460-b4b1-4c1db10b3ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf857626-5024-409b-bd2a-79d8ec5991bb",
        "cursor": {
          "ref": "ad7453a4-cfda-47ca-9ce5-b8a4b1beefe5",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5bdd6e5c-a018-44d3-8f12-04eb1eb849e1"
        },
        "item": {
          "id": "bf857626-5024-409b-bd2a-79d8ec5991bb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "acd53743-981b-4f2f-89fc-ed0a62538fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc549048-1e24-45e1-81f8-ee49640f56de",
        "cursor": {
          "ref": "4b882f4b-694a-4aa8-ac92-08d1c5e5d888",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1aa768ac-9585-415e-bf81-191899e83b5d"
        },
        "item": {
          "id": "cc549048-1e24-45e1-81f8-ee49640f56de",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "99ba1906-2766-49a8-a430-e6bc2889e925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a180a9f-ed3f-4a23-a0f8-c84c8edeff73",
        "cursor": {
          "ref": "4a340709-3112-4675-99dc-a0bcb28e82fd",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "96db324c-0e3e-4389-b6d0-eaa36f9a1d46"
        },
        "item": {
          "id": "8a180a9f-ed3f-4a23-a0f8-c84c8edeff73",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6d0d3516-b8c7-4f5a-9dfa-f594fce9f9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c97653-3517-4852-9a39-4032e1033335",
        "cursor": {
          "ref": "4942ba5d-d3a1-4d05-9d33-fe6e627ba7f9",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "960284ac-0314-43fd-b948-97d663c496e1"
        },
        "item": {
          "id": "23c97653-3517-4852-9a39-4032e1033335",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0dbed6dd-86e7-4592-8622-fc70a11ff690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b395a5de-f006-4f85-802a-d041b838722a",
        "cursor": {
          "ref": "45c7dc28-dd90-443c-8726-a82301969cd0",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "89964b4a-b957-4985-bc31-0f805df22d40"
        },
        "item": {
          "id": "b395a5de-f006-4f85-802a-d041b838722a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fcb1fa27-c737-4383-8897-82ba98edf916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79235ed-8821-4dd2-a283-7f02b83a9cc6",
        "cursor": {
          "ref": "cb24c0df-07f6-40ac-8326-ff5103a71ef4",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "db2b6ea2-1b76-41e1-b8fd-222e3296909a"
        },
        "item": {
          "id": "f79235ed-8821-4dd2-a283-7f02b83a9cc6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d69ab657-0c16-4839-88ed-eac598732c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d7cff9-63e2-42a0-bfd2-80a43b4fafdf",
        "cursor": {
          "ref": "e0358be1-e442-4bc7-b888-211c55a2f28f",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c8480e0e-3e19-4f6b-883b-596c97821663"
        },
        "item": {
          "id": "13d7cff9-63e2-42a0-bfd2-80a43b4fafdf",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7b33be10-bc61-46ec-a3e8-f84f7286b53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3320d95e-f209-45bb-9980-528ad07f37a7",
        "cursor": {
          "ref": "cea71081-be0a-4708-9dcd-caada8f4f128",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "49a3692e-f0df-417e-b89c-f5f692bf9308"
        },
        "item": {
          "id": "3320d95e-f209-45bb-9980-528ad07f37a7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a501321d-03d1-403f-9635-2b0481e59e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d96a72-a14a-481e-a3f1-d8a12f271728",
        "cursor": {
          "ref": "ca3324cb-1a4a-430f-abd4-fed3ee3a8aab",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f84de302-c766-4182-a54f-4c065adabdb0"
        },
        "item": {
          "id": "d1d96a72-a14a-481e-a3f1-d8a12f271728",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "82c7b1b7-afb0-454f-bf8c-0bb52a78618f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfeb6ee-2e30-4e40-8e99-fade545d624c",
        "cursor": {
          "ref": "6bc1415c-5470-4181-875f-7f5a6b5f054c",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "783e9c56-6a0f-466c-92a1-86d9381f6f6f"
        },
        "item": {
          "id": "cbfeb6ee-2e30-4e40-8e99-fade545d624c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "83b5392b-1631-4178-a361-56f5580a7e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacf6420-4ab6-440f-9b03-fb0d3594c7b6",
        "cursor": {
          "ref": "ac02bf0f-d9d8-40be-96bc-8b8dec45adff",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "da5745a6-22b2-42f6-8b94-6f73b46aa3b1"
        },
        "item": {
          "id": "cacf6420-4ab6-440f-9b03-fb0d3594c7b6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "42e13c82-ba21-4be4-82b0-bce13413d513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454a9076-5b6e-4418-8fd5-8d709701f9cf",
        "cursor": {
          "ref": "278469c8-7cbf-41d9-941b-16d28d891f90",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bdad8e5e-79df-49a9-b16e-dcf3e04e3673"
        },
        "item": {
          "id": "454a9076-5b6e-4418-8fd5-8d709701f9cf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8ff46982-b0e2-4371-b2fb-a272a91298f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b6e54f-e611-445d-8e21-055e2971bf1a",
        "cursor": {
          "ref": "3f733af0-6e90-431b-927c-b6c4ea239733",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f994b048-aced-465c-884a-30c02bc3b1a1"
        },
        "item": {
          "id": "d7b6e54f-e611-445d-8e21-055e2971bf1a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "44241f5c-5ce5-450f-b481-e1830d4068cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad00daf-f8ff-4d15-8695-0961ebf14a53",
        "cursor": {
          "ref": "582156b0-a8c5-41a3-8ee5-91be43aeed20",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a71de158-4857-4928-81e4-d8ea0c7b2a75"
        },
        "item": {
          "id": "0ad00daf-f8ff-4d15-8695-0961ebf14a53",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "633b4f57-8c85-4c49-bbd8-7597193430e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c04cc16-0489-442f-8007-dbe2bb0107af",
        "cursor": {
          "ref": "396e7edd-e997-4531-ae55-d64ec4adf073",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "49e7719c-50fc-441d-9421-aa932149b7ba"
        },
        "item": {
          "id": "1c04cc16-0489-442f-8007-dbe2bb0107af",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6f047ba6-13fa-4b5c-95c0-7f2b16d96ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8becab67-7d48-4a68-a7b5-14f29d68eef2",
        "cursor": {
          "ref": "37f6e970-0ea9-4bee-85d1-da06eaef68e8",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6b52d003-ac5d-4b99-ac9c-5e339497a0ae"
        },
        "item": {
          "id": "8becab67-7d48-4a68-a7b5-14f29d68eef2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "623082a5-59e8-4b3c-bf79-d3a5ec7061f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186ba614-3d55-4b8f-9b6d-9d8c1b929d2b",
        "cursor": {
          "ref": "9f6b8cef-a724-4191-9964-adbbef2919fb",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cf11f149-5c88-4485-8995-8320cbef4204"
        },
        "item": {
          "id": "186ba614-3d55-4b8f-9b6d-9d8c1b929d2b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "99eea15a-15d2-412e-bd1f-37ba0ce4c4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983811d-9325-482c-8378-cf75ad15ed33",
        "cursor": {
          "ref": "90b59812-6a57-4b1d-a52f-9606e045636b",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "31bf0c79-c20d-4a52-a78f-fc911b78e966"
        },
        "item": {
          "id": "6983811d-9325-482c-8378-cf75ad15ed33",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ec36ba32-0efc-40ce-b085-da810da0d0d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9175bf4-c707-4d9f-968c-1f42e1cd05fa",
        "cursor": {
          "ref": "0c2b7c7b-c509-41d2-aa06-4b32a615f1a8",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "06314c67-fe78-4e5a-92da-7c6409a5034e"
        },
        "item": {
          "id": "b9175bf4-c707-4d9f-968c-1f42e1cd05fa",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "883b2fe5-0e2b-4a95-8d69-67be4ea5acbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc71b116-24fd-40f7-b2d8-a228c5cc5188",
        "cursor": {
          "ref": "3f279a46-a7e8-41c0-bba8-2ac42aa3b7dd",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2264565d-62ce-4e0d-8b62-e5e0630664b0"
        },
        "item": {
          "id": "fc71b116-24fd-40f7-b2d8-a228c5cc5188",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "879904b4-2270-498b-8f50-077bbb37855a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644f931a-f4a5-4667-a5ef-c2f25403c2ab",
        "cursor": {
          "ref": "48d358e4-d93d-4e3d-aae0-e0d7c414626e",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2ce65eaa-4111-45f0-a028-3fb272a8a6bb"
        },
        "item": {
          "id": "644f931a-f4a5-4667-a5ef-c2f25403c2ab",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "80f14276-6ecb-47f0-bcf4-4ba6f62fa453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cff771-4713-4e76-9670-b294b0533757",
        "cursor": {
          "ref": "fa720fed-bc2d-4768-b8e0-a5610e71cc9a",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "017cc53a-fe9a-4938-bb7d-6307cc71c91a"
        },
        "item": {
          "id": "a0cff771-4713-4e76-9670-b294b0533757",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6f046d14-bc5c-45b4-8019-c53403f1c1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813ed349-ccd1-45ef-9338-ec261d1518c4",
        "cursor": {
          "ref": "77782c49-e9a3-4b3b-8ff5-f669496fbc36",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b081a14e-bd55-4ef6-a8d1-d802310b531b"
        },
        "item": {
          "id": "813ed349-ccd1-45ef-9338-ec261d1518c4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "11059ff9-d754-477d-a947-e17264f05446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db36104-c601-4281-917d-77e884ad009d",
        "cursor": {
          "ref": "3e1b4c0a-a9ba-47fa-9b1d-ea69a2598f17",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b6821ad6-f362-40c0-bfd8-4bf2bc4c7db8"
        },
        "item": {
          "id": "3db36104-c601-4281-917d-77e884ad009d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f9426bf5-ce1c-43b6-b2ae-c8094b816837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2684d1ed-177b-4a62-96f4-abe1740d5d9a",
        "cursor": {
          "ref": "84c7983a-fd3e-460a-9755-f69638cbaf82",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "30e35ed8-80bf-49a8-9a60-14833bda5115"
        },
        "item": {
          "id": "2684d1ed-177b-4a62-96f4-abe1740d5d9a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ccfef85b-bbf8-4c9a-a60a-f4feea4597b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e453249-4060-4ec3-9c4f-6497ba41065d",
        "cursor": {
          "ref": "1238af95-118c-423e-8669-ca0ede7d07c4",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "6b89b748-2bc7-4f85-871d-7e7d4137b512"
        },
        "item": {
          "id": "6e453249-4060-4ec3-9c4f-6497ba41065d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2f1055c6-74e6-4b17-b994-af40fb7da6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697e3d74-6d43-4e66-bc07-cf9ac361a712",
        "cursor": {
          "ref": "477edb84-c1e4-4d24-ab92-d356e1d9d9b8",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "827f5bcf-737c-4dcd-9350-4f29ea8237b2"
        },
        "item": {
          "id": "697e3d74-6d43-4e66-bc07-cf9ac361a712",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a44cd371-6438-47be-b471-063bb38bcc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c081cd-29bf-45e2-914a-994e08c49d1e",
        "cursor": {
          "ref": "be1643b5-89ad-4fd1-b900-4514025acbdb",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b935c864-92a1-4a71-a1f3-a8958d86d29c"
        },
        "item": {
          "id": "15c081cd-29bf-45e2-914a-994e08c49d1e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6682c74c-8eb1-4db9-96da-b1591a9bf134",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af68a8d2-6b86-4041-8b68-a8994ae7e982",
        "cursor": {
          "ref": "26ddc431-9bc5-4c14-bbc4-7c4f7b0319f7",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "95174721-a017-4e37-bfda-332494b6a833"
        },
        "item": {
          "id": "af68a8d2-6b86-4041-8b68-a8994ae7e982",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b0c09f82-2b55-4122-95c5-17770c32f7ff",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ded5ce-adf4-4045-819e-8a6c545c84fb",
        "cursor": {
          "ref": "9de33638-2911-4d1b-82f1-0f3d7c53a60b",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f873444b-7b5e-4796-a594-22e79bb5a723"
        },
        "item": {
          "id": "f0ded5ce-adf4-4045-819e-8a6c545c84fb",
          "name": "credentials_issue"
        },
        "response": {
          "id": "37803559-e068-4709-96a3-7dac70ea220c",
          "status": "Created",
          "code": 201,
          "responseTime": 5216,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "3bcebe6b-65e0-452e-b4b5-53dc3eb1b67b",
        "cursor": {
          "ref": "a7181509-b039-4f51-9c0c-36f9fb29eb47",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d456f18d-50a7-4583-86af-8b7abff9d302"
        },
        "item": {
          "id": "3bcebe6b-65e0-452e-b4b5-53dc3eb1b67b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "6c6d0018-6b91-45b5-bc5b-2c2ffe2d1832",
          "status": "Created",
          "code": 201,
          "responseTime": 3791,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "294ecef1-341a-43f9-8f77-64e133d97b1b",
        "cursor": {
          "ref": "30726348-ee4b-4952-9255-a55ebb285214",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "80d1791e-fe85-41c4-ab5c-fa3631915cb8"
        },
        "item": {
          "id": "294ecef1-341a-43f9-8f77-64e133d97b1b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e87d1256-c543-4dc1-bcad-b83be133d339",
          "status": "Created",
          "code": 201,
          "responseTime": 3957,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "8c5b50ce-0e94-4f94-9723-464f2a8f01cf",
        "cursor": {
          "ref": "71b0120d-0c17-4dd3-b8dc-31e78d670064",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "abc26174-d450-401f-bd27-47b52943f63f"
        },
        "item": {
          "id": "8c5b50ce-0e94-4f94-9723-464f2a8f01cf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "31ef0070-1190-4638-b940-ed8eef5107e0",
          "status": "Created",
          "code": 201,
          "responseTime": 3655,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "3b27a582-18d7-42ea-b086-81d085ec4473",
        "cursor": {
          "ref": "da9a61c9-bc08-46b5-b4dc-308bc273a29d",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "935e379a-53ec-4689-a0af-6f0395de82b5"
        },
        "item": {
          "id": "3b27a582-18d7-42ea-b086-81d085ec4473",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "5a9c9a51-1bf9-42e5-97bb-a1ac9c2540d2",
          "status": "Created",
          "code": 201,
          "responseTime": 4458,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "858fa05d-dc4e-4f58-ad46-af09dccfc827",
        "cursor": {
          "ref": "301932f5-c420-4956-a11b-4f8bb389f184",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c986fbdd-a2f6-4ba0-a28d-8a23519ae25f"
        },
        "item": {
          "id": "858fa05d-dc4e-4f58-ad46-af09dccfc827",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9cc3e7ff-bcc1-4a0d-a7d4-3f0700168d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858fa05d-dc4e-4f58-ad46-af09dccfc827",
        "cursor": {
          "ref": "301932f5-c420-4956-a11b-4f8bb389f184",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c986fbdd-a2f6-4ba0-a28d-8a23519ae25f"
        },
        "item": {
          "id": "858fa05d-dc4e-4f58-ad46-af09dccfc827",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9cc3e7ff-bcc1-4a0d-a7d4-3f0700168d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dff0f4-5fed-4f87-a6d4-c607b9a65e96",
        "cursor": {
          "ref": "547babfa-063a-4f49-b4c3-592159ae1241",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ec59f44d-b0ef-444a-99e3-4d918040a72f"
        },
        "item": {
          "id": "35dff0f4-5fed-4f87-a6d4-c607b9a65e96",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aea7b829-3b2c-4616-b167-3e235c6606a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01e6420-570b-4bf7-8218-c6db46fc9636",
        "cursor": {
          "ref": "8e7cc74d-16df-48bc-9a38-6f9031cdf680",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d5eea919-e0e4-4f4d-8e49-618caf57d0e6"
        },
        "item": {
          "id": "d01e6420-570b-4bf7-8218-c6db46fc9636",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "31212791-6b65-4a74-a51c-2f063745702b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68192926-93f3-4b8f-ae88-ae8b8899a8af",
        "cursor": {
          "ref": "b2e45da9-da09-4c49-b5e2-a067d3a43411",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6e98b155-9d9e-45f3-b71c-a31f743cbcd1"
        },
        "item": {
          "id": "68192926-93f3-4b8f-ae88-ae8b8899a8af",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0d3cd24b-14ed-4de0-ac48-b4406071deeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b76dda-345b-467d-8ca3-dd3548c76f88",
        "cursor": {
          "ref": "6177341c-2a54-4e08-9f41-29e0a59e1b26",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1773a5e8-83ec-4213-a438-3e6196c37e03"
        },
        "item": {
          "id": "01b76dda-345b-467d-8ca3-dd3548c76f88",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7b4ab7f-25a2-4775-b5d3-9549a963dfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cd240c-99c3-4dca-bf36-e7357ffd2614",
        "cursor": {
          "ref": "713e4f3c-ec2d-4d9b-84d9-d035217c217e",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "acb915f5-22a7-4ffd-b3b7-a41096a454d2"
        },
        "item": {
          "id": "44cd240c-99c3-4dca-bf36-e7357ffd2614",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "128d347e-fd53-4728-b649-eae07e2f9fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1f4d60-9100-4a73-9749-ee570a6b809f",
        "cursor": {
          "ref": "324900a7-093d-4ad3-8297-5c84fb5802d2",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d0c86eaf-67e0-4582-a917-b29f6b268c44"
        },
        "item": {
          "id": "fc1f4d60-9100-4a73-9749-ee570a6b809f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c14fac7c-027a-470b-bc27-637338ebf55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35b9518-80b8-4610-af4a-f030a798a033",
        "cursor": {
          "ref": "cb8db273-3cf5-4aec-ae97-1cd47b3e7fc4",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3538b4bc-b2c6-4d74-9292-9cb1b947f1a8"
        },
        "item": {
          "id": "b35b9518-80b8-4610-af4a-f030a798a033",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1530d92a-8b45-4fea-a44d-c50d97781357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3080f8-30bb-492c-b8b7-f2707cbdf8a3",
        "cursor": {
          "ref": "f761e0a9-0939-4968-8286-f3b2528fe6cf",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "831e42ed-717d-4be7-a956-2023bca433fd"
        },
        "item": {
          "id": "ee3080f8-30bb-492c-b8b7-f2707cbdf8a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d9267e6d-b575-4636-9418-f98eb00c3f45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98c6b19-1f4c-41f3-87f3-2bb21bb1b289",
        "cursor": {
          "ref": "f0e5cba0-4f1d-44a4-902e-75d627482981",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8849d94f-b377-4d3a-9754-07beb11c9fe4"
        },
        "item": {
          "id": "b98c6b19-1f4c-41f3-87f3-2bb21bb1b289",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4d2dd15a-1e6b-4d4a-b041-453bf33bc7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e303877-9150-4185-b3cb-f4b5521cfc91",
        "cursor": {
          "ref": "053f047e-d134-49f3-9e09-91e9e437583b",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2a37efe3-77e8-4b14-8116-382cd4994427"
        },
        "item": {
          "id": "7e303877-9150-4185-b3cb-f4b5521cfc91",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f71781de-6a84-420b-a92c-a2a2a73cc3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655716e0-c79f-4c8f-a13a-9a05db073669",
        "cursor": {
          "ref": "4b21587c-2921-46e1-99d2-fea3905529f8",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d0d93299-c827-4cb9-9c5c-d66bff219ebe"
        },
        "item": {
          "id": "655716e0-c79f-4c8f-a13a-9a05db073669",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0078e92b-ff6e-4197-a09a-cb2274943f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f100717a-fb27-4304-bfd6-5e65b893d605",
        "cursor": {
          "ref": "a61c48eb-7c50-4d55-94c2-8be9d40adc51",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "714763f9-9927-4738-8e65-e241e95d6b6c"
        },
        "item": {
          "id": "f100717a-fb27-4304-bfd6-5e65b893d605",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "eb03cbab-e2e2-4902-b3ea-ee5070a3e4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f59950-feb1-45a1-8ff8-66b131c37a3f",
        "cursor": {
          "ref": "22d526fe-5641-4e4a-9b42-3a75096370d2",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aa96d6de-64df-433d-8478-ca6acd9b8349"
        },
        "item": {
          "id": "a0f59950-feb1-45a1-8ff8-66b131c37a3f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7b80e249-8318-4cba-8820-c73c1b9d357a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4442090-0cc4-481e-b1f7-2934cb1613e5",
        "cursor": {
          "ref": "d3da0951-bee0-46b9-a74a-6d54cee4887a",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "91c7287b-eebb-4287-af58-3617635cd543"
        },
        "item": {
          "id": "e4442090-0cc4-481e-b1f7-2934cb1613e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cb8a9744-3307-4965-8051-497d3c9e0350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca76cb66-146c-4c00-9f99-30e6db66df65",
        "cursor": {
          "ref": "642710ca-17d2-47a4-81a7-66d21ad927b0",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "62db208c-1289-47b6-9dee-7af3e501c641"
        },
        "item": {
          "id": "ca76cb66-146c-4c00-9f99-30e6db66df65",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "90721917-dc7a-49d7-8ab7-e561d06c9d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbf2965-908e-4746-baf4-aa953124051b",
        "cursor": {
          "ref": "c6dd3cbb-3468-4737-92f9-a37d8c9c63c5",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "223d26e9-bd19-46e1-908e-4d7a96af4d44"
        },
        "item": {
          "id": "9bbf2965-908e-4746-baf4-aa953124051b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "39955952-5103-4519-9d19-76798259c146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9908c2e-fcc2-4102-9a6c-74be3d977a10",
        "cursor": {
          "ref": "ca70a032-fcca-478d-9318-84a001f033b7",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5313f1fd-3796-43b2-be6d-34cc7db43b50"
        },
        "item": {
          "id": "b9908c2e-fcc2-4102-9a6c-74be3d977a10",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf52d5bf-82ec-4cc5-a633-9b21b5bc3aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d8d7a6-e821-4358-be25-5c91bdd7d984",
        "cursor": {
          "ref": "0f82efb0-91fb-4433-b885-5a658b55fdd9",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0bab7629-ed55-4ea7-a622-5a05ed53a9e2"
        },
        "item": {
          "id": "c5d8d7a6-e821-4358-be25-5c91bdd7d984",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c7ded22e-bbf3-49a5-aa4e-177724135c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6b5c16-cd09-4385-a3ed-e3559cb1f326",
        "cursor": {
          "ref": "1cb3794c-7526-4f7f-8a0b-f1caa9488f33",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d87a466d-3242-4acc-8799-2e63add8e20d"
        },
        "item": {
          "id": "8a6b5c16-cd09-4385-a3ed-e3559cb1f326",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7172c604-ea0b-42aa-a5ac-7f1345e7904a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824e837-0705-4d37-96dd-bc3e06ec7666",
        "cursor": {
          "ref": "acf5f781-1e73-45f6-bc42-90feac712c72",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7717621f-dc82-4683-b3ea-9dd1ecdf69c0"
        },
        "item": {
          "id": "d824e837-0705-4d37-96dd-bc3e06ec7666",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8d5cace3-8882-44a2-a1be-7b5daa667b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fb6774-f5ee-4b07-9e79-d32f64ef2aee",
        "cursor": {
          "ref": "f25f996e-07fc-4a62-b77c-8a5773d578a7",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a9ae59b8-e320-4c38-953d-93977295cd0b"
        },
        "item": {
          "id": "b2fb6774-f5ee-4b07-9e79-d32f64ef2aee",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98ae3400-a696-48d8-b909-17ff7240ee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f944d17-bc4e-4f72-97a6-9e03e025da49",
        "cursor": {
          "ref": "3d4b0102-3ef1-41e4-a527-51db81316373",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5faa9029-7aed-43ba-bca7-a6373a384792"
        },
        "item": {
          "id": "1f944d17-bc4e-4f72-97a6-9e03e025da49",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a2ff71db-2db9-460f-b395-249e958a1888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb80c5b-c731-4642-9209-d4c1e72a67d5",
        "cursor": {
          "ref": "2962917c-cc0a-4182-974c-20c76a8caf02",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4837fd77-78f6-47b8-ad06-6aaf60f93d26"
        },
        "item": {
          "id": "3eb80c5b-c731-4642-9209-d4c1e72a67d5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "743b8259-9459-402c-bc27-256a294e41fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3dc9c6-f7ae-4f5e-b736-f4a3dd33d006",
        "cursor": {
          "ref": "6af94c1b-26ba-496e-8bb2-314e7ee77512",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c78fc32b-16f1-4ee0-9498-929e72a087d3"
        },
        "item": {
          "id": "ee3dc9c6-f7ae-4f5e-b736-f4a3dd33d006",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "50f7f9aa-a648-4879-81ce-4f945f9d5f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eae551-505f-416c-b536-f509cf818f7a",
        "cursor": {
          "ref": "d64a4826-1997-4886-9005-0ba82cc90e4c",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e4849f14-2c4b-4a38-83d6-e7cea1ae23f8"
        },
        "item": {
          "id": "32eae551-505f-416c-b536-f509cf818f7a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "245033a8-1fb0-449f-955c-3d384af87052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f8ae64-fffb-411e-b27d-4bb194fae9f5",
        "cursor": {
          "ref": "1b0d6112-8120-41b1-b1c3-650d2cd4cd88",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9771ba50-d899-4e5d-8e3c-78225c7f0f66"
        },
        "item": {
          "id": "71f8ae64-fffb-411e-b27d-4bb194fae9f5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0e0694b5-997b-4046-8e82-ee4eb1d05f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03646a42-aade-45c5-bf98-b7c355269a1f",
        "cursor": {
          "ref": "bf738bed-4cb6-4c20-861a-0aff8846da7b",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "dfd75dc8-42d8-4f3c-8bda-b92beb576d92"
        },
        "item": {
          "id": "03646a42-aade-45c5-bf98-b7c355269a1f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a64cd9ec-848a-4dac-889e-7be8059a7446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5ef26f-1e43-46e5-b0c8-3830ef4b3dd7",
        "cursor": {
          "ref": "884f159c-d840-4811-b4dd-13fe2b8ddbd1",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "91abeabf-4657-4432-8691-522dd9b6413c"
        },
        "item": {
          "id": "da5ef26f-1e43-46e5-b0c8-3830ef4b3dd7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "545392d9-9287-42d1-b857-066d66be24b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3ac312-90a9-4ded-b064-fd9e890df946",
        "cursor": {
          "ref": "0da380d7-360e-4d30-97db-b5b89e8de6df",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3f26d178-3fcc-405a-b3e8-73d8ae5b2110"
        },
        "item": {
          "id": "2e3ac312-90a9-4ded-b064-fd9e890df946",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f70dd69f-e0b5-4729-881e-9a1784d92aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbabdf9e-848c-4743-94ca-fa37a5ecaa96",
        "cursor": {
          "ref": "fcd64202-2b20-4995-b985-6d4d3de882b6",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6756e020-95b0-454b-bd8a-642cbfdd535e"
        },
        "item": {
          "id": "bbabdf9e-848c-4743-94ca-fa37a5ecaa96",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a241790f-46cd-4612-85d5-5e4e296b5be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9538fa29-fd40-4751-a8df-39023c869d1b",
        "cursor": {
          "ref": "bbbbcb9c-c93d-4ce7-975e-4b310ec56bdc",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "09588131-e267-438e-be9f-04a60c4cc8ac"
        },
        "item": {
          "id": "9538fa29-fd40-4751-a8df-39023c869d1b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c620079-aa76-45a1-aa8c-c2cc854bf27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8883331f-055c-40eb-b46b-713f5191027d",
        "cursor": {
          "ref": "c48c69a4-bf0d-4dc1-b463-bf6819c26dae",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "aca5bd33-1a1a-4eb3-afea-67b2c1e40cf9"
        },
        "item": {
          "id": "8883331f-055c-40eb-b46b-713f5191027d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "bbcb2985-fe93-46aa-adfd-5efff0e2cb1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2d5e19-e5dc-48be-a013-da0893e9b568",
        "cursor": {
          "ref": "9bf2c23b-cb2d-4917-9931-769a397375ff",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b935100c-35cf-44f8-b276-1665efbbc493"
        },
        "item": {
          "id": "0b2d5e19-e5dc-48be-a013-da0893e9b568",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "083b15bc-9cd4-4d59-b1c1-94892fc7e01f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 600,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57b787d-9642-441b-abda-e1c7c5f305ba",
        "cursor": {
          "ref": "c504da76-6d1e-4844-8295-dc4d04fa0c31",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e033f991-3e28-4ef0-ad58-6d3c60c0ebeb"
        },
        "item": {
          "id": "a57b787d-9642-441b-abda-e1c7c5f305ba",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "149f2e0c-2975-46ab-b289-a61c75c26c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57b787d-9642-441b-abda-e1c7c5f305ba",
        "cursor": {
          "ref": "c504da76-6d1e-4844-8295-dc4d04fa0c31",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e033f991-3e28-4ef0-ad58-6d3c60c0ebeb"
        },
        "item": {
          "id": "a57b787d-9642-441b-abda-e1c7c5f305ba",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "149f2e0c-2975-46ab-b289-a61c75c26c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0fe428-555a-47d7-934f-8858147b9448",
        "cursor": {
          "ref": "666abe64-3fe4-47b6-b3f2-6e96c71ea784",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6c3cf120-1f7c-47dc-8481-3d92ef8981fa"
        },
        "item": {
          "id": "ef0fe428-555a-47d7-934f-8858147b9448",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "51421be4-faa4-448e-82d7-95928f0128f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a99c191-86c5-43be-bb9a-6e5c71ba622f",
        "cursor": {
          "ref": "45986361-dabc-4304-a3df-13eb54e65820",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e2222a0d-f888-4943-aa8a-c47c9c95ca8c"
        },
        "item": {
          "id": "2a99c191-86c5-43be-bb9a-6e5c71ba622f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dd29b924-930d-4cab-8f7e-de93577ff0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4f6571-a4aa-4116-8e44-ba590531ac11",
        "cursor": {
          "ref": "13f00688-758a-43db-80a3-1307d575c199",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9a7e1757-c2f1-4bfe-bb41-b87439554b12"
        },
        "item": {
          "id": "1a4f6571-a4aa-4116-8e44-ba590531ac11",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6598d4fb-64de-4a0a-a920-68cae5eed470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f81df0-8c60-497c-9a7e-2660dbfaba40",
        "cursor": {
          "ref": "37500dcd-0311-4d5f-8e23-52c93752492d",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4683462b-0eff-46d0-81e5-0c11d4cebdce"
        },
        "item": {
          "id": "e0f81df0-8c60-497c-9a7e-2660dbfaba40",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7831edeb-7f1e-4b21-8130-2a4cd7f04d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc8b51e-d811-4949-b5a9-a9efbf6107a6",
        "cursor": {
          "ref": "95eb2f6a-a916-45c7-86a1-7fe120ce1cfb",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1e0fb2c9-4fbc-433f-be12-9f975701047c"
        },
        "item": {
          "id": "8fc8b51e-d811-4949-b5a9-a9efbf6107a6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cabf3698-f1a7-47fa-bac4-d45fd5563ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ddc544-a28f-4132-9310-ebc413188ca7",
        "cursor": {
          "ref": "ba3fcea6-3f74-4893-a752-178c1ab948e8",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f2710c0f-53dc-48fc-b8e9-6de80aba5923"
        },
        "item": {
          "id": "09ddc544-a28f-4132-9310-ebc413188ca7",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6794ec3f-da24-4450-937b-6d341e14e07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff20b174-622f-487c-b69f-82fd00b4d132",
        "cursor": {
          "ref": "426c88b9-9467-4f0a-9301-51e64e05d61b",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d85ae8e5-419b-4d04-93b8-78e8bdc57d4a"
        },
        "item": {
          "id": "ff20b174-622f-487c-b69f-82fd00b4d132",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b593b32c-410f-4736-aa56-2dad511eaff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d599e401-c47f-42e9-8b52-abf901fa37e8",
        "cursor": {
          "ref": "b2f8125b-e047-41fa-a2b9-e6ae549c627f",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "421adaaa-0a3c-4451-a117-a9b6a9be4cc3"
        },
        "item": {
          "id": "d599e401-c47f-42e9-8b52-abf901fa37e8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a0c2497b-d73c-4007-b3a0-dec77d67a73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9763dc7d-d226-4c92-b45b-717f6319c826",
        "cursor": {
          "ref": "262a03b9-91f5-408c-b035-473d96e66a34",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4fd6dab8-a0cf-4f50-a6e1-1a46103c65a6"
        },
        "item": {
          "id": "9763dc7d-d226-4c92-b45b-717f6319c826",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f918d1d4-b0d3-43fa-ae39-4687d6294681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4e161b-9c46-40b9-bd51-5b5debfa1d8a",
        "cursor": {
          "ref": "c881eabe-6878-48c3-b302-f81252433dc9",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9e2f5f9a-bbb2-40cd-b416-21a41104d803"
        },
        "item": {
          "id": "ae4e161b-9c46-40b9-bd51-5b5debfa1d8a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a4bd8444-fccb-40c7-84e0-3ee09b20b1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2829583c-a263-411c-b2f3-bb4712781a64",
        "cursor": {
          "ref": "1c7a73ac-8c0c-49ac-90f0-2be45a902c34",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3ffa6fe4-e8fc-403f-9b09-a45d48008af1"
        },
        "item": {
          "id": "2829583c-a263-411c-b2f3-bb4712781a64",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f9be11d1-3880-4207-8524-cd4091959879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acbfb30-b59b-4963-9566-0b7e8d93bac1",
        "cursor": {
          "ref": "455a4d5c-f44e-443c-99e3-6ab833aaf4ab",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f8162730-bc77-49bc-9d38-9d3e016161ea"
        },
        "item": {
          "id": "6acbfb30-b59b-4963-9566-0b7e8d93bac1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2eecd44e-7107-4a89-acca-45a4bae7f707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88bf6a58-fc94-4030-a07d-27961272f3e5",
        "cursor": {
          "ref": "a9c18a8c-0a3a-4a0e-90de-628c1ee081ae",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "671e917e-d4bb-4fad-a53d-98583cffc09b"
        },
        "item": {
          "id": "88bf6a58-fc94-4030-a07d-27961272f3e5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7e9e12e5-3384-40c8-9636-a0325388dc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01533f8c-cfb9-4ca4-b871-f542ef96c14f",
        "cursor": {
          "ref": "6c99cddb-8d34-458e-9c53-3adb3dabe51b",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bedd39ce-2bea-4e62-87c4-13f602f4a134"
        },
        "item": {
          "id": "01533f8c-cfb9-4ca4-b871-f542ef96c14f",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5f1024f8-ce00-482f-a939-e9c33afe633b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e89ca7-0573-4585-9c34-c4b5b31d7002",
        "cursor": {
          "ref": "3e5a2b5a-fa1a-476a-98ac-465418d98855",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a3998e8a-8506-439a-ad8a-9f6893a2eef0"
        },
        "item": {
          "id": "d9e89ca7-0573-4585-9c34-c4b5b31d7002",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "394e88e7-5981-42c9-810d-9768ab0c884f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b70ef9-adc2-4adb-bf53-8c8578cafbbc",
        "cursor": {
          "ref": "1377c3d3-acd6-40ad-8801-e5d025d5116a",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "342c3bee-7cc0-46b2-ba8d-b49d045c4584"
        },
        "item": {
          "id": "c9b70ef9-adc2-4adb-bf53-8c8578cafbbc",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "937bf022-a46a-41b6-b067-5affd692e45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608ad830-cc1c-4391-8eee-f614d2eca776",
        "cursor": {
          "ref": "e7682e05-8cdf-4c76-a906-45afb74917fc",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2eb69426-918f-4890-a192-7afb246e1d2e"
        },
        "item": {
          "id": "608ad830-cc1c-4391-8eee-f614d2eca776",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "1405c5f3-0593-4641-ba34-3569ff29b639",
          "status": "OK",
          "code": 200,
          "responseTime": 3207,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "da2a0dd3-2067-4e69-b378-17ad731307bc",
        "cursor": {
          "ref": "19731073-5c62-45b2-923c-984ba100d1ce",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "28d2fb12-4342-41bc-94cb-911ebc9e16f9"
        },
        "item": {
          "id": "da2a0dd3-2067-4e69-b378-17ad731307bc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4c6d9871-9729-44b3-86bf-467a9caba99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e212fb95-61b0-4974-86db-8173a42ae12a",
        "cursor": {
          "ref": "dfdaed3d-1b0a-478a-9523-75fbe7658ad0",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8d54e7a3-6be0-48b5-9342-3f09f07a2a65"
        },
        "item": {
          "id": "e212fb95-61b0-4974-86db-8173a42ae12a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5f082e29-51c8-46e9-bb67-d3439d184b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7c45a5-2b83-41a9-a7e9-02fd6f9196e5",
        "cursor": {
          "ref": "f1d2def9-d1a2-4653-afed-02db8eaacfce",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c00c4669-ecd4-4043-85b2-a5557539caae"
        },
        "item": {
          "id": "2d7c45a5-2b83-41a9-a7e9-02fd6f9196e5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "21d3296c-d734-4f63-8578-e03f57bf626a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169a110a-2fd1-44d8-93b2-38d9651d8838",
        "cursor": {
          "ref": "3896a5c0-dce0-4c4e-aee5-b55ba240d7dc",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "158a8eb8-39ee-4618-8960-a395282f02c1"
        },
        "item": {
          "id": "169a110a-2fd1-44d8-93b2-38d9651d8838",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "dc15f227-c25c-460d-ba7e-e6093ebc8ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe1560c-0e7c-4e94-9dec-41fd65856868",
        "cursor": {
          "ref": "e43473ea-5647-4772-bead-348b3c2c8139",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "72611a80-b007-4d78-8587-bcae229b818f"
        },
        "item": {
          "id": "6fe1560c-0e7c-4e94-9dec-41fd65856868",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "597270c6-0f70-4f11-a402-62a61690ff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe6ab72-1c97-47fa-a671-1eb616a99a1f",
        "cursor": {
          "ref": "8c4c6ca1-996d-41c4-91be-3c73d6be116c",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "df8004e8-9fe6-4bd5-82a7-4de2a31f1c05"
        },
        "item": {
          "id": "4fe6ab72-1c97-47fa-a671-1eb616a99a1f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8585dc60-f247-4283-9cb6-9bb4fa9510fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7628d8cb-5f02-4b12-b89d-22ffb0723f18",
        "cursor": {
          "ref": "d9e76225-23fd-43c0-93b0-ef228a0959dd",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d6412eb8-0e09-4b2c-b444-94539772e9ef"
        },
        "item": {
          "id": "7628d8cb-5f02-4b12-b89d-22ffb0723f18",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3208c3ad-ee2f-41c4-99b9-9528b1cae658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb545206-b438-4dc5-98e8-28541cb7b870",
        "cursor": {
          "ref": "2554ae9f-2fca-4bbb-8d74-24cce7c87530",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1ec27211-1c57-4f48-abd6-1f507eec1daa"
        },
        "item": {
          "id": "eb545206-b438-4dc5-98e8-28541cb7b870",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "62084ec2-a903-401c-a8c4-3acb0af1a7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bd2bb1-4c02-4208-9911-0e6808b0d708",
        "cursor": {
          "ref": "d82052b8-fb5a-42ef-983f-66fbaa0e8c49",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d4e1424f-6f79-4e7f-8652-99c0a3b41e20"
        },
        "item": {
          "id": "f7bd2bb1-4c02-4208-9911-0e6808b0d708",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "43d2f836-b215-4b44-b28b-b49b0204a285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1175b1-4469-4f1d-a731-ba663ba3de2a",
        "cursor": {
          "ref": "cdb9dfcb-7be1-4c9c-b985-e1de8ea68aba",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8370419d-e5c4-4545-8e6b-8d124f723c5d"
        },
        "item": {
          "id": "7d1175b1-4469-4f1d-a731-ba663ba3de2a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "0bbfef21-c417-4fb1-9832-aed98fa3f618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d40ff4a-5a7d-4888-ab07-abe663d66331",
        "cursor": {
          "ref": "64b5e0fd-1489-4b44-a092-20ae068a9bf4",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "54f15e25-81d1-492a-951e-a83d013f1f88"
        },
        "item": {
          "id": "8d40ff4a-5a7d-4888-ab07-abe663d66331",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0526ef54-5733-4961-a8cc-f5e02e55376c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ed1e82-cc29-42c5-a4b9-c1875a11c7fe",
        "cursor": {
          "ref": "f04e07a8-f261-4ddf-ae5a-eadf6e60bb36",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c214b09c-70cf-4fc7-b99d-338abb111b45"
        },
        "item": {
          "id": "03ed1e82-cc29-42c5-a4b9-c1875a11c7fe",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c78a22e0-5b8e-4be6-9f0b-7e451fb39d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a0c0ad-7338-44f4-a932-ae2784d6973f",
        "cursor": {
          "ref": "6bcc011d-d4e1-4b67-aa9f-d93d4393c905",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2efc6918-c435-43cf-af44-606a67d25801"
        },
        "item": {
          "id": "93a0c0ad-7338-44f4-a932-ae2784d6973f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a8aeb0f5-03ac-46ec-9b71-dc38941990f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939add53-dcee-40e3-8a18-daa7f6cf135d",
        "cursor": {
          "ref": "6a248f6c-26aa-4466-98da-14311e5e9776",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "4ad10982-738c-4c4e-8d2f-55d94ed9f107"
        },
        "item": {
          "id": "939add53-dcee-40e3-8a18-daa7f6cf135d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f1cb5d9f-1e42-4bd9-89d8-6c0e2174b3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5816129e-b8fb-48db-90a9-5ed2ae2c90a2",
        "cursor": {
          "ref": "42766297-31c7-46a4-a0e7-91139941d855",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "bbaacbe0-9d58-44b1-a202-bdb7c39618cb"
        },
        "item": {
          "id": "5816129e-b8fb-48db-90a9-5ed2ae2c90a2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cf1c5a4c-4277-49e2-97b8-120f45b0ee93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1e7f35-71b3-48b4-8395-3681782e27d8",
        "cursor": {
          "ref": "69a7ea2f-7eb0-48b9-96f7-bf931155241b",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "beccff4b-f4f5-4cfd-9422-e402bd65247f"
        },
        "item": {
          "id": "7e1e7f35-71b3-48b4-8395-3681782e27d8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f14181dc-1b62-4961-a96d-8aae0b460403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a651d7-87d4-4e45-9267-564c83e23a57",
        "cursor": {
          "ref": "1ae7ab31-f439-405a-b114-08714fcf388d",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "03c40329-b3fe-4472-8f93-2428dc95ea13"
        },
        "item": {
          "id": "50a651d7-87d4-4e45-9267-564c83e23a57",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "677661a4-692c-405f-96c1-442cfa733536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35cda9d1-d820-4f22-b5f8-68ce439c1ff6",
        "cursor": {
          "ref": "e1f75633-eba0-495f-9650-8cbdc5fa37a8",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "18bad04e-e031-4622-af12-32ff435a2067"
        },
        "item": {
          "id": "35cda9d1-d820-4f22-b5f8-68ce439c1ff6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "916e55fd-75ba-4808-a59e-74a5d2a54eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07632f72-c6e0-4c71-8611-f40e5928e1a6",
        "cursor": {
          "ref": "ea3fceb0-aa19-494c-8787-5a9efa859092",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d9be66a2-23e8-4427-8490-163f536d060d"
        },
        "item": {
          "id": "07632f72-c6e0-4c71-8611-f40e5928e1a6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "70421fed-6576-4c6d-9f34-abefbed61c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaa3beb-a0fb-48f5-9106-52c852fdc753",
        "cursor": {
          "ref": "e9f4f067-396a-4d73-b0bd-f09fc2aebd9a",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ad19b31c-a6e4-444f-81ee-22f87f7c7f31"
        },
        "item": {
          "id": "aaaa3beb-a0fb-48f5-9106-52c852fdc753",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "12a5071c-f849-4377-83b6-3cc8ffb005af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc0e3d7-540a-45f9-a916-a4cc401e8222",
        "cursor": {
          "ref": "5058a0f8-6147-4d1c-abb6-3b3f69a2a9f3",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6e201019-a803-42ed-b257-d30c1d45e30a"
        },
        "item": {
          "id": "1cc0e3d7-540a-45f9-a916-a4cc401e8222",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ae4eb8bb-e4d4-4adc-8b82-57020b9dfc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b01c90-469e-4814-a416-8ecc74c14988",
        "cursor": {
          "ref": "1da2cd2d-022b-43b2-959e-5d74318cffd7",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d52657ba-275f-40ec-993a-b22e45c67c5e"
        },
        "item": {
          "id": "63b01c90-469e-4814-a416-8ecc74c14988",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e9e23e8a-9df0-491a-a088-25fdb03a8804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236b4578-dfd5-4d24-ae11-b1df484157d3",
        "cursor": {
          "ref": "db664713-bb0c-421c-88d4-4c7c4b120504",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fdf869fc-a7cf-4553-ac9f-4991adb93af5"
        },
        "item": {
          "id": "236b4578-dfd5-4d24-ae11-b1df484157d3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "38d2f181-ad1b-4ead-bfc0-2a6b60ccb02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e8a0de-b993-4ad6-bfb8-73c847f5d669",
        "cursor": {
          "ref": "3a369203-bbfe-4b2d-8f50-89cfa432edf6",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e65aa05e-7969-44d9-8b4f-b293bff9807c"
        },
        "item": {
          "id": "60e8a0de-b993-4ad6-bfb8-73c847f5d669",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6b0e3a1c-cdab-48d6-9058-d8fb7aa1c687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa9fb19-f271-4559-b4e3-8c16e4532b9a",
        "cursor": {
          "ref": "f2645186-b2d1-403d-a7f2-1065b4f4fe0b",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "608809a9-71fc-4f35-8487-6164a4ac5aec"
        },
        "item": {
          "id": "1fa9fb19-f271-4559-b4e3-8c16e4532b9a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a9f595e8-245b-4457-a6b3-c959118fa411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2284ac-91bd-428b-9b04-faa3ea9bfee6",
        "cursor": {
          "ref": "089b4b70-cb94-470f-9d1d-ebe1ec8bf514",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a3da82b-d9b0-4b30-9694-f1a18a2a4a43"
        },
        "item": {
          "id": "6b2284ac-91bd-428b-9b04-faa3ea9bfee6",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d26c773f-e1f6-425f-bd18-c854048e1eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 681,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5594e7-965e-4ad1-bd2f-bc9e90147725",
        "cursor": {
          "ref": "f9962e47-b89f-44c1-b92f-cc13b081bc56",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1c2b213d-df8d-4192-9bcf-1146f4e78478"
        },
        "item": {
          "id": "2e5594e7-965e-4ad1-bd2f-bc9e90147725",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c14c18a4-5563-41f8-9980-22d367c95482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d27356-2069-4b05-9ae1-c81b92aaa0c4",
        "cursor": {
          "ref": "b85c9638-a157-4d7a-a2f1-56633408ea13",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5afbc12-6613-4451-9eb9-36cc81bf58f8"
        },
        "item": {
          "id": "95d27356-2069-4b05-9ae1-c81b92aaa0c4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "538c4d52-2bad-45ed-a65a-9842055e7910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0e46ae-e2f5-457b-a3e4-11d834d4d288",
        "cursor": {
          "ref": "b437a34b-2e7f-45b9-8723-015d31e77cf3",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "58074d7c-62e0-4c75-b870-41f4b0813706"
        },
        "item": {
          "id": "ea0e46ae-e2f5-457b-a3e4-11d834d4d288",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0f6b5926-fb01-4d5e-a099-b3715fdb155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3c3a46-f1ed-4214-bd83-3ac71725c390",
        "cursor": {
          "ref": "94ac38ab-5771-44f0-b817-7e3c51bd44e5",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "17e96721-4d4c-4403-be85-17a6e76d8d32"
        },
        "item": {
          "id": "db3c3a46-f1ed-4214-bd83-3ac71725c390",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7ac2505d-5905-41ce-8875-b8d23eac54ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532c2cb5-f282-4c25-ac19-f26820e00780",
        "cursor": {
          "ref": "1d2db5b9-44e7-41da-ad08-934c58120db4",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "72153ede-b3ec-46fe-b07b-3cc643f667e9"
        },
        "item": {
          "id": "532c2cb5-f282-4c25-ac19-f26820e00780",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "482ecc11-62d9-413c-973e-ff98ea63e075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc29e835-df4e-4006-b249-d95f0a9b5aa2",
        "cursor": {
          "ref": "5e6021ee-9cf7-45a3-aa53-2a0d2d70f160",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a5fc1446-1c69-4745-ba72-477512622ae5"
        },
        "item": {
          "id": "cc29e835-df4e-4006-b249-d95f0a9b5aa2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0c7767f2-99cf-4010-b6ce-cfa0b354d6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92ac971-d94c-41d4-90ac-e34fea788bbc",
        "cursor": {
          "ref": "0bcfcd8f-1086-45ac-9555-a186a716cd89",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6a16d8b7-3b14-404a-954a-bf2e4ec50ada"
        },
        "item": {
          "id": "c92ac971-d94c-41d4-90ac-e34fea788bbc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "97d7049b-8430-454b-9ce1-acf807217ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67cc755-165a-431f-b004-61abf036d99d",
        "cursor": {
          "ref": "e6962423-9f0f-4a5e-9657-1abc10327eeb",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bdd5a478-06fd-40c5-909d-1a77b009f2bd"
        },
        "item": {
          "id": "f67cc755-165a-431f-b004-61abf036d99d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6502f144-a1f1-499b-a791-8978d2a706cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34d0f30-27d8-4726-afed-ab5493156f43",
        "cursor": {
          "ref": "3bcfb71b-4882-4f13-8560-7894e07ec1be",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1eb5e573-f15a-4211-ad42-59272076a350"
        },
        "item": {
          "id": "b34d0f30-27d8-4726-afed-ab5493156f43",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f806da34-7e1b-412a-b447-c129f09b6a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a6f936-a047-41a6-8ec4-bc2212829609",
        "cursor": {
          "ref": "a290a39f-7855-41ec-b1e1-7d091515bd30",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9ea41dfd-86ff-464c-b011-367d840a2938"
        },
        "item": {
          "id": "d6a6f936-a047-41a6-8ec4-bc2212829609",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c9226d62-4a84-4b0a-ba35-f0437d4cc304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d6c03d-197b-4af9-bb5e-91bd2828260d",
        "cursor": {
          "ref": "a147017d-cb65-40d8-a48d-13ead15e5b73",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "58f86b80-57d0-4f45-8f5a-6c861b205f2a"
        },
        "item": {
          "id": "81d6c03d-197b-4af9-bb5e-91bd2828260d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "67fd2acb-7c77-4fdf-8cd2-3271f8c1de29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d700a6-f344-492d-a5ac-8e49bde6fe1d",
        "cursor": {
          "ref": "7944ddcf-a7a8-4bfc-bb79-a8b32e5cc852",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0ae03368-4368-44af-8db9-a71af06dbf21"
        },
        "item": {
          "id": "13d700a6-f344-492d-a5ac-8e49bde6fe1d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f5230a9c-37c9-450b-806e-f8c0b560bb2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3aa7e9-db62-4f5d-8848-ab971f449924",
        "cursor": {
          "ref": "ed797805-6233-43ab-83fd-d02bbe4a27bc",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0e867883-d29d-40f6-9215-069deeaebc8d"
        },
        "item": {
          "id": "0d3aa7e9-db62-4f5d-8848-ab971f449924",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "afb65327-18c3-4a22-b3e0-9a32e52fe795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec2c50c-c009-474a-b81f-f48d6b7255fa",
        "cursor": {
          "ref": "c63c5acb-74fa-4a60-a8e3-3a8f5b93418e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "205fcefb-fb52-4556-9bbd-3d5505b57b38"
        },
        "item": {
          "id": "dec2c50c-c009-474a-b81f-f48d6b7255fa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fd3373e9-071b-4d99-ab15-34dfa9b2f599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400d9a6-a1c8-4d0a-9ae5-2b52cdcbcd30",
        "cursor": {
          "ref": "7ffbab06-fc10-4e97-bba3-2c945d0f072a",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7f7ef9f3-5379-4d0c-864a-2df679fbf6d7"
        },
        "item": {
          "id": "7400d9a6-a1c8-4d0a-9ae5-2b52cdcbcd30",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f03dc853-9ae2-482b-9a8e-8ba47ccd99a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20862df-d8c8-4d76-8a7f-c6a72587277d",
        "cursor": {
          "ref": "5077ee6c-e4a1-41ec-a706-9f9b09e90596",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "80b57fdf-a2f2-4e80-b5e7-b3c48556b44f"
        },
        "item": {
          "id": "e20862df-d8c8-4d76-8a7f-c6a72587277d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2a2dcd22-08d0-4b48-884f-80f1973461d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9495bdad-1a71-4cfc-8235-e78c07b3018d",
        "cursor": {
          "ref": "985a0d8f-3ed2-46eb-8c73-fc277f9a07c1",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "72a6b44d-5365-4cc2-b311-a5e2baa23224"
        },
        "item": {
          "id": "9495bdad-1a71-4cfc-8235-e78c07b3018d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5b6bac23-6e47-483c-b203-10c053574c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e951966-12c6-4301-81fa-e6198a04af52",
        "cursor": {
          "ref": "2322e564-1065-4f4c-9eec-7a3d68700444",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0f2fc739-b7c5-4004-8484-73776db1c1f1"
        },
        "item": {
          "id": "0e951966-12c6-4301-81fa-e6198a04af52",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2a7f670b-4ccd-4401-8c99-7876cb16fe20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6be88ba-e517-4611-b6a9-75509578a3b9",
        "cursor": {
          "ref": "ae762494-0d7d-4f47-a165-f29a634c4f69",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a1bcd9bf-63a6-4707-b8b5-6f5033f8d74a"
        },
        "item": {
          "id": "d6be88ba-e517-4611-b6a9-75509578a3b9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "edfbed5e-40b6-4389-ab13-0a7c5b7ac7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3a79c5-344c-485e-89f7-6afac15e45a6",
        "cursor": {
          "ref": "90add30a-7051-4512-a047-afcaeb7bc7a7",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "de3182a1-6ff1-41e1-83c5-5d586f425f6f"
        },
        "item": {
          "id": "3e3a79c5-344c-485e-89f7-6afac15e45a6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3a5f82f8-abef-44e3-95da-7426c7e25678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e14c53-863c-471d-b489-fbf2e7da2f4d",
        "cursor": {
          "ref": "b4846a83-2344-40df-a243-ac03ad5953b8",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "659ad485-40f7-40f0-8b4a-193a66717908"
        },
        "item": {
          "id": "c2e14c53-863c-471d-b489-fbf2e7da2f4d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fb59e09b-266a-4e50-893c-9b1698c03815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8aac15-8e5b-4c8b-821a-f39f324e7d88",
        "cursor": {
          "ref": "46330111-2237-4c08-b2f2-5a347b2f62bc",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "011281d5-9f2e-4ea7-a29a-bb5f2f7d5158"
        },
        "item": {
          "id": "ee8aac15-8e5b-4c8b-821a-f39f324e7d88",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5ac73e46-4c61-42ab-a9a7-0d9926594011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4da2b1-9e95-42f8-b7fc-1c02c258f69e",
        "cursor": {
          "ref": "c0b6bf9b-3554-4248-8d89-77a09670b1de",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "be29bed3-b3ed-4f37-9ebd-81db03737c8f"
        },
        "item": {
          "id": "ee4da2b1-9e95-42f8-b7fc-1c02c258f69e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b2ae8e26-5ac7-43f5-846c-3b1b1ebcf550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704e60a2-9ab2-4833-8903-e3cf22474432",
        "cursor": {
          "ref": "75840ffc-6ab5-488a-ae64-492240daec9c",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "639db9b9-48de-44e1-bdf6-047718e94117"
        },
        "item": {
          "id": "704e60a2-9ab2-4833-8903-e3cf22474432",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0d76acaa-83d5-489e-a0eb-41580b2367f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14ccdb7-8e38-4dde-a54c-4978a55649f2",
        "cursor": {
          "ref": "05079706-fa1e-4219-a2a5-cf36a450bdbb",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3f6886d5-4918-418e-86e4-966591251482"
        },
        "item": {
          "id": "e14ccdb7-8e38-4dde-a54c-4978a55649f2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f14f0573-7829-4c1c-847d-8321619ae70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967066be-5ade-41a5-87a7-0d8c4c3cda9d",
        "cursor": {
          "ref": "e17d5882-a44f-4c1d-84ce-5d126efdccac",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1bec8f6e-d562-4c21-9dd2-3ba7c2e06fa2"
        },
        "item": {
          "id": "967066be-5ade-41a5-87a7-0d8c4c3cda9d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "96ee0ee3-ab60-4045-9c23-384702b18c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8d8162-fe57-4e8f-8785-ad3b80cc4157",
        "cursor": {
          "ref": "9c4706c6-5ad2-40ad-9d16-2746b95f416f",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d862ffb2-f44f-445e-9f27-4be847f66a5f"
        },
        "item": {
          "id": "af8d8162-fe57-4e8f-8785-ad3b80cc4157",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e6de65b5-0fb9-48a2-8fa3-6fe0548f92f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5983954d-d034-417a-a0a1-41e84bc3bf72",
        "cursor": {
          "ref": "2724ee90-f4b4-4fd2-bb92-8df82f552c54",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "eabf19f8-8ff4-4782-9380-b0d97e65b203"
        },
        "item": {
          "id": "5983954d-d034-417a-a0a1-41e84bc3bf72",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8f20c12e-79ab-4a32-9fe2-25aeb71c1f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d1f852-2bbf-4c43-8f70-0ed0dcb9daf1",
        "cursor": {
          "ref": "d3f181ff-3846-4454-beba-e544fa230546",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3463dfaa-a68e-48ae-8c59-25081fdf999f"
        },
        "item": {
          "id": "d4d1f852-2bbf-4c43-8f70-0ed0dcb9daf1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3c3d9841-5902-4489-bef7-c6e8f1d670a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea75c6b-f860-4ff8-be15-0fb5dd376d8e",
        "cursor": {
          "ref": "30d75d5f-2e61-457c-ae6a-79762731b4d7",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4361a0b9-a593-4493-9bd5-04049b43369e"
        },
        "item": {
          "id": "6ea75c6b-f860-4ff8-be15-0fb5dd376d8e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1283db13-0d16-41e7-967a-f6b7ef83b6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626e0f50-71f3-4601-8be2-3358d9f8cd68",
        "cursor": {
          "ref": "29e54cc9-e5c3-4213-aef1-c49ba9f47d44",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "58ad7b05-fe41-401b-8a30-6f60fd62e369"
        },
        "item": {
          "id": "626e0f50-71f3-4601-8be2-3358d9f8cd68",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dd95f43c-c542-4692-992a-d36421fb7155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c411c0-58d3-4f5f-a768-2fb8db3e10d0",
        "cursor": {
          "ref": "efcd530f-e06d-4a88-923c-7af8b448101b",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "715bec2a-1d9d-4a25-b318-fa24eb2361cb"
        },
        "item": {
          "id": "59c411c0-58d3-4f5f-a768-2fb8db3e10d0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3509dc38-7008-4c2a-b11c-b9ff4d6bb76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a648100-2f76-45cd-8f48-c05561ddc86d",
        "cursor": {
          "ref": "b0f747e9-3955-4fcb-9ecc-996733ce48e2",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3b1044d6-1021-45a3-aa94-6f06821827b7"
        },
        "item": {
          "id": "3a648100-2f76-45cd-8f48-c05561ddc86d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "204f4269-2a2e-41f6-b3a0-8d295fd5c292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57001e6e-bd51-4f01-a601-37f9c7b9b09d",
        "cursor": {
          "ref": "862abeb5-7775-45ac-823a-e31a2832f64b",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "00bc865a-d6d7-4d4c-ae38-9b061423a4a7"
        },
        "item": {
          "id": "57001e6e-bd51-4f01-a601-37f9c7b9b09d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "46c3ca72-dc4e-4bb8-8563-4ac5171a58d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e9b7a-3ad3-4102-bda8-5d32df1b55a6",
        "cursor": {
          "ref": "1c42bbe9-78f4-4cec-ba7b-bb1ee85fe4ce",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "846973c2-d0e7-42e7-b9c5-2a6ea683c94e"
        },
        "item": {
          "id": "bc6e9b7a-3ad3-4102-bda8-5d32df1b55a6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "761c4021-8040-4b9c-9d7b-30ccc281f915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c795bc43-ad8e-4c7d-aa14-e62f8ea3b9ff",
        "cursor": {
          "ref": "8ec78ac6-8d28-4797-a029-14a6da35cbe3",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b054c247-664d-4312-b76c-c6077cd95a7e"
        },
        "item": {
          "id": "c795bc43-ad8e-4c7d-aa14-e62f8ea3b9ff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4cfe82db-3762-43ec-bd68-4099900a98b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f1fc12-149b-4b73-8d52-0aa47a35ded7",
        "cursor": {
          "ref": "8d684ccf-42a0-459b-a05d-a485a9b1f8d9",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "376ba96c-6ed0-4ac7-a49a-f13ee2601f56"
        },
        "item": {
          "id": "f3f1fc12-149b-4b73-8d52-0aa47a35ded7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "20b34916-1de5-48e2-bfbd-ec1f79ea7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff1a651-84d1-4bc0-93f5-0537bc1637a7",
        "cursor": {
          "ref": "e6fd6e45-dc50-44f2-8a56-3800ad99514f",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9b360e6e-0db1-4618-946e-e9388f5acce7"
        },
        "item": {
          "id": "9ff1a651-84d1-4bc0-93f5-0537bc1637a7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6ac9ec0a-86cc-40d9-a785-7145819c73fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f271bd73-2f46-4b8d-8c6a-15d56a0945b1",
        "cursor": {
          "ref": "80a50411-a6ae-48f3-a571-cb84f4a522a2",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5943d00f-153c-44cd-934a-5aa15ad1d9f5"
        },
        "item": {
          "id": "f271bd73-2f46-4b8d-8c6a-15d56a0945b1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2af4ff22-872d-42c6-a217-0baee075c30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7cc140-d3da-47bc-993d-0246342b1d7e",
        "cursor": {
          "ref": "c1edc0cb-d9b7-40d5-b856-8931e96e808d",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "387d28bc-28eb-437e-8802-d98a138e4d23"
        },
        "item": {
          "id": "fe7cc140-d3da-47bc-993d-0246342b1d7e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "56e98cb3-7af4-4f71-befb-8076042535dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed06a69-8c29-4308-908e-c8c1b3557a49",
        "cursor": {
          "ref": "82a73e24-7203-4b41-8be3-6ac22befcadf",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "40bf894e-7c3f-47d3-90e3-85e4ba1e03a9"
        },
        "item": {
          "id": "2ed06a69-8c29-4308-908e-c8c1b3557a49",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "66048f9f-c55f-4265-af83-60b33fa48808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbd6054-253f-4b4f-a0a2-ec02a2fbac50",
        "cursor": {
          "ref": "0e7ddefe-0468-4171-8081-fa2f9f7b21db",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0b3d004a-8f6a-4f5f-ae7b-d89b0252aecf"
        },
        "item": {
          "id": "ddbd6054-253f-4b4f-a0a2-ec02a2fbac50",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a1835673-bccf-4d34-8e34-f9b54bae1e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990249c3-e277-46ed-a6bc-14bed0237a4d",
        "cursor": {
          "ref": "53bbb201-8e02-479b-ba00-8f1e4c9c6c5c",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4407c694-10d1-4ec7-a379-258d91b4e67b"
        },
        "item": {
          "id": "990249c3-e277-46ed-a6bc-14bed0237a4d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5f1471e8-e91e-4428-b9ce-c8af2660b983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60346629-b002-4dfe-b21f-d6b1f01de332",
        "cursor": {
          "ref": "159fba2b-2f29-4269-b66b-da288e56a638",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c0e3dc86-7317-4096-8371-48031a3a89b9"
        },
        "item": {
          "id": "60346629-b002-4dfe-b21f-d6b1f01de332",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "78a02f98-566b-47be-8818-278d28ae670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd2d98b-05cc-4fde-8de8-d90dab9d51e1",
        "cursor": {
          "ref": "86e410b6-8ff4-42ea-9c2e-68bec5c98157",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "241a52f0-b940-478a-aaca-3154918461e9"
        },
        "item": {
          "id": "ecd2d98b-05cc-4fde-8de8-d90dab9d51e1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5f8f4776-5062-48f0-b784-49b636cec88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963e4701-9cdd-4f96-a1f6-7bfd2b994590",
        "cursor": {
          "ref": "81c2ea06-7ed1-4d94-985d-44e0fef80f11",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8505f41a-895d-473f-872c-7998a0ba4b61"
        },
        "item": {
          "id": "963e4701-9cdd-4f96-a1f6-7bfd2b994590",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "857db63b-43b7-4e1f-bf1b-7913fe7a6f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ef2760-4bff-433e-bc00-6dc522d21db2",
        "cursor": {
          "ref": "9d940960-ffb0-4932-b78a-6b06992f5d98",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c474f70b-0881-456c-bef4-c29daa7c364b"
        },
        "item": {
          "id": "c3ef2760-4bff-433e-bc00-6dc522d21db2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cad66568-0a59-4aee-a11e-99070e8e42fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb9eb77-2a99-4e18-83ce-8c4a5a6f1547",
        "cursor": {
          "ref": "f4b6ead8-51f3-4e30-bf7b-b9641c424fd1",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2a747454-4111-43c9-97ac-57b2fd612c61"
        },
        "item": {
          "id": "1eb9eb77-2a99-4e18-83ce-8c4a5a6f1547",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "02689126-9e53-45f0-a036-6f9319709002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8425b7-7eda-44ee-a315-7ed7e0ac5bc2",
        "cursor": {
          "ref": "24188c1e-4abf-4da0-89d6-796833527aac",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1b1707df-f804-43f5-b848-e41bf674d431"
        },
        "item": {
          "id": "5f8425b7-7eda-44ee-a315-7ed7e0ac5bc2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6c9634ea-357a-4da5-b81e-550307a9e73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818ba724-afae-47d4-8af2-1bb8c151024e",
        "cursor": {
          "ref": "e77c850f-8e1d-4bef-9e56-77162fb29f25",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f65630be-79cc-4583-a5d9-dec67e111ce0"
        },
        "item": {
          "id": "818ba724-afae-47d4-8af2-1bb8c151024e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0cec561c-bf34-4745-b600-3cd6e17292c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71768e31-c063-4ba4-95be-7c1ff2d1366d",
        "cursor": {
          "ref": "c28e9da9-15d5-4165-a7fb-5c94dbf0f079",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "64dca527-0015-412c-98a2-6023a25b5dbf"
        },
        "item": {
          "id": "71768e31-c063-4ba4-95be-7c1ff2d1366d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f980fa97-e5b7-4220-97c6-0fe319e7f944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51420f3-949b-4823-82a6-4e3d666d14f9",
        "cursor": {
          "ref": "3be24514-5d16-4981-ad6d-7c34198d286e",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4597c894-d54e-4901-b5a5-6e4b65c93a8f"
        },
        "item": {
          "id": "f51420f3-949b-4823-82a6-4e3d666d14f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e63d8c50-13f2-48f7-ac33-14b7db4f3e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acce265-b3e0-4ec3-bfab-084990a4df72",
        "cursor": {
          "ref": "57bc90b6-e11a-426e-a749-7f943161a018",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a3356350-9e19-4241-9d5a-4917fbb3842e"
        },
        "item": {
          "id": "9acce265-b3e0-4ec3-bfab-084990a4df72",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d7f7abeb-d5f6-4b01-8967-ce542ce24cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82826ff6-db4c-442e-bb56-e42bcece74eb",
        "cursor": {
          "ref": "a445e2e0-a44f-45b3-ae86-96fd50b881ac",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b7290621-0e2a-4c82-94d6-6b3229d7d7fb"
        },
        "item": {
          "id": "82826ff6-db4c-442e-bb56-e42bcece74eb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b95c58bb-a754-4b2e-ae16-fce57c40a75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7056a0-88ce-42b4-a2f1-1322f97e1f09",
        "cursor": {
          "ref": "b4da0548-8159-4022-8e58-5f7ea845cce4",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f1fb321e-f921-4d35-8878-e54945d07511"
        },
        "item": {
          "id": "fe7056a0-88ce-42b4-a2f1-1322f97e1f09",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5cb3b640-a70a-4f89-a8aa-f5d434eaeb9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbeba9fa-8fd8-42be-a51b-122b200246cc",
        "cursor": {
          "ref": "dfef9132-9f7b-4d49-a0f8-f9d65f0bf6ab",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d546f747-41a8-40fc-81f9-8772529de011"
        },
        "item": {
          "id": "bbeba9fa-8fd8-42be-a51b-122b200246cc",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "82e622ed-d3f8-4fe4-921b-bac2853a49ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 308,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41022599-90a1-4180-84ae-720085893794",
        "cursor": {
          "ref": "36dc6b46-dbcc-4a7c-ae90-54c3d89c04cc",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1444cc2e-cf3b-4440-bbe1-e356125d0992"
        },
        "item": {
          "id": "41022599-90a1-4180-84ae-720085893794",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cdb2ef4b-1c8a-4fb1-b0d9-a52f509dd156",
          "status": "OK",
          "code": 200,
          "responseTime": 395,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "667d6b7f-c2a8-4831-a283-aeec6ec4b9b3",
        "cursor": {
          "ref": "d2afd388-0a67-458a-8a9a-5f351984ad19",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e0fde957-25ff-4cd0-b9ba-45f0459977ea"
        },
        "item": {
          "id": "667d6b7f-c2a8-4831-a283-aeec6ec4b9b3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b2b60392-f386-463c-bd5b-9b79f2868576",
          "status": "OK",
          "code": 200,
          "responseTime": 3263,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ab285d-26c9-48d2-849f-960956dc7478",
        "cursor": {
          "ref": "d101a2f3-4e68-4a90-aa24-9088a211d9a6",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6d0d0602-a65e-4105-8088-595da2b722d2"
        },
        "item": {
          "id": "80ab285d-26c9-48d2-849f-960956dc7478",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2aea29e9-c4a1-438f-874b-1657ba618ab7",
          "status": "OK",
          "code": 200,
          "responseTime": 3183,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4f65e0-dc18-4f2b-8be3-853adc5ae9de",
        "cursor": {
          "ref": "dbebd4a8-7d5b-4d8a-9abb-6678d2b4f3a4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e9310c6-e65c-4323-bff7-476e82142bd3"
        },
        "item": {
          "id": "4c4f65e0-dc18-4f2b-8be3-853adc5ae9de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe288632-af71-474d-b1d5-76edd722b48b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4f65e0-dc18-4f2b-8be3-853adc5ae9de",
        "cursor": {
          "ref": "dbebd4a8-7d5b-4d8a-9abb-6678d2b4f3a4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e9310c6-e65c-4323-bff7-476e82142bd3"
        },
        "item": {
          "id": "4c4f65e0-dc18-4f2b-8be3-853adc5ae9de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe288632-af71-474d-b1d5-76edd722b48b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4f65e0-dc18-4f2b-8be3-853adc5ae9de",
        "cursor": {
          "ref": "dbebd4a8-7d5b-4d8a-9abb-6678d2b4f3a4",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e9310c6-e65c-4323-bff7-476e82142bd3"
        },
        "item": {
          "id": "4c4f65e0-dc18-4f2b-8be3-853adc5ae9de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "fe288632-af71-474d-b1d5-76edd722b48b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7afa4da6-565d-4b5a-9f0e-944adc533c64",
        "cursor": {
          "ref": "5f362c15-e818-42b4-b64d-3bea5cc64538",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b7859836-48cf-4af8-8552-836fc6d954ba"
        },
        "item": {
          "id": "7afa4da6-565d-4b5a-9f0e-944adc533c64",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9225d82b-ec8a-446e-938e-091ace928349",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 353,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2a3cd6-74cb-4352-9845-6dd745f7c544",
        "cursor": {
          "ref": "dc2a3e16-b2ad-4047-89b5-2ddfbbd4c6d6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3e1f7dc8-c12d-4c9e-9f8f-cffb3e0b5851"
        },
        "item": {
          "id": "3a2a3cd6-74cb-4352-9845-6dd745f7c544",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "71a11b2a-395f-459e-8c74-3258d9dbf9ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2a3cd6-74cb-4352-9845-6dd745f7c544",
        "cursor": {
          "ref": "dc2a3e16-b2ad-4047-89b5-2ddfbbd4c6d6",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3e1f7dc8-c12d-4c9e-9f8f-cffb3e0b5851"
        },
        "item": {
          "id": "3a2a3cd6-74cb-4352-9845-6dd745f7c544",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "71a11b2a-395f-459e-8c74-3258d9dbf9ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c8bad0-8c6e-49df-904e-7c05665e966d",
        "cursor": {
          "ref": "23e84b76-6ead-43f9-82e8-5b2ae7ed6031",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5edf59a0-e936-401f-b543-a751430f4576"
        },
        "item": {
          "id": "24c8bad0-8c6e-49df-904e-7c05665e966d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "b769db94-f4f0-49f8-8e4f-205dc3ed9492",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a2f2a0-febe-47fd-86a3-86623a73dc33",
        "cursor": {
          "ref": "e0d74ea8-16f8-4715-8de6-f4af7603ac66",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4f6dc28f-fbed-4674-ae6e-d333affe4797"
        },
        "item": {
          "id": "a7a2f2a0-febe-47fd-86a3-86623a73dc33",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bcc7f3f8-fa92-4c76-bdd3-e6fa4ac5c41e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a2f2a0-febe-47fd-86a3-86623a73dc33",
        "cursor": {
          "ref": "e0d74ea8-16f8-4715-8de6-f4af7603ac66",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4f6dc28f-fbed-4674-ae6e-d333affe4797"
        },
        "item": {
          "id": "a7a2f2a0-febe-47fd-86a3-86623a73dc33",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bcc7f3f8-fa92-4c76-bdd3-e6fa4ac5c41e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b795b447-0bb6-4185-9a1b-3be570736913",
        "cursor": {
          "ref": "fa0abc16-2b6c-4016-aa6b-bf5df089d65a",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6ee7aec4-10a4-4977-a6c8-101d428a6e71"
        },
        "item": {
          "id": "b795b447-0bb6-4185-9a1b-3be570736913",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "5d6e8e77-d721-42e5-95d5-9570f76b9032",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 541,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}