{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5910ad10-9930-4ae1-bb75-376a06ebb773",
        "name": "Clear Cache",
        "item": [
          {
            "id": "caca76a8-5227-4f28-aa2d-077556b5ac6e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d2d8d8ed-0c41-4220-9e18-ce3b4d9ad184",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e4decdfe-ed41-459b-806b-28ee564531ee"
                }
              }
            ]
          },
          {
            "id": "80fabfe9-11f6-4b9b-a9a5-91193d3d35e3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31975a2f-1239-4357-84f8-a40e1248c506",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f105ca41-f197-4672-8a04-63aa2c8101dc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b184fd0f-4ecc-4178-a084-4689358f3bab",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9a8d3fa4-1565-486a-b1c7-c5820cd615cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f452b6e4-b616-4a89-b4a9-e69ef6f14962",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32094541-746a-463f-a178-7ef62690127d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83be0b1a-b5f7-481f-b286-1ed7dc9dbf5b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6e28d5db-b0c2-4224-bc0f-4f9db90cc786",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "381af60b-cee5-4a3e-b439-16684722543b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "20baac37-3703-497b-afe1-b15085e41011",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "181968e5-4dbf-43a1-b5a9-33223c4e0478"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7cfa9f3-75a9-45f2-8c50-a4bf8bf2448f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c49e967e-0344-4f1d-b383-c5c0a79cac42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d74f00c3-c5a7-48f6-aa8a-03ca42cc897b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0762c0ad-711f-44ea-a097-e90ef5b1fe40"
            }
          }
        ]
      },
      {
        "id": "f893aedb-31d8-4927-8a34-a498df205362",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9b0dddc4-71a1-486f-a3ad-4401dd2b975d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d59baca-c266-4133-9e5d-f1b1e14bbe66",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "27b2db5b-abe9-41f7-8f28-4eadeef05bca",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407b6804-57ea-4332-a326-fe7c654f01ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0765635-99be-46e1-ab2f-f50f24732364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f72a85f-33db-48b7-a0a3-8fbfd42a75f0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3264ef-155d-4f48-a829-ef9427be91ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f41c389e-4503-4225-ba6a-aa4dd3d6176f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732365aa-504b-481d-9565-12702138d0ee",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5234eb-7cc5-49a3-b725-8a4943d65f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ff0c9cc-8e52-488e-9029-41a179065b84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5238b323-e31c-4361-b9ab-a75339c320b3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60af5580-4f4e-4fe4-8b1c-f805c5b742ea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c63915-92d7-4d1c-b294-6a308d560462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36dba6ba-fc91-4eea-95b7-615d0b75f883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bd59da-c8ff-4b7b-9bde-c2553a6d20cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8137032b-3def-4b50-aaf0-309e37653fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866e633d-9b04-4c30-aa3c-838a41b95ba3",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc772852-05f0-4cdf-a467-7c9ed154f371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5305973-1c9f-46d4-a1fe-ea22d2e0ffc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152c477a-52d0-4e23-a3d6-209d8d87d22c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5ca86df4-387d-41bc-a2f0-134d7cabfc7c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c90b73a0-8f0d-4ba9-93ac-753a48d12785",
            "name": "Positive Testing",
            "item": [
              {
                "id": "67d27184-43cf-4595-b872-4c26f9f03f8d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc675cc5-6a85-4756-994b-40d65cc57a13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f18767c8-72d6-45c7-9d11-e912cd7ff7f3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a363623d-537f-43e4-b1cb-813c5dec0fb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "3d006f50-8eb9-4624-855a-7301fa435cc9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62f69818-72ba-4a82-9d80-a8f0d847faf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e40754e6-542f-45d8-a31c-b4e4ac10b16b"
            }
          }
        ]
      },
      {
        "id": "2a6d0ff2-c741-4667-bbf2-ce2e4fc1c2d1",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "58683800-94e4-439a-832c-8f2577fc419f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "337a33d2-7c87-4f13-b05a-956316129e08",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bdd303e0-e463-44a5-81b1-52dac360a7e8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e885f02-75cf-474e-b415-1f4832a72eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd816f90-0582-4e41-bb5b-27c497e57797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc9b253-876b-4365-8221-c73490496689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee27ec39-3bf1-48a7-99c5-f8d8afedfd0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5f5590-28c3-4329-924b-a60755f76e48",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9aa5b57-43ab-4dfb-8e83-596b04afefcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81002df-65b7-419b-986c-a6b06d4d93ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62056798-1993-4f3c-99ac-93bbb7045127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15829b7f-2d6c-4af5-beb8-00472574857a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac48abc-e701-4037-95da-18a7f75a7fe2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4c935d0-c33c-4aee-839a-1ef80d6f3f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcc7aac-4319-4439-89d1-b44307a7433a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0783b58c-f67e-4674-a230-48422634a243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e769ba9-5fe1-49e8-a1bd-9ea70d52caaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d48a039-0880-4401-9559-4e0d376a5e8b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1319be-8606-4286-85d7-6e9d61065a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac7395c-ee63-45d0-838d-ebd8e89f9fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e19b99-8110-433b-8231-b4a71b73c8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96f302e3-f229-4acb-9799-d062527fb01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728be7fb-f464-4e0c-8244-df7fe18b3c59",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1967e45f-011b-417c-be1e-77d227be0f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28621aaf-72e9-4e66-b0db-5c0c11787987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defef6ef-a631-4dd4-9bf9-f7251a8736c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f2cfc18-56c3-4f79-8b1b-603ea95735f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93af87c2-ee12-450e-8660-be9afc8671d9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c057634f-d1ce-4e18-9900-82b2036a67ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0306e1-450d-4a97-b085-4b25692ae126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28d79bc-4f73-4246-8d4b-5b437ec911d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41ab2325-ded6-4e49-b196-f5284b53df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fc0f9e-1345-423f-9438-a1a0a7ac842d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8df0ce-f258-466f-850c-164f7db3ac25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9686fa9c-9fba-4fed-8130-f9eb8bd4716c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b0ac53-59c9-4244-96b8-aa4d95f46956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf4147bb-7ff6-4e14-8799-8a798c17eef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afcc3f30-69ba-487f-9797-edc81e9c4ca8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26468770-8df1-4786-b84b-346faf3f4414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80335fa8-517f-49c8-9a11-b64e85818b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3bfce7-3605-4e78-a397-7adf153336a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dc11dbe-ff53-40da-89e2-3b3addbe264d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806818d8-6319-496c-9680-9af09c1da9c5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d46ff93-65ce-4318-b677-4a5030a6a04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5a6c0c2-d18c-4137-b750-1b2db972ac4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605a2d72-cd5a-4bae-95a8-521a895f2740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de086375-c97a-4e87-8b40-cd9d382afec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ee911a-4f24-42bf-80e9-8098aa48d636",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a16eb0-1512-4b75-906c-a2ccccb061d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f65b8e5-b1fa-4b8c-9d4f-9b91b42d2d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdda9ec5-593e-4639-bb5b-a249c225eb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "245feb41-2df1-41f4-86f7-31b5cb913999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a0014a-fa37-42ad-9623-dd41fb041759",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf17321-aa9e-429e-8fa8-75b2736bc64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e86085-859a-4a03-8e80-3345dc4ec69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff98f887-975e-4526-8590-065e8d145053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370d27f4-9448-48d8-9fea-dd68f1a569eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374c582d-74cf-44a8-b6d3-c694e7474035",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9acd64-93b6-45b5-9fbc-837e18b90379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26186894-b305-41e5-80a0-878098c0a77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf731c06-6488-4061-9ddb-80d0d78bc02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63e64296-005e-48a3-a065-09bc6f0f9ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f1e463-574e-424e-98ff-02e9d55327e2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffc1279-4b7a-456d-b61a-d3d786406012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71d74fe-a7d6-4566-a928-7ed7f1137fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a31a7b-ff54-4852-a5d0-7d5d08e7250e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be641285-5079-412c-8823-32221caca950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df9ac77-9bce-445f-98fd-59fc2dd96dae",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a72d71a-858e-47ea-81dd-b1d4f91deac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a934b432-7db4-47d1-8a29-333ab14a6e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a72903-69ec-4483-9dd9-e8b51de8a650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "726a79c1-64fa-457e-ab38-24bd7ec10124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4124ade0-5c14-4fa9-be65-a59a042d5d72",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "486448d9-1a87-4fca-b95b-03d10e72999e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee28f1b-e7c8-4740-8f5e-8c5c67a62785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cdb88d-4ff3-44bf-9140-995051ced65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e95ee9d-fb21-4ca7-93b2-414384bcb376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d13376-9b8a-4572-a25b-b6e75e949fd6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fc5396-dd35-4796-a164-dc30fb0706fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96166cf-8b3d-4177-a94f-bc2788533d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "041890fc-1e58-4cf5-94db-f698c8072e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4481f247-4110-497c-9cb6-5f6dff94722b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1c1056-160f-4b2f-94f0-3fdee1dfb2a8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b666c550-e1a4-4ccd-85a6-c73e1b5d63be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616a3f9a-9fea-466b-990a-e7132171d080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3b9c7c-a274-4239-9b15-2f5b76ea0b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30705041-1021-44cd-a7a4-edca9542d541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc38210-b14a-4a78-935e-0be14802e7e9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3ea2b8-b2f6-47fe-8cff-38def5e6fa74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba38b570-13cd-47b7-9405-7f874979f6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb20bae5-183c-43a8-8f4d-9c670a3a6e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d11c3c20-e844-4650-bad6-57c27c19804f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1781a588-fa8c-485a-bd12-4389eaa2c7fd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419d60a5-9afc-47ed-a115-f17347b9faab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9e677f-f568-4048-b75c-0b1a41430f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8950a82-0e6d-4a9f-ba63-bacee10481de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d37d14ca-ffa9-4456-9550-ca2db9f47324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745de222-13aa-4292-b161-dd0199511e45",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893fa030-7479-46f9-883c-599c4938f8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c0dfb4-b570-4ce6-8815-c7c4d91ce145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd3f5b1-107d-4382-ba2f-0bdaf6e69358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b755472f-2b72-43de-8e01-abbb604767d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6d5747-3a5d-4e15-848c-851577dc9887",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ba7675-b3e6-441e-b225-01111e4f2039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7629043f-06e2-443c-ab27-3707547c5ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f739665-b689-4830-915f-5251c4e9036a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bddc60af-1935-427c-b9bb-410740da4836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f1342b-1b31-4e56-8d3c-81398caf608e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e07a56-bad5-40d1-93f4-0cd1473cff46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e6549e-4206-4f6e-a2ba-5c9af5640627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2b3555-ba31-44fc-8954-cd21684241a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6538c6-dd39-4ab4-9ae3-3ee61580d208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc1c37e-0d79-4fff-90e2-8e3a52c36c7c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ca2752-d1bc-44b0-9bea-84769aba188f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c438a9c5-f00a-473d-b9ba-52789d2d272b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ba06ff-57ad-4fdf-8dc4-e33c16ada0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4662146c-531d-47c6-ba26-ac88f38c59b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d87701a-6506-4f0b-8d21-56809dbfd500",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb35dbb-78c6-42bf-b4eb-eb17be92c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72d4b0b-6a65-4270-99f1-c49a4c3adb1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc1a190-840e-4651-a3db-05b8fe6e7b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "208e8f1a-78e7-4b33-897f-29e1e98a04bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08547414-bd60-4948-a392-ac65f96835be",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa4b9a7-d2a2-47a4-9c17-a4913971bd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4a1e68c-c89d-4084-a7e6-bb2fb248a085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f98922c-e1d2-41d0-a465-8ee4aba8853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f713ce85-547a-4558-9f50-9dd8b385bd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebfe1c6-5128-490c-ba3b-b9d913c2a3aa",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c19977-b561-4cdd-ab2c-c26f1dae58c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ece4fa5-1278-4461-b15f-b045c5155f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3245705c-8186-40e3-973d-69210470c234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1e6d97-52b5-413f-ad34-00b4d1500a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1daaf0-02d1-4558-8ead-e7c18fc72d2a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bff29e-2a37-402c-ac31-69d23381eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396d11fc-472c-45d3-897f-b55d667f5c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f33150-4237-4f64-8729-2ea289f8408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6825d830-187e-4e1c-81a3-f66be1b6a15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9947ed-f506-4673-99d8-b58e2372c10a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c69e240-1bd2-48b0-b055-4ec6e0ab6a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1350384a-8322-400c-9308-7992c9a1a11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80170f-9a1d-4029-8d9a-a98960f1ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dff27dc9-6a2e-4309-8bb4-226b4f698e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cac460-4a4c-4305-be3d-a9036027db4c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1c53bc-4dc8-4878-a666-9986c36ab15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0a5607-0ba1-4298-8c48-5082f9bb8965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf9a59d-c98e-46dc-a4a3-491d74b14571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1947ed-e2d0-4979-b3dd-7fc2961cf53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5080904-ef46-4985-aeb2-9b3f96857d5e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9620dc4-b03a-4fb2-b648-c7b6d77569f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "507f0e3d-55f3-4a13-af6f-660ebab7da1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4f65fe-79b6-40bf-82f0-99a8a7d5ce86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dad73f7-6667-4c72-85f3-de15e0d58ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d368b453-5a6f-4b65-9d39-8006c2303170",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57e0540-7800-400f-aca5-c90fe3e14538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7053f06e-12b5-459a-9230-9c1d79806f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ac188a-3451-4ab6-84a7-68c62dbe8159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6546cc54-5d70-4941-9220-1f6ab1db2094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf0c21c-6686-473d-87e9-7a827c92aa09",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14b3a51-452c-440c-b295-603d60145a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca22c36-2f0a-41ec-8468-db215abffdb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d7143af-45ed-4fef-ba6b-f898edbbe97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ea59d7b-765d-495a-b58e-d3075bb0ce87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3307ced2-9c36-46c4-bd86-6b41bff4052f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bdb9916-d09c-4224-b45c-91f8e1486068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90df4bee-9e3f-4b2d-ab68-33edff62a755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6551aced-69d1-40bb-ad7c-8c4403afad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04a0bcfd-d880-461b-ac9b-346bc0723577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbd6bf0-f855-494a-bd5b-d0cdc746c548",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb84ba8b-ba62-4a3a-9317-d9ced055b086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4965a6-7d26-4d16-9919-f5fb488b1fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e039a0-78a5-444f-970a-bcbdef564192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d54e97-f53d-4e6d-8db6-9b9f10f1a4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dcbe10-7531-4997-8516-1ca31e931492",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3158c5b4-03ec-435d-b74e-83198edb442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955924d0-6856-4aae-a02f-8f4e9dfab76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25e6148-a5a6-480f-8b2c-2b58aa42fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0111d542-d4dc-446e-b6f6-3b9125b32424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4618c7-1722-4f90-ab2c-0a366f0a994e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32782259-a398-486b-a9e1-8e49ed98bdd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c08e7a62-b902-46f1-8c4b-ebb320d71e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58ebb15-ffd1-4c53-ac4c-c41c543d7a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2e9ca9-9be6-440b-9cac-3231c856990f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaefb5d-4f1b-4023-8684-7ef2bd14fd34",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3cf09f-3e51-4c96-a6eb-2853c8ee024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe77f1f1-bce0-443b-8677-72d99091ac32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15552d69-c20a-46f6-8698-3c20653c5e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "941cab3d-ca4b-4160-b374-867c2f56680b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703487e6-8d69-49df-be89-e4f1284179c7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48da52ba-5de3-4755-8130-62932118eed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b30875-66a0-412a-95f2-f795d0cac995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96e9323-ccf4-4078-9379-db8f28a8dbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04ccf303-0666-4f70-8817-5fbc5e07cb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b31021-7a19-4630-b1de-dc258626a07d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed08e916-d076-4a63-93c7-ec9bebe4f8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8aec0b-f173-4b93-99f8-d05273b34ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cf70f8-baec-415c-bb01-a9606b36e31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "231a2262-ba2c-47ec-acb9-b3907894c23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdba59b-5897-4a72-8ea0-925c117a36f3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b07073-b3b4-4ec4-8e0b-364daf2a1e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738f8192-d111-4d13-9620-20d3ea0548fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4d47824-dffa-4650-805d-64304f52d79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ce5cc2-f3b2-457f-aaf1-9bbff6963f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7647d5a5-fc5b-4b19-af2e-6dd57b46a389",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f411f7-356e-434e-a425-805a7760f3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f616c2-7e33-46b2-b791-ae779ca97ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5302224-cb5f-4cc8-ab78-a95cee74aacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c714ea6-72c0-4b85-9fac-e2c3034f44c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bfaadf-2523-40a2-84b0-7bf4167f8872",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b973cb4f-ce59-4c0f-b634-20ca8e011e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12263c90-8d46-43f4-955b-eb933a09281e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632972f3-bbd6-4488-8bfd-c64cee078232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9407c6d4-fbb1-4aea-a580-f25d6c8245a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a5e583-7e16-4c9e-b5f7-e21f4c8542b1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cac87c-7226-41f6-81fc-08440320b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3b7107-1d5b-4d71-8b25-7dfe44c79384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22210d8b-054e-46ed-80ea-daae94f2486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "36a668dc-92d2-4359-8542-101b1048c231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d782ebdb-1355-405b-bd28-80a385ec6744",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c34f1f-cb1f-470b-b0c4-7bad300002b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a518a020-12a8-4daa-825d-c280a0a8120d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3445a4ef-fa7e-4fc2-a327-4487e70e21af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f89bde0a-d21d-43cb-a30e-77ff4d7bacdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7ad8718-cc4a-45c0-be4d-2353de281bc4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce993a79-7ba9-4a6e-ab1c-f5a22f953714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b852ad3-aefd-46d3-8061-31d3022817dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae5e8f2-d18c-4a6c-a416-10de6c7d8d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a513384-6292-4fb0-ad66-0d5c6d2d359f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a858bd0-8293-4d00-bf35-a09a35cd1555",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe234cb-a131-412e-9668-5a4a5d02a33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caad7328-94e7-4c75-a88b-388816121217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe52987-84bc-426a-bbcd-3bd5fd9d7242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24e0cd14-e4b3-435d-84db-5b04edf399ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c24ecb5-337d-43dd-b881-5b6666f60ea7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf77b805-4cfa-45cb-9a6b-254c4883c595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c4287f-8f76-4f0d-a985-49773367ed79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1c19a0-4178-492d-9a50-20fad9c21ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7938acc-0581-4b28-8f51-92cfa85df91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3acb816-e861-47ef-9f0d-7f47126ec7f2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41993464-2758-4e78-aa12-02646a53d8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3367ea-efa2-4a69-a745-d15866029491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86661167-3c0d-4e4f-9297-23d28da12248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab661dd-4db9-441d-95ed-c003a43af8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac09183-05fd-48da-bed6-020eab821212",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694f6817-43fa-441d-a7b6-eb90ffdf27d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd3e3f9-6295-4bdd-b481-633abe3566ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5329aa9-d77a-41c9-998b-1c6059618746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "003dcbad-fc6e-47d7-8520-788721baf955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91cd39fc-696b-4957-b719-88b54146914e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfc4108-c759-435b-8f9e-c99ec5582178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ee7d07-2b67-4d74-bf62-ef20498d20b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9089b2b1-228b-4588-96ed-caf76f5da75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a456eb2d-a940-4e2f-b302-6c0371d0f336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd54edd-3652-4bcd-ac39-e72423819809",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e988152-9bfc-43de-ba5b-c4a139d68b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99263278-e2db-441f-86bd-b726012ff09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca21103-ddc7-497d-9ef3-cfe102011cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9f5f07-2d1e-4397-ab8d-a4f7c10c12df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcafe56f-5a52-40ca-95d3-20ea45ce721b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d650b1-dc84-49f8-ae4c-5e80bc86b405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "465ddda4-4521-416c-aaf2-5c0ed0196246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3049d39b-8d5f-4dda-a120-ad5a7dfdd9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f911880-a536-452b-bf3d-9f1481605dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63283db3-2675-4c19-94af-d55dff6e2765",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "843d3e88-35ca-45c1-b26b-3fd623b5322f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af90b2ba-e665-46a3-afda-7f174d3d174e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56f59c1-eeb2-4f8c-b820-b55bbb43c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7df31f-fbd3-482f-a2e4-1ad760a00122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424e5967-18ff-4b32-90cd-ba89feb1ddbc",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5e6073-7e50-4703-9119-57f585c72e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad510d8e-33c9-4c9a-b707-33e16ee4667f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ac0b35-0291-42aa-9762-679356098f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e85515-7e05-4b6e-ba07-a9702061a45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098ebbde-d0b9-448b-88c7-37109d03b15d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e2658d-5032-45df-9b90-bace70247295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b48375d-fb8e-4567-bbc5-4af8e4a4b56d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a7a471-bad2-4c4b-9445-62b01662345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9dcdc8-9908-484e-b1f7-c9de39cf41ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ef4717-4008-4727-8deb-a1362d15421a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7896be28-7972-4fc0-893c-45daa7c9533c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da415118-6097-4c96-81bc-8e462869be49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9b8f8d5-2ae5-4028-a356-3da12376d4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe2a902-5e81-4350-be31-08779ee0631f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa85e1c9-74df-4369-84dc-23b3f2591dd5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792130f3-07e0-4274-a958-6df6f716c0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d620932d-de16-4cbe-8a42-9cede6df1735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3864993-aebd-40ee-ba7e-6001a5dfbb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e801e7d-2143-4927-aa2e-e49edd6957f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30cad18-a494-46f4-bdec-2a4b1bd51a6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1625a414-8d1f-4e33-940b-ea21d9fd41f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf40194-c18a-4851-97db-6c1cbdfaa468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1c30c7-94dc-4e43-af82-cd3dbe665c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6801544-8419-4131-a168-ac24f53e0844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375b8348-3610-4a1c-aa45-43db56ba1137",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ffc8fe-417f-4590-957f-87e714527212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e48e3a-d1c3-45d8-a64a-62b802113fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f777a6f3-865a-4a44-a612-55746529a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55031a76-202f-435b-8213-d26240b7b592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8258850-026c-4087-a850-2f3dddd2914d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b142e3-9767-48e9-899d-05559897c380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f6774e-64f4-4ca9-b686-dc7ae218a4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370fbb05-23ea-4ff0-be4a-39e8a990a37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cddc085-68c5-4fb6-9504-2ee93bd42393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a826facb-33b3-45d1-b415-452eb21f3ce9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c99ae6-5670-47ff-9351-112862c7549c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36904ad8-f63d-4bb4-840c-0063b5bbfbaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abcf849-01ac-46df-a5d1-4d8ece2a2f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6a75d8-a1dd-4d3d-afbf-a651d37cd27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a033630f-3c1f-4320-8630-d16a31c03972",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3429d18-5241-4ca4-aaa4-8d5a091d13b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32001a7c-9704-48d5-9f65-4430ed7c0d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a507ee-7e22-45f1-a505-4f24eb062fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5da11d87-3feb-4e16-9e09-f78ae250e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87bb817-d6ff-41b0-bd16-2cf0bfff30ec",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77084f4-3f37-4f0d-8e32-30bda4d82502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446282af-ba7f-4bb3-a1c5-5955694da67a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d35f769-8233-4538-b24b-0213f3b5f7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "14c5ff38-ae6d-4f63-90df-197279372a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c28c656-2740-4f5a-b33f-90aaf0a4af40",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb97852-b2ec-419e-9438-9a6f4b4f93b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3006ebd5-73d9-4108-83ae-71fb989910b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f23e896-aaad-4711-8111-7960da12f0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64a73e03-7993-41fe-8cb4-3460308a77cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0399d0-4c81-41b8-8b3d-95c567d26577",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b7add1-e5fb-4e95-8ff7-16f62a32c691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0a26f9-d2fd-4c17-a890-0d5357fa80b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9891f317-6108-4d82-896d-d06d58b3716f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "292367c5-91b6-4cb5-8a4a-8d1d6a93a061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f361bcb1-4be4-454e-bc4f-c7afeea23b7b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73457018-6d08-43f8-a153-e578e6a9255e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d1dd03-10a3-4e4a-93f5-c1315eda33f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40614358-a5f2-45db-a0e1-97bab3a9ea85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b05836c-fff1-4e51-8fc9-51c86917acc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3190ab80-46f5-4fff-b220-59b98d716078",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e40f28-972b-4f82-a880-fe372ee3f2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5ce30e-c3c2-443f-9bbb-8b02e1056fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151051e1-bd57-4272-9ca4-b48c13d4eb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "76182ce6-d264-4646-a678-8892e055556a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dfcff4-6b4c-4aae-b26b-6548e4daadbf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2c9787-dd89-4425-b545-a915ebe1a64d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da27b9d9-fb86-460d-a265-e985094e5f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd3863f-9411-47ed-a074-d6b874537c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "787a48c5-7a85-4b22-b0f6-219319d2f044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f37017-dab0-4c7a-ba76-c408a358a7a7",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656dee99-3880-41bd-a2b3-df668ab26abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc1cd5a-e58e-40aa-9095-7909af305cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef7b8d77-62cc-4e77-89c9-f66d293e9320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cdc937d-bc98-49b7-ba0e-6568958d7f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5035be9f-cc71-4f8c-82ac-a1c6cc5d515b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd58eea-7010-44fe-b6c7-b47abf755341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43a1ce7-65ac-460e-ac8a-1b0ca9c484e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9546c0-8878-42e4-aa34-8af7596e2919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f80564-0fe7-4e02-b133-bd110ebe6435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505f858a-7695-4cf3-b601-03755f81f628",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461cf7db-e663-4036-a5d9-5c410da6c977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17794282-fa8a-4bed-a73e-a72c5273e72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199af1fe-ad42-4793-b86b-3ff31c10457a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b00289-eced-48a5-903a-5ddf160e2164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a6c3fd-6ada-4cab-a74b-5a865fcc52cc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8ff5da-98df-42c1-8755-ed165265ab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdfa414e-db0e-4079-85ff-c75e66c25427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f41c39-63fe-4389-97c4-7bec559688fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c1895b-c664-4fa6-a5c5-8e7da45a86bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c845aeb-c3d2-4615-b33d-d04211e01294",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4663cb9c-a91d-4760-8f46-5802d1dba4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4215d8f-ba40-4138-9b0b-1c033f9981a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23f8932-ee72-475c-bd5a-5a2da34078ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc42c66-fe9c-4265-88a6-1aac3c2214ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3215f628-886c-40b1-a579-59759f087374",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb37554-15b5-48a1-8e87-161461dfe0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815bc3b1-89fd-4b22-b7ef-cdf70bcd7047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9608a989-bf30-44bc-a5e2-4c53a8a347ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6ee084-6b41-47f0-bedd-2d2790b29daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bf902b-e4b6-49a8-9892-206b40f24bfb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a8ba19-7ef2-4fd8-8a70-edc293d582e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd6d116-af4a-4c51-a600-5c6001bcf293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f826d6-b3ca-4390-aff7-405e6ef323f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9122bdf2-4510-46a6-9377-44e3c806ef4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e74c5b4-64b3-4c90-b390-658e54d1e144",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab58239-fee8-4821-b20d-e6ab90e2501f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140f8ed8-24fc-465a-9740-f53cb8d7ddd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53250306-e3a3-4cdf-a67d-c187410f3e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c434015b-1c6e-4d58-9987-0c35845cc111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c5455a-237d-4306-8c96-493a0cd18508",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d79443-78cd-420b-8c84-e5972798e80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2824962-e747-40d9-a5a9-376cf6453d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c00f23e-9cd9-4c3a-b61a-6889b69cb1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d34d9ad-889a-448f-81f3-ff8b5b86ef1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9ab934-7095-4fc5-81e1-616c2109c41f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e43868-043e-4cdf-b7fd-b10e713abff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a5338f-d3ac-4f37-81a8-0ab48d3263b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d077ca-61df-48cc-b38f-5cbf838ff67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b70d63a1-0a90-48d1-afa3-0a520e25b391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5485bb93-7742-47ab-b514-d1426b9b0638",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518dade6-9874-45ca-afb9-d06efa4660fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d85b5a9-7dbf-4b79-a895-330f4918f1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80fdb36-7bdb-441f-acd9-5a1cdcd6242b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5448b334-b5ab-46e8-a3e5-13ab40c5be98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d4f32-793d-4a9b-b5e9-4cf44e5f131e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39d90bd-4498-4444-b560-29784b364a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b40669e1-2743-4449-8811-539294bc542e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61849490-67aa-4f45-80be-e44c10d18b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43472f38-fe97-4b03-90ce-9caa52bee2a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eacb1b3-9597-440f-9678-3d3c9e2d6dc8",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aff51f-3de1-4046-91af-7587ea30e7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29a2e00-ed1a-49c0-af68-06446546302a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de996561-6da7-4035-bdbb-c3395f8ef1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d48bbfc-2714-42fb-8193-1ad02ef9d5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16868c1b-93da-4301-a22a-33d1a536ec53",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10294cc-aabb-4fce-8e0e-71e42519fff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17413929-21d3-4651-936e-5ab324f7085d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e36be44-1ee4-4fb6-a49c-b7f32922a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d065ee-5b64-4d7a-acfd-ba3dc081327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd16777-c610-4bc7-a314-5bc7203458a1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cf18fc-1e3c-4259-ab51-282e2e6f674f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb04c8d3-2c80-4e5a-bd5f-b74798e4a6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49296f33-d378-4bcc-8c8a-4c821165a4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa121153-ce8b-4e73-96d9-7a4a80461fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031c6809-79b3-4d7d-8dd6-a6bce1b9c941",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b221004-94fd-4b9e-82e8-65c237ed38fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be276c0-74d2-4000-94fc-594057346c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8a274a-a0f9-46e9-ae1e-f2da4757f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f412f63-46ea-4967-a940-da948c82f7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ad8e17-c4ba-44b3-8704-9b7d9c73afff",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208efe93-af37-4985-83f1-3ab48430b9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53cc651-8eeb-4dc9-9cf3-0663fa6794df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd8f58c-3208-4d04-af91-4167c8d6ff9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "858db8b4-4fb8-444a-82b9-f0f1022996c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c122f10-3324-49a9-b65d-ca615f9de1ed",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47f28c4-81a9-457c-b225-3651b505155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cde1531-00aa-46dc-a83a-46abdf7e4695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0b0c0b-e822-4cfe-831b-77d1a090b9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0fbb7cd-2889-41be-a2da-f19beafe4d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7372e724-04cb-4a5e-a1de-a642e6d43d76",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74207317-d6eb-4b93-9d6b-35a70c2600af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31463ef-c249-4b50-9384-76424736ab1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32109cc7-a1ee-4528-8edb-aa847b1c7f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1eb002-4849-4897-88bc-4c4a05f0c485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa406f0-50b8-46cc-ae67-efdba110fa0a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2699d0cf-dd8a-49bf-89e5-c9011ac53b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce477328-2e81-4969-9033-80a3aa78d27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67912764-36a0-4e69-925a-aafe6551c911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcb780d-4a5c-4278-b1b7-292be9a3a52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79427b8d-34e6-4732-97c8-da4e78d4a2ee",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84fe0e1-7188-4e08-8187-aa474ebf23fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131d35e4-9f50-4355-9c9b-c2715380ce43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a98fa5-b957-4b1c-8bf4-d55caa18df11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aea26fe-bec8-4e76-9a75-bf66f8e0428d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8002acf-f77e-478c-b327-894530cde38b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b220b3-8021-45b2-85f5-667ecf763b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae594c13-844a-44c9-865c-1aea99106099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b8e9e9-7480-46c6-9fb1-b2a8cf1c0ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e42007bb-02be-41ed-b12f-633bd2efaffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef205bd-1066-4419-b8db-df0acde3a6b5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81557f4b-2f04-4eee-ab33-948b9772664f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be89e4b1-26f0-4ef3-a504-c3a6fab15dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd7c278-601d-47b5-871b-562fa753f56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "275c4eca-5451-411a-bb41-e9bfae78f8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2902b569-5c65-4dbd-8903-b0585018b413",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98447b89-7646-423a-89e3-4f644e75a672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "76b29b42-108f-4475-9097-4d5d47893251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c05de8e-28a9-4abc-8284-c93f7f7eba8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "557cac27-1c3e-4b3d-b43e-73d4e8f17568"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da8d4e79-7211-4557-b5f3-ac2aaf0f7999",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5729d875-9e96-4f1f-924c-06ce0aa672a6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881bc9f8-fde9-40dc-a4e9-42946bf123a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a647f4b3-56aa-4942-8c5d-48544ee684b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94902119-62bd-48d7-8eb9-8503ded36efc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "98cc426b-844d-40ef-8985-b014d3822e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7044e522-7ff7-448f-8ccc-b11a6316b3df",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6069bbf2-ef36-4096-b196-9d3393b20f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5259121-006a-401b-89ad-f661388a4f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1f9d5b-88f1-4a82-9e34-64ccadb36f2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "a640a6b2-4be4-4566-8eb2-e858cea29631"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ae0bf3c-fdbb-4619-a604-8b11d94e6481",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0320178-7c0c-4e88-ac2f-670d767248cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a780225-3f1e-45d6-97b6-c2831ab454c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7726b0ec-425b-458a-af99-a6576bbb0174"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e2a5b97-0e48-4e86-bfe9-785776284544",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c4bf37b-75bc-4ea6-8971-af04e2417116"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c1e5fb7-0dde-4900-a918-4915976d317c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a7838d95-b9b3-4052-a3e0-b8a9da96b16c"
                }
              }
            ]
          },
          {
            "id": "aff23cdf-ef63-4416-8135-dcbe5fc66ebe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7cecd5bb-e475-4ccb-bc58-a6996efa38db",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebb028ef-f996-4f19-9e9a-3b2a69f781a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "175d3f9f-57c7-46fd-a93d-2278be67e1d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3c2cf95-3420-4aeb-a844-5b705fb6abcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a6e099d9-df4b-483e-b141-ff9edef610ad"
                    }
                  }
                ]
              },
              {
                "id": "aa97d768-286d-466d-b786-dac473d45518",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "666e11bb-c437-402e-a45a-4b44d7cac958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bc2b0a8-6e97-40c7-8f7e-341ef4eb1655"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acc3c4d5-ed5e-486e-839b-bfd17c866bed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e177b155-b3f3-4d69-a9e8-88baa85ecc80"
                    }
                  }
                ]
              },
              {
                "id": "49bdc12b-dcd3-4466-99aa-c5e0f8286733",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8851bb21-da5b-4c74-893b-45d619056712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33d0c3bb-394e-439e-8594-fa21750cd6aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a95db00-aac5-4010-9463-9f942c2950da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "eb6d58f0-7c9d-499b-8f38-bed93ea8f02c"
                    }
                  }
                ]
              },
              {
                "id": "58d2b12b-27e2-458c-9abd-26cf496863ac",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dccc2e0c-2b0c-4557-b1f9-879cb6278d35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a8575e9-2c60-4ee8-b372-214fbd9d13d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fab9095e-d99c-4936-8f96-21542dcde64e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4a346afc-0f2d-4895-815c-efca78c47e04"
                    }
                  }
                ]
              },
              {
                "id": "3237c7c3-b4b7-470b-87e6-c5cf613cd515",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99a94578-3cca-42bf-bca8-0b2c96029fa5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c3852d0-02d2-4950-a46c-4345107f62c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "713524b5-c556-46e9-902e-07e194c2e9c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8ac31f3a-0a3c-4b22-b9b8-0ef2ca2749eb"
                    }
                  }
                ]
              },
              {
                "id": "ff3b8ffa-de47-49bc-b540-ca9d329cd523",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "399deb54-af5a-447a-ae5c-18898e70f30c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "224afde3-9fbb-434e-a9ff-f89e56cbcdd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d00548e7-ac76-4de8-b787-164d339f5732",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9139a707-d2e6-4deb-abde-2cae1ac6e170"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61e23861-c575-4fc2-92a9-ececf32cc0ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a3365f8-6ee0-4f37-82ad-cca19915e2db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1eee0f15-3201-490a-b4f4-5070e9a6bf4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21e272ec-35c2-4c6c-91eb-d521b4a3b76e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b59088c-8892-4ec9-83d3-36ef3ed7d517",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "19131f88-8b2a-4879-b954-a7b41eb3d66b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0afe081f-03b5-43f7-b5e8-e4dea2a03378",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bfa7df3-ca6b-49b4-ba17-143be41ce00a"
            }
          }
        ]
      },
      {
        "id": "41bb5d23-33ac-4e9f-b5f0-127e20005064",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "519be2ed-c05f-440f-bba8-f85894ffc491",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca0b93bb-4291-476e-91fd-ea9cc526243f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "74d6fb89-223a-4aac-91e3-f5b85fa2530f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b559e3-0fb5-4cdc-a2fc-f886ed60e3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74208754-e3cf-45e9-90ac-628047a769d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289a4aae-11cb-4ef4-a295-245caa6cd37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd20089-c790-405c-94be-2ca90b98173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d80a97-5b76-44bd-8b4d-6161f4c158a6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04df5176-9f84-43bc-87ca-578c56daea2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3a0598-4a64-401d-b7be-87cf607151ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b56d18-6bfa-410c-9ddf-9813123dcb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "88b77693-46bc-4875-a3cf-c8da98db9d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326cd3b2-8ea4-42a6-a5b7-c92400e69b77",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c16b93-b430-4ad6-98c8-eebee7a8f4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eed3b8-99c5-42e6-a846-5d9da2b3c701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8321172-6113-4c42-af57-e9c4f6c31c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd7040b-5fad-4814-8272-1155d104b04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd73dce-ffc8-4460-8ad2-d4ba4aac3d59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e60d261-68a7-476c-91eb-6db67a9c3d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fc775e-b258-42c7-9c79-03fa9a9b18b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44abb38d-4e18-45f8-84e6-1c2f52479eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "309f5c11-19d8-4afe-88a3-f2d0dd236b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe50dcb-eeb6-4434-9dad-661da2c3f53d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0fca08-4bd6-4a00-9073-193ac0846637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60b0cc8-d5ee-4cf9-98b0-e9bff1bfdbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b6242c-7d56-433d-bc66-e12be5432b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac4c1de-2b62-4516-a62a-0191f87fd035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b444da98-2fe6-4b5c-b759-358bf67cd3eb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d6fa12-3203-4ecf-bb97-f7a619d5dc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54572cb6-6715-4bc7-a769-41394dc1a934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ee2095-f1c4-4fc1-b768-4bb39f9d843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2176c67a-8f46-41e0-8278-920e9c500c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b47131-ebb1-4171-bb16-75b546a77dbe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fd5148-1374-490d-96cb-24a0ba3e97a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "debbf5cb-60fe-4859-a8dc-29c317ccf01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb135d1-b499-4c13-96cc-f67ef6fe9801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bd56db-c38f-4527-a69b-0fec7dfe3df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53892c94-d0a2-438d-9115-764fd2d32ebc",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78fbcfb1-df0c-4548-92ba-494852846a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79005630-28b1-4819-b7ef-b576df7eab19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903fb817-f828-473c-a80f-532e4e453aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc7ac7e-3eb9-425e-9ee2-00b002f9400c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e10cc4-0b4e-4b2b-9503-0a2ad11df214",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ce07f6-f975-4a05-acfb-7de613dd3ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e6a6fc-21fa-4d9f-b22a-0cbca4e792b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502564cb-d36e-45d1-8334-99edf6471ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcea6f5d-7613-4266-9b7b-3a485fc03432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7da8320-3a50-4834-a53f-f598f28f66ca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c37db0-4393-410a-9509-621fc793b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e45685c-3c9f-4817-8c3e-3011b96273b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffe52b8-d7ec-418a-9c6b-448e5065c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb1733f1-ed77-4b6d-a17c-e2d20671e540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490c5a76-1bae-483a-9de1-2f96e24e6f38",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28b992b-2c5a-4415-aca1-b2258972679b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8110e095-d691-480a-be4f-8241a262e32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b6fe30-3b17-47fd-81c8-b5b7a1687314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0d964c5e-c673-4a55-a5df-ee0f43d35558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07becc79-c35b-4833-aadb-3cfb42cc8327",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf9cb40-3b32-484d-91f2-bcc695f71e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dff258a-7f21-426b-9344-8f68d79ab235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "242a2cf0-e505-4283-b716-59b868a72dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2eb683-8995-4668-a44d-c3a966ef60ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167210f3-6109-4f3c-9bfb-88a375804c47",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db5e3fb-3e9b-4c18-95e2-94290b15ba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d79fc9-fe4d-4dad-88af-3b65003908f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bdab73-32b3-4883-8c99-aa82e4440f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5842bac0-baab-46b7-8c0e-bcdcf4184109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5702a2ae-08d0-498d-a27c-22b398f326b8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34348bef-12f9-4553-a8b6-5f4ceb799e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c6a049-84e4-4e8f-a2cf-562b8a9ff604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fc22d5-47ad-4c23-bd0c-cbf82528de90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef41359-0bc7-41a5-8b29-3d5bc5b66582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f94bfaa-5523-4f8e-8661-04b9a5a76db5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362dec76-fa03-4f03-9bc7-c2ba948f21f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b72c700-e6e3-4ccd-9949-d9d2e78bc243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7240982-593e-4155-a971-22a955b121ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce79349-d125-418d-b193-eaefbd38fd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe72388-904c-4cb7-97b8-1f9ca4f9528b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d7710f-641f-4daa-9ddb-27c47cbf9be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442509c3-a55e-464d-ada3-f2efb60a2a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "936b978c-1ff4-4f86-aeb4-f17b86b1cd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d059b0-5318-4e78-ba19-38ae54dada7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bced08e5-3072-4d3a-9e43-7d8c79b096e2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e6d2dc-1ac9-4ff9-8644-1fe2d2a15236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "336d3eb0-188c-4a54-88ef-f4a57f30ad29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bf971b-1d11-4194-adb4-fda8c064879a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d140426-9f46-4594-8484-68efc3f8cbe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde642ea-3714-47c0-868b-8ea963c74f70",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b331f92a-dfb1-4d32-866c-222c3437ffe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b783d6-a976-4ae6-b58c-b95ce7807fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b997f273-7612-457a-a4b8-4be3fdd47267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5831db0d-5446-45cb-9db0-b261683003f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ac83be-3c63-46bb-b0e9-d6bbb0076f8c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bd483a-914d-4613-85ad-c849d8a85f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7881c45-43b3-48d2-a047-c5a4a0f3112e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba254d60-c3a0-4e88-9cf8-f1b14eb777af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "395afb52-12d8-41b6-8f54-f706dda79daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6b12d9-c289-474d-84a2-f1e87f65f610",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959dbc65-71c4-4a33-9db2-1e92442df99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd81ddd-40c9-499b-aad1-f9740c2847b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f1931c-c28e-4483-845e-d4c4c16a5605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4d2f66-c6e5-4cfd-966d-f28397e03138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac1ece7-91f2-4846-8a69-78fd5a0e8e0e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4b2ace-d612-4685-9bae-d051855b6017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65517233-eb06-483c-b035-9bcfc6161406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e526055b-d68e-48ab-88ef-4841358252c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a5c414-5234-4c04-8db5-c9ee9dedb4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ff704f-922e-4fb9-8599-220b8c18c12f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff2a059-067a-4f86-9cdc-c1f473acb6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ae0caf-ab88-4193-8a4e-c8236bacfc3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2b0cf3-b044-4ac4-bad2-f4dafdfe2718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb3bc64-290a-4176-967b-58dbd2c9d75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f142af2f-ffac-4e95-a61d-f5c11f3d9121",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21415dcc-ec25-43f9-b034-bd4f57a7a8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2e485e-63d4-4331-93ac-106fa617bb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730e726d-618d-4b38-bf27-6e1612d7d3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e6304a-feda-43ff-8fab-eb69fee99381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bfbb94-e0c0-4a1b-a208-06976fb4addc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e439bbe1-bfb0-4616-a2c5-38c816f9a65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995ab10f-fbce-4def-acf0-4888266a08af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcca639-b70e-4f24-85a4-f0330ef025f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d5d514-8c58-4c31-b40e-27caaf103071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003dd883-8698-4d76-a352-bc532c67e867",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9ea8eb-5ec9-466c-908c-7306ac9156c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc16ecc-3de1-4236-b058-66f840ef42b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87dd426-09c3-4c09-95c7-4dc1733570ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d61ede21-5555-4d36-a425-448a76f214ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdca3893-93c4-491b-9876-f21cefeebea4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d9c257-f5b9-4c6a-a027-03408a158ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebf5f66-29fc-486c-a867-1fa99e21a9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed5e07a-48bd-4f40-90aa-73a3433bb9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b01950-c1d2-4008-900c-d1680d9f864d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab07741-1a96-43eb-8182-17ee6ea29430",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526a5361-e81e-4a22-a7a9-05887e2c05aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca36f636-6a71-4364-8df1-b045dbeb7c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d6c339-ca55-4b98-9cf1-a659762ffa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "220540e7-9886-4bcb-a6b8-dcb1864206ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c489528-ac88-4fff-821e-3753456d633a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424b8b4b-4d79-433f-80ef-ce29d0e7a754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fd0365-68e8-4c70-872f-e09140078c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a21fde0-2aee-4b5d-a5c8-599e8aeaa859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27c1d2f9-db89-4ac2-b9a3-d3401a137d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edb12ae-126b-47c4-8080-8e5ff3c87542",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303d6c10-94c4-44be-81a0-dfbcb60cb721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e72d9b-d091-43ec-ae65-ef649cd46b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97412081-7b11-4812-90ca-c493f4503242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90c1c072-dc7f-4cfa-8f1b-12d97e0f967a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cb5011-14e3-4bd8-9a4b-b9088a5b21b4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6a428c-6440-4626-99e0-4a3f81a837bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a17241c5-16d1-42c7-b2cb-bf3dc25a30ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212ee874-cc5e-4b46-8300-50ca7c41c3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a193ce89-426c-4004-ae3e-ac57591235c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2752b489-dc8b-4afe-b296-dfdba6f2fff7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f996c6-167f-4c6e-abb1-ca98770dbcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0541ce9-9bca-4cf5-bfbf-944426118158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d422b11f-d82d-4f65-b246-c106ee9ebe78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63072ff-db32-42a6-b63b-306a64f2a6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc10a85-a9f9-4b88-87e6-d6b5b842687a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7f1b28-fc5d-4e8c-9ff3-b41bdd2a8967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2c9b15-fa22-478b-a67b-305cee82085d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d11e4a3-e943-4402-9d6b-fba149a59796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "937d5093-9736-4509-8a50-72851f600a6a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "de4a05e9-110a-4d22-bcee-f469ea331777",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e48ad682-5c98-4267-85e1-0f3baa2bec05",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8be2ea-175a-4d01-a5e9-31e843196025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1fc26b-4350-4fcd-807e-98a22461c941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2049ea7-39a2-4c46-82a4-bf32a124bd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5b41fc1-7b22-4fef-b7c9-5aa8d3efca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191b8f56-1f1a-4e00-92e5-600cd90350b3",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce78987-22a5-4f10-99ba-14eb351d0440",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "77e61f56-0dd7-4d3b-8d8e-60df97aaad7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dfd57e-de67-4c4b-803f-31bbd5d976e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7cbc1d7-5e25-468c-8538-6aa70c9e86d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6345685f-bfc6-486a-a263-9930b946dcfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f33b9b2f-02c0-44b6-9b71-274ea4bc85d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9f88aef-c9dc-4428-939d-a21436a939b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53312b37-24f7-4866-b9fd-8ca894ce3f98"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0af4b6bd-a8b1-42ad-ae95-5772a959cfd8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9bd15ec6-f00d-4db8-a4a5-d6c40ef364a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "248997d1-2710-4a5b-8586-ab3435bce83b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c231a25-11f0-4ab6-870c-eff139ceb659"
            }
          }
        ]
      },
      {
        "id": "19aee01b-a25d-4217-bbcc-e37ee70771dd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b21d35c6-6d43-47c8-ba86-5e1cd7434553",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1dc528ea-4ab4-430e-82a1-5f16078cac63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad9d3a36-a182-46aa-bee2-d705ac14de00",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e39974-e769-492d-9ca7-72417153b9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c44899-5c93-48b1-9675-b12ef5281d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ab1029-819a-4da0-a889-ee6389f8b158",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9f50aa-fcae-4be1-b56b-463b9ee0370d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb5a18e-1a9e-49e8-bbd3-3eca6071cbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf10ee7-1b4d-4878-8909-3fbd94d98ec0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ea1b9e-4029-42e6-8e1e-c3fb74bb37ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3cbfd2b-03ad-4c94-af89-aee7ca9960cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15bcfe9-0cba-4125-9d0a-ca6f7fcc6157",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ed0bd0-5e35-4f88-b393-bc40ff58e3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90c6ad2-c674-4693-8d54-2f15b4a1eded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5eec4e-2e10-4a7f-be9f-c2e5bc68b014",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45068987-b5d0-4c7f-9d50-d7c5c1d18eb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdb1110-2d0a-4f65-b194-c6e6c0a40976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3502968-eab5-4e4c-9c70-0d9f4768db07",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f707b221-dff9-46f5-9428-c7189682d3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cb2cf2-7b0a-4f3c-b453-05c6c24cd0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03049bc-b054-428d-96bc-77ca31e122c3",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2914896-51a4-40ff-898f-a0ed863a1ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb34b314-f2ed-41b0-a4ec-745e46870791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6a31a0-576d-4be1-b93f-8579ed58bb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81ada355-f689-4662-bad5-cc459f93e0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e199d1-0a18-49ba-b780-d03ef8ffb3a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9eddd18-0cd1-4227-a69e-a74c2da4fb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d7ccb5e-7170-4872-b983-c77fe238892d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8910135b-5639-4df8-b51f-dadb7bbe60a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e051aba-7d49-43f0-aee1-9993f93744c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482ededc-2c02-4c77-903c-686fbb08c759",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422aac1f-1277-4819-afb0-0be20822253b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6695ae-7721-4a71-b4ef-370ba036a66a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea9172f-d914-4657-8573-67406b498600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f498116-09d2-45e1-aba7-469b2ec0ab54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead06b9d-c5fd-4ad8-86cf-1fe19869e32a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c42725-6331-4add-9b28-b1611bf1b713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc421219-84a8-4645-ad43-f95d6b6e9f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a130f05a-3409-439b-9383-58d5e12ad92d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caea40b-cb2f-451e-804a-eaa4e7248e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c5301a-2963-4589-bd55-2e36effaf970",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2a71d2-e100-4137-94f8-0fe96325d35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571dbce0-5f45-402f-9dc2-3e97882eba37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367ce0ef-adce-454e-b72a-76b26c179e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468764e2-5202-4bc6-bea6-60bb30cee532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191462af-3fd2-489d-ac53-fc75adfacf1e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1d2372-a555-4d60-b9d2-3de1da4bcda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be703145-7aee-4ede-9ec7-132acfdd7471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37db7ff-ebaa-40b0-b76a-7c9dbff10f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df43878c-d7f9-439d-9ecb-e589ea4af4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba22edd-cd8e-4c99-9b68-664e2eae6a2b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604e01d3-260c-4d70-8fa9-04b5cca502e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f8aa5ce-0519-449e-b386-d03356b1fea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bba325-b54e-42d7-b2d9-038daa4c13d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de24763-68e5-4ee6-bdea-8cfcf122a247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4f9775-7ba8-451a-a88c-21f7529e3d9d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2368f287-1f3c-4b07-a9a1-78f849a7a70c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b6adee3-5f1d-404b-a6bc-e6b3e5465331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee83480-91fa-47cc-8c7c-f35a1b94659a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da8b06c-3e73-4bf3-b9e3-50c330327aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fe5496-a1d2-4c26-b480-364a1aaaecbc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79057e02-f52f-45be-928b-1cbb92bd6ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bda96220-d6e0-42b8-859d-bad03a4aacf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe465048-abea-4af9-bb37-524885490cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa843ac6-63cc-4893-8823-9e4d4f4025f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c342c1-d31a-4214-bdab-bd3b5c5e1b1c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aca3c10-917d-4679-b43d-861dd809bff5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59369871-0396-46e6-bc73-fcea36415dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e571adc-34e4-41dc-910a-6b1dc6248315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c84b26-3a1a-423d-a370-0ca6e7dd21d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25dd9e0-62c5-4eb1-97b4-d7ab6997a3cf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f977271d-f2e3-4be8-975e-c624620d2e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d26c6c4-0b24-4c25-a3c0-6bce620e68f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59229cc4-04c9-4ffd-8421-adc4a9ed9aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0311b0dc-82f7-4b5d-aee2-b188bdef4543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c61451b-8a20-4e3b-9aea-b589e03e12fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8624e09-ff96-415e-8058-2071bf2baae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f071ad01-8e45-44fe-a50a-30ad1fa90f8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c98f474-57cb-49e0-9fd9-a0ae2791fff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a49150-327a-4353-9b99-df950af0a442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d9d761-54bc-433d-9fd8-d3dc50d221f4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4bf1f1-0dd2-456d-8743-c5b6525daa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a6ada0-d946-473c-afdd-135838f87be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "880ac753-b268-419d-9bb6-ad4b22e6b86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f0c7b4-9ea4-49ca-a7d6-18c5331cfa30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283522a3-6253-447a-afdd-650e6ad222d0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e330e0-787c-444c-8bfb-6958b9855dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34996fe-b4b1-43c1-8aa5-c7a6d2b0f04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5473cad2-022c-482c-a4c4-cc3b523e188e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91aa6b43-ff1d-4095-86bb-7df8cd5c1d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f6e87b-cf69-44cf-9c8d-fc4aaa3c5c9e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7a87c4-c0da-4299-9f2b-0975eb550507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b7af1b-cf58-469c-9d9e-cf86280bc958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1c1057-9f7e-47e0-a996-689895b3fc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fec60f6-efe8-4d72-94df-be46633a2d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1f979b-7e13-47e1-b90e-ce650048550a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9813e32f-efea-4d77-9eb2-1a194c252bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01555936-e548-4a70-ae0e-9345c65ed0a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "259b1c69-df58-4fbb-a166-72b9f9d0ff97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18830f3d-7eac-4d28-b513-496065c86543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3219b0b1-f350-4821-9fe9-747920850f25",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0958816-2a41-4e9a-9061-d431a407f77d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f3459c3-bfb2-4c0b-aa90-e52b6d5b81ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221c5770-bf6b-4022-af33-63ad282acddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0f9caad-b4ea-4041-ab92-99b9f3147eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2922fe3c-e395-4acb-905b-1e04d17c32c1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91238bcf-d8b0-4c69-b215-f6757367f882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10aa67a2-1189-44e4-b951-e4545cf42e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c1f8c1-71c6-4190-a40c-b9b990bd7aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c705a69-1147-4b63-bbf5-ffbd3e95056a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0e5b82-fa0f-43d4-a3a8-78d3938185e3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbb06f0-5bad-4337-8b2e-427f40b54ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dda1b69-e9c4-4433-ae9d-faae5c474eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87470c4-9b88-4882-9103-6c6864ad9799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6dea24-b95c-4e30-bc84-9b294bbd40dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "979585eb-b453-4102-8a25-1aaee1d32843",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de06fa4-81ed-44dd-b94c-a4ca84312aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b3a6d5-6eee-4230-abab-2746094ea2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "640937bf-1028-4082-bb07-3899666659d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128607cf-c9f9-4984-9410-65b381baad9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899e3c06-3211-4782-a2fe-2863d1bca984",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6596db-af6b-4bb7-815b-34ec16bccde0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e46df5-4e4d-49f6-810f-8f85f2bfa9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a9085b-8194-406a-90f3-74739a04ebc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eac1fd4-2cb6-4e49-8529-ad999e94a761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2fbe4c4-3222-422f-8ccc-fd314f73af1c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc8d1e0-8dcb-4898-afc7-8527b357cb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8f48ba-2675-4c1c-a146-b36d131a8e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b89ea-3116-43a4-abaa-4998f36f4209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "469f6e8e-5e53-4df5-8f09-fb7cfdd553da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81089163-a9a0-4b13-96a8-b8f5c60bc7ba",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651db693-24a1-492c-8c04-fe9b585df259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31351501-3da0-4234-9f11-424a2421c199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdad1bbe-e99f-4390-aa2c-fe548803453d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956d1643-a54c-4e89-a349-c628efa778f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa5a937-78dd-4153-8c39-d0ad069ddf0a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87b8bcc-ea46-42d7-a9c4-efcdaa051064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f434d12-8fbd-4d41-9a7f-cab6408e7bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffdef8a-41ea-432f-b591-e24120455c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7cd0d5-22bd-47b6-8d18-ca18b3491b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82af8c7d-4258-4f44-a843-f1f8c10494f8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7065271c-0c93-45fe-a13e-4da66567b58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f08af7-bef1-4ebb-ac9f-dce90a51a1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6c5356-eb15-45b0-8028-92b9b7da0f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05347fc3-f9f0-420b-922e-e878a8e32034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81b77f7-6000-4a77-8e2c-9b7b1cea9a5c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651bd4bd-75e3-4e41-a063-e9190b6547c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ad83b0-1870-4f7e-a172-fb0fb3f16f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6016cb-31d8-4e45-b167-9187cc897dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30740b72-de96-4f27-9bae-a41dad2a1b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90527f20-e179-4dc9-be79-7b618a62d07c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe7372b-b66c-4374-837e-4f63572ef21c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf7c87d-ce3a-4c1e-bbd4-cfb1765f9876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9507717d-2ada-4d7e-9f4c-100cc1a6e858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c492d231-668a-4eba-9be0-03088b936965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5427715-4d09-448e-ba14-1bec07d9a9a5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef4798a-20be-4c40-8cfe-52bba47e3497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc146147-ea18-485c-909c-5197e0f75443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b183572-4b01-459e-9339-f248b1680111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70014c0c-015b-43ed-9d1a-dfb04f981038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34680a76-7036-41b6-b8bd-abf5a7af323d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b66807-6f1c-4832-beb7-b8493da5d7cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d2ecd5-db26-43cc-8a43-c3e6b56866db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5505f5-8815-483b-a543-bdb768695145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b1f79f-4135-4164-98f0-a407c23ca0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ab8812-2070-429f-b80d-41e5ed817c38",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6217c270-fc34-4602-824f-be9d742a7b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d31cde-a0de-4a21-a51d-f84b4aff9e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f271c55-fe9f-47a3-8f0f-83ce3b58a8b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e086389e-5680-40d8-8fde-3f2d16818181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2777111-f981-48e6-b107-930e247a66f7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4eeb99-130f-42c8-8133-7481b4721ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffd61bf-025e-41ec-bd9e-c03fe18ec040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa96a793-5f67-4d39-b603-97cece462d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c4ff8f7-61c9-41ac-9da7-f40d9cb1725c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a8e5ee-d631-4879-a364-13ef7cd61574",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72293763-dc15-4aa4-9eb9-961f6e1bf58f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6661b6c9-1fa9-4bec-84b0-665bd034c6b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acce524e-df9b-4ce8-bc45-64c8a6ff0d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d1b7fc-a22a-4638-bee4-5b65642c1d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151d09e9-cd98-40bd-acec-062f77260839",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305e7021-e6c8-4100-b2a0-285a7ca28e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f0f34d7-7f9b-4d4b-9988-45c1e27daedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5514b294-0f81-429f-930f-9e8cc2b1a845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc038ff1-a40c-456e-b6ab-6a37098b8241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f03e08-a9e0-4cdd-b3e8-cb738fcad282",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c668e0c-c2cb-4952-80bf-04e26af427e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a373cedc-6310-4aba-84dc-4fc8c7f05115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc12dca-4d47-4d97-b414-1b803d453543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8aa115-2216-4ea9-bc29-dfc3918476ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09955dfc-8263-475e-9610-207c71e12181",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e5c6c4-2a18-4f1c-ac66-74a4939779dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd24004-d0c3-494e-9236-89185b966eec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d47c9e7-c384-490b-bff4-1653d2738b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbfa430-467c-4d6e-98c9-afe9747a60df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3c42c3-368b-4e29-8f4b-bee751448868",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a6895d-15be-4354-8c24-e3a41cd15881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01654d21-bd60-4583-893c-0960875b0fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a5d1e9-a30f-4456-ae09-5ca051e24bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847111d5-4a75-4da4-815b-d66cc5167e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36f2967-9805-4e30-b031-8a897d3743ea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351e85d9-8f59-45df-8ce0-189df8497b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b86cdd8-17d1-49b5-82b2-91ae56085220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d53c218-15ff-4fda-98d2-3a7beb6a302d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c9ae76-8dd8-4e1d-acc9-696e369585dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc4ede0-6a3e-4285-bb9b-fae075de3dec",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6439c74-6423-4cb9-94db-4b5a7fa4421f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48356352-afa8-46b5-b50f-42b0aaf63fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de657a7e-59e3-45ee-b57c-bae6139f655e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820cc807-319f-49fd-88e4-ee80b61455dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c23be78-5424-4602-913b-e64345c84d00",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904727cb-471b-4bd2-bedd-a14883882d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2348366f-f388-48df-91aa-7bae6840394a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60644c35-0fa0-412f-ba41-88b11581fe98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ba19dc-bdc4-444c-993a-0353243fedc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a629e6-430a-4424-9327-957f7e7674e1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99045e18-5f3f-4fd3-966e-f5afc4796c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb64882-95f8-4509-8f3c-0ce8d9e180aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca3974c-bb96-45e9-aa7d-487c87029b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0405b8ae-5088-4cd2-a0f4-ef93d9a202a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6fd396-08c1-4a04-a694-5d44688d2ba6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78beadc7-12a9-4ca3-a57a-ad51e437c18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23afd422-ae21-4f22-9626-aa81c48e850d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253c9d13-4a91-4435-a97e-70d72c903e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1ed62c-feaf-48be-8ec2-39452fa2a1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce40146c-2f48-4919-9a06-26d3248615ac",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7985b5-8f6e-4143-9c2c-46b89d2ccb6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d11eca7-b0eb-4508-9d02-0ca355e4ee24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2f0655-98a8-40f7-bfe4-4ccf4b5b51ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0765998-4261-4d30-8d97-b2af6fd525d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff517edd-d312-424c-9e5d-421d68209253",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196f6287-e0fd-4205-a772-57694be61282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4101fef-17c1-4758-bc69-0fdd08d9ebf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac04095-d29d-4022-8cbd-977bdd2cc8cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d291f30c-7666-4cb2-a13f-cd299876ff67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35668ce-cf66-4763-827b-a124025369ee",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0a8815-fa5b-4473-b966-6dc936b49428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b9bb87-6ab9-4a42-9f73-9b950d2ec7e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba73691f-cad9-4121-95bc-9b8f37f30806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba19f5f1-154b-49af-b8ac-f763fee09ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db4cbde-1d9c-4898-9a8d-8e3751b9b974",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05221a7c-5a69-4e23-85a7-3e2e162d3970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e61281-b7d6-494b-94ae-4cef4a276543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "051fb992-1540-4e2b-bfe8-102e92ae2909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c97415-b23b-430d-a720-3007629e6b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf3a607-f1f3-4ac6-9d71-71facf3577d6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95d24ad-e51f-4e84-a7c3-22cbb1b5fec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcf07b6-f97a-4c35-af5e-886f2b3c2f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283c7199-b6e5-422a-9bf2-51a628b09f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ab7979-aca4-4005-bd0f-0a2da6f99c46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4f9837-b97f-44e8-8399-90efba98e92c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2e39bf-a19f-4079-93ba-1c16b196c104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "775dcc6d-01ad-47dd-9071-0a49213d15cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179a9123-fdb3-49dd-8699-ed10a52db812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdb754c-5241-4afb-9a5e-d4bc1912a871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c955706-5168-4a8b-9351-d3b3017c224e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c956d3-ff7e-4a69-a138-1646efb41094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d851ce5-f863-4705-8888-d146bc740eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5415fe4f-a680-469f-beb1-70e396235930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aa31ac-9ade-4e40-8ac0-992198d9521b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda42321-9771-4293-9c34-ebf611b1b47f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5e3142-a4df-4c00-816f-9697547b8ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3588dff1-29d8-4386-b4a1-a22c7a680926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49af007-1af0-43c6-9577-7ead9e7fb71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a96a21-8652-48dd-bcf1-5863621ebc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f012427-64c1-424d-aff8-d76b527f6ebb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e4115c-da7b-4b20-8a71-4bcb8576f557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a95d982-d2a7-446f-b84b-cd21247c24aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d17f1ff-e81f-4ea2-8896-5d3f009a5494",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e457a23-9cc6-451b-a242-64b10e5fc979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e9ca34-4334-40f0-a623-4cb8ee791847",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a13b16-12e4-4419-8fb5-0e8d60f800c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82fb71d-32ca-46e9-8392-8ff3355ae911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a48914-5da6-48c2-84f8-2e39bfaf3e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b0f0e38-6d0c-4f24-a02c-8027e549bb9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef118f5-a880-4f79-ae1a-342cb5df86fc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c364b848-4f3c-474e-9149-88d0a447d63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98238a7-da3c-4d49-a3f3-e98d2658b626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b29582c-b7b2-4037-9a93-dd16fb46665e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3cb86b-af5c-4137-a5b0-2b5589330eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8803b6e-b3ba-4e4b-ac08-10ab51fe1476",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1405809f-80af-4b36-b24c-c723c92c28e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efddbce8-729f-48d9-916d-ab9fba163215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7556fd4-c5c8-4153-b810-7e0a07ca9c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98155b4-2acf-4025-8fc6-36010ab3b268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f829b7-399d-4bf5-8595-5f9c9ff918be",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de1c56a-98f1-4a96-8731-359020130da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fad8c05-21bb-41d4-8bb0-a1c75c37f461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f6052cc-84b0-4128-8f92-2ddb6c8bc6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0ac671-8c5f-4cd0-8b96-d73452f61b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a18cf0-3012-469e-abdc-35a369bfaa14",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03717fd4-f450-4da7-b06e-6b351ed17570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da40771a-9f4d-46fc-a083-166863548967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf17ac5-5acc-4b94-8f04-f1e570bcd392",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429233e3-6bb7-4805-bfda-6f8ad3a68b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e84a109-b88f-4031-99ee-60fb7daf7e6e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a33fbe2-b8a1-4401-b8d3-80661897b903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ebb56e-b960-40de-98ba-23906c6cf537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a525aa5-3ab7-4a37-b2cd-d583937f1522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9437c5a5-137d-4b89-a1f6-470fe089c091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd25b59-7a0c-4fcd-9499-22fef90f4b44",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9ad578-279e-4928-9ee9-1d6901ff29f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5d75b8-a68d-4c9f-91f6-cb533e837b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66959e4-424c-4958-969d-35e41a616ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb4afc87-b5a0-4b0a-be8d-e1daa2afa987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17d01b4-5768-44df-ba93-eef5b35c0581",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa52d2b3-83c3-4202-9013-4c0767b63b7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06d86e5-2350-4d92-bfa1-ab2f8c4cc9e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3883537-e29f-4b5a-b50d-9b031bafcf47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f03696-2f8f-44bf-960e-2a0575f859c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc714c86-ffef-47fb-a71a-0370c60ce838",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8308b6ce-8b4d-4cc1-8491-d830cc22d34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b06a27-d01a-432b-8a10-641cd6914fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d389f5a-bee2-47f4-a574-32712a610094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ae54fd-90ff-43c6-963b-d207cfd74bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e145bcbe-221a-4b54-873a-623a3c786de4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998e47d8-f245-404c-aa0a-46d13499dcb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "674ccf58-4acb-4859-ac1e-6af5f6ce5bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb83a72-71de-4a5a-a2c4-38e95dbbf5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6cb816-95d7-4178-b1d6-b16726e79b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068bc939-db68-4ad2-ab52-a2964c0f8f2d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db4ec6f-3507-433a-bfa0-862b7f4a2fb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e323f89d-969c-456f-aa23-5f0590e0aa75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788410bf-724d-4a2a-b150-d6253269395a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d792dd36-5f0f-4123-add1-70ac4c814ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b46ed5-b7f8-481e-bebd-6dfdfaeaebbb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afe242a-f763-43d9-acf5-8cd8ec1bd1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1431a80-6316-4158-afae-f609892edefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3744acb4-6c4a-451f-87e5-7170f840abef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b739a7-89fe-4473-a44a-1bfc10a1fca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066482f9-53a6-4cbf-a2f8-94f176c82d0b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd708f6-1fc1-456a-9190-fb109e2bcb09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3966437c-03c7-489c-8b23-291d8dae46ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91e41a0-11fb-4b13-a1b7-15203a9ac850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d38d04c7-3596-4fe4-b9f7-1fc2a9fa7b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c839a2bb-99b5-4a17-a767-eafe44a118a0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18890d0-e1ec-405d-8d5d-c7119ba2ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28588255-92d6-4cdc-8244-df8e22a9c2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19d317a-fe73-4f41-8991-0fb9b8e0e07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983af56f-8f71-4ac5-87eb-1941d6e97d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6683c59f-3a72-4881-a564-3caa83b7d13f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eee6c76-c104-45b2-8064-cd344f201f29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58a818b8-a772-4d23-a25e-1c88dafe4990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d944b79-d796-460c-9fc7-5283673975e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7cd6948-f3c3-49e6-9b35-23480157df5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5292fb-c46f-4fa7-9a1e-7041d832e291",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2134d1-72f5-4811-aa3b-809a7f99ee08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff9bb92-9eb6-4b68-bc5b-c5336ebc5cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2ab5b0-a535-43f7-b6de-2537ed6f6234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aab6bef6-3ca7-4304-ae7e-a96128bf96f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15949a13-548c-49de-9209-395d99ea95e7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fad0237-d6b3-42b8-8c5e-00320188a49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "350cf777-ca7c-4508-884b-044c3663930a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153e0cdd-1b86-4271-8035-3baaf54789d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeed82b5-dbf2-4652-a69e-3dd65f9a12b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e08ad57-4a66-4237-80c2-0a0c99e26c52",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9a327b-6e6d-4953-a5fa-cc430c962424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70040564-8ba4-4f79-9d80-11008f1ce0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d43eec-7fa7-4f5a-94b4-7d29b480d628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8836265-dea7-455f-b4a8-9149e949e48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5514c00e-0203-475d-be75-7405e2854d1f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e641802e-b775-411e-969c-e3de117ec791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95aacbf7-b1bd-4b02-ad18-5c7fdb066a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dd462b-f101-4a43-a6c8-9b21854f1b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8d73fe-d5fb-40f5-8778-3521e92ef6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fbf45b-b494-4d25-b8c2-dbb321e8a9d5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e123515-1d46-4685-b85b-588e2ac20386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c89dc8-cdc5-4718-becc-449f54d47927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1098f888-1b29-4a79-8f3a-684f4087a5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c137e0-ff3c-4e18-ae12-c3d1a1cbc3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3971ebbc-4e95-4f3a-b1fd-3f54806ffd8e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a61874-8e04-4e26-8fc8-49f475027dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d894315b-9c2e-4289-bbc3-cab6d4b48944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62956441-1106-4afb-ac6b-2934aba17577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e41ae6c-c2f0-4e34-bb75-6bd1ea878f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f749712-b2a8-41a6-a058-9d368b0b26f3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4235dce6-f76c-42a2-8703-56771679aaa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2422093-cee6-429f-ae3d-baba2efa9ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26685441-fd05-44fb-9e84-0ba6cb76078d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b86482-d971-456c-8907-b81362d754f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a665ae26-960d-4ab1-ac0b-4ddec99ccded",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23837338-4a75-4fc9-aa7b-6c0fe82c6154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6cf1de-edfb-455f-bd95-b6703e963dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a91f84-0776-4864-b488-ef6bc1036a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0c6b44-d85d-4c04-b8c9-8c691208f9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d031e7ff-c8e5-4583-b3f9-94661ede2ef1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87726dae-8ec4-47d7-8ea3-80175c07b426",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70a40d55-3e51-4fbf-924e-c9b0507e9848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8316efc6-0b93-49fa-91ad-c43f88fee218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66071d1-c18a-479b-8e1a-e661cd5bdd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5289333e-ca04-4cb0-b111-f9a27ddd28df",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8941791-f0c3-46d6-9110-9f0b64659066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53108d30-641e-4000-b819-85c5f764b66e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f525f4f8-7678-4919-8fed-6ab9d84b85d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3acf25-c4bc-4389-b8b7-eff08edb78d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a947546-507f-44f0-8a8e-7a7f9d507b39",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2efe0a-3429-47bf-a037-d47b1fa476a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0354c8-a7c6-43d8-85f2-402eae48a487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34517a29-2809-45f5-8645-ede1f282b5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b311a5d-af1d-4c16-9719-55bc1123a92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe89f1a-b907-468a-93ad-bb6b5528380c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39449106-18b7-4d80-b525-69aac724b61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1828a88c-ff27-48a5-8eb6-eb9bc628c154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e965d3-42cf-414c-a11d-447755ab19a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64cc8776-1733-4dd2-8004-b8a823789e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf4898e-cb57-49be-8700-d508f80c6afc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a09772a-cbde-4e96-ad0b-b1b1e011bd86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ad7e93a-91bc-4c32-bc03-a7b051b8667d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149d6cdb-e9b6-480b-a7c7-7098b68fa2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f797272-c0d2-4d24-ba1b-461b64ad3b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60eca70a-c592-4539-ae8a-cecf94ca1a1b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5dc5d1-9d5c-457d-a7b6-dc374c792a87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb51d30d-40b4-48ff-8c8f-8dedff50b233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f5c96b-d05d-4107-8386-5716fac2b0d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6694e0-1b28-4f36-9775-235fb16e5add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a079b1a-a627-427e-844a-5c8325cec17b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d12d53-68ca-4fad-9fc5-b40b43f148ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68462795-1d5d-4fb8-b5e4-dd13c361983e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c36da7-f142-4951-9cda-39faed64a8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c84c594-41e6-4852-b540-fe61b3c455d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b58cb5-f324-44b8-8c44-eb0c1921c16d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bdec9f-2807-4b5e-a1c9-677b838a243c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddd442f-bc93-45d0-a668-a246f0e440de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969cf09f-154f-48c5-bc6b-3bbd1fe1757b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedfc275-b4bb-4bb0-bf34-e5959d4102c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acde180a-4b45-4834-82f8-49798e660ec4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2b114f-8664-42e6-b31d-7ad90e9febc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecbf5d18-6d01-4c30-9530-b50af58a64f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11345511-f4e1-4997-96eb-dfc6fd4ebdd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b69fd3-bc29-45b8-bd4f-c865acc2e85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615517af-af58-4149-9298-b7c586bc767b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58188825-ad57-429b-92d5-2914d6500fc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61d553b2-85d1-4c18-9f88-ea4544a1df1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdfcf1c-2862-4fa3-8a32-778981ce5ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07e01a17-d161-48ef-9341-826e13ee277b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48d924b-82e8-416a-8113-651d49fdadb6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9f8774-fdc7-45b7-9555-fe02e3e19776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66652c09-2bcd-41d7-8b30-fda63d573604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c797c40a-f9b5-463b-a0bb-72d895c14d76",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c433e7-40b5-4370-8980-391fad8b68bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4d3a10-7e83-4729-92b1-b3db3f91058a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d49c58a-ecd3-46ae-b47c-f2c579fa4fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1727db37-0e4d-4a31-b440-741f9da5af92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12f9325-5940-43b5-b250-5b25b5ae3b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce12012-b22a-4445-87eb-77055c013fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cf1ceb-a852-493d-ac3f-cf49b8272de6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec9e905-c9f0-4502-a60c-22c66d6c97b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e096596-c2ec-4a09-a4c8-7e6e7087f235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d674eca-dc55-4e29-8766-1fbfadd8b83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dacd11-e8cf-41ff-a11c-0f1701aa2ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46de4c91-3343-4700-996d-4cff10d55448",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b74ee3c-2c95-49e6-88ff-dcd925e2d91b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ef5cd4f-d91f-46e2-897f-59a89ccdaeef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11688ad8-b310-495e-ba25-518eff72ac5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c562d31-813b-490a-87b7-73329337f29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377f7530-2ab8-4623-9c86-20f93b7e5280",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a427f584-5ab8-42c2-9536-383dadd39333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b51d7de-282e-492c-959f-5ec6e92f7585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901733dd-0b55-4c38-a96b-d40fdac9c8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7622dcc2-02b1-47f4-8b87-98e1d2628696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2551369b-662d-47d6-a100-0c97c499c2ba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed927de4-3630-4519-ab19-f016105a3707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f9e1ab1-8dd7-4a2d-a0f2-632677e3d771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aee3c9-8652-42fd-8dd0-af0977b0d1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e619090-d574-4057-b618-1ab94a9bb5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a9fd64-eb31-4661-b6db-1edfbeac04ac",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad43948-f64b-4945-b4c0-1aee45169d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ab9758a-0031-45e9-b119-86cb10fcde5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df29719-c87c-4e22-bb61-e72d1bd5f76d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ae2845-1a9b-4b83-8d2a-a0337c25846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b06d35-ca3c-4983-a38f-782dbc7f5b9c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f217a5d0-3c76-41cd-9c14-4ccb56cea841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "218bdfc0-73a2-47c7-b92b-d3e4d4f6e3a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ec80769-c635-4295-99d6-5758c19249c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac6317f-e903-4985-a8d9-0d8895c3c0f2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "def7e751-3d6e-43d2-ba94-f90367f15012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a764744-1478-4e72-aef3-1161c5e3729f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "899b3de0-d565-4e4a-b59f-a4d9f482f332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ec5e2779-daa1-4825-8634-f2afa1e4ee34"
                    }
                  }
                ]
              },
              {
                "id": "732154b7-be5d-48ac-81a7-4ecf167c9225",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0dce902-9e40-4153-bbb0-af671a84536a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656bd40f-a855-4036-a91b-350839fc6619",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "abc98e40-0c06-4020-a2f6-09f6d5c3ac64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71358eb5-d54b-4ea0-ac4f-c33f7a7397fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8a6603a-aee6-40b4-a764-9f62b2a0654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e0c358-4998-4f0f-ba6f-993274e6c526",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae605937-0ef8-4328-8cde-c83ca8e25f5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1bbeec2d-0547-4686-a953-0336bf0d7084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de21c26-a7ea-4177-b7c9-ad19bf551b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a413e758-0daa-45a1-8834-37f1bf5b5756"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd91a44f-8c48-46c3-8d8e-8ec705a078fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de146c6d-2591-4f94-a1cb-5d0c5b340754"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51e5ef0a-345a-4ad6-abdd-6bbbae91d3f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e00842-c02c-41b4-948c-808a69846d2a"
                    }
                  }
                ]
              },
              {
                "id": "f020bf9b-1a13-451b-9a9b-4b103796a527",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "457ffbc4-25e6-4c31-ab04-a322e7eaef45",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965f5e2d-c1a1-4b95-ba04-907b67762569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ba68b97a-0dae-415a-905d-fe26795a5034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fe59af-d736-4893-aef4-f0fb28e8cdcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f956b4-1e43-4115-a8a0-4c438160643a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9a3c60b4-9d37-4cdb-a820-cd24f51c115d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55f5e0f0-9d09-4fc6-ae27-083db9b554a4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea394132-e4d2-4e84-be8a-34a194dd45d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c2ba1215-4190-4b19-a01d-d0bb3113991d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81c04c29-cf2e-479a-bb18-26445bc2e23e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b2583c6-e84d-497c-bbe6-a010a985f433"
                    }
                  }
                ]
              },
              {
                "id": "6b40008c-1103-4b73-822b-0ea0226e3793",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6a0edb00-3317-481d-9433-0cb48980e57e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1b976f7f-f77f-4055-8988-43c50de41e39"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd75a870-5ac6-4b89-a8b4-51f0dd7528bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "864a6c47-c80e-405c-9581-c5768c5175f3"
                    }
                  }
                ]
              },
              {
                "id": "488811b0-bf88-4b9d-a40a-c409916f26d8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d9ebf4-b3f4-47d6-b947-e09e215e5c02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bdb95ce1-8edf-41eb-afd4-7463ec999555"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "635e2cae-60d5-469e-8b88-3557860bb27d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d706dbdc-b099-421a-9c3b-33e54311c170"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3fe00f1-cf14-4d23-b929-beb2c6fc5e7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "967ca259-4496-4385-b4b3-c898123b12fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90a7989e-ea73-4016-b433-66b86dec6a04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18760508-3ad1-43c1-81b4-2f010991072c"
            }
          }
        ]
      },
      {
        "id": "a51275c2-d4c9-4678-948d-966a059a01ea",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e1394262-2a02-4d2c-80c2-0c4a6b5f8306",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f5ccc18-256a-4d30-a4c0-b837f863a7d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c6de45f-fbbc-499b-9fae-c15f55e57002",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583d0564-bf11-43a1-9d9a-1f531feb200a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "39c8ab95-e856-42af-9635-c14e0432eb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1ffa53-cfec-476f-9d15-c69fcb8c03c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c212ab71-bfa3-4280-ba24-27f8b05ccc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef797fea-8ff7-4d60-9c6c-53748329f309",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee598f3-f096-4b8a-a31a-ebbbb0dfa29b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e31580ea-b7b5-43d3-9787-55529d8083eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d3e6c1-3dad-4dde-9905-2c6e9091c74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36721bfb-0527-4802-9ff9-dff43f27f5a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "052271d6-041c-48de-b8a7-bd96f38d7ac6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a3b2b4e-6d1f-489f-b825-13ce716527c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f35bdd0a-555c-4627-9cd4-379a0bb68cfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bce748a7-3428-4418-bf4e-832d74e0d7ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20d94296-a937-464b-900a-b618c8be5134",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "79f66ff8-f872-4810-8390-80e0ed379c65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "449fb0e3-5f3b-4350-b435-673d7a87e2c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b91f4628-f34f-410c-a581-2a989a7f10a1"
            }
          }
        ]
      },
      {
        "id": "25ad30b3-7964-43af-aa9d-f59a9abc5b37",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "13e0de91-d979-4742-92ce-1b7b32337183",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eeafd960-f9cf-4892-a90d-d55e94816d6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71f47392-e06e-421a-8914-44e331d2aef9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852d4840-1e11-44f1-a903-983446f9f12d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "60abad84-9424-4890-a9c9-1a6b89e8c7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3badd5ed-4b93-4aa5-8a9a-3209440fb80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ca585b0-3024-4f49-810b-718c8295e0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed35273e-5934-4955-bbf3-19808c3025d8",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68645d76-2567-4e2e-934b-8a9b46b8600a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "82731fc7-21d9-4143-bbd1-4b29c1d54acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bda09e-064f-4324-a51d-3309b6822e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6ea1292-f255-49c2-99b6-74706d4ec4c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f40eeef4-1c37-442d-b549-3851f74e2372",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2cda798-0a29-4801-bf9d-d7bcfbf0bacf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd20167b-a1d3-4ad1-8073-8be1a240d759",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52190ff9-09bf-4318-8889-68289f6cace5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dd9366f-a038-4594-9793-b3ab0c5239be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fc782c3d-b2ac-4896-969c-e5c6f912cea8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8718a21-e670-40a9-b8ee-f9d746f8f25d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "33b4b723-0b0f-4071-ac06-bfebe1eddca6"
            }
          }
        ]
      },
      {
        "id": "6ff6fe28-23c2-4d73-8f36-f20f5820980f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "87d2b19f-da17-46bd-853c-28648332fa6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31754064-2d4d-48b0-8e49-a0568233698f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fc7349ee-514f-406b-8184-9884832538d9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2271d7-db97-4322-b9de-e2e1365cfbdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "939cbd5b-b0de-4402-b788-3d1ed448c3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658a481b-559c-4dda-9de9-c0da8c3ffd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afc9c3ee-4104-47b1-b624-8fc24db57af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96d21fa-ffb9-4609-8fa6-283d521434b2",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a308527-c7b7-42c2-a9db-5f65b3425d4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cc79ba5f-7b8c-4e5b-92e5-fac04cecf242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f23d112-2d0e-46ab-83ad-74bc4f30bc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2f552de-e06d-4e50-ab9e-3ace8c54f0ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98967d20-d469-449e-90db-3936f08982e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2e8e0bf-7acb-445b-92c6-3c96db02908a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e413c96d-4729-48ac-b958-1582f646b8f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbb4c246-e74f-4625-81a1-9fae644d05d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f63c6df2-ef6b-4b86-aad5-a423746ee561",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1bac915a-d90c-4315-b16b-61754087399f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d82164f-a828-40f4-bf83-e811f280d975",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c37b132b-a82e-4025-847f-c8acd792706e"
            }
          }
        ]
      },
      {
        "id": "48129924-9680-4c8d-bd6c-081699aa3b02",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f4c6043-4066-4876-9c6d-ea742b0458bf",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16fbefc2-dc16-4e1a-9f79-66244a2d0a8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "15285c38-3efe-4612-ae44-16d3690f216d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b023eb9-f4ab-49c2-9d78-78da2e87d2f2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "146ab5cf-2ab7-49c8-a377-6e750611e294",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 515.4176245210728,
      "responseMin": 9,
      "responseMax": 3494,
      "responseSd": 452.62176016367954,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1669941509537,
      "completed": 1669941657230
    },
    "executions": [
      {
        "id": "caca76a8-5227-4f28-aa2d-077556b5ac6e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bbdb7a4b-9019-4ff3-b199-3f723771faa2",
          "httpRequestId": "c5f026ec-7083-416e-b2ac-d664eb60b63d"
        },
        "item": {
          "id": "caca76a8-5227-4f28-aa2d-077556b5ac6e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e145c6d7-8b04-42cd-beb1-c32872554bd8",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "80fabfe9-11f6-4b9b-a9a5-91193d3d35e3",
        "cursor": {
          "ref": "bd4e3f3e-3a96-4c54-ae83-b79e43873869",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "68d4af60-1b8e-424e-92a1-cda3c7e6b37d"
        },
        "item": {
          "id": "80fabfe9-11f6-4b9b-a9a5-91193d3d35e3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c23636b3-f954-4156-9ab6-a799b36cc930",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "f452b6e4-b616-4a89-b4a9-e69ef6f14962",
        "cursor": {
          "ref": "a982ac61-1a6d-413e-b99f-5beb2adfd71d",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "987d86dd-0741-4187-b164-6a1568d0f14e"
        },
        "item": {
          "id": "f452b6e4-b616-4a89-b4a9-e69ef6f14962",
          "name": "did_json"
        },
        "response": {
          "id": "1e758e88-5fe5-45f1-86b3-3c2740dc1a84",
          "status": "OK",
          "code": 200,
          "responseTime": 804,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b2db5b-abe9-41f7-8f28-4eadeef05bca",
        "cursor": {
          "ref": "dd19281c-442b-4c98-927e-b1eac2a18de7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee8b272e-e31c-4e20-bd58-0b71dbf2e52c"
        },
        "item": {
          "id": "27b2db5b-abe9-41f7-8f28-4eadeef05bca",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac9ab217-892e-4098-917b-687d638d5e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b2db5b-abe9-41f7-8f28-4eadeef05bca",
        "cursor": {
          "ref": "dd19281c-442b-4c98-927e-b1eac2a18de7",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ee8b272e-e31c-4e20-bd58-0b71dbf2e52c"
        },
        "item": {
          "id": "27b2db5b-abe9-41f7-8f28-4eadeef05bca",
          "name": "did:invalid"
        },
        "response": {
          "id": "ac9ab217-892e-4098-917b-687d638d5e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f72a85f-33db-48b7-a0a3-8fbfd42a75f0",
        "cursor": {
          "ref": "03efabe6-d314-4bd8-a2a3-0c7b51a81f12",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1716782d-4ad8-4193-a060-ef501fee4ff8"
        },
        "item": {
          "id": "4f72a85f-33db-48b7-a0a3-8fbfd42a75f0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "63dafe6a-788e-4d2b-acb7-ee4977ed53b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 609,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732365aa-504b-481d-9565-12702138d0ee",
        "cursor": {
          "ref": "a7f590d4-1fe5-4317-a6e4-81f8ab683423",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "72415467-a97e-4b13-adc0-0a5f13dc878a"
        },
        "item": {
          "id": "732365aa-504b-481d-9565-12702138d0ee",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1017c02-6f41-43fe-9a63-00c67da729c4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 507,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60af5580-4f4e-4fe4-8b1c-f805c5b742ea",
        "cursor": {
          "ref": "5b06600c-6982-4156-9a59-00c5cc9179fd",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "106336da-c203-4f6f-9c99-8506638569be"
        },
        "item": {
          "id": "60af5580-4f4e-4fe4-8b1c-f805c5b742ea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cc19e10a-fc45-4dfc-987b-8bfcbf72288f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866e633d-9b04-4c30-aa3c-838a41b95ba3",
        "cursor": {
          "ref": "f36af35a-bb72-4cd9-a034-836068cab4f2",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "617aa046-dadd-4a0f-abb3-6de574c3c22f"
        },
        "item": {
          "id": "866e633d-9b04-4c30-aa3c-838a41b95ba3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "526527fb-20c6-4f0b-91c7-162ce2d7d5b3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 458,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866e633d-9b04-4c30-aa3c-838a41b95ba3",
        "cursor": {
          "ref": "f36af35a-bb72-4cd9-a034-836068cab4f2",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "617aa046-dadd-4a0f-abb3-6de574c3c22f"
        },
        "item": {
          "id": "866e633d-9b04-4c30-aa3c-838a41b95ba3",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "526527fb-20c6-4f0b-91c7-162ce2d7d5b3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 458,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d27184-43cf-4595-b872-4c26f9f03f8d",
        "cursor": {
          "ref": "57b5c5fd-2769-4d91-a8ea-0d60b7139502",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "05bd64d2-c15c-4fb3-9876-ebb0fd6aa1c4"
        },
        "item": {
          "id": "67d27184-43cf-4595-b872-4c26f9f03f8d",
          "name": "identifiers"
        },
        "response": {
          "id": "2f28a54f-05c6-4302-9a40-e21db5af9c50",
          "status": "OK",
          "code": 200,
          "responseTime": 692,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd303e0-e463-44a5-81b1-52dac360a7e8",
        "cursor": {
          "ref": "06dbfb51-f2a8-4f24-b95d-6c6f42fdc929",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8fae31af-782d-433c-bad3-b2ee0498f14b"
        },
        "item": {
          "id": "bdd303e0-e463-44a5-81b1-52dac360a7e8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b861fd41-4cd4-4f6d-888c-f6c329993f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd303e0-e463-44a5-81b1-52dac360a7e8",
        "cursor": {
          "ref": "06dbfb51-f2a8-4f24-b95d-6c6f42fdc929",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8fae31af-782d-433c-bad3-b2ee0498f14b"
        },
        "item": {
          "id": "bdd303e0-e463-44a5-81b1-52dac360a7e8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b861fd41-4cd4-4f6d-888c-f6c329993f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5f5590-28c3-4329-924b-a60755f76e48",
        "cursor": {
          "ref": "9b2d6a08-6226-4213-82ab-afab3e2927de",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "730461d1-cb35-4a82-8f57-e17f83a62909"
        },
        "item": {
          "id": "2d5f5590-28c3-4329-924b-a60755f76e48",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c4aef36d-2cc4-4d74-8a61-6d99c9e4faf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac48abc-e701-4037-95da-18a7f75a7fe2",
        "cursor": {
          "ref": "3a605dff-b569-4a30-9655-c579e5ed02ec",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3a58eb2c-55a4-48dd-bc37-14f0e9d9aea0"
        },
        "item": {
          "id": "bac48abc-e701-4037-95da-18a7f75a7fe2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "419f4f72-384f-4ab1-833f-52298be8d149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d48a039-0880-4401-9559-4e0d376a5e8b",
        "cursor": {
          "ref": "c254ff6a-2915-4ec2-a76d-ad8424c88d0f",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f74f61ce-ed44-4eb6-8059-08de3a782630"
        },
        "item": {
          "id": "0d48a039-0880-4401-9559-4e0d376a5e8b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e3374158-fcf6-4b54-93f4-177abca1a00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728be7fb-f464-4e0c-8244-df7fe18b3c59",
        "cursor": {
          "ref": "42dd3965-ab45-49dd-bc62-3c6d7527a618",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b369516b-387d-49cc-aa7f-9491497bd3db"
        },
        "item": {
          "id": "728be7fb-f464-4e0c-8244-df7fe18b3c59",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ba35e26b-640a-4fdd-90c3-a565c0d8edce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93af87c2-ee12-450e-8660-be9afc8671d9",
        "cursor": {
          "ref": "2e1b94e6-e40e-48d6-a0a1-6d463985a71e",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3413a7eb-3b26-48d4-b5ff-8be9f5966189"
        },
        "item": {
          "id": "93af87c2-ee12-450e-8660-be9afc8671d9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1d283b24-616b-43f8-b98d-6a2551c3235d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fc0f9e-1345-423f-9438-a1a0a7ac842d",
        "cursor": {
          "ref": "a6720ee3-5564-4f35-b20d-4c9cc6266669",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "82f8736c-b981-44d0-b250-fd259d816474"
        },
        "item": {
          "id": "e2fc0f9e-1345-423f-9438-a1a0a7ac842d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a47d4db7-593d-481a-b253-2f0c71322c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcc3f30-69ba-487f-9797-edc81e9c4ca8",
        "cursor": {
          "ref": "c7027c21-384b-4f6e-b5c5-f7f938f9f7cb",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c583580-1c9b-4fb1-bf6f-fce08c052d7e"
        },
        "item": {
          "id": "afcc3f30-69ba-487f-9797-edc81e9c4ca8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b94e3ab6-3640-496d-9747-6bdf5c7b54f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806818d8-6319-496c-9680-9af09c1da9c5",
        "cursor": {
          "ref": "c968e57f-5548-4a45-9364-156db010b030",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ebf31e9c-b56d-4859-93bb-a802d3dd9446"
        },
        "item": {
          "id": "806818d8-6319-496c-9680-9af09c1da9c5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c9b3dca1-7e32-4aa4-ba8e-fd9268e31763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ee911a-4f24-42bf-80e9-8098aa48d636",
        "cursor": {
          "ref": "f818521b-fe01-476d-9955-4c91de46d604",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "05e46a25-63f0-4f18-b73f-b49a932f32b7"
        },
        "item": {
          "id": "08ee911a-4f24-42bf-80e9-8098aa48d636",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "71a1c6bc-e279-4eab-95b6-86fe9a3447e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a0014a-fa37-42ad-9623-dd41fb041759",
        "cursor": {
          "ref": "c93ddf5f-c63f-43d4-ba45-d6d379465af7",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5873ad8a-dc63-4370-8c75-e27ffb35c1bc"
        },
        "item": {
          "id": "06a0014a-fa37-42ad-9623-dd41fb041759",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1b8e7f77-6415-4bf9-9489-da9ca7238d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374c582d-74cf-44a8-b6d3-c694e7474035",
        "cursor": {
          "ref": "99af33dc-dff4-4d72-9ae4-a5af9d7dbeb1",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3aac63ed-6aa9-497d-a1bd-05d6f4547f0a"
        },
        "item": {
          "id": "374c582d-74cf-44a8-b6d3-c694e7474035",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "82249080-027d-478d-8b79-0fafc99b390d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f1e463-574e-424e-98ff-02e9d55327e2",
        "cursor": {
          "ref": "45d32bd4-e2a8-40a6-8086-e6ebf9237995",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9a30eccd-4320-4aa4-924f-8e563402b2f9"
        },
        "item": {
          "id": "44f1e463-574e-424e-98ff-02e9d55327e2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f5613f5b-470b-4448-b0db-e7d63eed09d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df9ac77-9bce-445f-98fd-59fc2dd96dae",
        "cursor": {
          "ref": "a382da79-3c66-46f5-b6f5-97717c3bedb1",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d95ce25e-71d3-4e80-82a1-e088193a0b84"
        },
        "item": {
          "id": "2df9ac77-9bce-445f-98fd-59fc2dd96dae",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9acbf048-5730-40a1-b739-4634f72c4cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4124ade0-5c14-4fa9-be65-a59a042d5d72",
        "cursor": {
          "ref": "748ad18f-d070-42f6-94a5-c7b5fa843f1a",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0024efd8-ccdc-4c93-84e8-11aa27bd4835"
        },
        "item": {
          "id": "4124ade0-5c14-4fa9-be65-a59a042d5d72",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f85c5a5e-4ec9-4ce1-89f5-7c106fcd1d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d13376-9b8a-4572-a25b-b6e75e949fd6",
        "cursor": {
          "ref": "e5a989e2-bea2-4512-b471-40f96fccfd11",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ed4059c5-7a20-47d9-9c13-4425d9125845"
        },
        "item": {
          "id": "05d13376-9b8a-4572-a25b-b6e75e949fd6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "44be791c-e001-4926-a5d1-49aa066efb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c1056-160f-4b2f-94f0-3fdee1dfb2a8",
        "cursor": {
          "ref": "101c378e-e185-4c67-a063-1949c7b1d6ee",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ff906278-cef2-418a-abc2-2cc5061e45b0"
        },
        "item": {
          "id": "8a1c1056-160f-4b2f-94f0-3fdee1dfb2a8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f54fb6fa-2293-47ed-a20d-601b890776f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc38210-b14a-4a78-935e-0be14802e7e9",
        "cursor": {
          "ref": "b6e2f086-77ce-47cc-acc7-76d705170291",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9795b907-983a-4bb1-a96e-d2a68e2fd02c"
        },
        "item": {
          "id": "dcc38210-b14a-4a78-935e-0be14802e7e9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5d18a131-9019-4559-9fd1-4e264c1c9729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1781a588-fa8c-485a-bd12-4389eaa2c7fd",
        "cursor": {
          "ref": "62d44d5d-61c7-484a-a4bf-82834422f17f",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "6007e9b3-c1f7-4f01-92b1-ed4d17251843"
        },
        "item": {
          "id": "1781a588-fa8c-485a-bd12-4389eaa2c7fd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8511989b-40d5-4be4-a8c8-87de3d986262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745de222-13aa-4292-b161-dd0199511e45",
        "cursor": {
          "ref": "676be486-e0be-41ea-988c-06afd36bf1e8",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a8553de7-2976-46ac-bf2c-31290e300b15"
        },
        "item": {
          "id": "745de222-13aa-4292-b161-dd0199511e45",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "93ee74e1-2301-4d6c-b479-83205b36831b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6d5747-3a5d-4e15-848c-851577dc9887",
        "cursor": {
          "ref": "c7028cd5-232d-47ad-b15d-7ccf60577396",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8f50fe45-99f5-4b36-879b-7ac849508fe6"
        },
        "item": {
          "id": "bb6d5747-3a5d-4e15-848c-851577dc9887",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0cf42e9d-7f28-4ae8-aa26-1806258e20ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f1342b-1b31-4e56-8d3c-81398caf608e",
        "cursor": {
          "ref": "34017ff5-ef9a-4773-ad3d-bef5dd7abbbf",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8ebd6333-9ad4-431e-a537-4af5422a545c"
        },
        "item": {
          "id": "f9f1342b-1b31-4e56-8d3c-81398caf608e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "02bdf7eb-5a2a-4d59-8b86-22a941bf122d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc1c37e-0d79-4fff-90e2-8e3a52c36c7c",
        "cursor": {
          "ref": "5ca3df5c-35c5-4d15-b3d3-27f34eeb5c6d",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "aa8c22d9-83f9-4a09-bf29-627079dac640"
        },
        "item": {
          "id": "3fc1c37e-0d79-4fff-90e2-8e3a52c36c7c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ae06dfa5-de59-4fdf-a723-be7e0c7176c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d87701a-6506-4f0b-8d21-56809dbfd500",
        "cursor": {
          "ref": "97cdd9a2-62f8-44b2-8d05-7abe3473670e",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a54024b2-09bd-4ed8-8eb5-5dde73659556"
        },
        "item": {
          "id": "2d87701a-6506-4f0b-8d21-56809dbfd500",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9c495cc3-7643-4941-a793-c9ea4a35dfa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08547414-bd60-4948-a392-ac65f96835be",
        "cursor": {
          "ref": "ad173503-d38c-4fb8-a10d-c7f53127e47e",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1e263d71-9d87-440e-9376-ddbc77ef678d"
        },
        "item": {
          "id": "08547414-bd60-4948-a392-ac65f96835be",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bcdd58ca-4488-4cd7-ab05-504f76eb1774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebfe1c6-5128-490c-ba3b-b9d913c2a3aa",
        "cursor": {
          "ref": "8488acc3-10cd-4a75-a7a4-009c2cab1a69",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a00b4d7f-de6d-40e1-8010-0eee4c57ca2c"
        },
        "item": {
          "id": "4ebfe1c6-5128-490c-ba3b-b9d913c2a3aa",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "429d1ff8-6bdd-4f20-994a-b496d225ad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1daaf0-02d1-4558-8ead-e7c18fc72d2a",
        "cursor": {
          "ref": "70138d78-0c50-48eb-9403-b28cef4dc4f5",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4719a0cd-e114-4195-8240-7e426c196419"
        },
        "item": {
          "id": "8e1daaf0-02d1-4558-8ead-e7c18fc72d2a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ff0b7caf-2f9e-47a4-a775-6f5870ff1b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9947ed-f506-4673-99d8-b58e2372c10a",
        "cursor": {
          "ref": "9eca557f-dc4e-4260-b6a6-b598db28679a",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7d0c38a5-c673-4cb6-adf9-60849e93c202"
        },
        "item": {
          "id": "7f9947ed-f506-4673-99d8-b58e2372c10a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bbd712bf-b083-4ed8-8368-655f804b2fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cac460-4a4c-4305-be3d-a9036027db4c",
        "cursor": {
          "ref": "175bf18a-c413-42ae-8969-e2d520f10e65",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0bee9712-56c8-44e5-addb-e732ec13353f"
        },
        "item": {
          "id": "b8cac460-4a4c-4305-be3d-a9036027db4c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b1a12dd8-c998-49c5-972a-b9f43fb76094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5080904-ef46-4985-aeb2-9b3f96857d5e",
        "cursor": {
          "ref": "187e36a3-0931-47dc-9a4b-032d409f9708",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9d65951e-bf06-47c9-bd23-2c0a629a5528"
        },
        "item": {
          "id": "c5080904-ef46-4985-aeb2-9b3f96857d5e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "36c83449-04ff-4501-9cd0-1e7acc66bf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d368b453-5a6f-4b65-9d39-8006c2303170",
        "cursor": {
          "ref": "51aca554-10c6-4a8d-b898-256a57e41915",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8c4ff960-3f9d-476b-8082-4eaa7c739ca1"
        },
        "item": {
          "id": "d368b453-5a6f-4b65-9d39-8006c2303170",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3e686546-7d6f-4863-bfe8-25aeb5d22c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf0c21c-6686-473d-87e9-7a827c92aa09",
        "cursor": {
          "ref": "5b3da76a-b298-4504-b202-f06329b224c2",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "628234b3-722d-4c60-832d-879aa2e40f01"
        },
        "item": {
          "id": "8bf0c21c-6686-473d-87e9-7a827c92aa09",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "60394bf2-33b2-4768-a7e5-72df99a84b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3307ced2-9c36-46c4-bd86-6b41bff4052f",
        "cursor": {
          "ref": "a5845835-08b4-449a-8666-41dc9b6cbf53",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f6ea930f-a500-455f-a975-233d40fc1ed4"
        },
        "item": {
          "id": "3307ced2-9c36-46c4-bd86-6b41bff4052f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0be9fc1d-0b85-4b3f-bd96-824d729d4f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbd6bf0-f855-494a-bd5b-d0cdc746c548",
        "cursor": {
          "ref": "820e416d-1530-410d-bdbb-9d8fd72227f2",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "33c44fa2-cd55-41d9-b345-c2778c1069d9"
        },
        "item": {
          "id": "4dbd6bf0-f855-494a-bd5b-d0cdc746c548",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e8252b06-7381-4aee-9d65-db253d5ca2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dcbe10-7531-4997-8516-1ca31e931492",
        "cursor": {
          "ref": "2896f082-1ab5-4456-9e85-1b43522494f9",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "516906d5-77b4-43db-b268-f6d291c2b922"
        },
        "item": {
          "id": "77dcbe10-7531-4997-8516-1ca31e931492",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dc3935af-d7c8-4dee-8554-89318c889138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4618c7-1722-4f90-ab2c-0a366f0a994e",
        "cursor": {
          "ref": "f5d1c4e3-5235-46f8-b458-800d8e8c9f72",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d7c051da-6dcf-45c3-85e1-20f235166a74"
        },
        "item": {
          "id": "aa4618c7-1722-4f90-ab2c-0a366f0a994e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c16fc24b-3378-4191-840d-2faf4b5e5014",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 627,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaefb5d-4f1b-4023-8684-7ef2bd14fd34",
        "cursor": {
          "ref": "d382ce1e-31b9-486a-9047-a2788bf2fcd4",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ae85bb2b-d8a8-495f-8997-88512ff7bfd2"
        },
        "item": {
          "id": "7eaefb5d-4f1b-4023-8684-7ef2bd14fd34",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6d39c869-9ab5-4a99-9e87-b16f2da8a351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703487e6-8d69-49df-be89-e4f1284179c7",
        "cursor": {
          "ref": "0248c2a6-df9b-4488-b35e-9d6726594223",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2a3c3617-c892-47c9-8121-e7936dff6218"
        },
        "item": {
          "id": "703487e6-8d69-49df-be89-e4f1284179c7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "982f71fa-b8f4-4591-bcbf-44dacd274225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b31021-7a19-4630-b1de-dc258626a07d",
        "cursor": {
          "ref": "efadf73c-ff17-4d7c-b339-23827d3e0ef5",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d66ebdcc-73a3-4dd9-bde2-a6ac771da820"
        },
        "item": {
          "id": "b9b31021-7a19-4630-b1de-dc258626a07d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "512f855f-be88-4654-9e1d-e898701e650c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdba59b-5897-4a72-8ea0-925c117a36f3",
        "cursor": {
          "ref": "c70d89df-5ac9-4dfb-8cd9-720bbb3585c6",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7c0ddcbf-04b3-4e82-a8bf-919ae78f0e8d"
        },
        "item": {
          "id": "1cdba59b-5897-4a72-8ea0-925c117a36f3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "20d247d3-9379-43e3-83f6-8bdce91e56de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7647d5a5-fc5b-4b19-af2e-6dd57b46a389",
        "cursor": {
          "ref": "a77d3462-1865-4b22-ad7a-ac2c2bc06e08",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8062e4f6-0609-4a12-bfbd-273c2f67a5da"
        },
        "item": {
          "id": "7647d5a5-fc5b-4b19-af2e-6dd57b46a389",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f8df46a1-a8a9-4a9e-9c3c-8d7a0c78e4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bfaadf-2523-40a2-84b0-7bf4167f8872",
        "cursor": {
          "ref": "09667103-8ff9-4c9b-a0c9-011e89f3f11c",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2222113a-8b33-4620-ab8d-9adcf50c9e7e"
        },
        "item": {
          "id": "97bfaadf-2523-40a2-84b0-7bf4167f8872",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a9c743ec-d594-40b3-afc9-63b89e84dbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a5e583-7e16-4c9e-b5f7-e21f4c8542b1",
        "cursor": {
          "ref": "e441c339-4afc-428c-bef7-ee6202e205a6",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2de64df5-ff4c-464d-ba28-640dceee5f2f"
        },
        "item": {
          "id": "65a5e583-7e16-4c9e-b5f7-e21f4c8542b1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1d96b7c4-f30e-47b3-a8ab-0d53c96017cc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 579,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d782ebdb-1355-405b-bd28-80a385ec6744",
        "cursor": {
          "ref": "7c96a23b-2064-425c-bcc9-491fe55cb7ed",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6ce97437-db76-431e-ae32-3a0fe8f51481"
        },
        "item": {
          "id": "d782ebdb-1355-405b-bd28-80a385ec6744",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "984f6317-55e3-4889-b3f9-08bbd4dea6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7ad8718-cc4a-45c0-be4d-2353de281bc4",
        "cursor": {
          "ref": "1e87d827-266e-446b-b996-8c305a8ed60c",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d8e78999-6762-4cc0-8b16-73968a17256d"
        },
        "item": {
          "id": "f7ad8718-cc4a-45c0-be4d-2353de281bc4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f5bb866c-1140-4de2-a9aa-bc7e82756205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a858bd0-8293-4d00-bf35-a09a35cd1555",
        "cursor": {
          "ref": "953992d0-9180-4fa7-95d3-a637583e5085",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5e7e76ca-2085-4d1e-aba7-7b0d8c1a22a2"
        },
        "item": {
          "id": "7a858bd0-8293-4d00-bf35-a09a35cd1555",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a57fdb90-e970-4895-bd24-9a78c0ac7167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c24ecb5-337d-43dd-b881-5b6666f60ea7",
        "cursor": {
          "ref": "f85e427c-e65b-46ce-8b23-d2094fd0fc28",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8a378cb3-aab0-4abd-8c48-6f9b8276e3bb"
        },
        "item": {
          "id": "4c24ecb5-337d-43dd-b881-5b6666f60ea7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "29f76a5b-a0ec-4f16-851b-d585c6b256ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3acb816-e861-47ef-9f0d-7f47126ec7f2",
        "cursor": {
          "ref": "1070cc04-735a-4a1d-99dc-8fcfe2983f95",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6f40351a-27aa-4a70-ae51-b52c606e8038"
        },
        "item": {
          "id": "e3acb816-e861-47ef-9f0d-7f47126ec7f2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "73958bf5-f549-4fc1-a552-2a28afae6a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac09183-05fd-48da-bed6-020eab821212",
        "cursor": {
          "ref": "6c12cf1e-b7dc-4e6e-9a74-99363b6fb831",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aafec236-bfed-403a-981d-ebcff0ce60b2"
        },
        "item": {
          "id": "cac09183-05fd-48da-bed6-020eab821212",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fba16ff0-4106-471b-b792-31cf5567bddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91cd39fc-696b-4957-b719-88b54146914e",
        "cursor": {
          "ref": "6a3fc56d-12b9-491f-addf-d40cb777a459",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "dacd0642-cedf-47db-b976-7ecf45f61645"
        },
        "item": {
          "id": "91cd39fc-696b-4957-b719-88b54146914e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6f324b20-2c23-49fc-8b3a-e2bf6061fe8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd54edd-3652-4bcd-ac39-e72423819809",
        "cursor": {
          "ref": "3cacf8d8-afb0-4406-8b6b-af1c47db8e54",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4aec5bf7-db01-469d-b0f6-973ebcc180d3"
        },
        "item": {
          "id": "5cd54edd-3652-4bcd-ac39-e72423819809",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d9f7aab1-bcec-4a0b-bec1-da1636c54046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcafe56f-5a52-40ca-95d3-20ea45ce721b",
        "cursor": {
          "ref": "fc761527-3066-4806-9805-521e5c1bbd44",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c4d26a4b-4418-4fdc-bc56-02083195a563"
        },
        "item": {
          "id": "fcafe56f-5a52-40ca-95d3-20ea45ce721b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fa36170a-e6b1-40c5-976f-aa33cd17dcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63283db3-2675-4c19-94af-d55dff6e2765",
        "cursor": {
          "ref": "06cde80a-95cc-472a-9569-926fd4414ff6",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "735df296-4733-45d4-ade1-08742c130b53"
        },
        "item": {
          "id": "63283db3-2675-4c19-94af-d55dff6e2765",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5aa085f4-7827-4b08-92c9-1292c360a3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424e5967-18ff-4b32-90cd-ba89feb1ddbc",
        "cursor": {
          "ref": "8c8ed381-955a-4624-a76e-b70ac6908d13",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "931bd534-e64e-4d77-b5e9-d072253f9783"
        },
        "item": {
          "id": "424e5967-18ff-4b32-90cd-ba89feb1ddbc",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f24c1b18-1381-4749-83d0-61d3a530434b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098ebbde-d0b9-448b-88c7-37109d03b15d",
        "cursor": {
          "ref": "2c159076-8aa1-442b-8e76-5a238ee1122c",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8e2c69fc-f715-413c-b91e-6dc256d94d01"
        },
        "item": {
          "id": "098ebbde-d0b9-448b-88c7-37109d03b15d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ac0d70ba-fd1c-4ebc-9cef-63c6df2db037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ef4717-4008-4727-8deb-a1362d15421a",
        "cursor": {
          "ref": "152483d3-cea3-4aeb-845b-485d29979d5a",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "54cb63e8-beea-46dc-aec9-ca4b9fd6fe93"
        },
        "item": {
          "id": "b5ef4717-4008-4727-8deb-a1362d15421a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "57203172-a8e5-4b81-957c-2b3362b4331d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 678,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa85e1c9-74df-4369-84dc-23b3f2591dd5",
        "cursor": {
          "ref": "90df0ef4-61fa-4da2-b771-8a73fc0b93d2",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f1e636fb-8684-414e-8696-3034608e65ce"
        },
        "item": {
          "id": "fa85e1c9-74df-4369-84dc-23b3f2591dd5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d536ecb9-dc67-4d9a-b945-7bd8d18d5727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30cad18-a494-46f4-bdec-2a4b1bd51a6f",
        "cursor": {
          "ref": "e3e465bd-5d25-4c2a-9dde-9f80883b6c3c",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d1724cb5-34b2-4094-a82b-34bf303efdbc"
        },
        "item": {
          "id": "d30cad18-a494-46f4-bdec-2a4b1bd51a6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c9f924b1-994f-4b89-aebf-ea21602586bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375b8348-3610-4a1c-aa45-43db56ba1137",
        "cursor": {
          "ref": "a67046a5-95b9-44be-91b8-f270c3fa948e",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f4638f79-e298-41d4-bb27-6447651d4c62"
        },
        "item": {
          "id": "375b8348-3610-4a1c-aa45-43db56ba1137",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3f65986b-7d53-4db4-8878-e0b110e0ad3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8258850-026c-4087-a850-2f3dddd2914d",
        "cursor": {
          "ref": "cca4bded-8065-4c2d-98f7-8a1a9d6aec6e",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "846f7220-5142-41a6-9fda-c92b6fa7fe7d"
        },
        "item": {
          "id": "c8258850-026c-4087-a850-2f3dddd2914d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3d860f0f-b399-43c9-bd3f-6de4c414e704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a826facb-33b3-45d1-b415-452eb21f3ce9",
        "cursor": {
          "ref": "ccf831af-289e-47c0-a996-a5325d729e02",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3d49b106-bf52-4dc8-8f7a-604e798b3f60"
        },
        "item": {
          "id": "a826facb-33b3-45d1-b415-452eb21f3ce9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7c476813-ff1b-4ba3-962f-8e058915fbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a033630f-3c1f-4320-8630-d16a31c03972",
        "cursor": {
          "ref": "fa7f0890-fefe-4f45-9a3f-b21ad54561c5",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "635787be-5c41-42fa-b954-f6bec7931321"
        },
        "item": {
          "id": "a033630f-3c1f-4320-8630-d16a31c03972",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f4d90d04-cea1-4dea-927d-9a4056e1e916",
          "status": "Created",
          "code": 201,
          "responseTime": 2368,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "c87bb817-d6ff-41b0-bd16-2cf0bfff30ec",
        "cursor": {
          "ref": "52875e80-03c5-4f03-8b2e-89990b35fcb2",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f9bbad67-5e26-4605-81e1-9158a2ac140f"
        },
        "item": {
          "id": "c87bb817-d6ff-41b0-bd16-2cf0bfff30ec",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "33c4bc40-246e-4557-a1b0-56cb415dcf66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c28c656-2740-4f5a-b33f-90aaf0a4af40",
        "cursor": {
          "ref": "029c909b-436a-4346-999b-41ff1d183062",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3c884d29-c376-4f38-b66c-499664612f25"
        },
        "item": {
          "id": "7c28c656-2740-4f5a-b33f-90aaf0a4af40",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "679da977-3ebb-4fa0-ad75-242b4e3b7080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0399d0-4c81-41b8-8b3d-95c567d26577",
        "cursor": {
          "ref": "f165cd4f-e49f-42a2-9bd6-913dcde5c5d2",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c3c6ffed-5adb-4fa1-8b03-b6308da81eb4"
        },
        "item": {
          "id": "1b0399d0-4c81-41b8-8b3d-95c567d26577",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "655a2de7-cd7f-460d-a636-34e1d1d3f6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361bcb1-4be4-454e-bc4f-c7afeea23b7b",
        "cursor": {
          "ref": "a51b95f6-5f5b-4d2b-bebc-57c4c3ce26ac",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b59dfeb5-8885-42a4-952e-336900b9b925"
        },
        "item": {
          "id": "f361bcb1-4be4-454e-bc4f-c7afeea23b7b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4a7f10ab-1677-42e8-8df3-f3528fffa6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 505,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3190ab80-46f5-4fff-b220-59b98d716078",
        "cursor": {
          "ref": "7d0c2ba0-f9e5-4814-a28e-4e502adc18f7",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4b4605bd-bd69-40be-81ac-d7d6514c3f50"
        },
        "item": {
          "id": "3190ab80-46f5-4fff-b220-59b98d716078",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b8e3da3f-33d5-4ee9-8a35-e2df8274957a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dfcff4-6b4c-4aae-b26b-6548e4daadbf",
        "cursor": {
          "ref": "d3b192ca-f740-497b-9f0c-622b4892db8d",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e354bdbc-9a93-4cf7-9afc-7be43a01c45f"
        },
        "item": {
          "id": "b2dfcff4-6b4c-4aae-b26b-6548e4daadbf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6d2972a6-5340-484f-97ee-c3523672cc0f",
          "status": "Created",
          "code": 201,
          "responseTime": 2951,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "e6f37017-dab0-4c7a-ba76-c408a358a7a7",
        "cursor": {
          "ref": "5817d3cf-2538-488e-b50b-c381e3e9657c",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0d1054f7-1434-4b1f-92ee-9f2f83e86ae3"
        },
        "item": {
          "id": "e6f37017-dab0-4c7a-ba76-c408a358a7a7",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d2db19b9-28e0-4f19-a941-aa39e7a00d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5035be9f-cc71-4f8c-82ac-a1c6cc5d515b",
        "cursor": {
          "ref": "d4d5491d-faec-4897-ac30-c2da537a7bac",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "459700a3-4f03-4350-99ed-f38314bdff1a"
        },
        "item": {
          "id": "5035be9f-cc71-4f8c-82ac-a1c6cc5d515b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d42c0f05-1cf7-4fc3-8bed-0f4464b9e7eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505f858a-7695-4cf3-b601-03755f81f628",
        "cursor": {
          "ref": "edd91312-7640-4178-9d5d-acb54a43fb40",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "38a89dcf-b26b-42cd-9c7d-c2d7b8cd5e1b"
        },
        "item": {
          "id": "505f858a-7695-4cf3-b601-03755f81f628",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9d7e5290-e144-4a1a-99a9-b5b45b9b9944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a6c3fd-6ada-4cab-a74b-5a865fcc52cc",
        "cursor": {
          "ref": "c16fe5fb-2df4-4b41-9f22-122d7a0a2234",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a6452f8f-a051-474c-bfc3-e1eef763e902"
        },
        "item": {
          "id": "29a6c3fd-6ada-4cab-a74b-5a865fcc52cc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dd16760b-d206-4b39-9ac2-1f0067864394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c845aeb-c3d2-4615-b33d-d04211e01294",
        "cursor": {
          "ref": "24db083b-c983-4fe8-a94b-8158d43ddd69",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1df44488-48d7-484e-b949-560567cae252"
        },
        "item": {
          "id": "6c845aeb-c3d2-4615-b33d-d04211e01294",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0d1ca9fb-7cc3-4915-a845-4cbc286d2b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3215f628-886c-40b1-a579-59759f087374",
        "cursor": {
          "ref": "0cb610a6-e4c8-4f6e-b721-a5c74b5fe7a1",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1baf0372-f781-44d2-bd78-1d797ad5f57e"
        },
        "item": {
          "id": "3215f628-886c-40b1-a579-59759f087374",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a33e8e5a-5d2d-47e5-8e10-ce7f8ce29869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bf902b-e4b6-49a8-9892-206b40f24bfb",
        "cursor": {
          "ref": "d3960ff5-a667-45c5-8ce2-af0d2b6718e3",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "70afc81e-ba71-4ea5-9497-0b5983876b96"
        },
        "item": {
          "id": "22bf902b-e4b6-49a8-9892-206b40f24bfb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0d7f6431-0b75-4f6e-b88e-518a9d242cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e74c5b4-64b3-4c90-b390-658e54d1e144",
        "cursor": {
          "ref": "b29eeb4e-4111-44f2-9a7a-ae38b95399d8",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "06609499-4230-4e7a-a86c-9f4802ea37c5"
        },
        "item": {
          "id": "0e74c5b4-64b3-4c90-b390-658e54d1e144",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7c9558fa-bad6-4b09-89ad-5b1844477564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c5455a-237d-4306-8c96-493a0cd18508",
        "cursor": {
          "ref": "364b4d0b-1605-4a93-8e16-290954a3cb7d",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0dbc14d4-79f4-4cf7-844d-fdade2d584a0"
        },
        "item": {
          "id": "79c5455a-237d-4306-8c96-493a0cd18508",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "376e4749-f4a4-4459-9b78-bbba54033295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9ab934-7095-4fc5-81e1-616c2109c41f",
        "cursor": {
          "ref": "46f671f6-8943-4af4-8994-2c677a784164",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "90543399-8e5a-4dbc-aaee-f7f587688b07"
        },
        "item": {
          "id": "2c9ab934-7095-4fc5-81e1-616c2109c41f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "29f586a6-38fe-4206-822a-fd9434f4787d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5485bb93-7742-47ab-b514-d1426b9b0638",
        "cursor": {
          "ref": "bfe3a878-a58f-461b-a736-00615c1dbcb1",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "86a1ae45-b0fb-4fee-9537-f7bf341e9f15"
        },
        "item": {
          "id": "5485bb93-7742-47ab-b514-d1426b9b0638",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a7a5fb50-1ebf-4422-8e1e-6fb038184f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d4f32-793d-4a9b-b5e9-4cf44e5f131e",
        "cursor": {
          "ref": "8ec6a014-d1e4-4d3c-b385-3229e91642ac",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a128dc2d-1c92-478a-bf7b-64231eaf07ff"
        },
        "item": {
          "id": "6c4d4f32-793d-4a9b-b5e9-4cf44e5f131e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "46ba84bb-89c7-434e-af26-3834df71b53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eacb1b3-9597-440f-9678-3d3c9e2d6dc8",
        "cursor": {
          "ref": "556e7940-8db2-408c-a507-85ddc3d0f134",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "347ca9ef-a5a7-4a28-8756-e9cab78da3b4"
        },
        "item": {
          "id": "1eacb1b3-9597-440f-9678-3d3c9e2d6dc8",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "696605c5-95c6-468f-944c-54b7c111f3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16868c1b-93da-4301-a22a-33d1a536ec53",
        "cursor": {
          "ref": "0deae8d0-5d9a-4cd0-8be6-cebf0d99563d",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "46f5c658-c946-48d6-af61-3342b859bb95"
        },
        "item": {
          "id": "16868c1b-93da-4301-a22a-33d1a536ec53",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3b76b3f9-4098-4078-b882-d5272fa399e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd16777-c610-4bc7-a314-5bc7203458a1",
        "cursor": {
          "ref": "715e51ef-4633-4349-867a-429382127820",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c2a31906-60ed-4eb4-81e0-45e88d323e36"
        },
        "item": {
          "id": "4cd16777-c610-4bc7-a314-5bc7203458a1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "68f9a488-8d21-465b-bfc3-b3624794f7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031c6809-79b3-4d7d-8dd6-a6bce1b9c941",
        "cursor": {
          "ref": "8de84257-804c-4898-83d4-ffa5f7f25ad2",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6467a0da-44d9-417f-ad0b-42633c2d5678"
        },
        "item": {
          "id": "031c6809-79b3-4d7d-8dd6-a6bce1b9c941",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8ee0e1be-8a53-46a6-a58c-28fca9fe2f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ad8e17-c4ba-44b3-8704-9b7d9c73afff",
        "cursor": {
          "ref": "a0565f2c-595f-4703-85d1-46e5a5d8fa94",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "486f6332-69f5-4cc8-9ee9-46a821993d6f"
        },
        "item": {
          "id": "92ad8e17-c4ba-44b3-8704-9b7d9c73afff",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "37fb4da8-f86c-4f79-816e-73f836f0af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c122f10-3324-49a9-b65d-ca615f9de1ed",
        "cursor": {
          "ref": "9e710d47-4fbb-4ab9-aac0-a32cd2bb932b",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bd990a74-b2c9-4157-863d-7f99dabc3ddf"
        },
        "item": {
          "id": "8c122f10-3324-49a9-b65d-ca615f9de1ed",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b5e56282-47c5-4ea8-b1de-ba36da2758b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7372e724-04cb-4a5e-a1de-a642e6d43d76",
        "cursor": {
          "ref": "50f296f1-35b8-40ed-9bc4-a916904b6440",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e9a7331c-cb44-441c-bdf6-0e6ee727823e"
        },
        "item": {
          "id": "7372e724-04cb-4a5e-a1de-a642e6d43d76",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "eb42a015-c78f-4348-840e-be97be5fab4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa406f0-50b8-46cc-ae67-efdba110fa0a",
        "cursor": {
          "ref": "ab877e79-4867-4202-ba80-bffc3f987cad",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bd02c100-22a6-4927-8fe7-f6ff519a4a66"
        },
        "item": {
          "id": "afa406f0-50b8-46cc-ae67-efdba110fa0a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7044b1e5-6099-4847-84a3-795d321d01c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79427b8d-34e6-4732-97c8-da4e78d4a2ee",
        "cursor": {
          "ref": "ee2a06c2-1247-4f6b-85bc-1f57f6f5acc9",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7a644308-71d3-490b-9e41-db5062299bdd"
        },
        "item": {
          "id": "79427b8d-34e6-4732-97c8-da4e78d4a2ee",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "29f301d3-8857-410d-b4c8-68c883493817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8002acf-f77e-478c-b327-894530cde38b",
        "cursor": {
          "ref": "4a36ec7a-33d6-40e3-b47a-75acdc768b69",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6526830e-b519-4d40-9095-e50032a7d93f"
        },
        "item": {
          "id": "f8002acf-f77e-478c-b327-894530cde38b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "84f68d7a-ee11-43be-a5ad-3ad6e8ba566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 647,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef205bd-1066-4419-b8db-df0acde3a6b5",
        "cursor": {
          "ref": "8f176495-622c-401f-bfc7-7854622fb359",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f8636594-a50c-4455-af58-27a44e2140df"
        },
        "item": {
          "id": "4ef205bd-1066-4419-b8db-df0acde3a6b5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "27e5a840-d201-43b9-900c-0fd401d0ff2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2902b569-5c65-4dbd-8903-b0585018b413",
        "cursor": {
          "ref": "f2b2b5b8-5c9c-4581-8399-68a1084faa78",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "beef9672-9991-4955-a1f3-907c4705b264"
        },
        "item": {
          "id": "2902b569-5c65-4dbd-8903-b0585018b413",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f028a0fc-e033-46bf-a28f-c7eb7a1b3927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5729d875-9e96-4f1f-924c-06ce0aa672a6",
        "cursor": {
          "ref": "1829e273-a5dc-497d-8f04-0a969191e037",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "27f4e58a-020c-4450-8783-622682bd0319"
        },
        "item": {
          "id": "5729d875-9e96-4f1f-924c-06ce0aa672a6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "548a2eae-78e7-411c-b2c8-190052edcb70",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7044e522-7ff7-448f-8ccc-b11a6316b3df",
        "cursor": {
          "ref": "56417af5-b7b0-43d7-bbf0-005122f0e8c7",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a0d16f24-2010-4619-b725-a458523b4a3f"
        },
        "item": {
          "id": "7044e522-7ff7-448f-8ccc-b11a6316b3df",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "dc823a1d-1cff-40cb-894b-dd0b03fb857f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 604,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cecd5bb-e475-4ccb-bc58-a6996efa38db",
        "cursor": {
          "ref": "e0353fff-f399-4dd3-a62a-d93ea621d10e",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0ccc7307-cd84-42ef-8e2f-e193043cc340"
        },
        "item": {
          "id": "7cecd5bb-e475-4ccb-bc58-a6996efa38db",
          "name": "credentials_issue"
        },
        "response": {
          "id": "07a06aa8-1873-4193-8990-2d0dbd365cd6",
          "status": "Created",
          "code": 201,
          "responseTime": 2754,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "aa97d768-286d-466d-b786-dac473d45518",
        "cursor": {
          "ref": "64ef6d7c-a3bd-4433-872e-158e188f9731",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3683882f-e3ca-4cbb-bf54-d2d99c7a6db6"
        },
        "item": {
          "id": "aa97d768-286d-466d-b786-dac473d45518",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "8185ff23-28ba-4505-ada8-bcbcde7a4ce9",
          "status": "Created",
          "code": 201,
          "responseTime": 2942,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "49bdc12b-dcd3-4466-99aa-c5e0f8286733",
        "cursor": {
          "ref": "ba694af0-6d1b-4064-922b-17e8f3922c32",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "381aaa97-d3c8-4180-9920-8b01b95488ec"
        },
        "item": {
          "id": "49bdc12b-dcd3-4466-99aa-c5e0f8286733",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f8c5aaf8-808a-47c3-918b-f71d7f5f43da",
          "status": "Created",
          "code": 201,
          "responseTime": 2891,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "58d2b12b-27e2-458c-9abd-26cf496863ac",
        "cursor": {
          "ref": "d759f99e-566a-4bfb-a91f-7687ffe41739",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e0b0e91e-3eee-4fd8-a587-2ed5cc43a68f"
        },
        "item": {
          "id": "58d2b12b-27e2-458c-9abd-26cf496863ac",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "28d4da7f-806a-4483-a5fa-d8d322d395e5",
          "status": "Created",
          "code": 201,
          "responseTime": 3029,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3237c7c3-b4b7-470b-87e6-c5cf613cd515",
        "cursor": {
          "ref": "b6878410-0d1d-445f-b057-2cec2418b517",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "065875bf-ce8b-4d91-aaf6-465c5713f16a"
        },
        "item": {
          "id": "3237c7c3-b4b7-470b-87e6-c5cf613cd515",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ba17923e-b53e-4fa4-90eb-221af32020de",
          "status": "Created",
          "code": 201,
          "responseTime": 2847,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "ff3b8ffa-de47-49bc-b540-ca9d329cd523",
        "cursor": {
          "ref": "9135fca6-5e80-4f2b-b6ab-6f72a0081210",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8cb352bc-6473-4fca-b434-dbeb8462a976"
        },
        "item": {
          "id": "ff3b8ffa-de47-49bc-b540-ca9d329cd523",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "76d43e66-8e65-413b-abf5-a5d783df6f26",
          "status": "Created",
          "code": 201,
          "responseTime": 3494,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "74d6fb89-223a-4aac-91e3-f5b85fa2530f",
        "cursor": {
          "ref": "b960f639-8ebb-4e4a-8ca4-1f7590c5cdac",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dddd356e-cb2a-4fa4-9fc3-b0670634d0dd"
        },
        "item": {
          "id": "74d6fb89-223a-4aac-91e3-f5b85fa2530f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "083263d5-9274-4ac5-994d-6426d7260340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d6fb89-223a-4aac-91e3-f5b85fa2530f",
        "cursor": {
          "ref": "b960f639-8ebb-4e4a-8ca4-1f7590c5cdac",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dddd356e-cb2a-4fa4-9fc3-b0670634d0dd"
        },
        "item": {
          "id": "74d6fb89-223a-4aac-91e3-f5b85fa2530f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "083263d5-9274-4ac5-994d-6426d7260340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d80a97-5b76-44bd-8b4d-6161f4c158a6",
        "cursor": {
          "ref": "3ddc16b5-bb14-4902-a4c7-8043cbe47efe",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fc5edd42-23a5-4408-b4c7-f035c9d6cc0c"
        },
        "item": {
          "id": "f1d80a97-5b76-44bd-8b4d-6161f4c158a6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1442ce90-c90c-42d9-aff3-67e29ff67373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326cd3b2-8ea4-42a6-a5b7-c92400e69b77",
        "cursor": {
          "ref": "bdc6fe0f-3bba-4261-b703-f7f4571c93f4",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b936912e-8390-4fd3-883c-6dfa35e3e732"
        },
        "item": {
          "id": "326cd3b2-8ea4-42a6-a5b7-c92400e69b77",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c59b267d-e48e-4842-b9cc-f92592365241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd73dce-ffc8-4460-8ad2-d4ba4aac3d59",
        "cursor": {
          "ref": "c7a5bbb6-fd00-4458-9c8b-3c342a9c5db6",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "45453c02-d2ec-4d0b-816a-20b3f1a191ec"
        },
        "item": {
          "id": "efd73dce-ffc8-4460-8ad2-d4ba4aac3d59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e1ad8ff-cb3f-4578-b5b3-664c70ee9eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe50dcb-eeb6-4434-9dad-661da2c3f53d",
        "cursor": {
          "ref": "0b41224f-58a0-497a-b9a1-65956a7ad522",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3109d1cd-3ca4-4c0f-9381-caf46d66c195"
        },
        "item": {
          "id": "bbe50dcb-eeb6-4434-9dad-661da2c3f53d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f9fc8eb3-bab3-4313-a9b0-32397b2049c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b444da98-2fe6-4b5c-b759-358bf67cd3eb",
        "cursor": {
          "ref": "30a112d5-ece2-4848-adaa-f1263be5b791",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "41c79191-b01a-4b6c-9613-16225cdaa344"
        },
        "item": {
          "id": "b444da98-2fe6-4b5c-b759-358bf67cd3eb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7ec129ea-0e1b-43dd-b6c6-65dfc7e25019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b47131-ebb1-4171-bb16-75b546a77dbe",
        "cursor": {
          "ref": "7ef5f16a-a1b3-4b3e-be94-ebc363c9e5a6",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "15ce4dcb-5800-498d-b66f-f879f144f196"
        },
        "item": {
          "id": "45b47131-ebb1-4171-bb16-75b546a77dbe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8dde6570-b299-42a9-b282-805e0fae8023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53892c94-d0a2-438d-9115-764fd2d32ebc",
        "cursor": {
          "ref": "32f0d27f-a3c2-4d2e-9d88-ade3eef4d230",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "87f7f87c-48b0-4413-99ad-76fcc0626f46"
        },
        "item": {
          "id": "53892c94-d0a2-438d-9115-764fd2d32ebc",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2688b43e-4e7b-4eed-b36d-0649e71d2ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e10cc4-0b4e-4b2b-9503-0a2ad11df214",
        "cursor": {
          "ref": "6a5be193-8d33-4dee-aa63-1017650f2644",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0b9cfa08-7f8e-4e34-a95e-b1ad0f86ba28"
        },
        "item": {
          "id": "c0e10cc4-0b4e-4b2b-9503-0a2ad11df214",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9f825858-8018-4f5e-a046-4b33c6aa3299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7da8320-3a50-4834-a53f-f598f28f66ca",
        "cursor": {
          "ref": "e302c858-e41f-4d9a-acce-eda3884e1104",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "45bb99bb-2209-4ece-b5d7-af7db2b88d11"
        },
        "item": {
          "id": "e7da8320-3a50-4834-a53f-f598f28f66ca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "88174239-4259-400a-9ae2-96c4aecbaecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490c5a76-1bae-483a-9de1-2f96e24e6f38",
        "cursor": {
          "ref": "adfead67-d7b6-4c83-b94d-2ab52db5cbbf",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "af2eada4-1f57-48a8-bc81-cb5c6d031169"
        },
        "item": {
          "id": "490c5a76-1bae-483a-9de1-2f96e24e6f38",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f9d47032-3b2d-4409-87b8-9a2c146f82ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07becc79-c35b-4833-aadb-3cfb42cc8327",
        "cursor": {
          "ref": "6b9e205c-5933-446e-8a2a-dd44ec870b18",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "707ebdda-b926-4931-89ef-23a528f28e75"
        },
        "item": {
          "id": "07becc79-c35b-4833-aadb-3cfb42cc8327",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e80255bf-f006-4134-af6f-87a696a7bd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167210f3-6109-4f3c-9bfb-88a375804c47",
        "cursor": {
          "ref": "0864660b-ebfc-4fb1-a495-379e668fdf56",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "31ef66d3-5aa0-4a1a-8882-477e0343b494"
        },
        "item": {
          "id": "167210f3-6109-4f3c-9bfb-88a375804c47",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2f37885b-bbfc-4678-abb3-0ff24326a80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5702a2ae-08d0-498d-a27c-22b398f326b8",
        "cursor": {
          "ref": "dda675d7-60a0-472c-90a5-d0234857b86a",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2daa106f-4f4c-4c89-9529-a23136c87be6"
        },
        "item": {
          "id": "5702a2ae-08d0-498d-a27c-22b398f326b8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec96fc24-f956-4ee4-99dc-582d34385457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 685,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f94bfaa-5523-4f8e-8661-04b9a5a76db5",
        "cursor": {
          "ref": "a6ce9939-31cf-4987-9c26-887edec5b5a1",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e767fe58-e4e4-4b31-8a58-4ec576bfe84a"
        },
        "item": {
          "id": "1f94bfaa-5523-4f8e-8661-04b9a5a76db5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "65243fc0-c752-40dd-965b-acadd8197a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe72388-904c-4cb7-97b8-1f9ca4f9528b",
        "cursor": {
          "ref": "217794ee-cd7f-4c17-8a89-edf03dcc7ea4",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cc328137-39c3-4c38-a150-95d07e705f55"
        },
        "item": {
          "id": "afe72388-904c-4cb7-97b8-1f9ca4f9528b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "52d4dc17-a016-4d9f-bc65-69ef807b7e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bced08e5-3072-4d3a-9e43-7d8c79b096e2",
        "cursor": {
          "ref": "0a28b24a-4613-49dc-b749-49dd3930e550",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9b3f0e0-73ce-493a-bd25-011d3db218d2"
        },
        "item": {
          "id": "bced08e5-3072-4d3a-9e43-7d8c79b096e2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cfa86be9-030b-4277-a778-dd038110deb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde642ea-3714-47c0-868b-8ea963c74f70",
        "cursor": {
          "ref": "0bc00807-aaf9-49ed-bafd-4589564a5bcd",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4afa1ccb-fee7-4592-ab5b-1ccb96476a1a"
        },
        "item": {
          "id": "cde642ea-3714-47c0-868b-8ea963c74f70",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e9bfaa85-d6ba-4cf7-997c-f4daa4c638fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ac83be-3c63-46bb-b0e9-d6bbb0076f8c",
        "cursor": {
          "ref": "1a8a689b-05af-4b34-bd5a-c758504f43c4",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "82095466-ac9f-4718-a5c2-0221ddcbb6f7"
        },
        "item": {
          "id": "f1ac83be-3c63-46bb-b0e9-d6bbb0076f8c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "274ebd41-3a8a-46c2-b140-cbc990d8fe14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6b12d9-c289-474d-84a2-f1e87f65f610",
        "cursor": {
          "ref": "c0839b63-80e2-4a3e-bc9f-1f82552abcac",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ed82a83a-19f7-4360-910d-42a6b63bfabd"
        },
        "item": {
          "id": "2a6b12d9-c289-474d-84a2-f1e87f65f610",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f5f8a75-8c5f-4cd9-9158-efd683953863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac1ece7-91f2-4846-8a69-78fd5a0e8e0e",
        "cursor": {
          "ref": "3eb4d2e5-1ff3-427a-8a64-cdf925786cf8",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e15619d-d1e0-454f-8842-9520910a916e"
        },
        "item": {
          "id": "6ac1ece7-91f2-4846-8a69-78fd5a0e8e0e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "40605504-d94c-432e-90cf-fcf55634d013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ff704f-922e-4fb9-8599-220b8c18c12f",
        "cursor": {
          "ref": "08288305-f07c-43e1-8b3b-f11fdd385267",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "900ba1f9-44f2-4f01-8ff8-ff7259efadf6"
        },
        "item": {
          "id": "04ff704f-922e-4fb9-8599-220b8c18c12f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6316eef2-cc45-4720-9f29-6e0aef00d32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f142af2f-ffac-4e95-a61d-f5c11f3d9121",
        "cursor": {
          "ref": "c880e992-bfa2-454d-8c5c-2a1629182ad6",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d35a0502-752c-4858-9e2a-ab0e7e8056e7"
        },
        "item": {
          "id": "f142af2f-ffac-4e95-a61d-f5c11f3d9121",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c71a120-14cb-4feb-93ee-21f4d26b7aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bfbb94-e0c0-4a1b-a208-06976fb4addc",
        "cursor": {
          "ref": "54495bd7-3395-48f7-a6a7-a064fa0dad4f",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "797d258d-0c73-4a17-bd9c-ae1181d01c8b"
        },
        "item": {
          "id": "95bfbb94-e0c0-4a1b-a208-06976fb4addc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "77183da5-7bb4-4b18-a84a-13fb17f6f7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003dd883-8698-4d76-a352-bc532c67e867",
        "cursor": {
          "ref": "2ebbaef0-af53-40da-a970-a2caa0a5ee68",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1907a8bb-7517-4029-aff2-983620fb1d3d"
        },
        "item": {
          "id": "003dd883-8698-4d76-a352-bc532c67e867",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bda191c9-2803-4afd-ae53-96a5979cea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdca3893-93c4-491b-9876-f21cefeebea4",
        "cursor": {
          "ref": "c834e699-5659-43ef-8fe5-f755e4aafd17",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c6657dd0-25eb-4916-aa4a-2d5308d896df"
        },
        "item": {
          "id": "bdca3893-93c4-491b-9876-f21cefeebea4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cb213a56-0aa9-4d35-8e13-d34c8733660d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab07741-1a96-43eb-8182-17ee6ea29430",
        "cursor": {
          "ref": "1833a27c-0678-48c9-9942-dc997125d86e",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a99867eb-e9e3-4854-ac45-f9451afe4568"
        },
        "item": {
          "id": "eab07741-1a96-43eb-8182-17ee6ea29430",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "61a8f47c-ab69-498c-a73f-5824322c448f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c489528-ac88-4fff-821e-3753456d633a",
        "cursor": {
          "ref": "ea07dfe7-3b67-4bdd-a85c-7eccf1adbff9",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2d9e7add-678d-45f6-bd9a-d4eafb9baf91"
        },
        "item": {
          "id": "6c489528-ac88-4fff-821e-3753456d633a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c74930a5-8059-4115-b7ef-8a2457c1166c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edb12ae-126b-47c4-8080-8e5ff3c87542",
        "cursor": {
          "ref": "5b2d014c-71ec-4b85-ae7d-e84ad44df976",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8fcf5d7c-3c16-4034-b871-2caa761d38cd"
        },
        "item": {
          "id": "7edb12ae-126b-47c4-8080-8e5ff3c87542",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "11d3849a-0c10-4676-9c15-6143b53baeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cb5011-14e3-4bd8-9a4b-b9088a5b21b4",
        "cursor": {
          "ref": "4bfa6995-1174-4d96-9038-7ec263b1208e",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9454c3bc-26b0-4f33-a99e-98e95f02069a"
        },
        "item": {
          "id": "99cb5011-14e3-4bd8-9a4b-b9088a5b21b4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8da80238-7813-40d4-8b31-21097e04dd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2752b489-dc8b-4afe-b296-dfdba6f2fff7",
        "cursor": {
          "ref": "875aad79-31d5-4328-a37b-c3b91178a2da",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9026a60b-18ed-47e2-b71e-3579ed6d908c"
        },
        "item": {
          "id": "2752b489-dc8b-4afe-b296-dfdba6f2fff7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a606a6ea-382c-403b-9c76-9cc0289783cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc10a85-a9f9-4b88-87e6-d6b5b842687a",
        "cursor": {
          "ref": "ad5606c2-6281-47ef-ab9b-ca724c67f9a0",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "663fa6af-33ed-4a5e-8942-ac9e878db204"
        },
        "item": {
          "id": "dcc10a85-a9f9-4b88-87e6-d6b5b842687a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ab1bc0f7-52e7-4e9a-8bb7-003754ced268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48ad682-5c98-4267-85e1-0f3baa2bec05",
        "cursor": {
          "ref": "9f040d89-304d-4839-8be1-adc7be777a58",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2f6cd93c-868d-470d-98bb-acb2f1f4c3d8"
        },
        "item": {
          "id": "e48ad682-5c98-4267-85e1-0f3baa2bec05",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "874fcc48-de28-43a5-abe7-20b0487f0996",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191b8f56-1f1a-4e00-92e5-600cd90350b3",
        "cursor": {
          "ref": "ac05995a-fa97-42e7-8b17-cc9e1b1a01ca",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ecec4fe1-2188-4638-868d-3b83a77c9723"
        },
        "item": {
          "id": "191b8f56-1f1a-4e00-92e5-600cd90350b3",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e313223e-bf01-4807-abc8-aa7a7c59c233",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 559,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9d3a36-a182-46aa-bee2-d705ac14de00",
        "cursor": {
          "ref": "6feffde2-1caf-431e-9ec7-94250ebb1e44",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bfd721ae-0761-4de6-bcdc-7a578f260db9"
        },
        "item": {
          "id": "ad9d3a36-a182-46aa-bee2-d705ac14de00",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d84c9bc-2719-4aec-9430-866304b48e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9d3a36-a182-46aa-bee2-d705ac14de00",
        "cursor": {
          "ref": "6feffde2-1caf-431e-9ec7-94250ebb1e44",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "bfd721ae-0761-4de6-bcdc-7a578f260db9"
        },
        "item": {
          "id": "ad9d3a36-a182-46aa-bee2-d705ac14de00",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9d84c9bc-2719-4aec-9430-866304b48e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ab1029-819a-4da0-a889-ee6389f8b158",
        "cursor": {
          "ref": "d30e1cf5-038f-4318-b1b6-3e8c15f6b34d",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f39f2fc3-a601-48ec-927c-e2b23532feed"
        },
        "item": {
          "id": "12ab1029-819a-4da0-a889-ee6389f8b158",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1c4df7b5-9332-4347-a0f1-ee1c2c49d8fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 317,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "eaf10ee7-1b4d-4878-8909-3fbd94d98ec0",
        "cursor": {
          "ref": "5539ccd7-2956-462d-9742-79ec8dd79cc0",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d6b8ee0a-3b0b-4ad6-a647-8b6a5a2eb7e4"
        },
        "item": {
          "id": "eaf10ee7-1b4d-4878-8909-3fbd94d98ec0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "befb7b7c-e6af-4b1b-8c89-9a5183162078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15bcfe9-0cba-4125-9d0a-ca6f7fcc6157",
        "cursor": {
          "ref": "3c4d2889-4d29-4d00-ab61-b39ee1ccb347",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7ce89d83-ce2f-4420-9cf0-eafd00a232b8"
        },
        "item": {
          "id": "d15bcfe9-0cba-4125-9d0a-ca6f7fcc6157",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "98e24f11-a8bb-4841-bb8f-aeb6b33200d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5eec4e-2e10-4a7f-be9f-c2e5bc68b014",
        "cursor": {
          "ref": "52a03981-775f-4fc4-9318-506b15793d64",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b03430d4-adac-4a80-8906-3e400ebe5952"
        },
        "item": {
          "id": "1a5eec4e-2e10-4a7f-be9f-c2e5bc68b014",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bbe10da9-12c8-4e1b-82d0-5c1654f48254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3502968-eab5-4e4c-9c70-0d9f4768db07",
        "cursor": {
          "ref": "3392520c-65bf-43e3-8237-055e401457d2",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ad4af894-56e9-477a-b0bb-7dad73df7c68"
        },
        "item": {
          "id": "b3502968-eab5-4e4c-9c70-0d9f4768db07",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "edcd8b41-a513-4196-b382-ceadef17f0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03049bc-b054-428d-96bc-77ca31e122c3",
        "cursor": {
          "ref": "935f4d07-c2e8-42e2-90be-520a70374756",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7935515e-b750-4df4-ac2d-4360b84f6ab4"
        },
        "item": {
          "id": "e03049bc-b054-428d-96bc-77ca31e122c3",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "69f35834-efff-43bc-8df9-1a39f0926244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e199d1-0a18-49ba-b780-d03ef8ffb3a2",
        "cursor": {
          "ref": "745a8aba-c1b0-4c63-a460-d2a24e13da87",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dd3fd97d-ff38-4668-b388-6098147d05df"
        },
        "item": {
          "id": "90e199d1-0a18-49ba-b780-d03ef8ffb3a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b58ab719-5cc3-4b39-8354-64c7d81945ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482ededc-2c02-4c77-903c-686fbb08c759",
        "cursor": {
          "ref": "9459a45d-78d6-43b9-b8dc-bb506f5a8fe4",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4ee259d1-8b4c-447e-bcaa-a94d7d04d91a"
        },
        "item": {
          "id": "482ededc-2c02-4c77-903c-686fbb08c759",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9e413d4f-a37f-41f8-8ec0-b2fbfa556cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead06b9d-c5fd-4ad8-86cf-1fe19869e32a",
        "cursor": {
          "ref": "dfd711a8-05cb-4fe6-a7c4-b8262d6b3822",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "005b0888-98af-4842-9c2d-768063ec9e0b"
        },
        "item": {
          "id": "ead06b9d-c5fd-4ad8-86cf-1fe19869e32a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fc2956b2-8e61-4add-9922-cc9c74aa37e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c5301a-2963-4589-bd55-2e36effaf970",
        "cursor": {
          "ref": "4d67140c-5a34-4a27-8fe5-305208527258",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4fc87c04-15f4-4b48-a253-7e45ea49f9a7"
        },
        "item": {
          "id": "21c5301a-2963-4589-bd55-2e36effaf970",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d056e3fa-3238-4706-b87d-6d19e1aa08d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191462af-3fd2-489d-ac53-fc75adfacf1e",
        "cursor": {
          "ref": "bb641a17-f805-488c-bc8f-8840b8f3fc7c",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "be288f5b-b371-4892-8ad8-39c1bc0f87fe"
        },
        "item": {
          "id": "191462af-3fd2-489d-ac53-fc75adfacf1e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6a3765ed-3a89-49b7-8ab3-b73779d5735d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba22edd-cd8e-4c99-9b68-664e2eae6a2b",
        "cursor": {
          "ref": "2bf306d8-39ad-4ac1-824c-0cf1b2884e3c",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "df76d965-ddda-407f-aec6-50eac40aa1df"
        },
        "item": {
          "id": "bba22edd-cd8e-4c99-9b68-664e2eae6a2b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a14432d3-253a-44d3-b54b-8dd7ab93dec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4f9775-7ba8-451a-a88c-21f7529e3d9d",
        "cursor": {
          "ref": "0109c78f-02af-4c7a-967e-a747e89db5b4",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "09a4ca65-b884-4f42-85fb-62438d5c335e"
        },
        "item": {
          "id": "3f4f9775-7ba8-451a-a88c-21f7529e3d9d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d412b97a-25a8-4994-9e18-322389cc99d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fe5496-a1d2-4c26-b480-364a1aaaecbc",
        "cursor": {
          "ref": "79606c13-fee9-4e06-87c3-cd64f77ae953",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "27e8dcb4-b9ab-4de8-9dbf-ed6bb9450f5d"
        },
        "item": {
          "id": "a8fe5496-a1d2-4c26-b480-364a1aaaecbc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3a75b4e5-0f7c-4a47-945b-fd840e7da539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c342c1-d31a-4214-bdab-bd3b5c5e1b1c",
        "cursor": {
          "ref": "9b84fbd0-787a-4332-a8bf-0fc18b90a266",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ab24f210-900f-43bc-8663-337f3decc2fd"
        },
        "item": {
          "id": "65c342c1-d31a-4214-bdab-bd3b5c5e1b1c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b5fd78f3-2967-41fd-b4da-320e7f64c01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25dd9e0-62c5-4eb1-97b4-d7ab6997a3cf",
        "cursor": {
          "ref": "05a45162-9fc7-479b-b448-aed60c5eed32",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7f8ed102-b816-414e-ada4-5351b6e8a3bc"
        },
        "item": {
          "id": "c25dd9e0-62c5-4eb1-97b4-d7ab6997a3cf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fc279fee-f0cc-40d8-94f0-a935081aa9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c61451b-8a20-4e3b-9aea-b589e03e12fe",
        "cursor": {
          "ref": "fef04d17-c869-4045-8c60-56c55fbd9e35",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7ac6175f-8a8a-4d40-9b3f-5f9964527625"
        },
        "item": {
          "id": "8c61451b-8a20-4e3b-9aea-b589e03e12fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2ccb802e-505f-4e6b-aa47-f2a532c68d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d9d761-54bc-433d-9fd8-d3dc50d221f4",
        "cursor": {
          "ref": "e741999a-f6b5-40e5-9aca-f524167c21ab",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5528d2c0-f628-405f-aaea-5bfa02bc2682"
        },
        "item": {
          "id": "22d9d761-54bc-433d-9fd8-d3dc50d221f4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "055c00a3-cfd5-404d-9366-9b43f5de3f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283522a3-6253-447a-afdd-650e6ad222d0",
        "cursor": {
          "ref": "fa0436f3-c5c8-47b3-988a-0d57abe1d7ee",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "414283f9-1605-4eb2-a253-1ab3843b961d"
        },
        "item": {
          "id": "283522a3-6253-447a-afdd-650e6ad222d0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8afdb331-aa43-4b28-9f8e-0d334d99bcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f6e87b-cf69-44cf-9c8d-fc4aaa3c5c9e",
        "cursor": {
          "ref": "d459d10d-f1f1-4458-ac22-7de94e910c10",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4d3f7213-76dd-4bac-806b-bdaa0c97e13a"
        },
        "item": {
          "id": "41f6e87b-cf69-44cf-9c8d-fc4aaa3c5c9e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "73ef9d99-6b5b-47fc-a32b-499996700340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1f979b-7e13-47e1-b90e-ce650048550a",
        "cursor": {
          "ref": "bd6c3ef5-2849-41f4-a586-f3c1c62bb07b",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6badad81-7ddf-4860-b813-14805ee789c4"
        },
        "item": {
          "id": "4e1f979b-7e13-47e1-b90e-ce650048550a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "bcc1ab5b-f8da-4d75-bd2d-95272682f37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3219b0b1-f350-4821-9fe9-747920850f25",
        "cursor": {
          "ref": "cc9c13f3-e204-4a3e-9757-6f4215499f2f",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9e88adcf-1c9f-4a97-91b5-19ad2ae8f215"
        },
        "item": {
          "id": "3219b0b1-f350-4821-9fe9-747920850f25",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c626fe22-d9c8-4b06-aac7-74700139ceb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2922fe3c-e395-4acb-905b-1e04d17c32c1",
        "cursor": {
          "ref": "a998b0fe-3a6a-42c7-b38c-3f229e903531",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c34c8f22-6049-486d-8c89-dbf476581590"
        },
        "item": {
          "id": "2922fe3c-e395-4acb-905b-1e04d17c32c1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "8785f1e8-b547-469e-bcac-a26f47e9cc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0e5b82-fa0f-43d4-a3a8-78d3938185e3",
        "cursor": {
          "ref": "10a3c1fb-9bd8-49b6-8666-aab455d7bdfc",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b6aa7913-1718-4e5b-9d64-dd60bc23edc6"
        },
        "item": {
          "id": "9a0e5b82-fa0f-43d4-a3a8-78d3938185e3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1afbf17b-adcf-45ad-8510-60942ce5f9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "979585eb-b453-4102-8a25-1aaee1d32843",
        "cursor": {
          "ref": "b0ee8091-43c1-4c6a-9a22-95b8f948f08a",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9fa2028f-46cb-4c2f-bf82-9c24a7063f21"
        },
        "item": {
          "id": "979585eb-b453-4102-8a25-1aaee1d32843",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "adfb62b5-fb52-452b-91be-99fbf8aa8a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899e3c06-3211-4782-a2fe-2863d1bca984",
        "cursor": {
          "ref": "3a73c15e-637c-4d1a-a92e-8be4e766e09b",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c15acd33-536e-49a8-bee8-59b413e0f0f9"
        },
        "item": {
          "id": "899e3c06-3211-4782-a2fe-2863d1bca984",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2e841ad7-a259-4cb1-a04a-b6a45be1ea5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2fbe4c4-3222-422f-8ccc-fd314f73af1c",
        "cursor": {
          "ref": "26012802-41b1-44f7-8d9e-eda8c8209b27",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a5a87d4d-51ac-411b-8d0a-389e27275362"
        },
        "item": {
          "id": "b2fbe4c4-3222-422f-8ccc-fd314f73af1c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7736be31-1bb3-4482-aa5f-938509eb5fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81089163-a9a0-4b13-96a8-b8f5c60bc7ba",
        "cursor": {
          "ref": "92198d72-26a3-40da-8bb2-d7439f091e70",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ec901026-b738-4cfa-9e7e-3256318791ec"
        },
        "item": {
          "id": "81089163-a9a0-4b13-96a8-b8f5c60bc7ba",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5074d626-9a2b-470a-8767-b1720783a224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa5a937-78dd-4153-8c39-d0ad069ddf0a",
        "cursor": {
          "ref": "c347a1d1-9726-4867-a180-fb3dfee46c61",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1dde3344-b56d-424b-a195-c4582c363097"
        },
        "item": {
          "id": "7fa5a937-78dd-4153-8c39-d0ad069ddf0a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "87c4edf8-aef3-4266-bab8-8e362e3ade9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82af8c7d-4258-4f44-a843-f1f8c10494f8",
        "cursor": {
          "ref": "17084d5c-bb29-4eb8-a8d5-cdc77dfe3c84",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5fcea753-7c94-41bd-a12a-e547c6f69a66"
        },
        "item": {
          "id": "82af8c7d-4258-4f44-a843-f1f8c10494f8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bb377cb0-5662-4035-810c-5e2cef95f5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81b77f7-6000-4a77-8e2c-9b7b1cea9a5c",
        "cursor": {
          "ref": "d1167d6c-273d-4bef-9aee-0529e126725c",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "77ab790c-7d77-4dbd-9b11-afa5ad64ee09"
        },
        "item": {
          "id": "c81b77f7-6000-4a77-8e2c-9b7b1cea9a5c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2bd24b06-783c-4965-94ba-0a1ad495902c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90527f20-e179-4dc9-be79-7b618a62d07c",
        "cursor": {
          "ref": "f284e141-bd3b-44e0-b471-28026c309d6d",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bab7f13b-9821-4d11-a1a1-bd2adf17c36a"
        },
        "item": {
          "id": "90527f20-e179-4dc9-be79-7b618a62d07c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aafb2b0c-467f-461c-9689-7df15ff1e4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5427715-4d09-448e-ba14-1bec07d9a9a5",
        "cursor": {
          "ref": "8270663f-edc5-4d11-ba2f-c4f0b51b0893",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8e59670b-bbb6-4423-97f2-c67407944965"
        },
        "item": {
          "id": "c5427715-4d09-448e-ba14-1bec07d9a9a5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3a384068-bfd5-4141-988f-bd9e6907ef6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34680a76-7036-41b6-b8bd-abf5a7af323d",
        "cursor": {
          "ref": "39e7d855-a748-48ff-bda2-172431385eb7",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6434e012-b597-41f0-a6d3-5ff790189ee0"
        },
        "item": {
          "id": "34680a76-7036-41b6-b8bd-abf5a7af323d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b132302f-d382-4aca-bbbc-849c5f4a2bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ab8812-2070-429f-b80d-41e5ed817c38",
        "cursor": {
          "ref": "64c6bb8b-630c-4f5f-b0b4-b51091f6c139",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5e8cd59b-5cf1-4958-a8c9-1701c282a883"
        },
        "item": {
          "id": "c3ab8812-2070-429f-b80d-41e5ed817c38",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dd337117-702a-47a9-8e1d-295c1a356fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2777111-f981-48e6-b107-930e247a66f7",
        "cursor": {
          "ref": "f5a6136c-0b3e-44f6-bef0-f5d0c09080f8",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b731088a-3c17-4afc-9575-d66672dcc2ea"
        },
        "item": {
          "id": "e2777111-f981-48e6-b107-930e247a66f7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "de323c17-fb24-4699-a5fb-a88d642e0f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a8e5ee-d631-4879-a364-13ef7cd61574",
        "cursor": {
          "ref": "c6285fdb-40b5-4c7d-a3f6-ec6c7bd856af",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "81a9058f-1cd9-4da3-b3ee-1e2ef7ce4c1c"
        },
        "item": {
          "id": "e5a8e5ee-d631-4879-a364-13ef7cd61574",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "452fa58c-c0ed-4375-b4d2-fd1419add502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151d09e9-cd98-40bd-acec-062f77260839",
        "cursor": {
          "ref": "60f34f8c-0f7a-4ee9-a3e9-b4c808a85ad0",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bbcef9e3-ff40-4eb8-9142-f931024f81c4"
        },
        "item": {
          "id": "151d09e9-cd98-40bd-acec-062f77260839",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "59703e89-042f-4779-9f4e-24e820dfb084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f03e08-a9e0-4cdd-b3e8-cb738fcad282",
        "cursor": {
          "ref": "7d16d84c-9a20-4084-95ca-fc34e5ef209d",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9c9488b1-dd84-4b3b-9af0-8d4dd734f78e"
        },
        "item": {
          "id": "28f03e08-a9e0-4cdd-b3e8-cb738fcad282",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a8b6bf71-4430-4ea0-9628-016d4e5a851c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09955dfc-8263-475e-9610-207c71e12181",
        "cursor": {
          "ref": "1f679642-5044-406d-9261-5029066c841a",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b3ee5a90-22a2-431e-a267-9d36083bdba7"
        },
        "item": {
          "id": "09955dfc-8263-475e-9610-207c71e12181",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9c0c0f82-09e4-4f0b-adc3-58facf3e520b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3c42c3-368b-4e29-8f4b-bee751448868",
        "cursor": {
          "ref": "c6ed5f89-d4eb-45df-9f1b-f11417d023f1",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "48da6a22-9095-47cd-89c8-66358f972269"
        },
        "item": {
          "id": "4b3c42c3-368b-4e29-8f4b-bee751448868",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7ce447d6-7f1a-4455-8f1a-e8e52b0d63d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36f2967-9805-4e30-b031-8a897d3743ea",
        "cursor": {
          "ref": "848e1d55-2457-4ca9-ae2d-af2041f8af67",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6def9504-eb3f-4fc0-95e1-02c77a5f1e39"
        },
        "item": {
          "id": "e36f2967-9805-4e30-b031-8a897d3743ea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "01833aee-455f-4327-9d7a-cf1d369af406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc4ede0-6a3e-4285-bb9b-fae075de3dec",
        "cursor": {
          "ref": "3abd5bb9-b3eb-4d70-bb7a-5a9f78d206b7",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8cb53c8f-ff99-4621-b35f-3fd5e48b4dcc"
        },
        "item": {
          "id": "1bc4ede0-6a3e-4285-bb9b-fae075de3dec",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3d3622f2-cd7e-45aa-81dc-7bfcc53cb275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c23be78-5424-4602-913b-e64345c84d00",
        "cursor": {
          "ref": "ce9ae9f6-2b40-4ec9-b1b2-8b1e6dbae6bd",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "60e5a48e-f096-41ca-b7e0-79df3220d906"
        },
        "item": {
          "id": "6c23be78-5424-4602-913b-e64345c84d00",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c2b5e2bc-73b1-46fe-9073-0411ebddcee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a629e6-430a-4424-9327-957f7e7674e1",
        "cursor": {
          "ref": "cb906741-5e81-425b-9d7f-a1063af76e44",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c8a780d5-3975-46d7-8881-3f6314359cf7"
        },
        "item": {
          "id": "28a629e6-430a-4424-9327-957f7e7674e1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ba68de67-5244-4efc-bba3-156421602c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6fd396-08c1-4a04-a694-5d44688d2ba6",
        "cursor": {
          "ref": "d67aef42-4788-432d-b32f-6fa13a1e54c9",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "aef70c3b-4438-4c40-8cec-8c785216a088"
        },
        "item": {
          "id": "7d6fd396-08c1-4a04-a694-5d44688d2ba6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3ee8cc98-a903-46d6-9cb5-8b5432b61f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce40146c-2f48-4919-9a06-26d3248615ac",
        "cursor": {
          "ref": "7fe17e42-5b37-41a9-b3fe-3e7aba1602c8",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "76ab8c00-024c-4f65-ad6f-0a7e2eb90dba"
        },
        "item": {
          "id": "ce40146c-2f48-4919-9a06-26d3248615ac",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "99fc7cd4-10a0-4b56-9f64-732f220ec22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff517edd-d312-424c-9e5d-421d68209253",
        "cursor": {
          "ref": "c0ef2251-3264-443f-b6b6-20d6f77a1b36",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e57afa8e-c05b-4faa-aaa5-8164fb9c671f"
        },
        "item": {
          "id": "ff517edd-d312-424c-9e5d-421d68209253",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "220fe77c-5ef3-4548-870e-777e019bd4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35668ce-cf66-4763-827b-a124025369ee",
        "cursor": {
          "ref": "ef386da6-2836-4467-81db-96acebdd308e",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "725666d8-12ea-4516-aa98-1f0659cea50b"
        },
        "item": {
          "id": "d35668ce-cf66-4763-827b-a124025369ee",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e76774ee-eecc-48db-bfcd-8d5a3c56c9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db4cbde-1d9c-4898-9a8d-8e3751b9b974",
        "cursor": {
          "ref": "ea63e645-95b4-42a1-aea0-a890326756a3",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "463ee385-95cb-4181-9d41-4549143724a0"
        },
        "item": {
          "id": "9db4cbde-1d9c-4898-9a8d-8e3751b9b974",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e0a1b4e9-e2eb-472d-a1d3-804ebd21a240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf3a607-f1f3-4ac6-9d71-71facf3577d6",
        "cursor": {
          "ref": "9409aae3-5437-4592-98b2-e924b8f32851",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e49f0a4e-8ff6-46b0-a1a7-feb8585c385e"
        },
        "item": {
          "id": "faf3a607-f1f3-4ac6-9d71-71facf3577d6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "12b0f366-a606-4bfe-b09b-a0d3a4d201b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4f9837-b97f-44e8-8399-90efba98e92c",
        "cursor": {
          "ref": "e3556a75-80b8-4eb2-97fb-7039f8f6257c",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d91b876d-95aa-4951-8e7f-e0264e93555c"
        },
        "item": {
          "id": "bb4f9837-b97f-44e8-8399-90efba98e92c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fddbbb87-fb38-4229-8bfb-bbe4fed003df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c955706-5168-4a8b-9351-d3b3017c224e",
        "cursor": {
          "ref": "1d61791e-ea43-465d-b45e-079eb6155f9c",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "33742083-b916-4bb0-87b6-5a0bf259b71b"
        },
        "item": {
          "id": "8c955706-5168-4a8b-9351-d3b3017c224e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "45856394-714d-461b-b3bf-b466af022672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda42321-9771-4293-9c34-ebf611b1b47f",
        "cursor": {
          "ref": "8709bbef-9321-4d0d-9bb8-8686f5a23e74",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4e90bf6f-fa27-4014-89d5-6b38ed59dcd1"
        },
        "item": {
          "id": "eda42321-9771-4293-9c34-ebf611b1b47f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e8b5e527-110d-4b06-a910-5defb55f4f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f012427-64c1-424d-aff8-d76b527f6ebb",
        "cursor": {
          "ref": "85281e9a-e2d3-4f9c-a194-f2ab6a7112c9",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2ca6466e-740d-4ffd-a2bf-3a5591cd658c"
        },
        "item": {
          "id": "2f012427-64c1-424d-aff8-d76b527f6ebb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "edb0126b-3adf-4304-964c-0e1d3659d53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e9ca34-4334-40f0-a623-4cb8ee791847",
        "cursor": {
          "ref": "77009548-b083-415a-a68d-439c1a9e7497",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "075fe20c-02f1-453b-ba61-2c19a00d6f2f"
        },
        "item": {
          "id": "d2e9ca34-4334-40f0-a623-4cb8ee791847",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a5ba68a9-f219-4517-91f8-8de4e3f87a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef118f5-a880-4f79-ae1a-342cb5df86fc",
        "cursor": {
          "ref": "66069bc9-d27b-4b21-b121-f001cda8b073",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "57d6768f-190f-4cc3-a70f-c2906a92ad3c"
        },
        "item": {
          "id": "eef118f5-a880-4f79-ae1a-342cb5df86fc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "852a3a57-33e0-4459-ac2d-9933c3b6f51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8803b6e-b3ba-4e4b-ac08-10ab51fe1476",
        "cursor": {
          "ref": "736156ec-5584-4c28-8158-b8932b71ad0b",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2b3d91a0-ccd7-4320-92ac-ef45fb2cc7ee"
        },
        "item": {
          "id": "e8803b6e-b3ba-4e4b-ac08-10ab51fe1476",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3240856c-65ab-45c1-a021-1a4650742284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f829b7-399d-4bf5-8595-5f9c9ff918be",
        "cursor": {
          "ref": "f11b9bba-59ef-4314-9e74-dbe14768b56c",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5c9d3a56-6aa1-4bd9-acd6-829dbb962e02"
        },
        "item": {
          "id": "40f829b7-399d-4bf5-8595-5f9c9ff918be",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e5fd229d-503f-4b67-b410-a724006f6644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a18cf0-3012-469e-abdc-35a369bfaa14",
        "cursor": {
          "ref": "63625600-df58-4055-901a-f3c8ad6eccb0",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7b662a88-b415-4322-accb-060f8162e9fb"
        },
        "item": {
          "id": "d7a18cf0-3012-469e-abdc-35a369bfaa14",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cbc05a05-3890-4672-bc42-deffe04dd86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e84a109-b88f-4031-99ee-60fb7daf7e6e",
        "cursor": {
          "ref": "bf0f888d-3c2a-4d16-a8d6-71b61879d638",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fe7cc46d-c2e4-4b29-86c8-f2cddd036fe5"
        },
        "item": {
          "id": "9e84a109-b88f-4031-99ee-60fb7daf7e6e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8f06aa1a-321b-47ec-842c-218862cb9cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd25b59-7a0c-4fcd-9499-22fef90f4b44",
        "cursor": {
          "ref": "13025faf-b4a2-4b20-ac30-5078b7e8ffd3",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6826f136-e146-4d09-892f-100636051c42"
        },
        "item": {
          "id": "1dd25b59-7a0c-4fcd-9499-22fef90f4b44",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d0c2a2d9-40b2-4029-990a-4c7e8e9e3d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17d01b4-5768-44df-ba93-eef5b35c0581",
        "cursor": {
          "ref": "3b2deecb-8434-4d7f-84a1-85c7b3aa3e32",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7e144b6f-4766-4650-839e-fc413c3a72cb"
        },
        "item": {
          "id": "b17d01b4-5768-44df-ba93-eef5b35c0581",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "90ad8cec-3661-4190-a7af-20bf005f3468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc714c86-ffef-47fb-a71a-0370c60ce838",
        "cursor": {
          "ref": "b3c496c6-eed8-46a4-b41a-8a217dd1763a",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "df0e0500-4e4c-4838-b421-f33f12fd8d43"
        },
        "item": {
          "id": "bc714c86-ffef-47fb-a71a-0370c60ce838",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c9253f0d-5548-487a-825e-dc4791250d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e145bcbe-221a-4b54-873a-623a3c786de4",
        "cursor": {
          "ref": "2cfafa76-6b53-4585-9cab-fe37c3d787e2",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fd4a3feb-f0df-42f5-980d-e44698eccbf2"
        },
        "item": {
          "id": "e145bcbe-221a-4b54-873a-623a3c786de4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4b4631e6-a095-42bd-885b-01ee568a602e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068bc939-db68-4ad2-ab52-a2964c0f8f2d",
        "cursor": {
          "ref": "29baa689-00bd-4e39-8f9f-2bcb1344c8be",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e707afd3-c3be-4016-b425-37a37d00178d"
        },
        "item": {
          "id": "068bc939-db68-4ad2-ab52-a2964c0f8f2d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5b295c6d-5a2c-43ed-b59d-de2c9ce360b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b46ed5-b7f8-481e-bebd-6dfdfaeaebbb",
        "cursor": {
          "ref": "13727eb7-7d1e-4862-b8ce-bd79fa80755c",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "47a56206-e6ce-4488-9a1e-eccb44f653ca"
        },
        "item": {
          "id": "b9b46ed5-b7f8-481e-bebd-6dfdfaeaebbb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "238f5658-78f4-4807-8052-fdb9f4129cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066482f9-53a6-4cbf-a2f8-94f176c82d0b",
        "cursor": {
          "ref": "46e2fb6a-6bfa-4053-8f17-1af63b3751cd",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6d0a1197-0694-4254-bc27-362fbfa4e573"
        },
        "item": {
          "id": "066482f9-53a6-4cbf-a2f8-94f176c82d0b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e20f04ca-e68c-44b0-9220-d032d80658a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c839a2bb-99b5-4a17-a767-eafe44a118a0",
        "cursor": {
          "ref": "3226e12d-ea2d-4670-bea4-4109c3ae3899",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "29a95a0e-d529-4433-b994-a75140077150"
        },
        "item": {
          "id": "c839a2bb-99b5-4a17-a767-eafe44a118a0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "840a6874-3438-406d-b70d-232f565ac6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6683c59f-3a72-4881-a564-3caa83b7d13f",
        "cursor": {
          "ref": "40bc2156-1e04-4d75-84a0-436694d4e736",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0239c94e-2dd2-443a-bf67-a54f7f62c836"
        },
        "item": {
          "id": "6683c59f-3a72-4881-a564-3caa83b7d13f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "89ec52b0-cd9d-491d-9c78-5dc5ef87ef04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5292fb-c46f-4fa7-9a1e-7041d832e291",
        "cursor": {
          "ref": "8b663821-ea1c-4f11-aec2-53e606327b84",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6c637037-6739-479b-8035-588ade51c9a5"
        },
        "item": {
          "id": "5d5292fb-c46f-4fa7-9a1e-7041d832e291",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f570faf7-81f2-4fbc-94bc-8ffd6b1bc727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15949a13-548c-49de-9209-395d99ea95e7",
        "cursor": {
          "ref": "dbb99458-ab8e-4020-943a-ecc26af248ba",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "afcb5628-6a8a-42e6-9fd3-fe2b406237fe"
        },
        "item": {
          "id": "15949a13-548c-49de-9209-395d99ea95e7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8e5dfbe8-0f07-4d54-8cba-75f198024096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e08ad57-4a66-4237-80c2-0a0c99e26c52",
        "cursor": {
          "ref": "27696db1-1b65-49b3-9d45-94a10b8aeead",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9a8771e5-3e0f-4ed1-89b4-1e0bf295f7b5"
        },
        "item": {
          "id": "4e08ad57-4a66-4237-80c2-0a0c99e26c52",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "48cb274c-8e91-49a6-96c8-7a083be2d02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5514c00e-0203-475d-be75-7405e2854d1f",
        "cursor": {
          "ref": "5b2ba938-1994-402f-b162-06dfb77a4044",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1e11fbe6-f836-4cd6-b803-dfcf152b8628"
        },
        "item": {
          "id": "5514c00e-0203-475d-be75-7405e2854d1f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5bcbe64f-b82b-49e6-9993-50269f11b39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fbf45b-b494-4d25-b8c2-dbb321e8a9d5",
        "cursor": {
          "ref": "d75ca405-06ce-44df-b844-b72b995dbd3e",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e41aee9e-ac36-4f90-8c43-8c7edcce766a"
        },
        "item": {
          "id": "d5fbf45b-b494-4d25-b8c2-dbb321e8a9d5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "757bef01-f58b-4dc5-a4f0-036574b0bfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3971ebbc-4e95-4f3a-b1fd-3f54806ffd8e",
        "cursor": {
          "ref": "4d8f2220-282d-4b52-b16d-9b00e486e5b6",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2e87e508-58a8-4b99-9168-7c371dc48f49"
        },
        "item": {
          "id": "3971ebbc-4e95-4f3a-b1fd-3f54806ffd8e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "9fa470b7-4991-4c2e-b23c-b5d9fe5e30b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f749712-b2a8-41a6-a058-9d368b0b26f3",
        "cursor": {
          "ref": "5f50eba1-7d4d-4e53-8f5e-a225eed70a61",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f1a9bab8-5a94-4e71-90e0-630b8e22ee26"
        },
        "item": {
          "id": "7f749712-b2a8-41a6-a058-9d368b0b26f3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ec2a8e4d-7bf6-4231-b42e-ef8c71f009dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a665ae26-960d-4ab1-ac0b-4ddec99ccded",
        "cursor": {
          "ref": "b4d786e0-5054-4505-aee9-1dc995073faf",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cd4ebe3e-1a78-4238-bc6c-4281b99b1786"
        },
        "item": {
          "id": "a665ae26-960d-4ab1-ac0b-4ddec99ccded",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d7968baf-1702-4e82-8a7b-b776f36ad45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d031e7ff-c8e5-4583-b3f9-94661ede2ef1",
        "cursor": {
          "ref": "ca0af072-0628-420e-9469-87b43d6e6f13",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aa6b8a7e-7621-4d38-88f5-42f3d567cd8b"
        },
        "item": {
          "id": "d031e7ff-c8e5-4583-b3f9-94661ede2ef1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3feacfdc-27d7-4da8-a853-e4b923ce2468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5289333e-ca04-4cb0-b111-f9a27ddd28df",
        "cursor": {
          "ref": "bdf36b1e-e14d-419d-9893-b3092134ff10",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bd5b9be9-da97-4b7e-8069-ea233ea9166a"
        },
        "item": {
          "id": "5289333e-ca04-4cb0-b111-f9a27ddd28df",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5b1d955a-ee02-4692-8d76-08a7315cf9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a947546-507f-44f0-8a8e-7a7f9d507b39",
        "cursor": {
          "ref": "091bbbaa-dd47-4a1d-8b88-8073bb31db5b",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "45852db6-b6ab-4fbd-9fa2-59f56b9622db"
        },
        "item": {
          "id": "6a947546-507f-44f0-8a8e-7a7f9d507b39",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3f0063f3-fda2-4c91-a9b1-f492157cbf49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe89f1a-b907-468a-93ad-bb6b5528380c",
        "cursor": {
          "ref": "18c90f98-e669-46d4-a325-470e0b260aa2",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7b4d3dc7-8f04-4862-96a4-a51a79f33c6f"
        },
        "item": {
          "id": "6fe89f1a-b907-468a-93ad-bb6b5528380c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "1f00158f-c7ba-4e51-9422-e8e52d35b39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf4898e-cb57-49be-8700-d508f80c6afc",
        "cursor": {
          "ref": "69689222-a377-4c5c-8c5d-cfabd29c962c",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "40f1d7a9-fd8e-4473-8806-641a7725864f"
        },
        "item": {
          "id": "7bf4898e-cb57-49be-8700-d508f80c6afc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "657ff228-16ed-40fb-8e9f-e3513ddef7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60eca70a-c592-4539-ae8a-cecf94ca1a1b",
        "cursor": {
          "ref": "c607fcbb-712a-4453-b950-cfb0cd2cbc88",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "afd089c3-f135-4ed6-b8fd-af33acdc3a5c"
        },
        "item": {
          "id": "60eca70a-c592-4539-ae8a-cecf94ca1a1b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "700301f8-592a-4a6c-b85f-b11560819d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a079b1a-a627-427e-844a-5c8325cec17b",
        "cursor": {
          "ref": "0f388456-23f2-445c-a462-304c90a8f623",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "99ee1f9f-9d44-4ea6-a366-b81076d85aa9"
        },
        "item": {
          "id": "4a079b1a-a627-427e-844a-5c8325cec17b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "72906272-4294-4ec9-9ea4-e51184e3ac0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b58cb5-f324-44b8-8c44-eb0c1921c16d",
        "cursor": {
          "ref": "44d224e5-a9ba-43e3-8b24-486413a0da07",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5c691ab1-be7e-43ce-9a5b-38c4874b8eb7"
        },
        "item": {
          "id": "c6b58cb5-f324-44b8-8c44-eb0c1921c16d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fa208c78-f38d-4f62-9f4e-2f47cdf33dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acde180a-4b45-4834-82f8-49798e660ec4",
        "cursor": {
          "ref": "c7c8ad45-17be-4854-ad14-703d55d2dc03",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "95ddef3c-aba9-4c60-b4fa-e4048071e018"
        },
        "item": {
          "id": "acde180a-4b45-4834-82f8-49798e660ec4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6c586a40-9e0b-4e65-aa18-0714826fa8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615517af-af58-4149-9298-b7c586bc767b",
        "cursor": {
          "ref": "da4c99fb-0ae8-4fbd-aead-5c712fd0f825",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cf183add-8271-42a5-9c42-af74e945f029"
        },
        "item": {
          "id": "615517af-af58-4149-9298-b7c586bc767b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "968d1167-bf22-4fd6-8e26-fccc8fb6eb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48d924b-82e8-416a-8113-651d49fdadb6",
        "cursor": {
          "ref": "88ec04c9-34a4-4b72-8c8f-431137a849c2",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5c9fea04-b853-44ab-932b-addf24fa9a40"
        },
        "item": {
          "id": "f48d924b-82e8-416a-8113-651d49fdadb6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b10f2acc-b892-42e5-950f-52bc75507289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4d3a10-7e83-4729-92b1-b3db3f91058a",
        "cursor": {
          "ref": "03ec1337-3295-4f8d-8f21-467b38dcd627",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "297b63d1-dc98-4951-a9e0-8744d54f01e9"
        },
        "item": {
          "id": "ad4d3a10-7e83-4729-92b1-b3db3f91058a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1a9fbb20-d54e-49e4-aeeb-503cb35f0df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cf1ceb-a852-493d-ac3f-cf49b8272de6",
        "cursor": {
          "ref": "f88e4426-984e-448d-a832-0b9d2102f55d",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "93f15092-f0db-4efd-9160-11e014ed4b49"
        },
        "item": {
          "id": "86cf1ceb-a852-493d-ac3f-cf49b8272de6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3dca38c6-d384-4d42-8244-e4eec09ba3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46de4c91-3343-4700-996d-4cff10d55448",
        "cursor": {
          "ref": "4ffaf349-954e-4a3c-a73e-55caed2e010e",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "fe177fee-a74e-4dc9-8543-8db07d31238d"
        },
        "item": {
          "id": "46de4c91-3343-4700-996d-4cff10d55448",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e5124629-10b7-4aee-add6-555c03926d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377f7530-2ab8-4623-9c86-20f93b7e5280",
        "cursor": {
          "ref": "bb01868b-f4a8-4930-9620-2b7a098adb60",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3e4be03f-daf3-479d-9030-30287146ff1b"
        },
        "item": {
          "id": "377f7530-2ab8-4623-9c86-20f93b7e5280",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f8e5747b-dcbd-4390-a21b-366ca2c11f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2551369b-662d-47d6-a100-0c97c499c2ba",
        "cursor": {
          "ref": "d7dedc15-242f-48c7-9469-5d71f2cfbfe1",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0f7b20a3-88d9-4b49-b624-665f2e935653"
        },
        "item": {
          "id": "2551369b-662d-47d6-a100-0c97c499c2ba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e9c2933d-6ae3-42a7-9768-0187bbc4bcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a9fd64-eb31-4661-b6db-1edfbeac04ac",
        "cursor": {
          "ref": "4c30592d-bdf1-4fa1-8db9-501884b613f6",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "720669c6-fd1e-4d3a-906c-ebf4a0d58681"
        },
        "item": {
          "id": "63a9fd64-eb31-4661-b6db-1edfbeac04ac",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e6d5fd70-34c2-4e30-8a9e-7a6c60e189f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b06d35-ca3c-4983-a38f-782dbc7f5b9c",
        "cursor": {
          "ref": "430bcb27-34ab-497e-9965-34ad6e3bef1d",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a559f2cc-ce5c-4fbf-aa53-a42747789fad"
        },
        "item": {
          "id": "80b06d35-ca3c-4983-a38f-782dbc7f5b9c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4987c49b-dcac-4365-8f7b-24eb29fb83ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dce902-9e40-4153-bbb0-af671a84536a",
        "cursor": {
          "ref": "6e4e8646-3e2b-4f9f-b0d9-296cbfc72237",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1d7e0f92-0a8d-4f9b-adf9-b7902fd6b101"
        },
        "item": {
          "id": "e0dce902-9e40-4153-bbb0-af671a84536a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "64a12599-54d7-4095-8443-9aef73b7c145",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e0c358-4998-4f0f-ba6f-993274e6c526",
        "cursor": {
          "ref": "6962ad1c-03b5-42e1-87fb-c7a63d9be84f",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a25ae407-b1c5-4413-9a8f-dc75fd2ddce0"
        },
        "item": {
          "id": "a4e0c358-4998-4f0f-ba6f-993274e6c526",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "e7eb0923-77dc-41d8-8d77-6270c4a5b774",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 305,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457ffbc4-25e6-4c31-ab04-a322e7eaef45",
        "cursor": {
          "ref": "5ed7f8b0-3868-4735-864a-29eeac61ec94",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ba7cb781-6527-4a27-a0ac-81d6072007e7"
        },
        "item": {
          "id": "457ffbc4-25e6-4c31-ab04-a322e7eaef45",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "24b7be32-d915-4293-a98f-213e4a9f483a",
          "status": "OK",
          "code": 200,
          "responseTime": 377,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f5e0f0-9d09-4fc6-ae27-083db9b554a4",
        "cursor": {
          "ref": "eabc4c0b-bf27-4432-9445-3a577d5baac9",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "1f2a1148-963e-4571-b48b-e3ae819bba11"
        },
        "item": {
          "id": "55f5e0f0-9d09-4fc6-ae27-083db9b554a4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "916b14c2-d0c5-4b7c-aac7-6bc9b9f569e4",
          "status": "OK",
          "code": 200,
          "responseTime": 359,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b40008c-1103-4b73-822b-0ea0226e3793",
        "cursor": {
          "ref": "a569eada-62b0-40f9-a72e-e6b2d71bb6f0",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e74d6923-7ad5-49da-8e3c-253ac75b5be4"
        },
        "item": {
          "id": "6b40008c-1103-4b73-822b-0ea0226e3793",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "5129b683-9d72-4266-9cef-d73a74b153d8",
          "status": "OK",
          "code": 200,
          "responseTime": 400,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "488811b0-bf88-4b9d-a40a-c409916f26d8",
        "cursor": {
          "ref": "27ff581b-e708-44dc-b9d5-720620b6b6cd",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "44a6d8fa-a8d5-485f-a87a-96ff25df5a45"
        },
        "item": {
          "id": "488811b0-bf88-4b9d-a40a-c409916f26d8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6a098fba-cd35-4846-83d0-58421f607ba6",
          "status": "OK",
          "code": 200,
          "responseTime": 411,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6de45f-fbbc-499b-9fae-c15f55e57002",
        "cursor": {
          "ref": "1a4da8bb-932e-40bd-b568-c08a7ebe6737",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7702f17b-dcf6-4170-a0d4-4a2424eaa9a0"
        },
        "item": {
          "id": "4c6de45f-fbbc-499b-9fae-c15f55e57002",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f9b1813-4b03-4b41-9630-ca18da81f610",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6de45f-fbbc-499b-9fae-c15f55e57002",
        "cursor": {
          "ref": "1a4da8bb-932e-40bd-b568-c08a7ebe6737",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7702f17b-dcf6-4170-a0d4-4a2424eaa9a0"
        },
        "item": {
          "id": "4c6de45f-fbbc-499b-9fae-c15f55e57002",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f9b1813-4b03-4b41-9630-ca18da81f610",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6de45f-fbbc-499b-9fae-c15f55e57002",
        "cursor": {
          "ref": "1a4da8bb-932e-40bd-b568-c08a7ebe6737",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7702f17b-dcf6-4170-a0d4-4a2424eaa9a0"
        },
        "item": {
          "id": "4c6de45f-fbbc-499b-9fae-c15f55e57002",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4f9b1813-4b03-4b41-9630-ca18da81f610",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef797fea-8ff7-4d60-9c6c-53748329f309",
        "cursor": {
          "ref": "b8f76809-7f68-498a-b471-2d37131afb33",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5b06d69a-b4c1-4612-9c18-6c40672a15cd"
        },
        "item": {
          "id": "ef797fea-8ff7-4d60-9c6c-53748329f309",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ec565720-288a-47c3-a215-77c6cdb81efe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 317,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f47392-e06e-421a-8914-44e331d2aef9",
        "cursor": {
          "ref": "880852fe-0079-49c2-a7c7-c414835d25b6",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "df22ac50-d781-42a3-9823-f32924349c43"
        },
        "item": {
          "id": "71f47392-e06e-421a-8914-44e331d2aef9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fa07836f-e5e6-486c-976d-71a0bb6b701e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f47392-e06e-421a-8914-44e331d2aef9",
        "cursor": {
          "ref": "880852fe-0079-49c2-a7c7-c414835d25b6",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "df22ac50-d781-42a3-9823-f32924349c43"
        },
        "item": {
          "id": "71f47392-e06e-421a-8914-44e331d2aef9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fa07836f-e5e6-486c-976d-71a0bb6b701e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed35273e-5934-4955-bbf3-19808c3025d8",
        "cursor": {
          "ref": "2b1dba54-db44-455d-bb23-1ac28e47f4d2",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c2252bc4-69b5-40d5-a5b6-6b9c469cec31"
        },
        "item": {
          "id": "ed35273e-5934-4955-bbf3-19808c3025d8",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0c1eec88-1d5e-48e7-8df2-84f4d1976c87",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 580,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7349ee-514f-406b-8184-9884832538d9",
        "cursor": {
          "ref": "16692a15-3060-4cf4-9f99-449eb6ebc5ae",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2224ca2d-90cd-470b-abf5-1ca2361ae5e7"
        },
        "item": {
          "id": "fc7349ee-514f-406b-8184-9884832538d9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d8f555e6-399b-4c0f-af86-17bf45282619",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7349ee-514f-406b-8184-9884832538d9",
        "cursor": {
          "ref": "16692a15-3060-4cf4-9f99-449eb6ebc5ae",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2224ca2d-90cd-470b-abf5-1ca2361ae5e7"
        },
        "item": {
          "id": "fc7349ee-514f-406b-8184-9884832538d9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d8f555e6-399b-4c0f-af86-17bf45282619",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96d21fa-ffb9-4609-8fa6-283d521434b2",
        "cursor": {
          "ref": "eeae9a11-bdfb-4bd3-9008-cff01e1a98e3",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bc2da53f-2628-4d35-ba8b-ee55756976aa"
        },
        "item": {
          "id": "f96d21fa-ffb9-4609-8fa6-283d521434b2",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "dde0568d-4349-4aeb-ab1c-60ce0846dec5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 548,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}