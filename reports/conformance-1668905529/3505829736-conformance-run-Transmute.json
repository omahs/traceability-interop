{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "941484f6-c948-46c5-ad69-2d164aa6fe9b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "807e663b-a3e3-4333-a773-f661b13c044d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4f8c411-610d-4b5e-b9e8-cfa232b4b944",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "734af88b-5762-4cab-8784-97c0b96f77d3"
                }
              }
            ]
          },
          {
            "id": "c9221555-b0cf-4088-9b5a-97228a5829da",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac8ef2ba-dfd6-4661-bbf0-c6bd207f322a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d0538424-2a2c-48c1-aec8-01656b2fa0cf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b823fcdb-388c-44fc-ba7a-ce3021e8f2be",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9c45abeb-21cd-4854-9c2a-5f44377cc2b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f7a8ff9-03ad-41a2-9e2c-ac2c2ca7f760",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1282f95f-119d-45a9-a737-546c83048881",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39a2d2bd-43b2-4060-8e8a-670e256b37f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7cf9e601-e1e4-4d53-b024-137f6ff89a21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f4a04ce-a9bb-4e1d-9462-36a857df36e8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7dbe795-9333-4bb2-be2c-ad8207869b65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c2e447b-0d4c-484a-9822-7de89c0a0b3c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdd87f08-ead0-4a86-9abe-7b3d5f7689ed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "09b71c38-c9fe-4f45-aa04-82304838e713"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e2ea6c1-47be-4fdd-b1d3-905f9f2329a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4448759a-6d91-4250-b351-93a4d0fd1b58"
            }
          }
        ]
      },
      {
        "id": "0117a428-047a-4ffc-9adf-91fe27b59f87",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1e9097d2-4639-40c4-9b1e-d0a8da71e7ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4a1fd53-fac7-4507-923c-ac302ab7c7b9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e0154809-f19d-4d32-b2e5-642d219e1dfb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030ca7f4-4dab-4e0b-a90e-79fa0332cd85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "166332db-6afd-4761-8a24-1ac601f79c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564ceebd-45d3-468b-bf48-ce88574baa53",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abb77d2-0fbe-4ecf-8639-31ad26a64fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e52838b2-832a-4412-99e2-d70479e6648d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7c2cf68-f4b5-4511-bfef-52038136aca1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebbc3b2-3e08-4753-b158-6ffd76d17ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2a527cb-b455-4d55-bcf9-6c91d4ee793f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0767ac6-7bde-472f-8512-26339ffaaa9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "011cb793-88c8-4fcf-9cf3-a82e73afd376",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1946e1-244b-4ebf-8fde-46e14a612e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea808a8c-695a-4cc7-9398-6098f0bf5199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed09b317-ac9e-4811-be50-338159f42730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a57994-be37-4d28-868d-0b5060b38d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e87758-d7f7-4670-ae2b-aae630801bd6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0989eb-fe3c-435e-bd06-887b76387249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3138294-1886-41a4-b77b-7dc9e4528414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8b1c5b-b5f9-42a1-a02d-60816182f8a9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "d5c97256-af28-4322-8c80-0e806605023f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f6bc8a47-32d8-43ec-9d49-c70e35f48590",
            "name": "Positive Testing",
            "item": [
              {
                "id": "50bc4be0-3077-40db-a881-7cbca94357dc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc63373a-63ea-49bb-9fb7-cb2cfc7559f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6d5f28c2-8af6-46a0-b890-571651d9fa71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5f273fa-87ed-4d1c-80ff-ce94aad862f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "5f5100a3-d32c-41d1-acc0-826bfe5d4af1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cab842a3-9b04-4be9-bf0c-6fba5dd74d67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa6b4809-d12d-4ccd-a243-717658b963bd"
            }
          }
        ]
      },
      {
        "id": "3fa7d694-570e-427d-af64-87f66a9c323e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4f350cb1-480c-4874-b59e-6a3c5810fb97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8530201-2983-4f89-a001-4662d2a0367a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f84e6f6e-2340-47f4-9251-86abaaab3e0d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e077d4-6095-4995-af53-aff873dbc923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347030a-f9b0-42f0-95d5-d0511639c25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6895a222-b1d6-47fa-8500-10895a658e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0acf832b-75cc-4dde-baf5-aca4c789c645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed344a44-af46-4e47-a53c-c254815699be",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773f919f-4ed9-49e7-8f96-8a8873a42cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb63bee-414c-419d-9b3a-b3907b972fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59543092-e0dc-4b07-9a38-6c41819cff74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6628014a-6ead-4f84-9769-5d4436de1287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164f7e67-c56a-42ca-a722-496d224a5263",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380dec08-7451-4614-8d70-4e64214b8bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d359133f-3224-4a31-ba91-e880236039fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd7eb06-57ee-4d7b-9515-8fa25273536f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9e0d93d-cc2d-4511-8045-de3068d22fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3c61cd-7b88-47e0-8263-e05554f17d6f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af6bec0-0c21-4a3b-9842-dcb424c90840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3390f77b-1866-414a-a555-bc7eedc0833a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da260f58-1389-4c4d-9753-ad41bfa2d121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7c7f6d2-649a-46a9-b499-80ad28918313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7324c86c-8b11-4519-9a88-103db2aeea16",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a977a9-ad99-4fc1-9332-8c015f95fd0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de47afa1-210d-4520-8e4d-1267905a0373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3278ca-b6ae-4f1b-bbe3-1aeb250497af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1488e058-efed-4c53-87f6-a7dec8978a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac91d667-2b24-4d4e-a40f-e98f3cc3ec18",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c9f591-e837-41b6-820f-0eb3d43fc298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c5dded-9cc6-4c66-8da8-18549a64efea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4218a13e-565b-4026-ad08-2de9261205e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b0e51bd-0cbd-4b63-bdc0-36c1e44e972f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac492ce-b418-4895-a733-6fed395e7c88",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d54351-3916-41df-800f-f83f90dc776d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1768a632-4ec3-482f-9d6f-7379b1b5da85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db63467-307f-4e74-bcd4-44329c4e6491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba587b78-f916-4d63-817d-1bd05697efe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6137a8-29cc-45b2-84e6-fdc8e873e460",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968e38de-ff02-414d-a5d7-4f9518790a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8def7f9-5720-4377-aef1-68137ff52a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27980234-18f4-442b-a1a2-dbda25d4b113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a66ad866-90dd-4fb8-b41e-b5f89dbdf12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0eb41f-0674-413f-b98c-d44dc64b9ed4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59394b8b-64f8-4ab4-b70e-37d4b23e016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db38478f-e5d1-47e8-979b-bcc498457b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f714daf-6513-4624-850c-fea8be51abc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f52e217a-a38f-4a99-b10c-183297c6fa35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5977910-d7c5-48f1-b1c4-e65ad7e8edd0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0561fd1-92f5-4286-a2ed-dc81d2a18134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7542b0c2-c803-4830-ac2f-f422f0da9d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8bcdc1-1b30-4b3c-98a3-fdbee47e465f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9331b44-31bc-4fc8-9e83-490612e564eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc82971-e76c-406a-916f-86341b378f2c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b444c455-0af7-4a18-81b9-9f74ecc7033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02393dad-50c6-4643-a047-f84d68d49a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5299a3-bdda-4143-bf9b-8066b398a9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9eed2cb2-6183-464f-b797-30496bca4983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "467bfbb8-5408-4fb4-8982-ca8441283681",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcac6dba-1119-43ed-90d4-961c669a1eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634ebd34-caa6-4ebe-9e2e-f04910b3f145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93efe33-7807-4cc5-af3b-f602440ad70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4e7db22-ad2a-475d-a5d3-2a3cba724a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f3c676-ad74-4d14-8f62-1f5efabfe633",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258efd44-967a-4b7f-9a29-8a639bbe67fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604e7a73-6b20-4396-90e5-d5d7e0bad9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5f0774-e0f9-422a-a7ab-e7dfe7e0785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bf9afef-8ea9-4867-95bc-2eefb44b542c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61df869-a29a-429a-9de2-7c9b4da84e36",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fb084c-eb55-4cdf-85b1-edc0d179cba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01edab42-b617-4f64-8dce-ec06c5baf1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb46f357-579f-4fa3-9073-35ff312c0bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf48a31e-c1d1-4e37-88ab-3a3790b6d406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8554f49f-9a67-4219-9421-a40623c9cc98",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bdd94c-f2ee-483a-a7e0-350da3b1a8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ca3ce2-a475-4033-bcbd-dd7b7082bf5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e90ba9-5094-42dd-8551-8343b18d5777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7155601e-5f18-4358-8a46-f28fd1841292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617ddcb3-4372-4a40-b74b-12f0f5aaae7b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0c7c5a-fe3e-4220-afc5-8dd306548374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af0e0f1-ef57-4e3a-98b1-6c59c29b1ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3290869b-4900-4514-959d-9d69e9856523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "140e3fa0-60d0-4d67-ae20-3900c00826e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f328c57-1a07-46d8-9b17-10dadfa7b276",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa2464c-1061-4311-98d4-0f79840f2dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8693a0-14f4-4e8b-88fb-2b4dbffc5c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ac1313-0aa1-4a33-bff9-0c86914f78fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2e67833-a31c-4d61-ba2c-48bd6aaa69b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bb12d9-a140-4cac-b883-255712c91608",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e82e79-a802-4835-a701-81722dacafe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fea02c-4266-4e69-b7e6-bd413d09896c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b400b6a-597a-48f6-97c5-defe7ff28564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71c777d-0209-494e-9d79-8c6707b993dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3118e8f-4af4-451b-8026-f1fffd0b01db",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2ac9d6-6aef-40ba-9af1-a79c12d97e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeec2272-e04b-4d8b-b3fb-ce01323e60f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6833dfcb-bc7c-4933-91b6-0c0949de58ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5e91fc-8109-47c8-a124-40ae6b041d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f702b706-55d7-4bcf-a07a-7f18f4dbac1c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734830f5-4d18-4c44-9911-b053b9e2d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55468db9-7874-4d71-95a2-4b7a8fa1770a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6ce6fc-576e-4313-84f1-52d7a636235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67a94737-052d-4070-9ea5-b11177167d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe93851f-92b8-4790-bd3e-0d1360405865",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81c58de-857b-4f64-98f1-c8929d53de70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114458e5-2cfa-4a3b-8d90-3a5ad260da2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3588962f-acc8-4379-babe-3afef6885643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "296abe7c-5a74-45a2-9bda-2ba45ec1440f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f719051-320d-455a-8b1a-66196112ab32",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac63778-ccca-4ad8-853b-5a8bf919f614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cef746-1e62-4640-8097-da6377bc1fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18574b3-83e4-413f-a555-92fecf86d0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86bc0d25-7364-4e29-9220-70e57ff54351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8033c994-7bd0-45c8-8837-f0b1a4a3ec5e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002be1f2-6040-4fa8-9468-2ed8c67e2368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22232c1-d352-4445-ac1e-8d942133d93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc2acb4-632c-4ee2-8ab0-54d160e3f2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "005e5404-8f5d-4160-ae7b-cbda84e22816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207c1acc-e6c2-4cf2-9c54-6fdc48660c8c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e17c1f2-0b24-4d58-b168-ed55ce050157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed890f79-5ff7-4247-ad46-a764a35c9cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b6d1f5-f2dd-4db7-aa06-d073b729bd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "209d6526-1977-4df5-b844-efe3c123e122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed55e348-f506-40e4-9784-b39039dcfb48",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122d52f2-9041-4b62-8258-4c0f9a67c4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1d689d-6d5d-4a2e-9e36-fef648d13938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fade74-c58d-4a8d-9252-da6357a503b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6797f103-a0ea-4425-9c11-d0d0e441481b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4f3143-4a01-4022-85bc-6a0fc84d326a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27a205f-cc89-4b1e-8718-603102a0ac9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec66ce9-185b-45a6-9389-fe9eeb6b79c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be3160c-dcfb-4d99-8bdf-78ed130e86de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cea2b2fe-3cb8-4f3d-a53b-f9be49c54aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bafc52fd-ffcc-4c6e-83ee-99da58bedbe1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1437ca5c-0b50-427b-b79b-d8ad06fec11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0fc7c1-8637-463e-a66b-d0d7ad16bba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c30a28-73dc-435c-ae78-e97e2e9ba8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccdf321-d8fe-42ed-ab5b-2112ad511fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678a1b26-5a62-4762-b2e3-73e6139b117a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdc8a82-bff3-44d9-a05e-dcb21727264f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc564c83-91a6-4759-bb06-1a006c1c8c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3d644d-5de5-4ce6-806d-0c60b55077fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "612b4ee3-4670-4691-8a38-e8adcb482017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49402445-983d-4381-83b4-36161eaf1810",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b8da9a-247f-40a3-be5a-99fedc479a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f15235-0475-4705-bae9-6022350f299e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13978ef6-77e8-4490-8701-bf118b152976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f752c19-8274-47c1-b53c-6733a527e105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0072a3dd-5d0d-4b4e-837a-dd6ee9be8dbd",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ccb11b-33fd-478b-ab72-5e8a1c9d5b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec09519b-06e6-420c-b66f-b181bf4d5bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161bd07c-630f-46f7-bb2c-cc6ac0d0b9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "db0a1aed-d555-4ef2-8c52-a408f50b05fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c3ff4a-aef0-4e45-9b73-c7344030b3db",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56751a1f-cac8-4bbc-aef2-63c14bd79f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea9cf1bd-e7fb-4738-8426-350ace8eb97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2cec3b-bc01-4a6b-b181-2fb07630bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a682b91c-d54c-43ce-a627-05b17484d1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5678fae-49ca-4ab4-812a-ba781a563ef0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed413d39-54f3-4872-9f37-363d135eb69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fea435e-c06f-4965-a724-15a6d6abef4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0f1049-16be-4aed-854f-f5c3ca8fc201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d034697a-68d7-47fe-b20c-91ddd7c1d21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80e05a9-4118-467e-a022-6dfc087daa63",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c84a22-dc65-4e82-b3a3-b641e6222020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f8b3b0-c2d1-4299-871c-9bdf3e109c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d821bc66-4e94-4294-8db8-35c353c14aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2eb8d885-5480-424d-b5e9-a499a7a5f27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33c7a87-0c06-4405-9606-e07b064cf3ef",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948cc108-e4ae-4858-a144-bae91120d2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1529cce-236d-4f81-b5c3-15b60cd54872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747b1b47-c8ef-4a37-9b55-ef44f3946354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f49c1605-ca97-4084-b246-757f32c1ebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a98381-23f7-44b8-831b-637f2ba479cd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fd82b7-1230-478b-bf3c-64019193daa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c587836d-4d2b-46f3-a4c3-e5d5292efe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeed1281-4cd9-48c6-aa09-45c4cd3da434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "668cced7-f65d-417e-b38e-d749cf2ee0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9955225d-a2f8-4df4-9577-74d5c75d118b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a867cb-d618-4561-883f-9a97c31274cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c904905f-fe69-4b58-967a-c138341ecf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fb5153-aa01-40c7-8d80-b95cf8d876bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2879fc00-5b96-4357-b02a-ef28c5fb968a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9c0fb5-7e15-4a61-8714-c6f796473d9d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71948701-7842-4444-a8f5-f31f28727736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205bc56a-e80c-425a-8c6a-e606251466b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d565d8-4d9e-47c0-8757-53e8cad46d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbba9d7-6b8b-4de1-b0d5-88000abc4722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ba6972-b611-4816-b41b-d3b15e555bbf",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026837f7-32e2-4c24-b8b3-53fbe9aaa9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382a9da6-53ee-4a22-9977-95f49ace01a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1001d79-45cd-4662-ab91-d09c08391180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd8df32-6a54-4411-b374-13632e487b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f9d920-60ed-4bd2-8f27-0bee991a9bfc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636efa4d-8bda-4333-b9d8-46a37593b71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1e6766-9588-4463-81a8-d19c4a73b6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67fadde6-97e5-4323-b392-db7c1e2e9176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0802947a-a16f-49bf-8547-05b5a424286e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4441cf1d-1a2b-4a17-b3bc-ae9740a85c2f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8a79f5-126d-4dfa-b4a7-33d5e74f2954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add4959b-7a5a-4179-90a2-481f0f2c8971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b78f008-5459-4b0d-8fb1-1856fe3c2d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b5d264-fd9f-405b-8d42-8ff3ed3d7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df20e9-9d82-4537-9207-3d4bb6d011dd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1722d0-bbf2-4936-9180-7c54be67acae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170e5c9c-6f18-44c3-abc7-f6c9f3429dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28c9a8f-14ed-494d-aaa3-0852286f2318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4dbe28b-87de-43b6-85cc-39d9e52eda47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcd9e4b-3e8d-4274-be15-a0c80c74a284",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095f743e-df68-4176-bd88-7988cba2b38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403d1138-c8da-4cf8-9d75-1eee2daea392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188da2bc-29dd-4815-bb9a-9f151c1de61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1d93f3-bcf1-4f85-bee7-5d52d03287e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2694d9-6b6d-4566-bf08-436317356854",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26cf1a4-9407-418f-9605-0a09d54ad58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aea9126-575a-4ced-890d-6f286bb00aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6480cdf5-a72a-4f8e-87f5-c398eba166ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa99e63-7379-4895-9c81-0603e697672a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d483ae4-3ac6-49d4-9dae-f65a40555490",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1211f381-8d93-48c3-8c97-218231f61d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65737ee7-a973-433b-86ec-ada026855f85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b7ab6b-a1bd-4905-a90e-1462b4b97d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3de54b-7819-4b67-9d90-aac483f8e3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eec9c9d-bed3-4fdc-9527-68e8c91ff2ad",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2336776b-c0d1-4e62-afe1-98b5cc1bb7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d559c1bc-daa6-4e1a-b16b-dc98a3aba421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e6d3ee-67ef-4af0-a51f-15e9a0e797ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d7b2b36-1e52-4db9-8015-4130efab8d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef9aec5-104b-47be-ae5d-c4fbda3841e5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780eb3fd-7620-49a6-8895-9fb512b03d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88dc2506-010f-4306-bf0b-aba0c3191a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c629952-86cd-4c5e-95f5-13e50dba8064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f53e50-4043-4040-acb2-40f13ae61397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4e1972-a747-4a49-b767-d750e4a87c9f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0ea333-35e3-4c93-93dd-2bf6de9f811d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8864b9d9-0074-4ad4-9f9e-6743b4f8e472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081504e2-48c1-4d59-a4cd-a8ee499b093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91b032dc-594f-4e55-8954-7cde5fd108f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a41dc2-58b5-4f0c-b79b-bc539af90b1e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9cc52cf-35b4-4190-8130-3a3693534062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a167d1d-9858-487a-8617-ef54a040e246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5083563d-8b2a-4af1-b48a-328df0b999ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74435fe5-174f-4c8c-8450-0ed11eb88e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1a3c32-2d4f-493f-9123-637b297d5d09",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f29fe93-e77e-465f-a584-8e3ff7aa07c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efb7d5c-b21e-4336-9a73-65fe9c44f17a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ffb351-054e-42c5-9530-1db75a24f168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e71c28-942a-4243-bfe8-1c82470acce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8246725-5d7e-41f0-96da-4c1bf1a06257",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cd06dc-30f9-4c09-82f4-98d6cf7212ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62b65cc-aeb2-4ac8-807b-81d8c2b9387e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653ea9e9-135a-4d3c-8bf0-a4ea3f14b1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "463b8566-369b-4c8f-b7c8-0010ba4865b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35adaf8-5b5e-4e66-8d9c-e566327cf775",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2c9137-561f-4394-83bb-62930f738532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a82c782-05be-4262-8473-b9785d5dd802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798fa855-d532-4a43-962e-f2fcc57a69e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3ea03d-08fa-4eef-aa8b-3a8988b2ea21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc63974c-b0df-49b3-909a-6c062de010b8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84560930-29d9-4ba6-a938-d74a1e432cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1874596b-02e0-46ec-80ac-a30bd8825875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e708395-5090-4121-a66e-0f17ed4066c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a3c339-0b84-4498-9678-d68811422d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aebf253-4848-4818-8111-fe8674a2c449",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0187df1-d611-490c-b0ea-d0e0345f5bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367b573f-7f32-405b-9f6f-35025450fd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86383f1b-1a04-4dba-8dcb-4cf76135bc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0ad031-5e74-410a-afdd-678b86b3a8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15eb7b6-f088-4a04-8d8d-6a87d4f83e63",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8157639-cde2-4601-ad5f-8cc428de55c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630e6c72-45fc-468e-994c-714b4fad38e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733e1cde-8d6a-410a-9647-0c2c7e2a879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c7009ed-4f6e-4d18-95cc-eca3c9583c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c4bbff-8543-403d-a57e-32c85cc33e05",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0400a264-53b6-4b70-a732-c27898bc9ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fad9c2b-c8fd-4643-b1be-a3d77d651131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f4bb1d-d9dd-4a37-b130-1ad2f4eb48ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78bab3e8-8aab-416b-b3c8-a3be2c12b0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47114b3-b4d4-4bfc-89c5-1d63e1a2f803",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f536d828-1ace-4832-94d9-e27d70148ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ba8ccb-295a-4ee1-84f5-2ffdae5e523f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e326fe-e8ac-4422-9a6f-68bf415cf87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe08e92-3c5e-4067-8a67-b8d6428a8bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d2c8b3-5b8d-42ff-abd8-7579f87e3c8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba03ea1-c409-45e6-b53b-f09decf3ce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40024ad5-bf30-49a6-be73-2c5a0a49adeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7549c757-53ac-4b58-8d92-f32e60303426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "627c9152-8db3-4588-a4b5-b4b5b8b5aa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd3ee353-7297-466c-b0ae-f15e870b61dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ce6f1b-ccee-497f-b2e4-dee5bacfd6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d66c9dca-8d40-4fa5-8f41-f1bf21df8acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14896387-698b-449c-8e4e-7047f75783aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce1f20d4-4c58-4c0b-a49f-f2875f94c3ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afec3f0c-9cdd-40c2-9438-5ab8a7b0bbf2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2912c749-7913-4489-9c3e-48b429348e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4d8e66-aecb-4e7f-a909-53a5722cf374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b747da-0896-44a6-8b72-96438138298c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b73dea90-6997-4c91-bb1e-40c9784dad90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2525a8d-cf12-430e-9b9c-1d1a63117134",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d69b4b9-1505-466a-bf80-128b6d575804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc5d204-48bd-4cc7-a7a1-ceac2a32bde5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a23fcde-24bf-458d-a622-4c2cf36d6d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5743a5a5-e7de-4ba0-97e1-69fc0d7e8924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf17a21-43a2-470d-b754-be9a041aa871",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1d18d6-bd5f-4aa8-a428-a03170fe50ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34b0614-d089-406c-9047-0d709f276908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8600e590-8e97-4b7f-88c3-5384ed7e830d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9acfe0e4-fcac-4d3f-b059-235fe018b26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86275553-76fd-427d-8fed-6dbf033682a6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86561deb-4c06-4429-bc00-4670a50ac361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b99aab9-6ccd-4c7d-92d3-31926ab7c7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f965169-2781-4004-bf54-62b7dae090e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a50913c2-191c-4465-a670-2e7202fd9824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cca6805-3c33-46a3-be3e-9c8827a4f228",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42dbf5b1-f30a-4721-a897-d1fa42d67a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91335570-7cda-430b-a976-1b2c9439523c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569651e0-c9e7-4620-8bda-ff3785e186ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6834fd9d-9ceb-49ee-98f9-b98f760413e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e617a6-1e7f-4ba7-94d4-430bb768d35a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73436d9-6e22-4611-ba89-97a1f8f823b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088b0ec5-f4e8-4fa7-bc49-26386d9a5b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f5775d-7cb5-47d2-b241-2d3fdc1d0790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab5207b-373b-4182-89c5-7626db2189ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32918f7a-64b2-4db4-b3e2-cbfc6bd4a40a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4653e690-7e4e-4acb-8e47-0400f61e02b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a642a999-e2de-4dd2-83b3-9e2d1d6f4f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efd70af-3082-467c-aea7-a42de769ae4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4962fd8-7c65-4f82-b440-869e1df70ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94bc64b-ef05-4bae-a78e-683a2ef13646",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76808271-01f7-4edf-a484-18de420b726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec98e0e4-b88e-45c0-ac7f-60cbb9459e15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9286d4f5-8fc2-4f5c-b9d6-55027088fb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93cd46e8-1ff3-428f-ba4d-88fa07ad67ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a0f48c-577f-4e6f-b5cc-279dc05b8cdb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3dd4fe-09f0-4633-9e34-7c55fa657d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25322fa4-e209-4f1b-8cfd-bf4877c634bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71124a96-bc76-43de-8eaf-3477f231bb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a214db0e-3266-435e-af62-4973f6a86d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce1e2ce-f7ad-466f-8f02-c3b4f7fb0b5a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b33af3-9e6d-429a-b460-8f67fd3c8c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6bf3774-4874-429a-bbf5-3859028294d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edf244e-0c5d-4fa7-b96d-eeab59a20a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e42b99-2612-4f22-9c9d-a1b9121317f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18eef0b-1aeb-4805-9f61-011fd0a5f7e0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9ebcb3-5f51-465f-bf99-bdc27a28f747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c8a69d8-75ef-450e-b04e-024e53e3b12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db7a048-d412-461a-9c12-aebe5ac8354c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb9a92b-76db-4136-a6e3-fac0e47d4c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd86c780-8cee-4d23-aa36-2abe398a4cd0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60eaad3-00f4-4fc8-8184-2acdcce13b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9a6522-110f-4f9e-8da5-9f6af545c585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4cfd27-6115-4727-8bf7-19d8b25e2658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20accd49-9161-49b7-898d-a7f812c49976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf46f0f0-dd23-490c-a11d-5162f8d68972",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df33f6e-5be0-4644-9d6b-0507ad4134ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42515efb-1999-48c3-8edd-9e3c914cc984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d7305c-2a13-440f-b2cd-beef7a7d4191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c97d3218-1a85-48e2-b6aa-e1f6007dedeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69231266-e977-4997-8dd7-4a61a676afd9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d241cb3-2ac9-409d-8b2d-7f5581994b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ac65d6-24f2-4eba-bf1f-28c94d974575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefb7ede-3d1d-4153-9098-d4556683dfc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "832470fe-34d2-4d63-94a6-8491c6c1c61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "149b841d-6e78-4a37-aded-952f4a9de1ef",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f6669f-ba44-4109-bad1-14e310e38761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93e431e-7464-4d01-a7b5-95111cc0b4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ad904d-8bbb-41c1-871c-74eaed190e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47d9080a-8352-4ce3-af2b-6b79d70b30ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5406b4d8-6aa5-4bbd-803e-ef639d67b79c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b385875d-6025-41ae-b526-1b27291fddf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eec725-6e3b-4206-b0bb-f02728eef1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "815fdb90-8616-4944-8f6b-c0179ccc10de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb057574-fe8a-46ea-bca4-80da1a75da35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513d4a39-fb25-4b34-97b3-d9985f0bccbd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99280739-3720-41fd-b3f7-2f8024423af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4be25b-f4c5-402c-9ca0-8b320b4faa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab511fa-e232-450b-8a24-52849d4b224d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c37ca780-00bb-49f3-9b3d-7ea830fd1653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0a1bdc-5e63-4da2-aa26-7f3b68a449a2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24037762-891c-448a-b242-87ce30b0a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59961fbc-a361-4666-833f-6f9e5deeb2f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5fca0f-8568-42cc-a7d6-2a931e2fc246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95604387-4634-4ab0-a018-3cd3f98ffc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efee66a-5674-494d-9abd-8f07e3d5bdac",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0afa0c-1430-4c5c-8a23-bd23bcc71daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a686a97b-9838-414f-add2-d04f2bc18bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9d4947-0cb5-4bd7-ba0d-56f87dba637e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "507b4ccf-8bb6-4f07-b0ad-e9e783f958e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f0d6c8-ee67-410a-9ca3-6130189049f3",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35154659-8eb7-4e27-90eb-e10c0f356813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721ac939-0431-40dc-96ba-7cfa15cec457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc36f1a-456f-4f22-bdc2-6d2dfbfc1f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eeddc202-fd4a-4d77-b5f7-95fbe6f0c04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6d3176-30fd-47dc-a5d5-73173b95bbac",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43562987-259c-41a0-b9a8-7b26a85f2489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c426789-3155-4232-bf04-4471812df519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1302f83d-f38d-4ca9-9c2e-519c83735866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "011b8c6d-2639-43af-9dc8-a02e51857f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1709b5ef-1eec-4f30-8cfa-53ba413cc284",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb236014-60d1-419c-966a-8d39cd4d76ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b8e739-c98f-45e9-9cc1-34f0bc25bdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c4c6b2-446d-4cf8-becb-76e8adb12f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7682e672-7f62-49de-a3fa-dade09fb2fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8161df81-db9f-4604-bf37-d7090fe6735c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d36a32-4534-4ab4-861f-ae1894a0dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f273ea00-76bb-40d3-a9e3-73607eb27ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5f6efb-594a-46d6-8fdd-bd05635bcdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d33a1a34-09e9-4acc-ad2a-db65610eb184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755f7866-2755-4f68-974a-f9a9f9e7d6da",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4622ea30-69c3-49f0-bc1f-31037159c821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ae1dd4-1022-4271-a209-86b49ed396d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ed459a-6ade-4d26-b3c5-02391690330c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2192ee5-8c22-4fd4-bc88-2cf7f6199baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5bf5a9-ec1b-482e-8450-439219253039",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04434fd5-5ebe-486f-9a82-0bc3cb74ac03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5acbbeb-5685-45ad-92e7-6fd714fe1d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a7e999c-4b84-4427-8030-ef9c7079a298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23846744-1f2e-4638-871d-38b71f67b57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d369afb5-19be-4f7e-bdf7-e3847139850b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "effe5533-271f-490e-b4f6-5d085e20be11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848fdb2c-098f-44b3-a2d2-db086c9d794c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c76c0a-b87f-4238-a8a5-f2dfa101f919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c12a3e-4ce2-4ba7-86aa-6f928a79d2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7136b5e-36fa-478c-bf25-a240d2a45ffa",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0624f18-2fe4-4f6d-898b-3ff523e9cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f596c36f-6502-4089-89b6-ad312d367507"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946400f5-c8eb-4c4e-9abb-4a4f29891fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97995224-719f-4bfb-988f-e1df0618ad63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9100b509-ef77-4edb-8a25-1b9b6ea7ac5b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681646ee-f894-4823-b613-35976efbd5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614697be-b6a4-4527-b523-2cce731bcea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf44998-7932-45f8-9d54-6da319b1fec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f397c2-151e-43d9-9510-3e50e7e7e770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9029ac7b-db7d-423d-85e1-91e1efc000d7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0b2d52-0872-4822-8701-eb5ef5dd68aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00df7401-b33a-4e2c-a9cd-baed305d5b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93ff9eb-14f2-47d7-8aa3-0336acce2578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "541788ab-97bb-42e0-87ec-49f5796e1150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a70aa7-62a3-47a5-a603-fa82e2620333",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb136c0-0a5d-4d0f-9453-fe6bbc150ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fead5f19-5413-48f9-b3a2-1747f0b44fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1850ee-0790-4cd6-be3c-05444b4ca414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77b5add6-80c4-4453-88d8-4ff984d8b70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c12a84-6f34-4dd6-945b-75ddbb9333cb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5e7770-c976-4441-9e38-ec30c6bcb72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659dbc4b-531a-4dae-9b26-2f2013780c40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0249e2b-74a9-4f3c-b1ae-5db6f86507b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e207f00f-fa5c-4624-9dda-86fdaac1e1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464bbd44-031d-48e5-8680-67cf85d2068d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9187ec6-6de1-4c19-8e5c-ddae81b0952c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ca8b86-5de8-4808-964e-dd0c0a815b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e691f2d0-7ab4-454c-bf4d-90279de8f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d64a92e-cb8a-4491-9e3a-1d633a413476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5655f50-587d-4609-ae61-76953e72535f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ef10f7-e177-41c2-bc05-bd445c5233dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad9faf0-7b17-4973-a4c7-01a395c7069b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f64f9c-b98c-43fe-8aca-89d17bd68d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6aca33e2-4440-4817-92ce-9b4a45e79d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157a19eb-ba56-4a5e-a9e7-ad2189764177",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e438dfbc-4ad9-47eb-bd8d-00597ad73973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15e26e7c-e5f1-4c21-af59-c845d2dd9922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3764d497-9faa-4f6c-8baf-8f937b861402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "50c517ff-c346-4990-b969-e10dc90db6ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0fe71aeb-e9b1-4c9c-8f66-f8234b0a2183",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "478c6d99-cd61-4c49-87a3-4d7880bb56b9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7633bd-2feb-4f3f-a6aa-8ccb67d72da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2af8be46-392c-4ad3-a003-fea7945c3de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22643acc-6ffb-4027-8d97-b7be6bc1d084",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "22c32925-b965-4c00-b0f6-f52f659f189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37740ac4-6ee1-4a84-bb64-45023d798b34",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59afae5-1e92-479d-8f10-916e18184a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8af0ecc-b249-461f-ba7a-d72ccbd77f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37d2e6e-09a7-4d3d-831b-881f45e3156a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "58b85cdf-f6b2-4b74-9b8e-e61c562e4ac3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36add13c-b34f-425f-8c7b-887055c23a70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "180f5b8d-d5c8-4219-bd71-d252cae15187"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48fe8996-974a-493d-9d2c-461d40aba999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44c2459e-53d0-4012-bf20-b01db25c44d3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "299cfcf1-89c7-428e-9d33-f0e959a1d38a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0905678-a4cc-49b9-8520-7787316382a6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "99018d3f-c4a2-4ac5-8d3e-bd6f89f0077f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dd2ae72-232b-40d1-a625-72aff911425c"
                }
              }
            ]
          },
          {
            "id": "27ff0d88-10fe-4df2-813b-7df147ec81db",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc16f059-ae84-45a8-8483-6b0cf5919e83",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "311b4c6e-8d05-4923-b574-5001de138f96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78c898af-3ebe-4475-a4df-c60f14a8b875"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "717e3dc6-3bd7-4c1b-9742-be003e0fee59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5447abec-734b-40ec-b606-f54bec3faddd"
                    }
                  }
                ]
              },
              {
                "id": "dc203ef2-6688-4059-9f7d-75b4c386a44e",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ae745fa-9750-465f-8342-870675ba6705",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "564688c2-e9a6-4e6e-b265-bc6850b0cf1a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "358ec790-5e75-42df-ad29-b08a9573d71c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ada23c36-bc5b-4747-a41a-ff882d5db430"
                    }
                  }
                ]
              },
              {
                "id": "46570e9c-570c-4868-9d9e-ce5dbd856d1e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c001b322-d2dd-4c28-a6ef-641ea4d5108a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "409999c5-5c7a-406d-92bb-11bda8372361"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b83cbba3-cd9f-48b3-9769-e9b3e0f005d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4a21e24-79cc-4b7e-884b-37f8a158fd6f"
                    }
                  }
                ]
              },
              {
                "id": "557bc850-456d-423d-ac7d-13d8c005a665",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee861e1e-a3c2-4a7d-8431-3b13e1415999",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "99abe990-1712-4b35-bda8-577b9fec5daf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ac3dc7c-438a-4035-8c78-e40b2ff41665",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3b7973f1-66ef-4fbf-a2d1-b421dae08aec"
                    }
                  }
                ]
              },
              {
                "id": "6530befc-f8be-42e7-90e2-6b58b698ed43",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8efd106-d99f-4b67-abea-2cccda54d5b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a766c038-cd3a-40eb-a234-a258e591872c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "565b2539-49d0-47ed-8380-df33755c4787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "abf77f41-d495-4de9-9af5-617f411de252"
                    }
                  }
                ]
              },
              {
                "id": "d85ea84d-fa3a-46b2-847e-317b8c5b0969",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49a8665e-ab68-4d8d-aaa7-55f27bc6f710",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00f01f48-2c0d-49f3-840d-6d5383c3fc36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dee48e95-b961-4975-9486-cf9767742273",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6d4f4171-2052-41bf-9de3-0b1e8ff95d95"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e287af7e-8eef-43ff-bd68-6b336be54922",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9486a2f-0c09-44a7-ab8c-3270f3717b29"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "226e3468-c2a2-41b3-a6f2-b6ba6fdf211d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0d4c6f3-5962-427e-b528-b11ffd10b5d0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4503118a-00e3-42a0-90f8-ce0f53bf9129",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5d0ee9e8-ce22-47f8-ba30-c2ec43480e1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "334dfedf-0326-4e5c-925d-632a3bc68128",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c6f3754-9958-4d39-acaa-6f814d9c9863"
            }
          }
        ]
      },
      {
        "id": "c1e2fec0-b71d-4751-bf68-8aa05c630f72",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "43eb31a4-851a-4e31-8806-15ddd79b66bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9a7a920-e181-4648-b273-d30538cbcb80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f10be57-d790-4de5-831b-8ec2cf2cb034",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c879f9a-b4d8-490f-8d7e-46a33cb8f56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef1a61e-5cc3-448b-83be-9993407f8717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1fa62c-a325-4bd6-9053-0730dca8a948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f64a62c6-1fcd-4eb9-8e8e-9b6c7a2871ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953417e9-42bf-4ff2-84b0-886dccb1fd3d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c37eb8e-6e91-4ab9-8d2c-c5a3641a79c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca0bc3c-15f0-4f01-91b1-100420f96ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1c5125-0776-42a8-b867-7056b0ce5ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4280c68c-e933-48fd-bcc1-06dd531d420e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6eab71-097c-4310-ab63-87040e033717",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7840d5-be48-4884-8e13-965711b13878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1a53f9-8f79-42c4-9428-cf106bb1d021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1f6062-500d-418a-a2c2-bde52d1715d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fcf049c-11dc-4e83-bc02-8a5337b1fdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246666ae-95a3-46a0-b6ec-f5fa3ffd0a3b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae604a1-de88-4bf4-994f-7d75e295f0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29e4a46-623d-4346-aadf-282e8731846a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1752fc-4a1c-48a5-827e-b8067a2ac5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c724df4c-c530-43ac-90d6-66e8eb9ea418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61217eab-f917-4672-99fc-8c58bac5faa7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b01cc61-bfd8-4732-bca7-f6a46faabaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7bfe4c-6106-497c-9d07-353738be8ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7bd4a0-b2ae-4ace-8b3c-cfbccd7eb6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ee3828-1177-440e-a9c8-589989a88f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10086d6-30f5-44f4-a746-c89942643da9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d90a45c-1685-412f-9cde-ed37a8780023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977ea8a0-be38-4040-8cda-8705109643f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae969aa-fd20-404e-9919-5ae073a640aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e33b86c-0fa8-4559-b279-3bf7bccfa885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0c541b-98bd-4afd-90fa-d216983ad573",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d1d658-a75f-430e-98ee-34e54d45019d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dde6d44-4ec2-4fc9-aa1d-ea26ea670c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f844e2ef-ea67-4bce-b599-1c7ff0dbff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af28b2d-0d23-49c8-a6f5-a7d024760dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cdecb7-49c9-4014-bd31-b5e7e8e7a3b9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d6b4fa-d258-4ee6-9d8e-3442422aeaec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ae9e20-0b4d-4fa6-a022-eca5682280ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9577c3ef-291c-4e2d-85cc-8312ef55ce2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d645e3-8e3c-4039-923d-213b94b04648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60eda8e-2d2e-4890-afc7-0821579f2864",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "408b182b-1fe5-479b-89a8-ab1977d42325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a292ae-06a4-4cb3-9647-8b0c805d23fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347d2a46-adf0-43e3-b053-23a6b64520ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eebcf9d3-d674-42bd-b98d-555a21c06cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647f55cb-b7be-4e67-9f5d-a63451c3b08d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dab479b-21e7-4b36-b747-8b80952996d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ab0835-dec9-4dc1-bfeb-473e504e4a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacb4ae4-7ce6-4552-96c0-cded0ed54613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc195558-5b77-41d5-9eab-5a686a9a2bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034ca9b2-205c-4677-b2e3-41951e710433",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29fa31ff-67e0-4b98-900e-1a0a4088a024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76b67be-1a14-4c3c-ba2b-aa55b277e5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ad89db-dad0-4d46-ba75-24a8446eca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "333c9dd4-7438-41c4-8da0-cc0252c86694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c236f40-1df2-478a-993b-dd0cf929e37e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb436b56-6031-408e-b036-11c173919c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f528d9b-4c87-4b3e-a4e4-349ef4cbff4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6828f935-4d05-4b14-a461-8e01ef0c80d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49929eb8-55f8-4d95-b260-165715c7fe38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb6a43e-a63f-4e89-b896-7393eb05fe9f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d5463d-3865-4fff-aef7-2c2c3e3d1842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bdaae2e-14e3-4f95-8f8d-20e331ccc662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b56aa1-0478-4fab-b04b-1d69a33334f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "151bf683-e4f6-4cdd-a99b-81d449fa2944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b3abf7-d01a-4b8d-801a-922f610b8ec5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1935bd2c-6fcb-4252-8847-08d1deb3584b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a7e5c0-fef7-4225-8ac3-091edc31efe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d930a2cd-8b48-496d-a37a-8b57e91eaac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "84f8dd15-96cd-4e9c-a34f-b2df4e9fcbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f6672f-ccfb-4885-b200-1e418a62d1b0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6b5126-05a1-4f87-8993-413f10af6fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff502733-0e11-4def-bfc9-b3b1eab47990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c6e78c-c983-4c2b-94fc-a1e6479dc8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cf9e5b-4a0d-4bcc-b93f-f8bb743a40ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae78c265-f2f6-4012-973d-3a4b0eab104b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2ca436-0891-491a-a430-eb5d0432e917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3d2341-40b0-4094-820e-b860d7f4b5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5b079c-1335-42b5-91c3-7e66b34ce5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9027e1-b759-4db8-b298-750e7dbfdbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a05ac9d-ea24-4521-9dd4-a5cf9b0d2a17",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298229c9-c4e8-4731-a6dc-07421b00f01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03dd836-a524-431c-b69d-c9e9117d383a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a32ca0-3890-4102-898f-2a4e7fa4fb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "80b219ad-bd63-4427-9234-0eb5ed5771e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581b2c45-30de-4c36-95e3-e94346d4497a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b500589-880a-49c2-89c4-39bfc03054ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b5e252d-3b02-4f12-9d52-6e08fbc6ece2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe324205-2da0-4a3f-8614-0e2bdc9ca9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bea5dc-e00e-408a-96d2-27ba6df293af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d884246-86f4-4f30-adeb-dec59fe16d7b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737fe30d-7ad0-471c-868b-5f9e7987bf02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc7de60-0833-4764-9736-537d29227f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1d78e3-ea42-4caf-9211-25484c5a8228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "097dfc9b-74c9-41b9-8db8-1515bd302aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a821740f-9bbc-4c1d-b808-c6c17edb849c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ad3b09-8630-4a21-8f3d-674a0cd689f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc06344c-7c71-4557-9e22-ff388d454266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa46d1d-8267-482a-a56b-64780db60e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3560d3a4-2bbf-4c60-bc7c-1eea4709c8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd140efd-7e37-4429-96b9-55d9741c7176",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd204b5a-7deb-452f-bb08-68f48d5137e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ae9b9a-f0c5-4a42-b4bb-ec00fe499e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709969ce-2c10-43a0-b6cc-0f19759daa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1566040e-fba5-4c76-8529-c1d0fac9f3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17790c8-6320-4436-8b72-9dbbbab16c36",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696283ee-3338-4539-bbf0-46d3f579891b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d77fae5-e562-493c-a8f4-4a885ded6c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ee88d0-42fc-41ff-b93f-b8a0d313f35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0766294-214e-47a7-89c6-43d63d34fc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9636a4d-7705-477e-b7e1-1e16db826126",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b242b2-7b84-413d-9958-06dc96f28ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a7cec0-4ea4-4248-884b-ed917032d061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c35d4b-932a-46b0-9739-44bbeddf87f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5654fd7-c318-4a4b-818d-e640b9aac3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7411450-56f9-4a23-9537-21b68afc86f5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38704be7-3ba1-478b-bf0d-dfc0c37f8efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d18f83-61fe-4c45-ae64-4f5d647de1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee3db76-53eb-4f49-a848-8bfe310f87f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a25e8ac3-9c8c-4a46-9fc2-a5731584fc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e5c65-196a-4175-8399-0c847c430971",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4c95ec3-c0e9-4ce5-ad2b-b8a51800f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7f289b-ab46-4bd9-a273-6478280b8042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92fcc24-fe84-43c8-a3ce-e9fd7f093c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4253b83e-38b0-4626-8874-582a4878d4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2937d214-79f7-40b8-bbb7-1500b82accda",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff796eb-6972-465d-9e87-9404a45b68f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282c35c7-f978-4be7-a6b1-0b7e67d615a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580aff34-17da-4e2c-a6fe-81cdc10c7b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b946aba-2b06-4935-9cda-fb040732b378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973a6980-b926-434a-b181-50d72a13b136",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc9a56b1-2f09-446e-8853-816bf3ce3cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc854b8-cd5a-41a0-b60d-1295ecdd8921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7cba3d-a134-48db-86b8-a58c187e9186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cf53e7-c041-4a0f-aa05-0666376d6020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baca7b0b-8831-40c9-85f0-1f8914e643b3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23247015-65cc-4c89-81cc-059f6e52bd2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a6f709-5c4a-4792-ae5a-fe4dd9b41c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029151dd-bf9c-42aa-9c5b-1f8e0ce43b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a2cfd9-d012-47b2-83e2-5dab525ed3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40d5630-1ed2-47e0-a4eb-935cc3dba902",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e406ef9b-fd7e-42d4-b9cb-3109bf55dec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4066c79a-5cfd-4c65-bd58-f4e47c7f81e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3322f148-036c-40da-87f5-7bf1971f16a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "586d41c2-3cbb-443a-8013-c8496ca7f5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2a854f-f870-4752-bf8b-3f5c6e694e8b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ceb7fc2-c53b-4c01-84e1-966a779f3eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "437098f7-f1e7-46ef-a990-e1ec82d682a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50aefb5b-abfa-42ba-9c74-882cc2041779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf607480-aa28-4f59-98fd-010d25ba593e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194b2d3c-a237-4509-ae52-30bd751400c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b49535-3ecf-4150-ae7a-db5979917b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d19f84-9506-4664-992f-91277930df37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdef03a3-c9f6-41de-88f1-0007cee391b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24d7fbe-477f-4dc0-ba5b-788ad9837fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d300177-1870-4ee4-825e-a78a2a0132c3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bce66e-7de5-4232-9e45-515b354a35e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ba6698-44b4-4ade-997a-8d153fc5bd9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a65422-7269-4f58-be23-ef03df2b6797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe5ecfb-14b1-487a-8ae0-aa5e4269a90e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fa58a074-8506-4f3e-bc33-12281022ce53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16dd7fac-6035-4e80-b41e-88da24eba89b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d0686c-1a5e-48a7-976b-2878625ea13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5736369a-5f6b-43da-94d5-092d38c156e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e71706a-71a5-444a-adae-629bcb42a604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8344beda-dc03-4021-9cde-fb5fd04afb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d26e0b-e4bc-48f2-80a6-3709fb8028b6",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce97263-efdc-436c-a3a3-e70692663afb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "1ef14d44-4ea2-4623-9e7c-e5f0cea3280f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b3044f-237e-4f35-80d1-6a1df3f6a1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "658741a3-38a0-4d3e-bfbb-e872e068501d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca7620b3-9092-41cb-904c-41071b1c56a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7edf6297-6ab5-41f2-9ad5-21388657bd98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c8780c1-f067-4f7e-be0d-b77120fd2406",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c7249ff-955d-4e02-9bb2-eec1ee66a8f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c4da417-a686-44cd-a358-710a00db9e68",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7fef874e-f66d-4c2c-b759-c036e7a3becc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a778299-324a-4038-ae53-4217776a8dce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d56ccca-124e-4c72-8b41-0de837de9949"
            }
          }
        ]
      },
      {
        "id": "cce71493-e07b-4791-874e-c5153e78fc65",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "935a7c58-7d0b-4e8a-a469-00da56938bed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f8e6f9c-c209-464d-bf85-a72cc3f591a6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e86d11dc-27dc-4c95-bafd-65017ed2b223",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d8299e-9b96-42b4-beeb-814a98045b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e392d9b-657b-4e0d-b882-718bd0c03f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d1c9b1-d712-43bb-9978-b260e11221df",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37df36f-cc17-4f89-a2de-1e49f024de94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e618df6-3e37-4437-8781-3438483ee1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ac7fcd-3c58-4717-a259-915d72706438",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badb602f-981c-44f1-8529-df023af38a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdce41bb-cf47-4bf9-abd3-bd3195072209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3f4ebb-8472-40d7-be2e-86e450daa9d8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8144363-16c5-4596-8d1f-4a27ef052bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2015e5c5-3ac3-49fe-8153-3c586ad618d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61653cf-519e-4e4d-bb9e-eefff989f5dc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20fcc2b-3ec5-4acd-b2d5-d5f7c269d2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "644f5d71-f5a9-43ff-b50f-afa6036129a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8890aa86-6afa-4324-b743-fc1dedc595c4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99439806-7d6a-456f-ab44-2d4df501b365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d50d23d-febf-4fe9-9030-20e5470e5a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb27242-d376-424b-a26f-a304852d6701",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f871356-e913-42bf-8341-523e7c1a722e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097b4397-cdd7-4ce2-b76f-c40ed23297ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfeabb9-7e7a-4044-9293-16589a4a793f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a841af7-8077-4837-b2eb-385fe5f809a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60da9ccd-f5e2-484b-8d2a-09fe346944ee",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70eea2ab-a1b5-4512-965e-3e738e439d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbcc5b14-c64b-43af-8f57-e09704d99884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf713447-6c42-44de-979f-c2e29a511f80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad542a6b-c8e6-46cc-b2be-7657cce16a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453bbbb8-dccf-4d25-b48d-0eac6ff8cc6d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbfdc39-9cf2-43da-bdc2-ef47420dbfb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2acbcbc-ec19-4d08-ae7a-4dc9001948c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa784d8e-f7c6-40ba-a3f4-915ba9878be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690e0817-f0f1-4d86-b3d5-b5c508f52b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38aedd3-50cf-41b2-afac-6d2f876083bc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064e1376-795d-49bb-b914-42ce5db6f321",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15fd226f-2860-4b89-a9c9-61797ace6767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e570081-9876-4c39-8ef7-03b16012205f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d843d10f-3a31-464f-8fd4-1bcaab4bf4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc216bb-de8f-4aaf-805a-c997c5bceadf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef0a9ba-dbc7-4024-908d-927f3310bf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135159b1-3a95-4164-bab0-7bbd44a9bde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca87f06-5cdc-4ecb-938c-acefce0ffc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0496a30c-9124-4240-beec-f324fbf2741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0eb141-c8ab-4f5d-8221-9d88d9e3ec60",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5932f4-e622-40b8-b8a4-4750d2eeb0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fef52f6-4d62-4a19-ad0f-74a7603901f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c751a7a-e9b2-4970-9dc3-7150119fb45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb60fb13-0331-4dcb-b760-ebcdcde12ee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2275e9-a4ed-4c8d-b7ae-241b0fd5aa30",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1335ee-3f72-4fac-978e-21805c75db1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de84b9e-a44d-4754-b9cd-e47da4aba23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84dd9600-72cb-4a36-93a9-4d1d47f9af1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eba2732-342e-49a4-ab75-7cfdb1a9fcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba98a9e-14f0-4656-b9d4-6d6196129200",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a560acb9-8a4c-475c-8007-d844e35e157c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319eaa58-47fc-430c-81ae-4f91ba997c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63f3296-0582-4a6d-b5be-f3ae111ead4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857f648b-7711-43c2-a51d-411e823d9016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0540aa12-5b97-4503-a941-fb00c6b0865a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50735d46-4906-4e3a-8336-a2c10fc4c111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a07ab5a-3e69-40d4-8199-ef80f9b3bc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7318558d-822b-49f6-9d9a-2ece314718aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b762899-fcbd-42d0-9b43-cefb84489427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c4c23e-ab48-43f0-9309-f44f4a9b87c9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b382a2a-af8f-48b7-aa82-2e42b7f37513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aceaea9-487d-40da-9199-03b31b364e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dabf8a-f326-4c9e-9dc4-2f834c2a94cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f307a51-1bf9-482d-8db3-2621c8e3be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cc40af-aaaa-45fe-be73-ef69ed6a42a7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c975cc07-408a-40d2-ae21-55d26b89ec2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a35aa0-ed30-405c-9390-618c4ff8fbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63a3990-5d00-44c7-ae49-4c0137a2bfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5665eea5-fe64-46e8-84f7-097f5f81e7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410b2565-1947-4da2-ac78-d1136d817444",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2046746f-fc88-44b3-8570-891d6292f05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0764d648-d149-4f63-b1df-2989ff9e70f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae2c8e6-1727-4cce-b57a-840977d54e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10dbea95-f263-45dd-80cb-d2cde26bad80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156735a4-ef22-43f9-adba-1611ad1fe9f9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966f46cd-23e2-4c3a-82c9-1f548119b909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bb6559-ce12-45e0-aed0-e74dfae8e05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0cc644-4b0d-4314-95ba-b7c60a094663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d3d0cc-18f1-4d2c-93ca-29a1cc3e3771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1782216f-cc30-4584-a298-3c3c0aa85ef8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17dd6348-9f9d-4479-b34e-f55177f79664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c46bb85-5c44-408e-9e3f-4357f636af88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809677e8-45c9-43f5-b505-5bbf4d27d96a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064a3b1d-7a48-4ba2-92c0-bd7e82e47c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb44c22-d395-46f4-b0f6-096a235cedcf",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3480279d-ff02-446d-8922-e6007b9fcd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112e39b3-7031-4b0b-9c2a-91e11e7a2a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1d9e3c-d157-477c-89de-8102516ee26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661b9160-c604-42a4-b79f-7a631fd6b19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1a8d2c-8428-452a-8a1f-52bf72575be1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df88653-7903-4966-89a0-76ecf104b310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef329b7-08a1-40e6-8649-fe6de4bb19d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074b558e-04a1-4288-84b4-d40b061af208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caae143c-f7ed-4c2f-ac4f-89891c15cc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b268f6c-5b02-4789-a8f2-037cc3eac6b4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043191bd-2ad9-4f40-b363-6740a655cc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b803a28-b230-4a76-bcbb-1eba4d3a78ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980cfe35-d0fb-40b4-8d5c-862f2952120f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5579b336-05dd-4b51-bbfc-0994ecd84503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2b7ede-7bc9-4a8d-bf25-1e51db103723",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8349fbbc-c854-4625-afe5-7b5cf94ef73c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8e99c1e-b174-4909-9456-31cf4c2c123e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68a2889-0728-40e5-b7e3-536a4e878b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe779064-e629-475e-a0db-35fad78dab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f298fe9f-fabd-4f1a-b897-fbb5e2165058",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b23088a-8811-4db3-a4f3-ddced7c685a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51288b0a-a16b-4780-ac17-e3a3e2cbcf8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2baad624-c4f9-4a2a-bed6-5a04de4e61a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35681271-32b3-4ca6-8ca0-c7d298753b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e50f4e2-0871-4cf2-97c9-80d94438cfe9",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3669bc72-ea6a-4212-9da4-bec99d69d3e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c3368f5-88bf-4ce6-a6b2-d776f2e656c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "394a7d4a-df18-4307-a2e6-891a2c5affdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9b1e7b-0bf6-42e2-93c7-18d95694c02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16385294-749e-4c6f-b3c5-75e2c15af483",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb1ed3f-ef96-40a9-be7f-e5e6b731b3c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84422097-7d70-4b32-8a1f-6f6011a5c6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6450b5-0e69-4469-bf1f-1f6cd5ec1da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25b7ece-3fa9-47e1-a90c-16842942cce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56bc8d1-36b6-49d3-9858-1417680199ce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6264bc51-09db-4b16-ae9a-dc7f42feddd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a579fffe-2da3-433c-a2b8-77b0ada3d902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128fe917-78f7-406c-a7f0-8c46c6aca7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa427b3f-317f-4397-8d8b-b313a0bcbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae651da-a128-4ff3-b17c-e9ec8059a454",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b4ba163-0548-462d-881b-271cb958cb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4909b56b-ecb7-49c0-9e79-ce11bc52ace6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aaab2a-c24c-4739-981b-8a1e7bc43941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4775ae92-2920-45c4-9688-d3bfbf27d17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15f57c6-85b2-4ca2-b34d-a450ed60d6bd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f57ad-9406-41a1-8d0c-f87e8c0fa4f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa4ef64f-8f86-45b4-8124-5e26905bdaa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26265ff9-cd1a-44e7-8bd3-14d0f7b53267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc249b61-88eb-47fc-bd64-56ace89fded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db41b690-ae9c-4113-b382-db023a21bf9f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74161c9-cef6-4e71-b3de-146f7868ec96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbfa1f05-e190-4705-997e-49ece78691ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b72024-b781-4b73-8044-235334ff4859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54bbe7a-a616-4bc2-8555-343f64fc33ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e27954-d661-4631-9f9a-0b4ad2bfbbf1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f73dc8-a777-4852-bd67-5892ae0eed53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aab251c-65b1-4b1b-b478-51d9b2956dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8e1ce5-1bff-4199-bab9-8f19b3e9f767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4055dfd1-f361-4bdb-9fcc-43a1e5f72515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72e4062-512e-4d46-abda-c337cd5d464a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3f9d95-2cb3-460b-961c-f4c969255af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aaedabc-ada8-4dc3-97d8-91b830643364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aea7524-576f-48fd-9b1f-03451ed76fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ede3c6-b26e-4ea3-9a47-b80de9abf5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7299c7c-25c3-4ac1-8d86-51a1887adc62",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d57cac6-38bd-4d57-9083-e785b594a424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e01cd39d-957a-4876-a54b-fb08e9959e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47032c0a-b8b8-4840-b1f9-780135802e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c47362-6cd9-4946-8494-6b0607ecd377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e399d32e-8dc6-48b9-9d11-6744b86e3541",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e12bca0-f5fa-498b-a340-17185c5d56b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b0d7e4-cf0b-4951-a1aa-47e7b7365e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea465eb1-dc3f-4134-a20b-e9898793bb42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989debf8-c8f0-4517-b09f-9ea5dbba2c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e096093-2bca-4c9a-a053-266eda0b9657",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f3b7ef-98c7-45b2-a863-0a95cdf37db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34319f74-00a7-4822-814e-2f67b41723d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c37469-d38a-4073-bc2f-48695199aa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112a05b4-c211-4bb5-a788-050ffb21856f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed9b76c-586a-4f38-8c23-c64370ba5460",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ff4de3-5437-4981-9f88-f5016698cc6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82aa28ab-a491-4696-b4d7-42eb911ef3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49085c2-785d-4a12-ae34-d25973a82b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b9bec4-a3d2-4d0a-a783-7aec33f2ba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a345d31-b89b-435f-8b3a-d53d03643fda",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedfc035-dced-4e37-9aeb-8abfa62d595f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50f2587-1e51-460b-a363-0b5841e9ec1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade7c6aa-4a54-45f1-975f-2c63b3a78cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35a0ef4-3a40-48b8-afe2-d62a2b4c7494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06eb61d5-9926-40b6-9fc5-b9dfafddfaf2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fd4d00-b9ca-4a1f-87cc-de539e91eec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7755406b-fdb5-4459-bc86-34586abce56e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cf137f-cebc-4ee7-b26f-9a83143b0c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69168da7-cdf1-4301-950b-0a92891baf73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306b0761-0ed6-4f0b-8205-13634434d825",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec827273-25f0-4f1a-8239-3359ac1e9e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b532e791-ec1b-4dc8-b5eb-0f17aca9c5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9c9b9-32d5-4ec9-9005-c439dbf65737",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99857d38-2406-45f3-889d-8a96835ee5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24f6f36-ce10-43bd-bafd-e3d800cb2bbd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357de822-761a-4016-961e-7990b96b49fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbe7b2f-e056-4fb1-a743-614394c3a360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9e60e3-59bb-4d6d-b728-5ebaf950a234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fc9cee-7825-49c2-add9-d10250ceaa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a74e087-a74a-4b30-b8d8-189c48b63e9e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e58e4a-56d4-4444-af9e-6a1b93722a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d732c0-fcf0-41ce-87fd-5cab90509099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d4373e-e4bd-4349-a492-553ee473d144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18362c6-3350-4553-98ca-d4d7e8ef2ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03688c4-b397-4839-b03e-043246446fe4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6fac38-21d1-412b-bf11-a79a9a09baf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed195d08-1825-41e4-b557-4c77d7b025c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147b8ff-b213-43bc-a805-bd6065fadaf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7745bd09-0cc6-49ea-899b-dc5f5350a1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b9a9df-2420-43d7-9390-99912a657292",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f239cf8-e6be-4f51-b169-4be2bfd39807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8078864-65be-4fbb-8038-b50bb3a3746d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce621ecb-be4e-476c-92af-3a161aed0a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d4de40-af27-4cbc-b472-3122bcf1343b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fdc4dd-a18b-45ec-97cb-23916147be10",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93d66d3-32b7-4221-a3e0-e4229d166113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbbf63c-d960-48b8-9e19-8b6ecc4908dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8672f0-1775-4639-83dd-5adb40c30fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf733f7-8a2c-4264-bc04-b10bf4994a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc71e6f-99bf-4eee-8dd0-c68f019f416b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0becf179-57bc-43ce-846c-e24d84c7b679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d95d28d-a910-4c4f-b77b-b6ad3f8e58a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c169566-2d25-439c-9c9d-be1793bc47bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747cbfe1-8a7a-4935-b901-03151a5f9e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f167877d-5eb0-43bd-9acd-727764cc1f59",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0bf41b-6fae-421d-bb81-22899d5606d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78cc67f9-8f68-4de7-ab7f-335104771c01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdb8bf2-54e0-47f7-a8fa-691043ff495a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c6aa03-58f0-412a-b64c-f351eabf5b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1408b5-15c4-427e-b85a-323a18c1fe9c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba3ae63-ef54-44a8-8b81-1191de44d3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04b64c8-d195-4785-a3f4-7e51d75c825c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbd48c1-4def-4e7e-961d-eace69cdb803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01fe578a-e40a-4dad-9b02-684258e47d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6c23c6-e6ac-41b4-a3d1-3c350a023927",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1543e4cb-c084-4ea4-8ba7-4959be50f929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea51bb10-24e2-46fd-8469-03ca16317ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07d01a3-6999-48b6-ae49-d4a990f4915d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5b1647-04d8-4399-8527-3da29f4aac23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85743ac6-8c2c-441d-8817-850c9445cf61",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105bf1c9-b8cb-4707-9ce0-3bfd95769734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5f5368-4361-4f02-8dd1-61bb7976a494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b566a0-9c7a-458f-8770-8f2b55367c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac80d834-c83f-45f4-9a0b-99caf617b398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129943a2-c1b8-4ff9-a07d-bad828d7866a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ded7129-d24f-4902-9335-dfdd3d593e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ba055f-53c2-4fff-bc22-5a4cbadbb90e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1372a917-9a65-4305-b43c-7403d7353aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efff0b1a-ba33-4700-98f3-41120a8150a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb1e169-c153-4a57-a394-c30fdcd671a4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d6ebdb-30fd-457b-96d4-c0a5f897bf40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa4365a-0297-41b6-b2f1-9781f3d93d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffac5f7-e767-4b81-8d5a-d60004eb03c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1f10cd-97eb-44e2-88f3-ab142482f21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cffb88-4e19-4da1-9e86-f5199803c756",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b3c231-e829-4dcd-8716-7ca2657d2032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c13046-66ef-4fc2-aa5d-4cbfe97aae80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf47a38f-6749-419f-824f-a2d26b1dc419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b18f08a-03bf-4735-86ab-e9d17abd5aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9169359d-ce83-4899-b8f5-bcc2dfd52776",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7dcc1d-7b05-4fc4-8146-f5f48a8bd42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18416a4e-be73-42be-b061-f6613c5f9ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb57e19-9b4d-4ac2-8602-6539a7e10ab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f467662f-ec26-446b-bbfc-d5731e8a7624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182004fc-d557-40e8-b3ce-26338afb5449",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b045eda-e997-4757-85b5-7484478b3031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937652fc-0bd9-465d-b6e1-55a6b068cf1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925c25a6-ab23-485b-b556-e96ddfcc2d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b18c583b-1f99-4f26-a643-4168dab10747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "728d518b-1273-480d-9267-af642aef35ad",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2d3f9e-836b-4eda-bafb-34cb0021cfc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8af9dc74-9908-47bc-ac33-462d48cfc1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8bfb31-66f4-435a-9668-29808e6cac38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02c0df6-07f0-4480-82b3-36efe0bdab1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2840ee5-d34f-428d-b01b-88e97688471b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2136504d-13f4-4879-a6f7-d29b94e4e7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4444cd24-9e59-4e3e-ba83-c8bb66c64572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75552303-776d-478d-b1fd-51cae5d9ff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7a03af-93ea-4727-815e-b110d76cdc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ab0f55-d511-4026-8eb3-2b25c87208bb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "156c9c48-a687-4b17-8d1a-8b2e565688b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a632c5-214d-43c1-ae7d-53f005fbe954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9502090e-2783-4e48-9f1f-5eefce67c1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a31e1e-7f09-4a05-8f0d-a76fbe1441fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bd4eed-48bf-4506-b827-f0c18013eed5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e58bfeb-b7c4-4fc2-81e7-9153c337b579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22299414-8447-43a1-b571-cecc0dc0a39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab861a15-0937-44d0-9f4f-2c672a908a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740b896c-4385-4195-b61d-a88b419304a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2862ffb-49af-4156-9908-e22b390a162b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218583c4-f7c3-40b8-b380-f91a81e5f13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e0d577-2ea8-40ab-9b14-1f0e280d7c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99076c8-782f-4ad3-b4e6-efd9085b92c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59728d09-a2d1-45c2-9083-12b9744aac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a08cfe-7b27-4039-85a2-d233a10f4937",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a5923e-00c0-4a21-8db8-c40a4d26dba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e947a54f-ebe0-4909-bf51-32f7bbb5e02a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6583aaf-d14b-4318-90bb-e50579af78da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984fa46d-a88a-46eb-8590-e46683817263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e973be-d804-42fd-bba6-78da9482733c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cac5294-548a-4c2f-ab56-cd5d8157c2b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b341321c-cd24-49d6-a332-9530cf2e3e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e82eed-ae2f-42ff-b759-95412ca8473a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc0e99a-be34-45c1-86b7-cc478eb5fcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a0ed18-ae7a-40dd-bba7-9fe29c6c8f9b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd2d1b13-19ba-460a-aed2-609b046cfc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cf52c3-7631-479a-9205-eea8322e1bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c4d9d2-3f08-4a77-9205-9e8df138b55a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3461e86a-2ab6-47e3-aaaa-84beddf855d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee04a0f4-1d09-4cf0-a0c7-372566f79da5",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55085c49-f0b2-448d-b750-9826d09b102d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6aaac50-283a-49a4-a112-221f3e826cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aae7ce8-8197-4bae-81f9-512b7496c8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51033941-e764-4596-b58d-8f800adbd190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c90d6f-f85f-4246-b6c9-17f8be068c58",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f476a063-3b06-4d28-a6f4-c155df6c6081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b2f4b2-e19f-4a45-8eac-e78d959c0d68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657c6425-b9ef-4b70-8342-67cbcd707226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b354d5-4207-4845-9031-49e6290ca072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8300220-ddeb-4f6e-8e7c-427d619725a4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f1eb91-010f-4e9e-9ea2-f7088765e00c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff47e156-33c2-4ecf-999b-9e0bd63f2bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c307ce-1975-471e-a163-f62283e754ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e433edf2-9934-4595-84d4-68c51f225232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1853f39d-08f7-4a98-b1dc-b8a2f0d6fa96",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8221e6-697e-40ec-8fab-5c077046226f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e76fea3-e0a3-41c4-9e83-235923de195a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b0f2f3-d92d-4b4e-82f8-0b7ab12ffbb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6020d8f-7e11-417f-beac-d5bc683341f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dba8f2-3985-45dc-9f05-93d70f4d3a52",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b90aaa2-4c8f-4c1b-ab04-c5ff4a795ea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fa897f9-75b8-4681-b0d9-fd70d4951f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c74a0e3-3cc6-429a-b681-c93fd5d8f0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f381e2d-5650-47b5-9875-a00b703ed0a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc88441-7c1e-468c-95a0-28b989839e21",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29321cf-95c9-4f15-a7aa-034b5fca6a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "306155c4-1420-41d3-96ed-0ca674dc53fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e538ac-e60e-4b28-94df-d2e4303bbdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0272f19d-6b33-4111-a096-ff7653b5e20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b2783d-29fb-4755-9295-654bbfe1ccc7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1e65da-283a-4cb5-add9-e04ce358b5a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc66eb3a-e053-462f-afa9-20091c1c49df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e55aa3-cec6-4b04-8ca6-ba201e3faf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05a1084-8f2b-46f9-b8d0-88e3cba3377c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72e5eb0-e24a-4e2b-a47f-7b104408b96f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fd693b-5c2a-45a7-9e1f-0abdfe80f55d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d8521a-2a83-41a2-95a5-43390bfd74b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1dd4b7c-563b-434b-9b43-4cff26626c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e0075b9-4dce-4891-8152-a0c6406747b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665ede14-2b4e-4f3f-b418-677c345da429",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f7a6a9-98a8-486c-bb18-34a469cdd7fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "221b0065-f44f-4478-8917-39feccbca20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e11106-bc4c-4676-bb6a-69bf4909d31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6076fdf-4803-4b6f-aa29-9970fa331fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995cac22-eb64-48ca-ad79-bac6d2eb31f1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cc6ae7-41fb-461a-a9c8-46a89b5ec9af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e444a8a6-af20-40ce-afce-8ec1900e640f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd540422-7807-415f-82df-0c5658841436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05144eeb-bbd7-475a-92c8-d5aa114bfe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09eeed4d-306d-4a34-8398-9ca9d3c7da5a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a1352a-0fc8-479b-a41f-42a3e08b65fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49c0b084-9bb1-420b-a747-f73a43ae67cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8cfea85-6a73-4839-a254-7ca42cc415ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46da1778-b111-4c42-af1d-b0341025f171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72532a79-e8df-485c-a746-1679b97f7a25",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e103410-47dc-49ec-939d-e244b9255193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "218938e6-c34d-4ca6-9219-b4a11884c29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76b3491-e5a3-468e-b1fd-3d6e3f9fa41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286fda05-e38f-46a7-a38d-40f973f1737d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7666b1d4-bb89-4d78-bb6c-c3f4f4082a16",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44d47b3-7eba-4e29-b993-2483b35fe069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d02676-de1e-438e-93f6-b947c1db16cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df2b5d7-b84c-490c-8957-233487229d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162c96f1-9218-4862-867d-657f5e206c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23189e7-9a3c-4394-8805-ce833e46906a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4304ee-2fb3-4ee4-a42d-7e233ee92148",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22f2dc9e-bdc2-449d-b86f-4063deeed765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ba1e3f-a7f8-429b-ba2d-d9f4ed44a76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7363aff9-8b75-4516-8f23-056e77a8c244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd13162-5ff7-4110-96a3-dcfbd17d3185",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc66f2f-7c01-48d0-81df-9256bb2bb8cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1319c74e-6a10-44f6-a198-927739ca91ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf852a36-0169-4dcc-aa10-9c21315afdb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a918d308-4f2f-4123-978c-cc4291628246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43745ea0-a352-45fa-a688-6796f76b2240",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a624ec38-ba34-4e4b-8bbe-8abb4257fe88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8ca97e-2e52-45ef-9b78-7a6f17c3b26d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176199f8-56fe-427e-b564-44e9a0da9f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990504c4-e2fb-44d9-830d-02e292541034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce44c64d-9437-4f21-9e1d-b817f75fa7b6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec71da69-2597-4128-be12-2c9e7140fb1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c9f02d-77a1-4244-84db-76d0be92b86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8ae475-9cad-4183-8e5d-172a1904e748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac9ccb5-3ce7-45fa-bc25-d1b62c67a426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834cbc35-fc1c-40f2-9c0f-10aa1ca98047",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f6148b-96aa-43e2-b449-3b2af55c88d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59ad772d-66f1-4dc2-b8b4-9970f30b92c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e57239f-2442-43fd-9fc8-c54c89de9e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e54d308-4f44-41ff-85b5-0070022c9e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc21a25-df74-47c7-949c-05161b0195be",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec35c11-5cd3-457d-8cf7-32657c64a49f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270354ef-7cb1-4f5f-8410-2984b06d1404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c906b31a-d963-48e5-aeef-3a75a4f71092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310c2c66-6be2-4487-8e17-f1c2aa19c5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818f27d6-6929-48d2-916d-7e7e92e6f563",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65af334-0e97-416b-993f-375c48b74cd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff7d5f25-37b6-43e7-82be-7ab1f054b3e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645c866b-d9bf-4c25-b612-7466589564b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd3bb08-9cc7-4f47-a5ce-67143edad002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f14d22a-d0b3-4bd1-9301-674705becacc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87e9b36-84a9-4d36-9e0e-82f075fa0f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce23bc0-0ff1-4850-823c-c5dca75ede44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f4456a-7636-4c92-ae13-7649b84d0813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc608a3a-4400-4db1-b70e-a63f868ef9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafd603d-fbd5-43c8-a66c-2f92e3b7ab97",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cde6a46-7dae-4987-a5a0-01949a7ce354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd6c1ca3-586b-4eea-aeda-8c8c2ed59eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89d9434-bbb6-4513-9f68-fde2151d2935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df5e8a0-e549-411c-8e22-000e55522601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4c35a3-c0b1-4d19-9c57-23480906a5bd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8876bd-9491-4909-b05e-df6cbb65eb1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "665e129f-06d9-4c99-82a4-69bbd8dad703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fa5f4b-8a15-48b1-a579-8b270c10ad69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb4aeae-b9c5-40fe-9d31-691e47bbb7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ce3586-ed20-4137-b9aa-9d87a6789d2d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc523ac2-3df5-470c-a3f1-e299746a2ec6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4457ff2e-2220-44d9-8928-39aec48bbb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f42604-4feb-4b6f-8563-9e1d054b404b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0455de87-1154-477f-b9b1-cd7546950b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdec1332-7c49-406e-b709-6514a170f642",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfae6a25-12fb-4cd3-ae6b-b139f3ff0c26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ab811e-5594-402d-afb7-378f8be8608b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e420e7-2eae-439d-aeb9-85891c9f5b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3ad1b0-c2ff-43f3-82a3-35c6084d5fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58aa895f-71e3-42a4-9d44-4a82b49ec49f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ff81b5-317c-4c4e-a918-01c122c497c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "725b106f-70a0-4637-9655-746776867b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774b0ad8-89b4-4b7c-8ec3-4031d925365a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d09599a-b528-4a44-a7d5-3417d9dffc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7a4aa7-bcd5-4b0a-8fed-c06228244dc1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2de058-16f5-4d22-8406-c47084f1c623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97125f4-2d27-4b02-9f73-e727b0e8d3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6f1245-fe02-45c2-b629-36d4e9d19264",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "209523f6-baed-4bc4-9864-f1f8eae56fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222133ad-7d2a-4dd6-9717-77f8c9e41dc1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8595ec33-e22a-447f-93c7-741f341a4cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ffea620-3aeb-4518-9cc1-db76a11e0a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b4596e-69c6-459f-81fa-cc3759f7e827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64794dc-9172-468b-a0a3-54f73a5949e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991ba318-54fc-44d1-809e-af46ead56de1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947d5cfa-8042-4abc-b023-05a8be8a83d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25600a20-dc74-41b8-a448-8832ddcc5677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc040746-4bd1-4b9c-9022-61d96071ab4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de0b931c-54ca-4ae0-a374-d032bc591dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cafcbc1-68e4-45d5-b65a-4762c3e20a9b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b03b42-cfb8-4b75-8847-ede6cc4fd291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58999f82-49f6-4a37-a094-b7ceed164b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70608d8-faa2-439e-8f5c-0711d83ba0ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96af5336-23c7-47f8-8b95-d18dfc2166a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6357f11-06ae-45ba-b5cf-78e815aa63af",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3f64c2-ef66-4f9a-af26-2932758a88ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2ecc7a-dfa0-4d56-932b-bc2a267964ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263de73a-ec16-483e-b6a0-77dded2aee14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e6e0b1a-5b16-4c03-ae97-1914541da9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768ac30a-6429-4ba1-ac4c-3762790405bc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30392f39-ef15-45cd-8e8d-1d2364a9a28f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe8344d-7c7b-4e71-a9b3-8c0e4e631858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c4ec07-d50c-4e15-be81-e58a10d09520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7525f4e5-6fd9-4e12-8af5-5fda70f857b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a90cdc4-a303-4a1d-80f1-dbc3e8717e26",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99294b34-281c-465c-bb29-3c400c14b965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff68e021-1569-44df-8094-f2fe8a1381e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c504e7-f4ec-40d8-9c75-9bd3dbd38a95",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e7f170-804b-449b-b186-efadf492f571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073d404f-096f-4a45-bb49-e8268ce565e7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dcbc8c-12fb-433a-ac47-41fbe9eaf63d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7155955-f679-4b2e-b443-ff679dd5f81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae567f0-668d-4f2b-871b-049bc1e19d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9373fa2-8974-4f9c-bfd6-38ab702b74ad"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c6a694-860c-459d-b7f2-b1093fefcb68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "622fd136-a618-476b-ba97-35a64d34e398"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a70d9874-83da-4ccf-975b-9065cbc17dd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c70e6f5-eeaf-4f93-b760-7c561b61e6e0"
                    }
                  }
                ]
              },
              {
                "id": "63bd8ee4-85ca-45e2-a20f-2f7af98364bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "49cc8dcd-4b1c-4ea1-91c8-cbc12c738816",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73080794-890b-43b5-a1bd-4ed9ddba4662",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bf000df6-6cbd-4332-9855-ba7447287ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1147ce8-c6af-4db0-8f2f-400c1718bab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46728120-6107-4714-840f-4b547e0190c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9271a5-a0f6-4fa6-b144-ed16344a1803",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2600a5-82c2-4b16-88bf-d1779bfdf76b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8d759337-6207-4b28-a50b-93ae95e9d316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95bbd13-2755-4896-b453-b5455b8f7f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43337947-6cf5-461c-b4d6-894a1559e078"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7852f64c-41ba-4341-aa7e-0148a71f18ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09f4a0cc-84d2-4fda-ae1e-d7e8f4416fde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae41b353-0ca0-4fc8-a3eb-6c00f121c028",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94b262d6-1890-4f4d-b657-a7b8b809cbd1"
                    }
                  }
                ]
              },
              {
                "id": "86938040-b990-4731-a662-a8d5cd38ef21",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d2ab0510-21a7-4485-9fe1-49bb996ad218",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df02111c-9b27-4c51-8ab2-b366cb7f0396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "00849869-2fd5-4516-8dfb-b82e1ba9ed0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058e4348-bba6-4be9-8892-67a91cc7b805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4859f5-cf3f-4b3b-9ec1-56f573af8d26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e5563552-da83-49c2-ba47-484d5fce07d6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33b937a7-3df1-473e-94d7-bf8389719c3e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26447584-9f57-4927-891d-e06c8f8f03ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a7d590c0-dc2f-45bf-b1ec-f78692f665e7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b8513d6-56fa-488a-b7d3-d117282002c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55b6ff13-eebd-48fa-a6de-7709c9103cf6"
                    }
                  }
                ]
              },
              {
                "id": "05a82787-7dc8-4129-b2aa-967eba30d5ad",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77bbe1eb-a8d0-40da-853f-cb2d0ec786ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba7c228d-a80f-4ef4-a8ae-d178c439d3ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0f23178-d3aa-41ab-8420-73b92550d9bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc83a59b-e53e-4199-9d65-5607561cb807"
                    }
                  }
                ]
              },
              {
                "id": "6371877f-8409-4e27-87fc-aa92cc57ffc8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b1964ee-82da-4f69-98f0-fc49deae05be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "134830ba-8cdd-4db8-9a48-23d2125796a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7529e74e-daa4-4535-8f9e-1a5a27215527",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2adc6367-af7e-4e42-9206-65db91b22dfd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a91c008f-0b87-4b15-a301-5c3464df8379",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6b778b36-85a1-4f64-abd2-12a17949cc28"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "072ad112-a3ce-47d9-bf17-979122cdaffa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43567e5c-f0c4-43cd-80d3-9b08fa2fe9b0"
            }
          }
        ]
      },
      {
        "id": "3036bf97-6486-42e7-8250-7514b3057839",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "6f653574-f82f-4437-9abc-9ca1d0649490",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37230401-7bfc-4be5-b69e-5627d941f4d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c10cfe4-ea5b-4e60-89f1-c843efcb49ce",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c37892-5d30-4e71-b678-90d4b4d8c83f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "eab8fee3-15b1-46cb-a20f-8946cc6fd81e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344e4ba2-cc6e-4cee-baac-e6b4debdba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32e10457-6268-41ab-9f73-c12566e6beb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa2a349-e1a5-4c99-bf01-8ee28f291d5a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbec6f3-c972-4f69-abd3-5631fd271779",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74f4943c-39d7-41f8-9b65-f5090b722f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c21bdf-1d7a-4b4f-8e75-94416b0962a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8e665a7-1280-4815-a9c0-882880a54223"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61ffc158-9db1-42cc-974b-b7a5dda88715",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1dd42047-8bd7-4023-96c6-4a7172d92d41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d01dfc16-a912-47d2-8a63-7817759a6982",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ff90ecc-cc8a-49fb-b046-88ef2c30f24e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df1f9943-cae9-46d0-b093-28b3b558100a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a79c7536-833f-4bd6-b9a5-7dd996189d0f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2eae8aa8-4a7b-452f-966a-b39cde5e5ba9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "019d80ed-cfbb-4b3f-868e-f730db88fcc4"
            }
          }
        ]
      },
      {
        "id": "8fe3e5b9-3b4d-42f0-8445-535e570fb910",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "96dc5197-1100-4e66-a0de-5b5de2a25b17",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eaa9fc48-b6b9-4786-af0e-e2e43579cffb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebe6ca24-6544-44b5-9aa4-983aa32c80f6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c629d8c0-27dc-4d35-80f1-bdd2cf987fe9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "04f041f7-7502-4969-9440-cebf8a1e4418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ee48c8-bb4c-47c9-b4e4-3b3c28076e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b630d74d-e450-4d82-b5ad-98177d707784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f8b481-494f-4072-a2c5-a9640a047d61",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e487a5-b803-4674-a1b5-8d4ae12e3291",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "852b82ad-dcbe-4d2d-a8be-08904e008920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafc3fcb-3150-4669-a61b-3ca23291d33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f0ad1f6-e056-4753-9926-4051ca12c289"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7f45990-f3b6-44d1-85e0-5e253909cba4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a9d985e-3776-48f4-9c2e-8d0605256b7b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b814b3a1-509c-4075-b512-15681b187fa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1798dd47-d381-47e6-b451-86a795ccea53"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64cf646e-d97b-4a14-a77f-4aaa1fd55c29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4e5e3f9e-44c7-410b-8046-72043fe378c3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a4e2d7c-c2e0-47b7-8ac9-4d7fb26804cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b670ac4d-80ff-4bcd-a014-063f76d56d6f"
            }
          }
        ]
      },
      {
        "id": "9af00443-9f13-4f69-8c59-c9911dc3fe59",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dfa8eda3-b6b9-49e5-ad24-34aacf71cfe1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4a92f5f-b210-4359-b010-4bd3222bf18b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8d7fb57-d3b4-4bb4-8140-62f9c6ab3ec4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48ca435-7ee7-43ee-826a-c9c9360a9870",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "195d8e48-3d24-4a09-94e7-8475a03f8cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffdac50-cfb3-467b-b362-30b818e37d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8ceb3a1-798c-46f2-96e6-4f5c60f1113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddddb6e-a796-45ad-90dd-cd1ba55009bd",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f8c1c9-712e-40f4-a9bf-31c296a8c343",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "01fe4161-480d-489a-9e93-54e49ff60a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa6fd85-6c4b-47cf-b422-00a82d10d241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "865b06bb-6ab0-4c9d-ab57-b120d27bf452"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "794c1947-ba6e-48e0-ab2b-1a6f4d8c5fd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd2f67a9-1bea-4a45-bc6a-ff855ca63333"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "30f0393d-f04a-4c66-9b25-edaa31f5cd8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3de7e7fd-0c21-4a1e-ae58-6863e6264ac9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ed01642-ea12-4bad-88cb-085f5578f3bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "daf2b117-6a04-44b1-914a-e647707398a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7bd5998-5930-4ea6-bcd6-dde0720a9bfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14483477-159f-41b1-b0aa-de4d239305bc"
            }
          }
        ]
      },
      {
        "id": "5e26be3a-02f1-4453-ad0e-0540a031403c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5eb33ce2-6279-493b-88af-95969ea72818",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cbd5414-a8a5-4843-87e0-b409ce6ba5d6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7ba9c4e7-0665-42b1-b1e3-f95216accd35",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c3fa6c5-e07a-4ffd-86df-a700d5643562",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1cd8118-acf4-425d-829b-5a3481bde71b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 511.90421455938696,
      "responseMin": 16,
      "responseMax": 4803,
      "responseSd": 456.1671091148247,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1668905258495,
      "completed": 1668905404564
    },
    "executions": [
      {
        "id": "807e663b-a3e3-4333-a773-f661b13c044d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b9dc59fd-ed5c-4473-b0d0-1aad90660eb5",
          "httpRequestId": "f41c3fd6-b121-4c28-a16c-1ca13f30cd6e"
        },
        "item": {
          "id": "807e663b-a3e3-4333-a773-f661b13c044d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e274cb99-f716-47c0-abee-3aac2626f78f",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 0
        }
      },
      {
        "id": "c9221555-b0cf-4088-9b5a-97228a5829da",
        "cursor": {
          "ref": "41ff6b4e-7a50-4a28-b20f-9d884706fe24",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a043b9be-92d4-4331-b453-9952375d38a6"
        },
        "item": {
          "id": "c9221555-b0cf-4088-9b5a-97228a5829da",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6c6521a2-eaa9-4a52-94c3-e9ff16183103",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "5f7a8ff9-03ad-41a2-9e2c-ac2c2ca7f760",
        "cursor": {
          "ref": "78a12734-eabe-4808-9778-915f6d60e55f",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "30df0332-0870-46df-b3e6-c7034cfd87f4"
        },
        "item": {
          "id": "5f7a8ff9-03ad-41a2-9e2c-ac2c2ca7f760",
          "name": "did_json"
        },
        "response": {
          "id": "13cd1e62-7fbb-436c-8712-b3210e5ca4e6",
          "status": "OK",
          "code": 200,
          "responseTime": 1094,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0154809-f19d-4d32-b2e5-642d219e1dfb",
        "cursor": {
          "ref": "d5a8b98d-70ea-47ed-accc-6fe7ba8f897b",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cacb8cb-64aa-456f-84c0-a42c948c0948"
        },
        "item": {
          "id": "e0154809-f19d-4d32-b2e5-642d219e1dfb",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3adeef5-440d-48f5-b296-ce3316209662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0154809-f19d-4d32-b2e5-642d219e1dfb",
        "cursor": {
          "ref": "d5a8b98d-70ea-47ed-accc-6fe7ba8f897b",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8cacb8cb-64aa-456f-84c0-a42c948c0948"
        },
        "item": {
          "id": "e0154809-f19d-4d32-b2e5-642d219e1dfb",
          "name": "did:invalid"
        },
        "response": {
          "id": "c3adeef5-440d-48f5-b296-ce3316209662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564ceebd-45d3-468b-bf48-ce88574baa53",
        "cursor": {
          "ref": "4c46efba-c0a7-48ce-876d-17a7b926021d",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d2919bed-889b-4ee5-829f-6019b928cac8"
        },
        "item": {
          "id": "564ceebd-45d3-468b-bf48-ce88574baa53",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c6c47218-e391-4301-b198-5ca690935ce9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 563,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7c2cf68-f4b5-4511-bfef-52038136aca1",
        "cursor": {
          "ref": "9b9e31df-bd3f-4efe-9e03-3d244c5e4271",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7a3605b5-65b1-49c1-84e5-07bf510b2887"
        },
        "item": {
          "id": "a7c2cf68-f4b5-4511-bfef-52038136aca1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b528a9c2-5afb-4338-b71b-b98a0edd1eb3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 462,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011cb793-88c8-4fcf-9cf3-a82e73afd376",
        "cursor": {
          "ref": "7ebb3b9c-e25b-4988-81fa-14c4ad75bf83",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dec184e3-cd90-49ad-894d-2326f967df45"
        },
        "item": {
          "id": "011cb793-88c8-4fcf-9cf3-a82e73afd376",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2dabe043-97cd-4fc0-9015-998668d76680",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e87758-d7f7-4670-ae2b-aae630801bd6",
        "cursor": {
          "ref": "d999eecc-242e-4ea4-a1d2-65a8eae8ed2f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fd9dec8e-e909-4446-8df2-53ec25108cbf"
        },
        "item": {
          "id": "78e87758-d7f7-4670-ae2b-aae630801bd6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5b064199-f4fb-4dde-a680-b70ec666969b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 465,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e87758-d7f7-4670-ae2b-aae630801bd6",
        "cursor": {
          "ref": "d999eecc-242e-4ea4-a1d2-65a8eae8ed2f",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "fd9dec8e-e909-4446-8df2-53ec25108cbf"
        },
        "item": {
          "id": "78e87758-d7f7-4670-ae2b-aae630801bd6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5b064199-f4fb-4dde-a680-b70ec666969b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 465,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bc4be0-3077-40db-a881-7cbca94357dc",
        "cursor": {
          "ref": "1f9a7a76-76b2-4843-a09a-9994ece210c6",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f95ff069-5fb1-4e4d-8525-d7d9c1b934e3"
        },
        "item": {
          "id": "50bc4be0-3077-40db-a881-7cbca94357dc",
          "name": "identifiers"
        },
        "response": {
          "id": "b56c34fc-74c0-4647-b6fd-3d49168e9778",
          "status": "OK",
          "code": 200,
          "responseTime": 1613,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84e6f6e-2340-47f4-9251-86abaaab3e0d",
        "cursor": {
          "ref": "7db1556e-7ab4-4928-aeb3-224c3c032359",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b5466068-00db-4294-9921-256c34cd8626"
        },
        "item": {
          "id": "f84e6f6e-2340-47f4-9251-86abaaab3e0d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5a278368-a781-4807-955b-e6ebc58953c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1258,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84e6f6e-2340-47f4-9251-86abaaab3e0d",
        "cursor": {
          "ref": "7db1556e-7ab4-4928-aeb3-224c3c032359",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b5466068-00db-4294-9921-256c34cd8626"
        },
        "item": {
          "id": "f84e6f6e-2340-47f4-9251-86abaaab3e0d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5a278368-a781-4807-955b-e6ebc58953c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1258,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed344a44-af46-4e47-a53c-c254815699be",
        "cursor": {
          "ref": "8037438e-e523-46e2-91a2-f9c9a916db8d",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9d8575ab-5457-48b9-a34d-f4873d4aa3e0"
        },
        "item": {
          "id": "ed344a44-af46-4e47-a53c-c254815699be",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "02d60011-c1c7-4d8f-a1b2-423c1142c990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164f7e67-c56a-42ca-a722-496d224a5263",
        "cursor": {
          "ref": "5856d5ea-2513-49de-bb21-4b89d01b6a5e",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "477e6c0b-a487-4390-8395-8ec15f7a3746"
        },
        "item": {
          "id": "164f7e67-c56a-42ca-a722-496d224a5263",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "05ac748a-762c-48b0-a317-a2443c53bf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 696,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3c61cd-7b88-47e0-8263-e05554f17d6f",
        "cursor": {
          "ref": "03f5d923-d3b4-40ec-a119-fc4f17bca230",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b33863bc-e88e-4dc6-92b4-d280744c40f3"
        },
        "item": {
          "id": "ca3c61cd-7b88-47e0-8263-e05554f17d6f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8aa1d597-5b5f-4c3a-85db-072280b46c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 679,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7324c86c-8b11-4519-9a88-103db2aeea16",
        "cursor": {
          "ref": "f9c8e39f-aef6-418d-8ffb-3281aba06599",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ba99738a-760c-45d0-9b12-d37ff52d96c7"
        },
        "item": {
          "id": "7324c86c-8b11-4519-9a88-103db2aeea16",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3983ace2-4803-4fab-832c-24b7b017fbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac91d667-2b24-4d4e-a40f-e98f3cc3ec18",
        "cursor": {
          "ref": "843f99fc-4f1f-445e-9af1-455f6501d5ac",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7b2fab11-4606-4eed-8bac-747502a04f13"
        },
        "item": {
          "id": "ac91d667-2b24-4d4e-a40f-e98f3cc3ec18",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1fe26a86-bec9-459c-bfb9-b9175f5766b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac492ce-b418-4895-a733-6fed395e7c88",
        "cursor": {
          "ref": "1cff5915-4c56-4d64-92b3-07f08a48302b",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6b4d7874-71e5-48c7-a885-ff2fbce88a4b"
        },
        "item": {
          "id": "aac492ce-b418-4895-a733-6fed395e7c88",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6b26bfa8-311a-4235-93a9-53f0296bac61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6137a8-29cc-45b2-84e6-fdc8e873e460",
        "cursor": {
          "ref": "ead825af-7319-4d5a-a906-cfbdd349a23b",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a5e37fb1-90b4-431b-ac38-95c95d9322a6"
        },
        "item": {
          "id": "ba6137a8-29cc-45b2-84e6-fdc8e873e460",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "752624e7-9064-417f-a29a-fe45d8ef42b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0eb41f-0674-413f-b98c-d44dc64b9ed4",
        "cursor": {
          "ref": "a3e87e38-c0da-47be-bb87-e980849bcca2",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0ca13f89-3b11-4489-8af0-87864d00456e"
        },
        "item": {
          "id": "1a0eb41f-0674-413f-b98c-d44dc64b9ed4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "246d0aae-1df3-49c3-a9a0-2789725a3ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5977910-d7c5-48f1-b1c4-e65ad7e8edd0",
        "cursor": {
          "ref": "2e7d3269-c5af-4ce8-a610-9c89ddfd981f",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5da5aaf7-ebbb-44e5-a9b8-07200e1fddb2"
        },
        "item": {
          "id": "f5977910-d7c5-48f1-b1c4-e65ad7e8edd0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1d7d5924-ac2d-443b-a3b8-a48c9b9709df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc82971-e76c-406a-916f-86341b378f2c",
        "cursor": {
          "ref": "92a90cab-95bb-4c08-bf47-b724bfccf649",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "69a41ca3-0c1b-4782-9421-378bc2504412"
        },
        "item": {
          "id": "ecc82971-e76c-406a-916f-86341b378f2c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8692415b-94af-4fb4-90ff-4e902239c293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "467bfbb8-5408-4fb4-8982-ca8441283681",
        "cursor": {
          "ref": "dfb866c2-6161-4fe5-bfa4-2b0abe93d3f9",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6d077ffd-3a6e-4a08-a944-b3e4a0d792cb"
        },
        "item": {
          "id": "467bfbb8-5408-4fb4-8982-ca8441283681",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a7737bb-2b7c-4458-a570-fd41bc7fb2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f3c676-ad74-4d14-8f62-1f5efabfe633",
        "cursor": {
          "ref": "057c8fdd-85df-4ee6-93fa-85e20e734609",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dc71ad01-7e26-487b-bb02-fab70e463784"
        },
        "item": {
          "id": "f9f3c676-ad74-4d14-8f62-1f5efabfe633",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "67ef32bb-304e-4525-847a-e16d4c1e84d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61df869-a29a-429a-9de2-7c9b4da84e36",
        "cursor": {
          "ref": "77d3a70d-42c7-4893-b69e-fb8c6d5c520c",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dfaf7f87-f368-4b0f-8bf3-1d95cd61ec10"
        },
        "item": {
          "id": "f61df869-a29a-429a-9de2-7c9b4da84e36",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0ed51c4e-3051-4ff9-ae6f-4737dce2d372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8554f49f-9a67-4219-9421-a40623c9cc98",
        "cursor": {
          "ref": "1b47a9e3-5598-4fb3-8b26-ea657d84ee7e",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "11d8a7a0-5997-4362-b935-d93a0bf7c9e8"
        },
        "item": {
          "id": "8554f49f-9a67-4219-9421-a40623c9cc98",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "266082e0-ffc1-4325-bbcf-bf9a723ea246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617ddcb3-4372-4a40-b74b-12f0f5aaae7b",
        "cursor": {
          "ref": "3f2e0539-cd19-444e-acb1-aa1427e13ac5",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f8468f84-afe0-4ae7-a006-bbc06ab982e7"
        },
        "item": {
          "id": "617ddcb3-4372-4a40-b74b-12f0f5aaae7b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "98fa20ec-ca67-4872-8a14-f15aa3093106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f328c57-1a07-46d8-9b17-10dadfa7b276",
        "cursor": {
          "ref": "6c23074a-b883-4556-9eb7-1d45f2458ffe",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1303486f-ddc1-4121-9f04-ea581d718aa1"
        },
        "item": {
          "id": "3f328c57-1a07-46d8-9b17-10dadfa7b276",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2abad692-a2b6-45b3-8ef6-12421f7d1167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bb12d9-a140-4cac-b883-255712c91608",
        "cursor": {
          "ref": "4703af33-e218-408a-a76a-afb13266f12d",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e9bbe353-3876-4004-a087-98975b17be6a"
        },
        "item": {
          "id": "08bb12d9-a140-4cac-b883-255712c91608",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b5062a4d-a416-409f-94d7-fde597df26e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3118e8f-4af4-451b-8026-f1fffd0b01db",
        "cursor": {
          "ref": "faf96f54-6034-4df5-99f4-9bdd408638fe",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "41e92bf3-73c6-46d2-8679-19bf23e50217"
        },
        "item": {
          "id": "a3118e8f-4af4-451b-8026-f1fffd0b01db",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "53f27458-49f3-428d-b0ee-df5da9b5eb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f702b706-55d7-4bcf-a07a-7f18f4dbac1c",
        "cursor": {
          "ref": "4cf6b7e5-94a9-415d-a95b-e4de3b9e0b42",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c18aba53-01ba-4e54-891f-caa473072259"
        },
        "item": {
          "id": "f702b706-55d7-4bcf-a07a-7f18f4dbac1c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1fbd7b36-ecc0-472f-b839-435836f50c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe93851f-92b8-4790-bd3e-0d1360405865",
        "cursor": {
          "ref": "c49d8635-267b-45a0-9e27-03bea4ba5bd1",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9ab04e93-e076-4e1f-a433-3db7c0d53624"
        },
        "item": {
          "id": "fe93851f-92b8-4790-bd3e-0d1360405865",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "403405c6-4e85-49d3-840d-1282cc7636d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f719051-320d-455a-8b1a-66196112ab32",
        "cursor": {
          "ref": "8b167a18-4da2-43a8-ba4c-14498e1c66fd",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "db84feb6-f3cb-4d94-9c35-600d5d9d0408"
        },
        "item": {
          "id": "4f719051-320d-455a-8b1a-66196112ab32",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e44f0c0-017c-43b8-970c-db8fcfed6001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 720,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8033c994-7bd0-45c8-8837-f0b1a4a3ec5e",
        "cursor": {
          "ref": "97d13ed8-05db-4661-8956-c314400a1a0a",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e1852d38-861f-446f-89b3-64ab22cbe332"
        },
        "item": {
          "id": "8033c994-7bd0-45c8-8837-f0b1a4a3ec5e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "197266a7-3794-4ce6-8ce4-1df787c4b7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207c1acc-e6c2-4cf2-9c54-6fdc48660c8c",
        "cursor": {
          "ref": "77a5663b-ab0b-42e9-a663-2baed0566a59",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0c3b550f-9a1b-4407-a6df-04a2d1cbeb0e"
        },
        "item": {
          "id": "207c1acc-e6c2-4cf2-9c54-6fdc48660c8c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7706a6df-8453-4e5f-88d5-0e36cdaa2246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 649,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed55e348-f506-40e4-9784-b39039dcfb48",
        "cursor": {
          "ref": "8f86e95d-327e-487c-8541-a4badd657ae2",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3d1e720c-4d65-4191-8706-aa62ee1cd35d"
        },
        "item": {
          "id": "ed55e348-f506-40e4-9784-b39039dcfb48",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "31526996-d07a-4315-8cd7-7ad996eaed21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4f3143-4a01-4022-85bc-6a0fc84d326a",
        "cursor": {
          "ref": "eb84dfd9-81e8-42cd-b728-5b9c7c3ff921",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0cc8fbc3-b04f-4f1c-a2c0-22c9f4c398b5"
        },
        "item": {
          "id": "8b4f3143-4a01-4022-85bc-6a0fc84d326a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1d0e01cf-609c-4a56-85a2-d45d7ac78563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bafc52fd-ffcc-4c6e-83ee-99da58bedbe1",
        "cursor": {
          "ref": "99c91b1e-ca8a-4c81-a0c0-1d7a2f4f5db0",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5b50a2ec-9a22-40e4-aa2d-ec8158ca9aa5"
        },
        "item": {
          "id": "bafc52fd-ffcc-4c6e-83ee-99da58bedbe1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e8009234-7029-4c8d-a222-53eb47c269cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678a1b26-5a62-4762-b2e3-73e6139b117a",
        "cursor": {
          "ref": "fc47462d-e72c-4d86-b83b-26ed04a18777",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "09372bab-dd5b-4dc2-ae17-76c73ca25b6b"
        },
        "item": {
          "id": "678a1b26-5a62-4762-b2e3-73e6139b117a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5fb36f68-7221-4f56-b16c-9386d1753953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49402445-983d-4381-83b4-36161eaf1810",
        "cursor": {
          "ref": "d57256de-99b2-4794-9ac2-d4a0a1c49211",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1acea554-2a97-409e-8ed1-d3d86cb3c4bb"
        },
        "item": {
          "id": "49402445-983d-4381-83b4-36161eaf1810",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fdd5296a-6547-4d22-8914-926b6f742ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 489,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0072a3dd-5d0d-4b4e-837a-dd6ee9be8dbd",
        "cursor": {
          "ref": "4caa8841-7694-4d3b-bad6-9adba8fa1c0f",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "52cd5b67-69d9-4f11-a4e9-99a3ed02341d"
        },
        "item": {
          "id": "0072a3dd-5d0d-4b4e-837a-dd6ee9be8dbd",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9c7aca00-157b-41e9-b852-3ff003876b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c3ff4a-aef0-4e45-9b73-c7344030b3db",
        "cursor": {
          "ref": "1bf6a543-2cb6-438f-ae2b-b4b2646b7cc9",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "43ac9e3d-2c98-4e43-8c3d-c57a56317ddc"
        },
        "item": {
          "id": "a6c3ff4a-aef0-4e45-9b73-c7344030b3db",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "637c6d62-aba5-4ca8-a2b2-9290b442d129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5678fae-49ca-4ab4-812a-ba781a563ef0",
        "cursor": {
          "ref": "cd5e8915-b432-40db-a013-73c55b7835c0",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b1425d9a-6662-4924-b352-668f63ce5e1e"
        },
        "item": {
          "id": "d5678fae-49ca-4ab4-812a-ba781a563ef0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "920d429e-a49d-4b0d-b4f4-7c76c8fe6eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80e05a9-4118-467e-a022-6dfc087daa63",
        "cursor": {
          "ref": "d1e5553b-9522-4355-a05b-68902072740d",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ae5d58ec-844b-4eed-a1d6-1e131b4abf31"
        },
        "item": {
          "id": "a80e05a9-4118-467e-a022-6dfc087daa63",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2e3290e2-4695-40d8-a858-d89c2ae95a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33c7a87-0c06-4405-9606-e07b064cf3ef",
        "cursor": {
          "ref": "22167c65-8c69-46f9-8ae9-dc5602cda297",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f69dfa96-2c7d-4507-a5a1-fe18e1cfb26e"
        },
        "item": {
          "id": "b33c7a87-0c06-4405-9606-e07b064cf3ef",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "89f4ffdc-a6a7-49ec-b5ad-80fd867893a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a98381-23f7-44b8-831b-637f2ba479cd",
        "cursor": {
          "ref": "fd9168c0-b2b4-498c-a158-a800fb39127f",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "312f7d26-0441-4138-a523-2fd9ddc0d8e2"
        },
        "item": {
          "id": "01a98381-23f7-44b8-831b-637f2ba479cd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b7423969-d875-4fb7-b8ea-78b8b8981505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9955225d-a2f8-4df4-9577-74d5c75d118b",
        "cursor": {
          "ref": "484ad609-8d2a-45b0-b7d0-8e35fa6961db",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5ab72b4f-d7d5-45da-9e51-99f2674c190e"
        },
        "item": {
          "id": "9955225d-a2f8-4df4-9577-74d5c75d118b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5939828c-dafe-42f4-946b-f512f66ebf7a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 985,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9c0fb5-7e15-4a61-8714-c6f796473d9d",
        "cursor": {
          "ref": "a1e0d466-0b4b-41df-94c1-a96edd23d685",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "bb2dc3a0-5a07-4921-ab1e-aae67a9469a8"
        },
        "item": {
          "id": "0b9c0fb5-7e15-4a61-8714-c6f796473d9d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fd8d092f-0c07-4ffb-8e33-4eb6f57f233d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1367,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ba6972-b611-4816-b41b-d3b15e555bbf",
        "cursor": {
          "ref": "1bdf0b6e-d72c-44aa-b355-891a2b4a2c61",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "875dc605-c377-45da-8fe1-c3c7e90d056a"
        },
        "item": {
          "id": "e2ba6972-b611-4816-b41b-d3b15e555bbf",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6b4e6fa8-67dd-4d1f-ba77-1680419fa0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f9d920-60ed-4bd2-8f27-0bee991a9bfc",
        "cursor": {
          "ref": "79a4a498-040a-4a39-bb1f-d9c07fa88c4f",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cff5f8eb-f144-4669-af7e-7a7da8fc74ea"
        },
        "item": {
          "id": "a8f9d920-60ed-4bd2-8f27-0bee991a9bfc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8946bfdd-a7a3-4719-aa67-94e68a4441d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4441cf1d-1a2b-4a17-b3bc-ae9740a85c2f",
        "cursor": {
          "ref": "2938f6ba-a056-45a5-ab1f-3a92d90f0ca5",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "62773d28-0965-4220-812c-a2aa18395d14"
        },
        "item": {
          "id": "4441cf1d-1a2b-4a17-b3bc-ae9740a85c2f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4782ad1b-06aa-4348-966f-5da02e272e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df20e9-9d82-4537-9207-3d4bb6d011dd",
        "cursor": {
          "ref": "c9426f8d-76a3-43e0-9de1-55746622568e",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c20de8ed-bcd5-4168-ba52-6f6e915b39fe"
        },
        "item": {
          "id": "28df20e9-9d82-4537-9207-3d4bb6d011dd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "42df6177-7b00-4abf-a8ab-8afb5b62d699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcd9e4b-3e8d-4274-be15-a0c80c74a284",
        "cursor": {
          "ref": "1f194080-4e6d-4064-84c8-cd14e2d984b5",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6535c3e2-8267-4d13-ac9b-4679d36755b7"
        },
        "item": {
          "id": "2bcd9e4b-3e8d-4274-be15-a0c80c74a284",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fc313381-2ca7-4aed-b899-8a7ca20e7ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2694d9-6b6d-4566-bf08-436317356854",
        "cursor": {
          "ref": "ef515ea0-1b33-4684-a9c5-9039ae31d53b",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6ef0576e-33a8-47a9-9e77-2d6e399f70ff"
        },
        "item": {
          "id": "2d2694d9-6b6d-4566-bf08-436317356854",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "73beb1f0-11bf-4c63-b5e7-056620ad71dc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 690,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d483ae4-3ac6-49d4-9dae-f65a40555490",
        "cursor": {
          "ref": "07a5511b-66c6-4fe2-932e-62b724a3b6e8",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e4807120-f69e-4fa0-a68e-07b9f828fd4d"
        },
        "item": {
          "id": "9d483ae4-3ac6-49d4-9dae-f65a40555490",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c8419ae4-0232-42c1-ba1d-7c7694f0e9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eec9c9d-bed3-4fdc-9527-68e8c91ff2ad",
        "cursor": {
          "ref": "e4457aa3-f90c-46ca-87ab-f68319dd144b",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd75fbbe-3ed1-4bd8-8393-7ecfc5275643"
        },
        "item": {
          "id": "6eec9c9d-bed3-4fdc-9527-68e8c91ff2ad",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4d51758e-e510-4532-ab05-6a7d97572071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef9aec5-104b-47be-ae5d-c4fbda3841e5",
        "cursor": {
          "ref": "6ad25b5a-b92b-4a53-85e4-2c74ebc6130a",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ea13f57b-0eea-4743-8f61-2fa76b75f3fe"
        },
        "item": {
          "id": "aef9aec5-104b-47be-ae5d-c4fbda3841e5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5426ee75-ba50-4617-868f-b19bc4d0ce9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4e1972-a747-4a49-b767-d750e4a87c9f",
        "cursor": {
          "ref": "6320d484-4e58-457c-a3e2-c906a8e922ab",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9dbb73af-6c0e-461b-ad56-ec6858c57379"
        },
        "item": {
          "id": "ac4e1972-a747-4a49-b767-d750e4a87c9f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "22eca074-db2c-4d0b-8a58-075c3a77569a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a41dc2-58b5-4f0c-b79b-bc539af90b1e",
        "cursor": {
          "ref": "1163b114-de12-407e-9023-b6936ca3711d",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9a582aaa-0837-48b8-89a1-c42a320f939e"
        },
        "item": {
          "id": "02a41dc2-58b5-4f0c-b79b-bc539af90b1e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e65dc401-aea0-4e7c-a234-b6ba58242294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1a3c32-2d4f-493f-9123-637b297d5d09",
        "cursor": {
          "ref": "8bf22dc0-7897-4ebd-a0af-a60fac94cb58",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "166511e5-cb5f-4f82-814b-8e83df484970"
        },
        "item": {
          "id": "9f1a3c32-2d4f-493f-9123-637b297d5d09",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "aa45676e-ceb8-4848-8289-7722d517f377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8246725-5d7e-41f0-96da-4c1bf1a06257",
        "cursor": {
          "ref": "df06f227-4e6f-4b58-a23e-f15e8833d7e3",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "70bfd9e1-8e6e-4170-93c8-74260afcc6bb"
        },
        "item": {
          "id": "c8246725-5d7e-41f0-96da-4c1bf1a06257",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c81644f3-2474-4b45-968d-d11ddda6bc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35adaf8-5b5e-4e66-8d9c-e566327cf775",
        "cursor": {
          "ref": "ce6ef7fc-e5b0-48e0-be42-18ca23316924",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bdfd4a87-92f2-4d17-9cbf-7b6d1e9255e2"
        },
        "item": {
          "id": "f35adaf8-5b5e-4e66-8d9c-e566327cf775",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "99e1eee7-25ac-4350-9b33-2e104cde0c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc63974c-b0df-49b3-909a-6c062de010b8",
        "cursor": {
          "ref": "f0da6e6f-87b2-4bd1-8f7b-9b0f1d495281",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "96a201d1-0cc0-4d51-bca0-0b7217435282"
        },
        "item": {
          "id": "bc63974c-b0df-49b3-909a-6c062de010b8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "376d9cc7-9e89-4f12-8720-cd353828a445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aebf253-4848-4818-8111-fe8674a2c449",
        "cursor": {
          "ref": "784afae5-6a2a-4cb0-9ac9-39973430ec69",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8e2d0434-5d03-4dcf-8577-cb6d09793e67"
        },
        "item": {
          "id": "1aebf253-4848-4818-8111-fe8674a2c449",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d44c6082-b2ac-4d21-83c8-528223a0fd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15eb7b6-f088-4a04-8d8d-6a87d4f83e63",
        "cursor": {
          "ref": "df7cfb3d-32a6-49ce-a067-450568df7d0c",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aef45cc6-87aa-4de8-b893-cc0e58e70122"
        },
        "item": {
          "id": "a15eb7b6-f088-4a04-8d8d-6a87d4f83e63",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "799881a5-c3a9-457c-9d25-92389eac08ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 496,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c4bbff-8543-403d-a57e-32c85cc33e05",
        "cursor": {
          "ref": "ce809658-b741-4b03-a6cd-c295b7318b1c",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1965d4a7-6872-4bc8-bd6e-7d1efc9b01d4"
        },
        "item": {
          "id": "70c4bbff-8543-403d-a57e-32c85cc33e05",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "51e02289-d375-4a8c-a36c-3c0a1deadf6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47114b3-b4d4-4bfc-89c5-1d63e1a2f803",
        "cursor": {
          "ref": "78fe0349-6c3c-4474-b2c9-dbf980571267",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b1f2bb7d-045d-403d-9fc2-90fc88dc7ece"
        },
        "item": {
          "id": "a47114b3-b4d4-4bfc-89c5-1d63e1a2f803",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e62176a-729e-447d-81ae-9cb797add9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d2c8b3-5b8d-42ff-abd8-7579f87e3c8e",
        "cursor": {
          "ref": "f0daa6e1-2dc5-4b3d-ac80-8c56f90514aa",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "da8d2652-6e17-431e-b96c-59783a34cb6c"
        },
        "item": {
          "id": "04d2c8b3-5b8d-42ff-abd8-7579f87e3c8e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "847d036a-1cb5-4987-92f9-1116295bd514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd3ee353-7297-466c-b0ae-f15e870b61dc",
        "cursor": {
          "ref": "24ce19bf-a917-4b75-b6f6-aba65d6e1f9d",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a4d0736f-f3d1-4da1-a821-60b57e837526"
        },
        "item": {
          "id": "fd3ee353-7297-466c-b0ae-f15e870b61dc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "30e06453-249f-4ee6-ab0d-c4f7286087c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afec3f0c-9cdd-40c2-9438-5ab8a7b0bbf2",
        "cursor": {
          "ref": "86594ef8-25ee-4aba-8405-b6250d51cfb8",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ddebc8fb-a1ff-4637-b012-459a28696e73"
        },
        "item": {
          "id": "afec3f0c-9cdd-40c2-9438-5ab8a7b0bbf2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e461dfc1-af09-484b-9ed2-592ec9b87d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2525a8d-cf12-430e-9b9c-1d1a63117134",
        "cursor": {
          "ref": "9209bfbf-6d85-4eea-9ca1-eb39246c034b",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2bce4edd-7523-4d99-b541-43b83f83b3e9"
        },
        "item": {
          "id": "e2525a8d-cf12-430e-9b9c-1d1a63117134",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ee82ea2a-4c95-44a7-af03-e68565ba4d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf17a21-43a2-470d-b754-be9a041aa871",
        "cursor": {
          "ref": "8ce2ea1e-d4a9-4990-8100-85af1f07185b",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "435c44ce-2f16-4cac-9b7e-f9e32eb7d915"
        },
        "item": {
          "id": "adf17a21-43a2-470d-b754-be9a041aa871",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8877dfab-7e8c-4dd4-a71e-5c4e7fb9b57e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86275553-76fd-427d-8fed-6dbf033682a6",
        "cursor": {
          "ref": "5145bffa-396b-402e-80c1-d272efed715e",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5eb3ae25-d62f-47b9-810b-dc6197b3740c"
        },
        "item": {
          "id": "86275553-76fd-427d-8fed-6dbf033682a6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5d1a3b91-261d-4f9c-8788-a5e956ace032",
          "status": "Created",
          "code": 201,
          "responseTime": 2168,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "2cca6805-3c33-46a3-be3e-9c8827a4f228",
        "cursor": {
          "ref": "365ec0ad-d746-4c3f-b5e2-3b47a79ea7a4",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "718f374b-5765-4694-9943-532641d9060c"
        },
        "item": {
          "id": "2cca6805-3c33-46a3-be3e-9c8827a4f228",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "37578db8-1f27-4c28-b89d-71d342ea28b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e617a6-1e7f-4ba7-94d4-430bb768d35a",
        "cursor": {
          "ref": "84a30c3a-8c0b-47c1-85fa-01f8b2195f09",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c222311f-1aba-4845-819c-3c3764315f5f"
        },
        "item": {
          "id": "12e617a6-1e7f-4ba7-94d4-430bb768d35a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a8f78621-daeb-403a-a76e-2a53c1fdfa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32918f7a-64b2-4db4-b3e2-cbfc6bd4a40a",
        "cursor": {
          "ref": "8f0c5237-1b56-4cec-9825-7f772cb6b75a",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "43425fe5-0e38-4cd1-8008-14780bcf80e7"
        },
        "item": {
          "id": "32918f7a-64b2-4db4-b3e2-cbfc6bd4a40a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1cf16a48-aa2f-4014-b572-af59c82195dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94bc64b-ef05-4bae-a78e-683a2ef13646",
        "cursor": {
          "ref": "7b963eee-de9f-4409-89c5-8f80e901b82a",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5ed7fda7-962c-4c97-8c76-32ec988e7c27"
        },
        "item": {
          "id": "d94bc64b-ef05-4bae-a78e-683a2ef13646",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6c58e036-ff75-43b5-b4e8-e4f136ec1467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a0f48c-577f-4e6f-b5cc-279dc05b8cdb",
        "cursor": {
          "ref": "c16605f5-b962-412e-9030-848cb55e158a",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "96735b8c-c10a-4db3-8797-063d0d674be5"
        },
        "item": {
          "id": "40a0f48c-577f-4e6f-b5cc-279dc05b8cdb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7cad2ee8-4fda-4549-abd8-be27892fe2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce1e2ce-f7ad-466f-8f02-c3b4f7fb0b5a",
        "cursor": {
          "ref": "b1fe28b8-511a-408d-8898-b41d847b3215",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "67efc6a6-c2ec-41ee-8f35-60286db6d2b4"
        },
        "item": {
          "id": "1ce1e2ce-f7ad-466f-8f02-c3b4f7fb0b5a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "62904f72-af5f-4371-aad4-a5bd5775e5d6",
          "status": "Created",
          "code": 201,
          "responseTime": 1910,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "b18eef0b-1aeb-4805-9f61-011fd0a5f7e0",
        "cursor": {
          "ref": "3376cbd9-864c-49b7-b517-e4fd8eb51216",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ca024e91-e442-4645-8496-273824815f85"
        },
        "item": {
          "id": "b18eef0b-1aeb-4805-9f61-011fd0a5f7e0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "814015d0-b52a-43e8-8072-4acf3980c3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd86c780-8cee-4d23-aa36-2abe398a4cd0",
        "cursor": {
          "ref": "1b3ab48b-9b08-4e4c-a99e-d53c0b025793",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "580dbe90-40b3-4347-8e93-4bdc26283f83"
        },
        "item": {
          "id": "dd86c780-8cee-4d23-aa36-2abe398a4cd0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a6982975-6beb-4860-9590-cdcdced30e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf46f0f0-dd23-490c-a11d-5162f8d68972",
        "cursor": {
          "ref": "bdb378b0-f88f-4603-b716-fc1926e78c1b",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "3c251f36-423a-44ab-8627-6a11b51df13c"
        },
        "item": {
          "id": "bf46f0f0-dd23-490c-a11d-5162f8d68972",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "79a9acac-4516-4451-803a-2312b2c07bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69231266-e977-4997-8dd7-4a61a676afd9",
        "cursor": {
          "ref": "655ef4d0-b843-4ee0-a31f-15f2e9a32495",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7a60f0b3-3e0f-4ca4-828d-a11b8c0f0d40"
        },
        "item": {
          "id": "69231266-e977-4997-8dd7-4a61a676afd9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2a670277-8836-4e84-b91f-c7f19bd08b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "149b841d-6e78-4a37-aded-952f4a9de1ef",
        "cursor": {
          "ref": "129e3bee-6bce-4518-abef-035de44f8847",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "cf7b0d28-1330-4e45-a187-fa4a3c210022"
        },
        "item": {
          "id": "149b841d-6e78-4a37-aded-952f4a9de1ef",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "275fe3e6-e320-4216-8b95-26821f16ee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5406b4d8-6aa5-4bbd-803e-ef639d67b79c",
        "cursor": {
          "ref": "9ea33d65-2bb9-490d-8aac-9527b437dc46",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2adb7a5b-2593-4fc4-9f5e-16338186ebbc"
        },
        "item": {
          "id": "5406b4d8-6aa5-4bbd-803e-ef639d67b79c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3561b04c-0475-44ca-bbb7-fc75940e0ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 893,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513d4a39-fb25-4b34-97b3-d9985f0bccbd",
        "cursor": {
          "ref": "33af00d4-d8d3-46ce-8ddf-204f2a26faff",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "959e8213-ab3c-4902-b9bd-d66a3523e4cd"
        },
        "item": {
          "id": "513d4a39-fb25-4b34-97b3-d9985f0bccbd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "60a2de2a-a405-4392-937d-33901acfabd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0a1bdc-5e63-4da2-aa26-7f3b68a449a2",
        "cursor": {
          "ref": "33dcba4a-97bd-4458-8868-200311d6637e",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c468e0de-4a94-480d-8063-70f39d479874"
        },
        "item": {
          "id": "6e0a1bdc-5e63-4da2-aa26-7f3b68a449a2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ffe778eb-39d7-4b64-bd08-78fd6bbda05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efee66a-5674-494d-9abd-8f07e3d5bdac",
        "cursor": {
          "ref": "14eaf5b5-d0c0-43ff-ad8a-7a7efee58ef6",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4da2a7a6-0fac-4050-a8a9-cfb88a8edc6d"
        },
        "item": {
          "id": "7efee66a-5674-494d-9abd-8f07e3d5bdac",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4497a882-32d7-4745-97ea-b4354c87c798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f0d6c8-ee67-410a-9ca3-6130189049f3",
        "cursor": {
          "ref": "bd4acc06-c8c7-4e0b-ba22-794552c03e8c",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1ece35c6-3b69-4a47-8d37-fe445bad4211"
        },
        "item": {
          "id": "64f0d6c8-ee67-410a-9ca3-6130189049f3",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d933690b-120c-486c-861c-23ff76f6dba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6d3176-30fd-47dc-a5d5-73173b95bbac",
        "cursor": {
          "ref": "529d7e98-d185-429d-93de-0f81b5fe4dbe",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "68a08c99-57e4-4c50-b4ba-40f1943bf73f"
        },
        "item": {
          "id": "4f6d3176-30fd-47dc-a5d5-73173b95bbac",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7e25b355-ac25-48fe-9a97-869ebef32640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1709b5ef-1eec-4f30-8cfa-53ba413cc284",
        "cursor": {
          "ref": "6dfcdc3c-f2d4-4c31-a762-e2c495dfb277",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "132697b4-0adc-4de7-aa79-7a98a747eb94"
        },
        "item": {
          "id": "1709b5ef-1eec-4f30-8cfa-53ba413cc284",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a194aab5-237d-4047-b589-be452957aaee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8161df81-db9f-4604-bf37-d7090fe6735c",
        "cursor": {
          "ref": "8f047666-1e0d-4351-a884-30423bd4f8ab",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a5fee68a-83d3-45e6-925d-e9f37e47efd1"
        },
        "item": {
          "id": "8161df81-db9f-4604-bf37-d7090fe6735c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "fdd39b5d-ad54-484c-af2b-421cac0c0b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755f7866-2755-4f68-974a-f9a9f9e7d6da",
        "cursor": {
          "ref": "f085f8b7-afe0-4682-a0be-c4e901241763",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "797d52fd-c019-40e2-9385-a7ed7403906b"
        },
        "item": {
          "id": "755f7866-2755-4f68-974a-f9a9f9e7d6da",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d5786f84-96b1-4a92-b42a-7e9472f20b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5bf5a9-ec1b-482e-8450-439219253039",
        "cursor": {
          "ref": "cc34f6ca-b293-4a9f-9643-50faccd994c9",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dde3f5ca-0fb3-40f0-8271-b17c633823f8"
        },
        "item": {
          "id": "df5bf5a9-ec1b-482e-8450-439219253039",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "645fc594-ef90-4e5f-b195-d05ce2b84e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d369afb5-19be-4f7e-bdf7-e3847139850b",
        "cursor": {
          "ref": "e077a39a-cec7-400d-a6b6-7b85c5812d78",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "36f1ac9f-5cd9-41ef-8484-4e2cdfad0fd2"
        },
        "item": {
          "id": "d369afb5-19be-4f7e-bdf7-e3847139850b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "870f1585-4277-4556-975f-193bff07209c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7136b5e-36fa-478c-bf25-a240d2a45ffa",
        "cursor": {
          "ref": "4155cc6e-1b24-4665-bead-281b46aecc0a",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "14d37ff6-1852-4556-b122-2fa457915338"
        },
        "item": {
          "id": "a7136b5e-36fa-478c-bf25-a240d2a45ffa",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cd8d33c1-4f30-46a7-9386-f83cf1349f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 466,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9100b509-ef77-4edb-8a25-1b9b6ea7ac5b",
        "cursor": {
          "ref": "fc7ab224-548b-46bc-8f71-d071606022b8",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd199c27-b968-477a-adef-a7a2e3f62b15"
        },
        "item": {
          "id": "9100b509-ef77-4edb-8a25-1b9b6ea7ac5b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d9407f67-fe79-46bd-a7d6-46ca3f42a916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9029ac7b-db7d-423d-85e1-91e1efc000d7",
        "cursor": {
          "ref": "f355f0a6-27d1-4bef-be5d-06f1f1fa36d8",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c5aaf170-774f-46b1-a7d8-6ab4acb3b90c"
        },
        "item": {
          "id": "9029ac7b-db7d-423d-85e1-91e1efc000d7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "02ed708a-2200-42af-8e84-ceb0ac48f087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a70aa7-62a3-47a5-a603-fa82e2620333",
        "cursor": {
          "ref": "03773a7c-5b9e-4577-81ab-91267d4794d2",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b7221dd4-5ad0-4ce5-ad44-1713a4e6f290"
        },
        "item": {
          "id": "28a70aa7-62a3-47a5-a603-fa82e2620333",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f087223a-57be-48ba-9633-3f9d39ea2027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c12a84-6f34-4dd6-945b-75ddbb9333cb",
        "cursor": {
          "ref": "c78896bf-02c9-44b0-bc64-314a4318c7b1",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "72c9bedd-d7b8-4dce-aa3d-ce1bed387801"
        },
        "item": {
          "id": "07c12a84-6f34-4dd6-945b-75ddbb9333cb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2968b5c1-95d3-43be-9bcf-6e226b04d288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464bbd44-031d-48e5-8680-67cf85d2068d",
        "cursor": {
          "ref": "e45a8246-b06f-49bb-8016-a1778da9eaac",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dbfc3fb6-72a4-4ed8-bb43-e3748a029d82"
        },
        "item": {
          "id": "464bbd44-031d-48e5-8680-67cf85d2068d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9e17a6eb-b205-4ef3-b64a-abd1dc6a82b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5655f50-587d-4609-ae61-76953e72535f",
        "cursor": {
          "ref": "39fa338d-e7d7-4771-8bc6-c334658c4f70",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4b37c8a4-07fa-4dbf-8e32-93d3753d65b6"
        },
        "item": {
          "id": "b5655f50-587d-4609-ae61-76953e72535f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "73c30589-d03c-4c43-97c5-5b110421920d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157a19eb-ba56-4a5e-a9e7-ad2189764177",
        "cursor": {
          "ref": "1fd274f5-8175-4fd2-a9bf-bfc028c30886",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "bb340358-9a6a-4836-a5ca-88feebdb98be"
        },
        "item": {
          "id": "157a19eb-ba56-4a5e-a9e7-ad2189764177",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "76edfce2-c4ab-47e2-80da-641b83139280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478c6d99-cd61-4c49-87a3-4d7880bb56b9",
        "cursor": {
          "ref": "e9e251c5-ea62-4bbe-b683-964eaa9e135d",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fe264ea7-c492-48f3-88c6-5b6e200decc5"
        },
        "item": {
          "id": "478c6d99-cd61-4c49-87a3-4d7880bb56b9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "159d7cac-5dd6-486e-a601-db3a591ea572",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37740ac4-6ee1-4a84-bb64-45023d798b34",
        "cursor": {
          "ref": "912cad18-b96d-4afb-853d-e75c79d03bb4",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b0e5f6ec-b8ff-4427-a0cc-2f541303dd87"
        },
        "item": {
          "id": "37740ac4-6ee1-4a84-bb64-45023d798b34",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9c9dbc9b-6617-4631-8053-d5c8a0eb0696",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 470,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc16f059-ae84-45a8-8483-6b0cf5919e83",
        "cursor": {
          "ref": "47350fa6-a7af-4030-8f70-46c25a4b2d34",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fe46a87d-e7e9-4d8e-b96f-10fe7ec1a5ef"
        },
        "item": {
          "id": "cc16f059-ae84-45a8-8483-6b0cf5919e83",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9b130245-c4a4-4f5b-bd3e-a4e458db4f80",
          "status": "Created",
          "code": 201,
          "responseTime": 2001,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "dc203ef2-6688-4059-9f7d-75b4c386a44e",
        "cursor": {
          "ref": "7a9d76b8-e8d3-45da-ad2f-81fa5624af82",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "95141d31-0cd3-47d0-ac67-ae4179c7b7d1"
        },
        "item": {
          "id": "dc203ef2-6688-4059-9f7d-75b4c386a44e",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "13df0f1b-98a7-4333-b209-99ffdaa60a27",
          "status": "Created",
          "code": 201,
          "responseTime": 1969,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "46570e9c-570c-4868-9d9e-ce5dbd856d1e",
        "cursor": {
          "ref": "34219048-d747-4ca5-b931-02a364b005f9",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "64e521b4-2403-4a8f-a34c-5f4bae4fca7d"
        },
        "item": {
          "id": "46570e9c-570c-4868-9d9e-ce5dbd856d1e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2364c4a9-85f4-4a4f-80b9-92a5baf10587",
          "status": "Created",
          "code": 201,
          "responseTime": 1951,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "557bc850-456d-423d-ac7d-13d8c005a665",
        "cursor": {
          "ref": "0a76a2a2-e414-49b8-b331-3ea28906ac70",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fd6130f6-7eb0-4943-814c-5249f2b71e09"
        },
        "item": {
          "id": "557bc850-456d-423d-ac7d-13d8c005a665",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8b69cc0c-f22a-4bdc-975b-d554b7a805b1",
          "status": "Created",
          "code": 201,
          "responseTime": 1931,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6530befc-f8be-42e7-90e2-6b58b698ed43",
        "cursor": {
          "ref": "7d47a027-dfae-412e-9747-754844dd5afa",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fd87d88d-e428-4bbe-80c1-74a95ece74ff"
        },
        "item": {
          "id": "6530befc-f8be-42e7-90e2-6b58b698ed43",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bc8b151d-5f59-439c-a598-d88b89c9d1cb",
          "status": "Created",
          "code": 201,
          "responseTime": 4803,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "d85ea84d-fa3a-46b2-847e-317b8c5b0969",
        "cursor": {
          "ref": "46033a68-ad72-4ee1-85c7-8553c55148d2",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "76ee653f-0b30-4de5-8a84-aef2d01185ab"
        },
        "item": {
          "id": "d85ea84d-fa3a-46b2-847e-317b8c5b0969",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ff3c0b2a-3aa1-4e38-bfc4-5a6e1e7c4550",
          "status": "Created",
          "code": 201,
          "responseTime": 3430,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "8f10be57-d790-4de5-831b-8ec2cf2cb034",
        "cursor": {
          "ref": "15f03449-2d0d-4350-8c0e-4a3306a69f92",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "92b7ed72-63ce-4d55-983c-0cebd966d5b1"
        },
        "item": {
          "id": "8f10be57-d790-4de5-831b-8ec2cf2cb034",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7ece9bea-4c1b-4f34-ab83-072a055229fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f10be57-d790-4de5-831b-8ec2cf2cb034",
        "cursor": {
          "ref": "15f03449-2d0d-4350-8c0e-4a3306a69f92",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "92b7ed72-63ce-4d55-983c-0cebd966d5b1"
        },
        "item": {
          "id": "8f10be57-d790-4de5-831b-8ec2cf2cb034",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7ece9bea-4c1b-4f34-ab83-072a055229fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953417e9-42bf-4ff2-84b0-886dccb1fd3d",
        "cursor": {
          "ref": "38a4a666-e001-43b2-8a65-88cabb633a0b",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4be422b4-bfb0-4e32-b7f7-8491799a1c9c"
        },
        "item": {
          "id": "953417e9-42bf-4ff2-84b0-886dccb1fd3d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f6f5ed2c-5076-424a-865b-6e66e65b0d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6eab71-097c-4310-ab63-87040e033717",
        "cursor": {
          "ref": "e6fe1a3a-fd5e-4423-aca2-dcbd10d67b77",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bae593cd-40fb-4ad3-a20b-069395eac154"
        },
        "item": {
          "id": "4e6eab71-097c-4310-ab63-87040e033717",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f236c8d3-d3f3-4374-9a74-df9140748a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 494,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246666ae-95a3-46a0-b6ec-f5fa3ffd0a3b",
        "cursor": {
          "ref": "4be6a695-f931-445e-96a6-a1bef9ba6648",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c329fbca-f955-4da4-88a3-24025f42bd9e"
        },
        "item": {
          "id": "246666ae-95a3-46a0-b6ec-f5fa3ffd0a3b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e593559-dfee-482e-bc91-2936cb51ec9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61217eab-f917-4672-99fc-8c58bac5faa7",
        "cursor": {
          "ref": "8d3446a0-28c9-4b29-8d1d-c959b1d173c3",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0f7f5f59-b2f0-4054-a6ab-113216a0ec47"
        },
        "item": {
          "id": "61217eab-f917-4672-99fc-8c58bac5faa7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "62caed57-219e-47cb-97db-d44322e7d654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10086d6-30f5-44f4-a746-c89942643da9",
        "cursor": {
          "ref": "79027e5d-abd5-498b-8366-f46b48b0d4b5",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "512bf4f2-bd92-4b1b-b5a4-2a850c126294"
        },
        "item": {
          "id": "b10086d6-30f5-44f4-a746-c89942643da9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5416dbeb-5d35-4630-b3a6-d0a818212321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1005,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0c541b-98bd-4afd-90fa-d216983ad573",
        "cursor": {
          "ref": "02606555-4a1d-48d8-8c9a-c51ded2aee8b",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cd8ae933-53d3-4c00-af8a-aa055f69bba8"
        },
        "item": {
          "id": "4e0c541b-98bd-4afd-90fa-d216983ad573",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f51dd813-a8e2-4e19-8c72-3108bcf3562e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cdecb7-49c9-4014-bd31-b5e7e8e7a3b9",
        "cursor": {
          "ref": "0e9deb98-e5b2-4992-bbb9-e09166b7fd94",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7e8ed39c-f306-4cef-af5e-7fed705b6146"
        },
        "item": {
          "id": "34cdecb7-49c9-4014-bd31-b5e7e8e7a3b9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cb65c7ce-4731-4a32-9467-f8fec764d687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1196,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60eda8e-2d2e-4890-afc7-0821579f2864",
        "cursor": {
          "ref": "76608a3f-55f1-48f4-9708-9cc2a1f9b189",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5306f55a-5afd-4680-81ea-91e52fb9c040"
        },
        "item": {
          "id": "f60eda8e-2d2e-4890-afc7-0821579f2864",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5e284c07-aa02-4c72-abf6-be0209b61b47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1010,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647f55cb-b7be-4e67-9f5d-a63451c3b08d",
        "cursor": {
          "ref": "7c0d2b3f-65da-41cb-9dd7-34b30c599a8c",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "df345362-d59d-4b66-afb9-6075809a0f02"
        },
        "item": {
          "id": "647f55cb-b7be-4e67-9f5d-a63451c3b08d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e7479f33-24c0-45ed-9376-4b3110e72dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034ca9b2-205c-4677-b2e3-41951e710433",
        "cursor": {
          "ref": "1a62131f-d0d5-4f30-9065-022033bc0d68",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "23751349-029c-4b02-8139-120f860ee91d"
        },
        "item": {
          "id": "034ca9b2-205c-4677-b2e3-41951e710433",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c70ca308-8e83-4fe0-b3cd-433ea43bf52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c236f40-1df2-478a-993b-dd0cf929e37e",
        "cursor": {
          "ref": "8281545a-7a90-4cff-b59a-96ef010df2b4",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cdff2eb2-8fee-4624-b726-832f152897d4"
        },
        "item": {
          "id": "2c236f40-1df2-478a-993b-dd0cf929e37e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fea06db6-df71-4331-a83a-ec2a9deb717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb6a43e-a63f-4e89-b896-7393eb05fe9f",
        "cursor": {
          "ref": "c6ccb7ff-e487-46a3-9aee-48f08ad55f11",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "10a4dcd8-87b4-4134-bc7b-d92c6824a6b4"
        },
        "item": {
          "id": "5cb6a43e-a63f-4e89-b896-7393eb05fe9f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9fd4832b-bab5-4db2-9ded-b9353fbe5034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b3abf7-d01a-4b8d-801a-922f610b8ec5",
        "cursor": {
          "ref": "5c234cae-ce9f-43b6-9f62-1fd4ff91c516",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1ab37483-104b-475e-bfbc-b14608fd6cb1"
        },
        "item": {
          "id": "b4b3abf7-d01a-4b8d-801a-922f610b8ec5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dbb6f9e8-5ab8-4050-995a-87d8c2ad4db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f6672f-ccfb-4885-b200-1e418a62d1b0",
        "cursor": {
          "ref": "b0ce7b9b-97dd-4f61-8355-0373fd56df62",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f86ae16b-6247-4126-b22c-06631cafab54"
        },
        "item": {
          "id": "a6f6672f-ccfb-4885-b200-1e418a62d1b0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c03c9b05-2d62-487d-8233-d26415a8163e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae78c265-f2f6-4012-973d-3a4b0eab104b",
        "cursor": {
          "ref": "4ab180c1-5871-4974-98d3-3e93c01ff91c",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9b49fa95-9987-48d9-88f7-711486efe509"
        },
        "item": {
          "id": "ae78c265-f2f6-4012-973d-3a4b0eab104b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2dd759d5-7af5-447d-b25b-e9199d600618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a05ac9d-ea24-4521-9dd4-a5cf9b0d2a17",
        "cursor": {
          "ref": "5077b1dd-40aa-40eb-80b1-cb12104cc1f1",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ba037fdc-a646-4432-9421-11009a6641aa"
        },
        "item": {
          "id": "6a05ac9d-ea24-4521-9dd4-a5cf9b0d2a17",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "21d928ee-ec49-4ffd-bd11-67172324fb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581b2c45-30de-4c36-95e3-e94346d4497a",
        "cursor": {
          "ref": "7a7be7d0-0683-4de7-80c7-6ab78e8f53b4",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "90776183-c81d-4939-8006-1fa7c7571b18"
        },
        "item": {
          "id": "581b2c45-30de-4c36-95e3-e94346d4497a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6a47526b-01e0-4a9e-9389-f83e5e25286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d884246-86f4-4f30-adeb-dec59fe16d7b",
        "cursor": {
          "ref": "7f134284-62ff-423c-9cf6-4be4ad0c6d3a",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fdabdf94-715f-4d53-9b53-4b71071ddbb0"
        },
        "item": {
          "id": "0d884246-86f4-4f30-adeb-dec59fe16d7b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c29b5d61-9e9b-4e1b-b26c-1e5d521d440f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a821740f-9bbc-4c1d-b808-c6c17edb849c",
        "cursor": {
          "ref": "0fe11193-acc5-4244-a551-3c963b586b9c",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2d85d72c-7cd7-45f8-8c41-f6f61f87c1d1"
        },
        "item": {
          "id": "a821740f-9bbc-4c1d-b808-c6c17edb849c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "88d7db33-85a9-4118-a6d7-e539094b6596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd140efd-7e37-4429-96b9-55d9741c7176",
        "cursor": {
          "ref": "31ae81fb-64a6-40e9-b184-796982ce17db",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5234aa8a-f0ab-4128-ab07-b05390001ba7"
        },
        "item": {
          "id": "cd140efd-7e37-4429-96b9-55d9741c7176",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bfdd225a-adf5-4fd7-9062-8a697e268a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17790c8-6320-4436-8b72-9dbbbab16c36",
        "cursor": {
          "ref": "c1d51884-4b5d-46db-b264-669c7c7daa76",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5e4cd859-6f28-4e84-9672-c181e0e1f72a"
        },
        "item": {
          "id": "d17790c8-6320-4436-8b72-9dbbbab16c36",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "89d59d83-fdc1-43a7-98e7-b9eb60454aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9636a4d-7705-477e-b7e1-1e16db826126",
        "cursor": {
          "ref": "9af7cc0a-9a44-47f2-8581-92791da0af03",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "bff5ec95-f924-471b-a671-0c4f34a526ea"
        },
        "item": {
          "id": "d9636a4d-7705-477e-b7e1-1e16db826126",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "da5de0e0-f4c3-436b-b0e8-e5d8bf0b337f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7411450-56f9-4a23-9537-21b68afc86f5",
        "cursor": {
          "ref": "eeeadc84-0fdc-4b97-a768-3b0cf66f8a4a",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a74746a-9485-45ae-a09e-e2cddd192b8c"
        },
        "item": {
          "id": "b7411450-56f9-4a23-9537-21b68afc86f5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9269ee1-316b-4177-93c7-1394b9803ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e5c65-196a-4175-8399-0c847c430971",
        "cursor": {
          "ref": "93bbc47b-c441-4c11-a200-d0bf4a3dc2e3",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dc4138c0-f2c1-437e-bd42-6e4f2df02202"
        },
        "item": {
          "id": "0a0e5c65-196a-4175-8399-0c847c430971",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1001ae22-be27-409a-99a4-72f54b6ec610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2937d214-79f7-40b8-bbb7-1500b82accda",
        "cursor": {
          "ref": "2e8734cf-39ba-47cd-bddc-b32044e56b13",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "277907c3-4f00-4c50-a29c-93dd769a1537"
        },
        "item": {
          "id": "2937d214-79f7-40b8-bbb7-1500b82accda",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37f122b6-0338-4e95-a949-627c6a1870ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973a6980-b926-434a-b181-50d72a13b136",
        "cursor": {
          "ref": "196258a6-ea5a-4845-9bcb-ba44643cd8d0",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "24877d26-11c7-4fd5-a5f9-5cf7901509f7"
        },
        "item": {
          "id": "973a6980-b926-434a-b181-50d72a13b136",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "911e122f-a908-4233-9ab9-639b73eefa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baca7b0b-8831-40c9-85f0-1f8914e643b3",
        "cursor": {
          "ref": "bb892689-8f43-4668-94c0-f2b5c852fdd0",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6dd76014-7d13-4f5e-a4de-b61ba29bc554"
        },
        "item": {
          "id": "baca7b0b-8831-40c9-85f0-1f8914e643b3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c475b976-dfa1-4c46-bc0a-21766526176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40d5630-1ed2-47e0-a4eb-935cc3dba902",
        "cursor": {
          "ref": "443e1f44-cf84-4ca5-838f-37080b5d696f",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ab876b3b-cf4a-4a9f-970c-82346efa234c"
        },
        "item": {
          "id": "b40d5630-1ed2-47e0-a4eb-935cc3dba902",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dc889d91-1eb0-401b-bd37-d09fa6c92df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2a854f-f870-4752-bf8b-3f5c6e694e8b",
        "cursor": {
          "ref": "8a847696-d8b5-48bb-a2ed-2399a2693b23",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "60f0c5a7-c688-446d-bcbc-78e044c0b16d"
        },
        "item": {
          "id": "5a2a854f-f870-4752-bf8b-3f5c6e694e8b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "40b10437-db58-4e85-820a-dc0ec1f1ae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194b2d3c-a237-4509-ae52-30bd751400c5",
        "cursor": {
          "ref": "ace719b6-61e9-4750-8d4d-1cbe66876aea",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a5491708-f4c2-4780-b106-62a2b77b82f9"
        },
        "item": {
          "id": "194b2d3c-a237-4509-ae52-30bd751400c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e98a34f1-cd62-4d06-99ef-e4ea001e0c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d300177-1870-4ee4-825e-a78a2a0132c3",
        "cursor": {
          "ref": "b53e48bd-079b-4484-8c2b-4eeba86ad591",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "b0f8b3f3-97f5-4474-a50e-6be71ae7e160"
        },
        "item": {
          "id": "4d300177-1870-4ee4-825e-a78a2a0132c3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "481f55b2-e304-4220-97f2-2b4b16ad014b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dd7fac-6035-4e80-b41e-88da24eba89b",
        "cursor": {
          "ref": "a83822f2-0277-465a-9734-342c52074ac9",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8033963b-982d-452d-ab1d-4f7e82513779"
        },
        "item": {
          "id": "16dd7fac-6035-4e80-b41e-88da24eba89b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f8ddcc4e-514f-45ee-b179-40228ef18ea9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d26e0b-e4bc-48f2-80a6-3709fb8028b6",
        "cursor": {
          "ref": "aced0d85-76c2-4dd5-9529-e2dc8216c3ce",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b2a2e184-cbff-4232-be6b-dca52912e4ea"
        },
        "item": {
          "id": "76d26e0b-e4bc-48f2-80a6-3709fb8028b6",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "20a7834f-1608-4b98-8f5d-e0913ee1a31f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 494,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86d11dc-27dc-4c95-bafd-65017ed2b223",
        "cursor": {
          "ref": "9db118eb-5c7a-46cc-b97a-46a4d55dcd30",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fce2cfd2-41c4-479f-92ab-3d8b6fa4e2a9"
        },
        "item": {
          "id": "e86d11dc-27dc-4c95-bafd-65017ed2b223",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "372d5d9f-a6fc-4967-a107-7c80dea40da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86d11dc-27dc-4c95-bafd-65017ed2b223",
        "cursor": {
          "ref": "9db118eb-5c7a-46cc-b97a-46a4d55dcd30",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fce2cfd2-41c4-479f-92ab-3d8b6fa4e2a9"
        },
        "item": {
          "id": "e86d11dc-27dc-4c95-bafd-65017ed2b223",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "372d5d9f-a6fc-4967-a107-7c80dea40da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d1c9b1-d712-43bb-9978-b260e11221df",
        "cursor": {
          "ref": "453b0f49-9fde-40fe-981d-21a1716f82d5",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f8d3df5b-0839-4c3a-ac8f-73297fc24e2c"
        },
        "item": {
          "id": "b2d1c9b1-d712-43bb-9978-b260e11221df",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "66b65bec-d1c1-40da-a51b-5e60f8220117",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 264,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "69ac7fcd-3c58-4717-a259-915d72706438",
        "cursor": {
          "ref": "9ee2232e-2b9e-4091-a34a-fc50cccda3e6",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "41bd1401-2cf3-464e-a269-9fbad7a0c6fd"
        },
        "item": {
          "id": "69ac7fcd-3c58-4717-a259-915d72706438",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6c469ab2-a402-4086-8ff0-da9d367f8c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3f4ebb-8472-40d7-be2e-86e450daa9d8",
        "cursor": {
          "ref": "86d46316-06d9-487e-86c9-496d7d22e6df",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c3550f8b-8355-432f-89b1-4203e4247d82"
        },
        "item": {
          "id": "ed3f4ebb-8472-40d7-be2e-86e450daa9d8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "91311c01-d63b-4fbf-8c73-b85facc27723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61653cf-519e-4e4d-bb9e-eefff989f5dc",
        "cursor": {
          "ref": "64812be6-aa2d-4bd5-8fa0-ac5053eff842",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8805adee-1bbd-437e-820b-3f4f2e7846c0"
        },
        "item": {
          "id": "c61653cf-519e-4e4d-bb9e-eefff989f5dc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e5b89508-4249-4af0-95ad-dda7485e65c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8890aa86-6afa-4324-b743-fc1dedc595c4",
        "cursor": {
          "ref": "ed1d139b-ddad-4187-ac22-f048e4e3be1c",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3bded4dc-3006-4272-8721-1585751ffff5"
        },
        "item": {
          "id": "8890aa86-6afa-4324-b743-fc1dedc595c4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d6f71556-f054-4932-b52d-73080ae06cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb27242-d376-424b-a26f-a304852d6701",
        "cursor": {
          "ref": "d42e1273-1a74-4a98-872a-55b3832ecc20",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3b4746e1-6352-4820-a2dc-a82e00bf29c9"
        },
        "item": {
          "id": "1cb27242-d376-424b-a26f-a304852d6701",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "203dc678-d3c9-4d2c-91d2-7c61f5c173dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60da9ccd-f5e2-484b-8d2a-09fe346944ee",
        "cursor": {
          "ref": "316c1307-390e-4999-a8f4-beff154c3bee",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c96c1b9e-2926-4980-bd66-3a6594ab7196"
        },
        "item": {
          "id": "60da9ccd-f5e2-484b-8d2a-09fe346944ee",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f9bddb0b-a185-48bc-91d3-9a50aa86cab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453bbbb8-dccf-4d25-b48d-0eac6ff8cc6d",
        "cursor": {
          "ref": "68b21eae-1b55-4baa-8317-05256d062b52",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "43ca69cd-161a-4f88-b7e2-4f13bf72b37e"
        },
        "item": {
          "id": "453bbbb8-dccf-4d25-b48d-0eac6ff8cc6d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f0ed482c-206d-48ce-b64b-15c218343541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38aedd3-50cf-41b2-afac-6d2f876083bc",
        "cursor": {
          "ref": "f8072fe3-790c-4f3a-b0ef-79261b4dc49a",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "48a1e013-c39f-41ca-ad2d-4c6ffb6392fe"
        },
        "item": {
          "id": "e38aedd3-50cf-41b2-afac-6d2f876083bc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f776c5b5-cfff-4719-89a6-a56d1c4b6b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc216bb-de8f-4aaf-805a-c997c5bceadf",
        "cursor": {
          "ref": "ec335332-aa84-4b67-b2dd-cc3bc7cad5c0",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "256968d1-b8be-43ca-b213-73f7ce727938"
        },
        "item": {
          "id": "7cc216bb-de8f-4aaf-805a-c997c5bceadf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "41512a00-63f3-41fb-904f-8124b644dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0eb141-c8ab-4f5d-8221-9d88d9e3ec60",
        "cursor": {
          "ref": "55ccdbcb-e1be-4e1d-aaf9-8d5b916a060b",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6d8b9787-606e-4e01-9174-a2a939ac5683"
        },
        "item": {
          "id": "aa0eb141-c8ab-4f5d-8221-9d88d9e3ec60",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "95568199-9cfe-473c-91c0-c82540efc7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2275e9-a4ed-4c8d-b7ae-241b0fd5aa30",
        "cursor": {
          "ref": "5ef9eb18-fd2f-4bfb-a1fc-44fd2706b958",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9b0b1ed0-21d6-4c03-8990-4a9e0cb273cc"
        },
        "item": {
          "id": "fd2275e9-a4ed-4c8d-b7ae-241b0fd5aa30",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f285c258-0e13-48f6-97ed-6d2f55ae06d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba98a9e-14f0-4656-b9d4-6d6196129200",
        "cursor": {
          "ref": "94692e19-c488-4560-aa21-d35dd47cd0c4",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "43b04ebc-88c5-41e6-922c-6fd94a4692bf"
        },
        "item": {
          "id": "aba98a9e-14f0-4656-b9d4-6d6196129200",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bf6eeffb-8e65-4eef-9923-ae6c64805010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0540aa12-5b97-4503-a941-fb00c6b0865a",
        "cursor": {
          "ref": "7541cf3a-a15b-4aef-ad12-ecbc216dd901",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "229ab999-2a32-4948-a6fb-30985a5ffcf7"
        },
        "item": {
          "id": "0540aa12-5b97-4503-a941-fb00c6b0865a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "738ee350-db16-4b9d-9590-761761e0fb8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c4c23e-ab48-43f0-9309-f44f4a9b87c9",
        "cursor": {
          "ref": "10937046-8455-4805-a3df-a8d22adf4eba",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b5f9b364-40a3-472a-b090-c00c97d699ee"
        },
        "item": {
          "id": "e6c4c23e-ab48-43f0-9309-f44f4a9b87c9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a39bc66e-68dc-4d82-abae-5787202ffa6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cc40af-aaaa-45fe-be73-ef69ed6a42a7",
        "cursor": {
          "ref": "bdab33a1-37e4-47d0-af63-2b0d12657348",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5da12694-2aa5-4cd9-aef7-00a7fb4df62e"
        },
        "item": {
          "id": "b1cc40af-aaaa-45fe-be73-ef69ed6a42a7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4663c4f5-fc40-4a75-8058-e925dc7e037a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410b2565-1947-4da2-ac78-d1136d817444",
        "cursor": {
          "ref": "a5b377f8-d95f-4aec-9561-c718431ecf66",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7d2346fd-bec8-4ae3-aeec-52ad6e497772"
        },
        "item": {
          "id": "410b2565-1947-4da2-ac78-d1136d817444",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e1f1eeb4-6eff-493f-ae35-7598437a2ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156735a4-ef22-43f9-adba-1611ad1fe9f9",
        "cursor": {
          "ref": "a81676f0-3c92-458b-90ee-5bcbe78b2eb5",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1a209939-57cb-4ec3-8de2-cc68da52ced8"
        },
        "item": {
          "id": "156735a4-ef22-43f9-adba-1611ad1fe9f9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f1ca4b23-7fee-49c0-bd06-16844079ed7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1782216f-cc30-4584-a298-3c3c0aa85ef8",
        "cursor": {
          "ref": "80f426d3-7001-4df6-a1fc-f554e2e7ebc2",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "68ac89e3-68fd-4f0d-9942-e14d52db947f"
        },
        "item": {
          "id": "1782216f-cc30-4584-a298-3c3c0aa85ef8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d23217c7-07a4-4cde-a931-51b102865877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb44c22-d395-46f4-b0f6-096a235cedcf",
        "cursor": {
          "ref": "c4ee55e6-1f3a-470f-99bd-10cb2a367866",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ece1e718-8734-4792-a4de-fe78b0193e60"
        },
        "item": {
          "id": "6eb44c22-d395-46f4-b0f6-096a235cedcf",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "046fbf1e-65d6-4d88-8bca-02dd4d2abea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1a8d2c-8428-452a-8a1f-52bf72575be1",
        "cursor": {
          "ref": "2a482614-e963-44c1-8f5f-a47dc3dcdd2b",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3efe77ce-a78d-4585-a2a9-b0d5f287a3f7"
        },
        "item": {
          "id": "aa1a8d2c-8428-452a-8a1f-52bf72575be1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5c8df134-4509-4888-8338-755dbf714806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b268f6c-5b02-4789-a8f2-037cc3eac6b4",
        "cursor": {
          "ref": "16e1ca88-e37d-4a0e-b505-6170a0770b6e",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "dbdc81b9-1e7b-48e7-bc42-a8701fab151c"
        },
        "item": {
          "id": "0b268f6c-5b02-4789-a8f2-037cc3eac6b4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3ecb92f1-f873-4756-8acf-ff6c7c939639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2b7ede-7bc9-4a8d-bf25-1e51db103723",
        "cursor": {
          "ref": "baae2687-3022-482b-ba25-7702f2be4986",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "138f78b4-80cd-44b4-8a48-a345397fef91"
        },
        "item": {
          "id": "ef2b7ede-7bc9-4a8d-bf25-1e51db103723",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "427a355a-046e-4228-a541-e6a744ce9d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f298fe9f-fabd-4f1a-b897-fbb5e2165058",
        "cursor": {
          "ref": "f2e609c8-4c3c-4a32-9407-b0417c058c3e",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6b835efb-29b6-408f-baa8-7c7da634f5fa"
        },
        "item": {
          "id": "f298fe9f-fabd-4f1a-b897-fbb5e2165058",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "38a0994b-69ef-4aac-8a2a-4861c4f6dbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e50f4e2-0871-4cf2-97c9-80d94438cfe9",
        "cursor": {
          "ref": "f2de5814-7ae3-449d-bc3f-0a78aadeee9c",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1049f912-17a6-48a6-a380-eb93d9067b37"
        },
        "item": {
          "id": "9e50f4e2-0871-4cf2-97c9-80d94438cfe9",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8fffe299-cccd-4b96-a6c0-6a2bb2ca9e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16385294-749e-4c6f-b3c5-75e2c15af483",
        "cursor": {
          "ref": "cbd66eec-167a-4b0c-8123-f2389ae7b00e",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6e2e1925-850c-4993-a3be-fa7e904f5892"
        },
        "item": {
          "id": "16385294-749e-4c6f-b3c5-75e2c15af483",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "58b0e482-2140-43cc-a2fa-81bdc6a14b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56bc8d1-36b6-49d3-9858-1417680199ce",
        "cursor": {
          "ref": "a6027fa9-cffa-4cd3-ba91-1e33c3074dce",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c3622355-604e-423e-8bfe-ef4b25a9bfc7"
        },
        "item": {
          "id": "f56bc8d1-36b6-49d3-9858-1417680199ce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0cf551ad-c8b2-4bbb-bcd1-ef62173456f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae651da-a128-4ff3-b17c-e9ec8059a454",
        "cursor": {
          "ref": "8828d9da-7d1f-4739-9b18-484c09a1274c",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "731aad62-5914-4b2c-9ffa-9081527ce12c"
        },
        "item": {
          "id": "0ae651da-a128-4ff3-b17c-e9ec8059a454",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "38e1e9e4-e5a4-4cdf-96cb-deb7c482e73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15f57c6-85b2-4ca2-b34d-a450ed60d6bd",
        "cursor": {
          "ref": "686abb0d-b0e0-410d-8991-99955d8d9026",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "cc9a4038-c70c-4619-837d-d9d68af4164e"
        },
        "item": {
          "id": "a15f57c6-85b2-4ca2-b34d-a450ed60d6bd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a69fbc4c-6423-4030-a7a4-16fbdb85158a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db41b690-ae9c-4113-b382-db023a21bf9f",
        "cursor": {
          "ref": "e94359bf-6c2a-44ff-9e99-1dbb34894f6e",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e381c4ea-712f-43dc-997f-3be87b1c4051"
        },
        "item": {
          "id": "db41b690-ae9c-4113-b382-db023a21bf9f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "33e4d5ef-2412-4afb-be9b-95739d9fb8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e27954-d661-4631-9f9a-0b4ad2bfbbf1",
        "cursor": {
          "ref": "49363f38-e0fb-4630-8301-958c6c704985",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c1f9abc0-67a7-4fef-9c48-b6cb7b1ea340"
        },
        "item": {
          "id": "15e27954-d661-4631-9f9a-0b4ad2bfbbf1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4973f1ce-383f-4a2e-aa5e-a4bcf0c4801a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72e4062-512e-4d46-abda-c337cd5d464a",
        "cursor": {
          "ref": "bc9917f4-b95a-46cf-8f72-d98ef92531fa",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8375c367-2523-4325-9fcb-7b212aa473be"
        },
        "item": {
          "id": "a72e4062-512e-4d46-abda-c337cd5d464a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7b364bbb-0132-4783-876d-a0b1ec91d1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7299c7c-25c3-4ac1-8d86-51a1887adc62",
        "cursor": {
          "ref": "8beb8ba0-8308-485f-bbe4-19e826318839",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4fe5333b-d52c-49b2-9a03-0b4e72f6a650"
        },
        "item": {
          "id": "d7299c7c-25c3-4ac1-8d86-51a1887adc62",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "90f76187-198d-4d28-ad84-6f3d9dd0b3e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e399d32e-8dc6-48b9-9d11-6744b86e3541",
        "cursor": {
          "ref": "cc2833a4-d77d-468f-b314-d5d9eb5df1b9",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "820562c6-4530-467e-af5a-6adfdda59492"
        },
        "item": {
          "id": "e399d32e-8dc6-48b9-9d11-6744b86e3541",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e3c6671e-b87f-4fa1-b57b-1f0c845d71c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e096093-2bca-4c9a-a053-266eda0b9657",
        "cursor": {
          "ref": "58c7f429-ff92-4ce8-8dfe-4e3a5e813450",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b3ea570d-a1e7-4aac-89bb-3410c4d565bb"
        },
        "item": {
          "id": "7e096093-2bca-4c9a-a053-266eda0b9657",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fd418cfb-f969-4d56-a9cb-77fa72a232d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed9b76c-586a-4f38-8c23-c64370ba5460",
        "cursor": {
          "ref": "6a9ec537-6fb7-421c-b3c4-3477f5b25755",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e46f8dbb-a3c6-4174-afe7-9d5629e1ddaf"
        },
        "item": {
          "id": "5ed9b76c-586a-4f38-8c23-c64370ba5460",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2a58751f-da9a-40c7-be14-d9b1db8052bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a345d31-b89b-435f-8b3a-d53d03643fda",
        "cursor": {
          "ref": "d05fa63e-5076-47d2-acae-71f7070b67d5",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6f90a633-d24e-469f-b8fb-e632b767e0dc"
        },
        "item": {
          "id": "0a345d31-b89b-435f-8b3a-d53d03643fda",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6269b3c2-bb78-465e-aa1f-3f7b82b4eea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06eb61d5-9926-40b6-9fc5-b9dfafddfaf2",
        "cursor": {
          "ref": "8ce44ad0-96fb-476f-bce1-0f62c041d675",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d46dc6c3-ba06-4f8d-8cd7-2e640f34e6c1"
        },
        "item": {
          "id": "06eb61d5-9926-40b6-9fc5-b9dfafddfaf2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5f073264-6e8e-40cc-9374-686e3f96fafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 404,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306b0761-0ed6-4f0b-8205-13634434d825",
        "cursor": {
          "ref": "85cc184d-19b1-4796-8184-9ce28e80ea80",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "423ac8bf-e638-4423-bbc2-a79894b8240a"
        },
        "item": {
          "id": "306b0761-0ed6-4f0b-8205-13634434d825",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f7b53168-dc30-4239-a431-047f614934ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24f6f36-ce10-43bd-bafd-e3d800cb2bbd",
        "cursor": {
          "ref": "7eef5845-b738-4694-9d40-abf946887db4",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e7ea278a-7cf1-4efe-8458-9b756fc74e96"
        },
        "item": {
          "id": "c24f6f36-ce10-43bd-bafd-e3d800cb2bbd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "840751b2-e3d1-4911-933b-093ae8ce17aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a74e087-a74a-4b30-b8d8-189c48b63e9e",
        "cursor": {
          "ref": "69c0c71f-aced-4387-9afa-da11baf83bc5",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "79358292-f045-4f24-b806-edec168ec577"
        },
        "item": {
          "id": "7a74e087-a74a-4b30-b8d8-189c48b63e9e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "91d5fb02-0124-42db-9291-fc4e29025087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03688c4-b397-4839-b03e-043246446fe4",
        "cursor": {
          "ref": "1c601bac-7b21-44a7-bebd-99176ea1b1b3",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "86a115a7-bb8d-4cf3-adf4-c82e6f03f871"
        },
        "item": {
          "id": "e03688c4-b397-4839-b03e-043246446fe4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e0f901c0-2543-48ad-86bf-b877b3835ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b9a9df-2420-43d7-9390-99912a657292",
        "cursor": {
          "ref": "333022d2-ea98-41e0-8025-327b28ba3070",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1557a2b0-caef-40cb-8e51-89a1c0650ead"
        },
        "item": {
          "id": "68b9a9df-2420-43d7-9390-99912a657292",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c6770e67-9219-418a-a71b-e86b26208f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fdc4dd-a18b-45ec-97cb-23916147be10",
        "cursor": {
          "ref": "7d69af2e-525c-4884-803a-bb3d516fd218",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8915d495-244d-44ca-a914-9f20c59e1d3e"
        },
        "item": {
          "id": "62fdc4dd-a18b-45ec-97cb-23916147be10",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "22586583-81eb-4b31-b92c-0306be05b5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc71e6f-99bf-4eee-8dd0-c68f019f416b",
        "cursor": {
          "ref": "fc13be55-cf4b-44d6-bdcd-d96f52023fa6",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6a61ed0b-4575-404a-b03f-d299d3d0b750"
        },
        "item": {
          "id": "dfc71e6f-99bf-4eee-8dd0-c68f019f416b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "260022d6-9a28-4a24-813b-ecc9e793972a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f167877d-5eb0-43bd-9acd-727764cc1f59",
        "cursor": {
          "ref": "799ada69-cfd5-4bec-8eb3-448f09f05119",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "33bdafb5-779d-4bd6-9f76-774c0ec7f43f"
        },
        "item": {
          "id": "f167877d-5eb0-43bd-9acd-727764cc1f59",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "75b79c44-006a-4f00-b9a1-4bfcf422aa78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1408b5-15c4-427e-b85a-323a18c1fe9c",
        "cursor": {
          "ref": "93ae2040-2580-4c6c-9ac2-5ecb4824a006",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a26c7195-5ee5-4a85-9b91-ffbb726a3eb3"
        },
        "item": {
          "id": "7e1408b5-15c4-427e-b85a-323a18c1fe9c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9d93ad16-7c48-427e-a54b-d874fcb1fb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6c23c6-e6ac-41b4-a3d1-3c350a023927",
        "cursor": {
          "ref": "5fff25a7-f47d-4180-ae29-72c67ea63381",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "66872852-b5ab-433a-9b4a-9fc0437e75e7"
        },
        "item": {
          "id": "2e6c23c6-e6ac-41b4-a3d1-3c350a023927",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2650f498-bc79-4c27-aacd-017bf4dcf000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85743ac6-8c2c-441d-8817-850c9445cf61",
        "cursor": {
          "ref": "c65777fc-c16c-4391-a8a4-a8664dd7cabf",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c7f5533c-5db1-4952-b4c6-0f18f43bc5a5"
        },
        "item": {
          "id": "85743ac6-8c2c-441d-8817-850c9445cf61",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "71d674b3-b984-4e64-92ce-c17244719c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129943a2-c1b8-4ff9-a07d-bad828d7866a",
        "cursor": {
          "ref": "ccc48384-79ca-43ef-9d8b-ddbe5c009457",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "03c0e3bf-4d53-4b9d-bd10-eaeaf2c37913"
        },
        "item": {
          "id": "129943a2-c1b8-4ff9-a07d-bad828d7866a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "61ad6395-b5d3-4f6f-b606-5426c4fcb212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb1e169-c153-4a57-a394-c30fdcd671a4",
        "cursor": {
          "ref": "e3d24964-f77d-4f55-907c-b88bcca0787e",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "418eafe8-8d66-4fdc-bf2d-ea1677c12f7c"
        },
        "item": {
          "id": "4fb1e169-c153-4a57-a394-c30fdcd671a4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fd5cc3f8-8331-44da-b49b-f0897eebab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cffb88-4e19-4da1-9e86-f5199803c756",
        "cursor": {
          "ref": "914e50bb-9283-484c-bf26-da8480c85d7f",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "87e199b3-e4a4-45d2-8496-9abb639b1c10"
        },
        "item": {
          "id": "78cffb88-4e19-4da1-9e86-f5199803c756",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "51b0aeb8-76f9-40b5-9c5e-927f26b2a3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9169359d-ce83-4899-b8f5-bcc2dfd52776",
        "cursor": {
          "ref": "eea6abca-bebb-4d63-8202-cab55fb7ace8",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b65de7bf-0926-47c0-8904-b5b235a4e291"
        },
        "item": {
          "id": "9169359d-ce83-4899-b8f5-bcc2dfd52776",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6c0b8f0e-c271-4f54-b390-7c60b9c0e4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182004fc-d557-40e8-b3ce-26338afb5449",
        "cursor": {
          "ref": "f842b47c-756c-4011-8b6c-1f5e2d5569c7",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b00d2b20-9d31-4e95-8cd8-7f646a7334d2"
        },
        "item": {
          "id": "182004fc-d557-40e8-b3ce-26338afb5449",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f34f2c9f-78e1-4146-a764-db0193325bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "728d518b-1273-480d-9267-af642aef35ad",
        "cursor": {
          "ref": "afa66d7e-4435-47c7-a892-565f3911e571",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1864f5fa-6f85-45aa-9a6c-5e2a5f8fbca0"
        },
        "item": {
          "id": "728d518b-1273-480d-9267-af642aef35ad",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c3a74d58-c30a-4683-aea4-8ffc6d653307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2840ee5-d34f-428d-b01b-88e97688471b",
        "cursor": {
          "ref": "2e13ec60-c844-453c-b227-b038024cdd85",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "05dcc06a-8ac5-4bae-a391-c7c3662138b7"
        },
        "item": {
          "id": "d2840ee5-d34f-428d-b01b-88e97688471b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c461f066-37a0-4613-b0ce-72ec31c42e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ab0f55-d511-4026-8eb3-2b25c87208bb",
        "cursor": {
          "ref": "795cb9af-0e2f-4c7f-ad13-c53a0226abe0",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "17c13c9f-cc89-4f91-bbb8-560de695ee72"
        },
        "item": {
          "id": "e0ab0f55-d511-4026-8eb3-2b25c87208bb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "974a2352-3875-46d2-afdf-be249597430b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bd4eed-48bf-4506-b827-f0c18013eed5",
        "cursor": {
          "ref": "f886a8c4-15a5-4312-a2f2-4ddd732cba2f",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "000013d9-4be9-44c9-b729-08cebb1ccf32"
        },
        "item": {
          "id": "84bd4eed-48bf-4506-b827-f0c18013eed5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fdfc4c4f-d296-48b2-8381-70d0e3324bc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2862ffb-49af-4156-9908-e22b390a162b",
        "cursor": {
          "ref": "41a4ea7c-9670-4676-bfd7-f8d54d9a6769",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2bd47f26-8731-4485-a6ff-159591afaa6f"
        },
        "item": {
          "id": "c2862ffb-49af-4156-9908-e22b390a162b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f2ca5c50-6d2d-409b-b3c6-05f226178141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a08cfe-7b27-4039-85a2-d233a10f4937",
        "cursor": {
          "ref": "64b1141d-7494-47be-838b-d1796a03f308",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8dce83bd-798b-44d6-ad40-6ed80549bc7f"
        },
        "item": {
          "id": "59a08cfe-7b27-4039-85a2-d233a10f4937",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6552bc7f-d1a8-4434-93fd-8bb8d49b83b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e973be-d804-42fd-bba6-78da9482733c",
        "cursor": {
          "ref": "08ab7004-1b06-4bb7-a3c6-2546bd9de106",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6e36e3b8-06f4-4d24-8031-3251299628ba"
        },
        "item": {
          "id": "33e973be-d804-42fd-bba6-78da9482733c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "99c8d362-88be-4c13-9a17-2ea5f3e7af91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a0ed18-ae7a-40dd-bba7-9fe29c6c8f9b",
        "cursor": {
          "ref": "2d5af7b6-9874-4ca7-9aa3-07f7792ec870",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b74a17e7-f481-419e-86cb-cf269d60dbbc"
        },
        "item": {
          "id": "21a0ed18-ae7a-40dd-bba7-9fe29c6c8f9b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fa03a253-49d7-4150-85eb-8502ba36cbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee04a0f4-1d09-4cf0-a0c7-372566f79da5",
        "cursor": {
          "ref": "e7091962-a3b8-44e0-9d98-0e24e63afd09",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5a8fa26e-7023-4cdc-aa00-3e4cf95a8f5e"
        },
        "item": {
          "id": "ee04a0f4-1d09-4cf0-a0c7-372566f79da5",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b4bd84ff-032a-4001-b434-5ceffda64c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c90d6f-f85f-4246-b6c9-17f8be068c58",
        "cursor": {
          "ref": "ba45b0da-6f88-4325-ae35-fce26438fd8e",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "ba39792a-4269-4154-9b7a-091932773c20"
        },
        "item": {
          "id": "53c90d6f-f85f-4246-b6c9-17f8be068c58",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a34b531e-a81b-4df2-9586-62b2e2f6ea45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8300220-ddeb-4f6e-8e7c-427d619725a4",
        "cursor": {
          "ref": "08027f68-8d5c-4e76-8dea-58c884dae185",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7957b93a-bb52-404c-aad4-c0144da4c910"
        },
        "item": {
          "id": "c8300220-ddeb-4f6e-8e7c-427d619725a4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "72fb781d-90cb-4328-9819-7414b5327af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1853f39d-08f7-4a98-b1dc-b8a2f0d6fa96",
        "cursor": {
          "ref": "0c569f77-4e7c-4804-8d5f-a5480b2a3229",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3e1f4134-66e1-41a5-a851-c84c5fab8ccf"
        },
        "item": {
          "id": "1853f39d-08f7-4a98-b1dc-b8a2f0d6fa96",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f974bb07-edf8-46e4-a48f-723b0d29175a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dba8f2-3985-45dc-9f05-93d70f4d3a52",
        "cursor": {
          "ref": "cf359217-ba2e-4606-bc64-97a42593094c",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d69dba93-b227-42d4-9bf0-ee8a85473001"
        },
        "item": {
          "id": "75dba8f2-3985-45dc-9f05-93d70f4d3a52",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "675d00fc-2772-4674-9b21-e01199e585de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc88441-7c1e-468c-95a0-28b989839e21",
        "cursor": {
          "ref": "f0a7c2a8-153c-4858-a22e-a2769118a081",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "70907f9f-cd0f-4156-a60b-cb62f164289d"
        },
        "item": {
          "id": "5fc88441-7c1e-468c-95a0-28b989839e21",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9cb2b742-3d07-4149-a185-7380c755bde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1153,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b2783d-29fb-4755-9295-654bbfe1ccc7",
        "cursor": {
          "ref": "1c889178-e9df-495e-8255-b7b32d5911ce",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "38439c43-079c-49f0-8ad7-6a7c8ebf29eb"
        },
        "item": {
          "id": "b4b2783d-29fb-4755-9295-654bbfe1ccc7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba59e2a8-a44c-4e12-b371-682d7c7d8e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1208,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72e5eb0-e24a-4e2b-a47f-7b104408b96f",
        "cursor": {
          "ref": "802c69f7-f393-46b6-b2dd-8fefc6af0d8c",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7f690818-8e47-492f-a4f5-ff0890be7c66"
        },
        "item": {
          "id": "d72e5eb0-e24a-4e2b-a47f-7b104408b96f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "79ae0400-76b1-4a97-8817-4173865eab84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665ede14-2b4e-4f3f-b418-677c345da429",
        "cursor": {
          "ref": "cddc8b2e-03fe-4e09-a60b-3538491ff285",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "43bfabf9-8d30-4428-a37f-4717b37ce481"
        },
        "item": {
          "id": "665ede14-2b4e-4f3f-b418-677c345da429",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f32bb3e5-5d68-4eaa-b0a3-ac3e208ccb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995cac22-eb64-48ca-ad79-bac6d2eb31f1",
        "cursor": {
          "ref": "2b07e4ad-ad06-4c8d-97eb-9ef4792e550a",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ff340307-650e-4b08-bc5a-9334b2fa93a8"
        },
        "item": {
          "id": "995cac22-eb64-48ca-ad79-bac6d2eb31f1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "15c9646d-e119-4872-b336-211bf19efeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09eeed4d-306d-4a34-8398-9ca9d3c7da5a",
        "cursor": {
          "ref": "02832592-8794-4268-8d26-139e0b6f5c82",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "474c0d94-7ff4-42fd-9e44-4e2ae0ab606c"
        },
        "item": {
          "id": "09eeed4d-306d-4a34-8398-9ca9d3c7da5a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bd38daaa-9b94-4443-aefd-0875c5947a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72532a79-e8df-485c-a746-1679b97f7a25",
        "cursor": {
          "ref": "9fb85b7c-f852-42f2-91c1-e30a000894d2",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fbf6b158-e76e-44e5-a3cb-92d3f24f9b17"
        },
        "item": {
          "id": "72532a79-e8df-485c-a746-1679b97f7a25",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5ba0891f-5689-4863-a3d6-a207c8ab58a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7666b1d4-bb89-4d78-bb6c-c3f4f4082a16",
        "cursor": {
          "ref": "16fcc2b2-00a6-4c16-9d51-210cc4503e5e",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "54f8845b-4b2b-4aac-8a88-b21222435bce"
        },
        "item": {
          "id": "7666b1d4-bb89-4d78-bb6c-c3f4f4082a16",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "683f2bd5-d0ed-49a2-ba3d-7fc0eeee6ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23189e7-9a3c-4394-8805-ce833e46906a",
        "cursor": {
          "ref": "e645625e-0e8f-4df7-93b9-ce5a1b5c9c70",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "674b65d9-8f2e-4707-9afc-9a437b846274"
        },
        "item": {
          "id": "a23189e7-9a3c-4394-8805-ce833e46906a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "56b6e24e-0b83-4925-9369-fde5565172a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd13162-5ff7-4110-96a3-dcfbd17d3185",
        "cursor": {
          "ref": "108a0f25-bf96-483a-af49-892f7df0c8a9",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c040412a-26ab-4397-8408-901d4a6723bd"
        },
        "item": {
          "id": "cbd13162-5ff7-4110-96a3-dcfbd17d3185",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "918dea5d-ce3a-4413-b42d-52eb786d0c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43745ea0-a352-45fa-a688-6796f76b2240",
        "cursor": {
          "ref": "adf4e31a-ed9b-4159-a10f-e79f6c722f7e",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c8d27f20-260a-41f5-bbec-5d210aa32755"
        },
        "item": {
          "id": "43745ea0-a352-45fa-a688-6796f76b2240",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "daf0db62-b0b4-4ea9-b059-c65ed460f2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce44c64d-9437-4f21-9e1d-b817f75fa7b6",
        "cursor": {
          "ref": "f1f43c61-7311-427f-a2d6-dce2c66ad26d",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "77586d4e-7599-4db7-8bfc-3512720fc9b0"
        },
        "item": {
          "id": "ce44c64d-9437-4f21-9e1d-b817f75fa7b6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "00ea9c17-9aaa-4468-956d-6d78bec8f7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834cbc35-fc1c-40f2-9c0f-10aa1ca98047",
        "cursor": {
          "ref": "1077d1c5-0485-4d9d-9605-59b42ea0a2c9",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e12d0de2-791d-475d-a3a4-721f81e13777"
        },
        "item": {
          "id": "834cbc35-fc1c-40f2-9c0f-10aa1ca98047",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "195d3f08-9e8d-483a-a2a6-2078d6b94a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc21a25-df74-47c7-949c-05161b0195be",
        "cursor": {
          "ref": "83f6c242-e0af-4b1b-a0fb-c712b9377117",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3e93f267-e3f7-469d-bfa4-a7185ac9d1c3"
        },
        "item": {
          "id": "3bc21a25-df74-47c7-949c-05161b0195be",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7aeb02e7-ad41-4b56-989a-031c19ecb994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818f27d6-6929-48d2-916d-7e7e92e6f563",
        "cursor": {
          "ref": "521de888-9da4-493d-81d5-79695d660a0d",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7781dcd3-7186-4346-ab36-016c81551caa"
        },
        "item": {
          "id": "818f27d6-6929-48d2-916d-7e7e92e6f563",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "180c679a-a6e5-4df0-bb15-3404aa5ee80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f14d22a-d0b3-4bd1-9301-674705becacc",
        "cursor": {
          "ref": "92e1407c-bb3d-40ce-ae33-c39c11e7353c",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2bb13be9-1096-4b9d-b179-5604b4b25dd6"
        },
        "item": {
          "id": "1f14d22a-d0b3-4bd1-9301-674705becacc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9c86a2b5-e4e7-4e2a-890b-3b0c207b6eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafd603d-fbd5-43c8-a66c-2f92e3b7ab97",
        "cursor": {
          "ref": "14ed8ec2-b64d-4b5b-a188-533ec44bb6aa",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ca0208fa-71c5-44a9-83a7-c44e462e5c15"
        },
        "item": {
          "id": "eafd603d-fbd5-43c8-a66c-2f92e3b7ab97",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7fdcc20f-e1df-4773-8171-f79ff206bb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4c35a3-c0b1-4d19-9c57-23480906a5bd",
        "cursor": {
          "ref": "e07782bd-a833-444e-87db-d4325d2b6b38",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6a139225-1ad0-4bed-a793-198937320b9f"
        },
        "item": {
          "id": "dc4c35a3-c0b1-4d19-9c57-23480906a5bd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d2e9e8e8-bedf-4c38-872d-289c60f42fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ce3586-ed20-4137-b9aa-9d87a6789d2d",
        "cursor": {
          "ref": "199e5107-547a-427b-9e40-0ab78939e832",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "29792d2c-ade3-442c-af00-0b85b5c4d0ce"
        },
        "item": {
          "id": "d6ce3586-ed20-4137-b9aa-9d87a6789d2d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "58a3d470-f4fc-41cc-b6b9-0faa458f26b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdec1332-7c49-406e-b709-6514a170f642",
        "cursor": {
          "ref": "41ee979a-0a48-40f1-b81e-142da409d061",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "06147a35-2957-4574-9840-c5aee7868f32"
        },
        "item": {
          "id": "bdec1332-7c49-406e-b709-6514a170f642",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "437bf352-e3af-4ff1-93b2-a3ced2c5ea8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aa895f-71e3-42a4-9d44-4a82b49ec49f",
        "cursor": {
          "ref": "30a3dbd9-2e68-4d2c-9d96-2140ab185caf",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "96313c61-71bd-4f5c-8370-864ee56f7df6"
        },
        "item": {
          "id": "58aa895f-71e3-42a4-9d44-4a82b49ec49f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4a1e0a0a-e3bd-4d09-91c5-f689f52aa9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7a4aa7-bcd5-4b0a-8fed-c06228244dc1",
        "cursor": {
          "ref": "04f37368-5431-4f84-8a6c-694f98a516d4",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "62d609fe-c77d-47f3-8462-2638a4eea08c"
        },
        "item": {
          "id": "8a7a4aa7-bcd5-4b0a-8fed-c06228244dc1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f3eb0094-0b9e-49a0-8390-0ad468a2e91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222133ad-7d2a-4dd6-9717-77f8c9e41dc1",
        "cursor": {
          "ref": "1437d032-1120-4d0a-809f-b578a1d2c5c6",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f94cd219-8053-46cb-86c3-44ef5971e3b9"
        },
        "item": {
          "id": "222133ad-7d2a-4dd6-9717-77f8c9e41dc1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0c2c1db2-35a8-421f-8526-7c3cdc4a9981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991ba318-54fc-44d1-809e-af46ead56de1",
        "cursor": {
          "ref": "a183d771-8bd5-4f94-800d-80521b9bbf1b",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "1669b963-6f36-4779-b8e9-29050793f663"
        },
        "item": {
          "id": "991ba318-54fc-44d1-809e-af46ead56de1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0e084a49-f578-47a7-9284-3908bf95bc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cafcbc1-68e4-45d5-b65a-4762c3e20a9b",
        "cursor": {
          "ref": "7ee2e93e-eb86-4879-a8c9-16553ca497ee",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7ac172e3-29fc-4602-949e-5bc120ba3721"
        },
        "item": {
          "id": "3cafcbc1-68e4-45d5-b65a-4762c3e20a9b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7019c9d2-3a50-4b83-9cd9-958a07d16160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6357f11-06ae-45ba-b5cf-78e815aa63af",
        "cursor": {
          "ref": "9af0eb99-1a7b-4b25-a1c1-4de52cfef49a",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7081baba-21a6-4b20-9370-86dd686e8b9d"
        },
        "item": {
          "id": "d6357f11-06ae-45ba-b5cf-78e815aa63af",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d3f40ce-6482-4442-920b-d43ce9a3cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768ac30a-6429-4ba1-ac4c-3762790405bc",
        "cursor": {
          "ref": "99d3eecd-9f15-4032-9d70-d717e742f943",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ee35a222-0cb7-4715-a753-e766c8d4ca32"
        },
        "item": {
          "id": "768ac30a-6429-4ba1-ac4c-3762790405bc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "79f72d09-b8d1-426b-a762-f36f02977ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a90cdc4-a303-4a1d-80f1-dbc3e8717e26",
        "cursor": {
          "ref": "a0a050d6-224d-4187-a5e4-b616d4cbeb4e",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "58447d81-eaa9-428f-b284-68cd1d6b47b6"
        },
        "item": {
          "id": "6a90cdc4-a303-4a1d-80f1-dbc3e8717e26",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "284bdceb-366f-46ee-b5ad-4a7978b68855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073d404f-096f-4a45-bb49-e8268ce565e7",
        "cursor": {
          "ref": "e8c43e8f-e013-48c7-87b9-9944d0d1473b",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0bd33bf4-9d70-4cdb-a08d-67e098e2e8c3"
        },
        "item": {
          "id": "073d404f-096f-4a45-bb49-e8268ce565e7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a358788d-fda1-495c-98b7-c51d3ad9157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cc8dcd-4b1c-4ea1-91c8-cbc12c738816",
        "cursor": {
          "ref": "e5efc65e-369e-44ce-b610-a6be1c15fd6c",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cd068352-1eb7-4a57-a065-9d52afb9e4b1"
        },
        "item": {
          "id": "49cc8dcd-4b1c-4ea1-91c8-cbc12c738816",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1b4a95ad-c34c-439d-95ad-97039a1f2b17",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9271a5-a0f6-4fa6-b144-ed16344a1803",
        "cursor": {
          "ref": "07b4de28-66ba-4aae-921a-29775b38c7c9",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fe102947-8dee-4f7c-b126-ccae58771552"
        },
        "item": {
          "id": "8d9271a5-a0f6-4fa6-b144-ed16344a1803",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "0fe26abe-ca21-4971-a9f2-d912fb221684",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 343,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ab0510-21a7-4485-9fe1-49bb996ad218",
        "cursor": {
          "ref": "8f6e83f5-64d2-4a1a-92c7-111d3eec4258",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0511b0f5-30c1-4c1a-85cb-35cf7b219275"
        },
        "item": {
          "id": "d2ab0510-21a7-4485-9fe1-49bb996ad218",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a9f548a-0a3c-46e0-bbe6-d49f5cd40953",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b937a7-3df1-473e-94d7-bf8389719c3e",
        "cursor": {
          "ref": "3c6191f0-5cf8-4403-9bfe-3dafd8788b08",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f1f9b6cf-f1f3-4d7f-86ef-1dc9af66243a"
        },
        "item": {
          "id": "33b937a7-3df1-473e-94d7-bf8389719c3e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "dca0bc54-7b9a-4b94-8b62-b7b8b8ef10ed",
          "status": "OK",
          "code": 200,
          "responseTime": 393,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a82787-7dc8-4129-b2aa-967eba30d5ad",
        "cursor": {
          "ref": "45082411-0123-4994-8b61-099e8e11026c",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f9bc746d-b200-42b3-865e-76efbb6492bf"
        },
        "item": {
          "id": "05a82787-7dc8-4129-b2aa-967eba30d5ad",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "6909662b-a6eb-4f60-af04-ab22962e16d3",
          "status": "OK",
          "code": 200,
          "responseTime": 361,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6371877f-8409-4e27-87fc-aa92cc57ffc8",
        "cursor": {
          "ref": "10b097a8-99d9-4d9c-bd2f-dfaae39d3387",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9a89130f-3d4c-4c3e-ac27-2d7de9b02d5e"
        },
        "item": {
          "id": "6371877f-8409-4e27-87fc-aa92cc57ffc8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "17517769-ff16-4c6b-a2ba-90579ea5b649",
          "status": "OK",
          "code": 200,
          "responseTime": 358,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c10cfe4-ea5b-4e60-89f1-c843efcb49ce",
        "cursor": {
          "ref": "868d8aac-b6fa-4445-8942-7e54d1b46a6c",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "341c5fe8-e02e-46af-a27b-5fc8cdc190d3"
        },
        "item": {
          "id": "9c10cfe4-ea5b-4e60-89f1-c843efcb49ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e2d1564-d1be-453f-9c64-424dfedef006",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c10cfe4-ea5b-4e60-89f1-c843efcb49ce",
        "cursor": {
          "ref": "868d8aac-b6fa-4445-8942-7e54d1b46a6c",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "341c5fe8-e02e-46af-a27b-5fc8cdc190d3"
        },
        "item": {
          "id": "9c10cfe4-ea5b-4e60-89f1-c843efcb49ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e2d1564-d1be-453f-9c64-424dfedef006",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c10cfe4-ea5b-4e60-89f1-c843efcb49ce",
        "cursor": {
          "ref": "868d8aac-b6fa-4445-8942-7e54d1b46a6c",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "341c5fe8-e02e-46af-a27b-5fc8cdc190d3"
        },
        "item": {
          "id": "9c10cfe4-ea5b-4e60-89f1-c843efcb49ce",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9e2d1564-d1be-453f-9c64-424dfedef006",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa2a349-e1a5-4c99-bf01-8ee28f291d5a",
        "cursor": {
          "ref": "4d413902-1d64-4f2f-af15-84e9c17a7e5b",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "838741a6-51b2-4695-8130-476721202168"
        },
        "item": {
          "id": "1aa2a349-e1a5-4c99-bf01-8ee28f291d5a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8ecfc386-6267-4eab-a17f-3d957281b9d0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 250,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe6ca24-6544-44b5-9aa4-983aa32c80f6",
        "cursor": {
          "ref": "a8222896-1db0-4870-8379-6d4ab76c65f5",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "50681f58-9858-4f70-b7c1-865c66ec12e5"
        },
        "item": {
          "id": "ebe6ca24-6544-44b5-9aa4-983aa32c80f6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6b80dcbe-58b5-41a6-98b2-b3bf52e7a520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe6ca24-6544-44b5-9aa4-983aa32c80f6",
        "cursor": {
          "ref": "a8222896-1db0-4870-8379-6d4ab76c65f5",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "50681f58-9858-4f70-b7c1-865c66ec12e5"
        },
        "item": {
          "id": "ebe6ca24-6544-44b5-9aa4-983aa32c80f6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6b80dcbe-58b5-41a6-98b2-b3bf52e7a520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f8b481-494f-4072-a2c5-a9640a047d61",
        "cursor": {
          "ref": "529f47ab-7fcd-4b66-be39-9c32fd383f8e",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "55d67dfd-6bf8-45f9-b5e0-60a15849dac8"
        },
        "item": {
          "id": "d1f8b481-494f-4072-a2c5-a9640a047d61",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c18f83c7-bbf6-494e-88b8-64dd7a136b3b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 456,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d7fb57-d3b4-4bb4-8140-62f9c6ab3ec4",
        "cursor": {
          "ref": "1c5ee3da-d40a-4ec2-a867-4978d4b5772f",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e86436b8-7fc5-40e1-b838-0d0812861858"
        },
        "item": {
          "id": "d8d7fb57-d3b4-4bb4-8140-62f9c6ab3ec4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1d107b45-411d-48ed-b8ea-852266f6a962",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d7fb57-d3b4-4bb4-8140-62f9c6ab3ec4",
        "cursor": {
          "ref": "1c5ee3da-d40a-4ec2-a867-4978d4b5772f",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e86436b8-7fc5-40e1-b838-0d0812861858"
        },
        "item": {
          "id": "d8d7fb57-d3b4-4bb4-8140-62f9c6ab3ec4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1d107b45-411d-48ed-b8ea-852266f6a962",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddddb6e-a796-45ad-90dd-cd1ba55009bd",
        "cursor": {
          "ref": "3e7ded2a-c81b-4f26-815f-91d4aee50e0a",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "33e99f2a-92fe-463e-97ac-1564d4ca1598"
        },
        "item": {
          "id": "2ddddb6e-a796-45ad-90dd-cd1ba55009bd",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "b691f5cb-edbe-4332-a85a-9bb1eb12b963",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 485,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}