{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f36ff35a-5d5e-4681-9095-bfd95f4fee49",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b1bb14a9-6990-44d6-8d1b-5d6de78bb10e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb6c94b3-7714-47f2-91be-c45f3e7d30fe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "130f5bad-28ab-43a4-a111-92550abd8885"
                }
              }
            ]
          },
          {
            "id": "0dab25c1-8413-42d2-8510-180bf31fea69",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "355b977c-a339-4d2a-b507-05224b3c574d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cab8bd84-7e4a-48d4-989b-e244ffe67bd8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c5b91509-11ee-4dbc-b603-02e8a477800a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6d5f40db-5d80-477d-ac45-d2b61fc4f15f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d4d2e331-94af-4c41-b75a-2cae5413471d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfe225ff-34c7-47df-909c-5a85c0e2aa7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "76b4b42d-b625-44d8-97b1-eb1e848b8f56"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac960c8c-5c5b-4ebb-a0cc-08e9bc18462d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a642327b-a2ea-4449-b1d3-2ee22153c88b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a0d6827c-b42e-4192-b05d-f87e49344118",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "440619a6-eba6-48c0-8226-55e24fb21169"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bbe1b1a-b416-48a4-a05f-eef0e1fc99c7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4a7c20f9-73ad-41bb-ab5f-0500b51160db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68437592-b1d1-4d1c-b2e9-0c1bd0680578",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2987a702-526d-490e-97eb-a28dda87db1b"
            }
          }
        ]
      },
      {
        "id": "5454e1fb-8650-4076-82d5-f34bb8a23001",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f44a8378-96a4-42f2-a196-1cb4961b3a5e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39f9b5e9-8227-49fa-9ed1-e6755585f313",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "05e31b48-3e46-45e5-bd72-c3f884fd13e9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e776cdca-0d73-4473-8051-6fdc895ba3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b76b0532-b16f-4194-bef0-568281604890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff71a6c-44d5-4fa1-a615-8df7be0c21f3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81980eff-0d8c-4c0b-a054-2f5773625ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ecd1e1a9-261f-4e90-8c58-2cb0af8a4edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750fb5fe-14b4-4ae9-8a14-db02437095fb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c33941-6dfa-424e-be58-afac09a074cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4538ea10-6f87-4626-a8c2-3bbbc308b522"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "25bc4db5-09d3-4fe2-891d-1dc67b0ffdaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9df45f32-96cd-4502-8792-f3c458861ced",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f822713f-80b5-4a2e-b890-d0e4cb25bc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a64fe8f-c11b-4fc0-9f76-9eeb7dadd727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8f3e7f-6bbc-416d-b430-0deb4e69a533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92582293-87b0-4e3c-ba51-36ab9c4f8c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ddc228c-d100-4846-bf53-7b19f5cb11b6",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738596ff-02b1-4a16-b3b3-4029af2fd495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3039141-e351-4be0-a1ec-e9e346829aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa367c67-3d2f-42a3-9219-c437c82c4649",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "82324930-db73-48c6-a15a-bd2a3e8ab3dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3f760107-dceb-4802-ab7f-0ff169a0f2d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc4bf8a0-ebeb-4631-943c-c336fadd91e7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3684547d-49d9-4fb8-8ede-cc507c3f61d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e42c9d04-55b5-4b12-97d3-9a42107fae58"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "430e5079-8321-4bc2-931c-a7b2432c336d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c7e052d7-ef0b-4e14-836b-744252f4d367"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a4d299f-335a-489b-942b-50c9acab8047",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b905ce11-c508-432b-9b9d-97a5c0b02da0"
            }
          }
        ]
      },
      {
        "id": "43326a45-5114-480a-9478-bc614872d1f8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "64117860-06e2-4ef6-997d-5a721d9dd970",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ca602e9-f8ac-4508-b1d4-ad43f7ae101b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "266fbd6a-d2a9-4092-b97b-3d4af4dead49",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063051ba-3ade-494d-8417-9bbee2c6a15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4712f03e-bb1a-4908-8479-9e332f0d0a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04d965b-47cd-4ef2-804b-a45ec7452c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "299d9fe5-14ba-497f-92cd-73be87d9dc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21528469-f9bb-4233-956c-ccfc4b92c8f9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "882c3ecc-8f11-49d5-9825-96c7ff8b1497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f606d61-a674-4897-9030-2e00b11b2971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd972b14-a6af-49bc-bb71-0ce13cae198c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "802176c5-d2d1-4c1a-9d43-16c0c0dd7847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac91d09-2fe1-4b0b-ae5b-a327c7e2ce24",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204341c9-3605-4a23-80fb-0f94878ba952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e82f189-c287-419b-b628-b5d5c30d3eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b75ac9-fe01-451e-94e8-3259669fcf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df14ca4d-6870-4824-a838-dd6591e1e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae650a7-bb47-4377-b81b-2baab8dad255",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1fd4d4-16a8-4e68-a51b-8675bb32b751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877fb885-9e1c-4861-8828-afcf51a5df8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef596c90-0ceb-4c9e-9463-8c659ef35d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "edbf6218-fc66-47c7-92a9-96955198b2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6849ddf-a4d0-4b15-bd1e-a2a7adad5d1f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b8bea6-d5e2-4596-824a-8916e3038d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fb85f5e-631d-4f86-a07a-197084d1148a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b31ab56-8ba5-4a9d-ab04-9afc2e5163b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd5f330d-aa82-4f1f-b0ad-9902ed367e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "367b9776-824c-48e7-9e91-3c90811096f0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25887b3a-9445-4300-9957-76b538bb1028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4151c6-e96a-42c0-a0d9-e96b8d00f502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb192f1c-bb27-4add-aa57-283f8a9b4706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b2580df-5168-4563-9c66-f7dba05dedcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa074f7-93ff-47f2-8e5b-bd135600669a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a38e9f1-8c03-4058-84f2-cd3328c3f123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834097af-d275-4540-bb48-2feb2c97ac7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec15d739-66c8-4b77-99ca-210b142b7595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfe19c3c-5f04-48f2-9841-45680ca65ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f44c6b-3f6f-4ddc-a904-03340deb6726",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5ea2c9-b090-473a-ac68-4e4d9e39d26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b064c70c-376b-45c0-9bc9-492d06f2e09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f5c5a0-05c7-4767-8800-494396c2ed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf37db5b-1cf0-4b46-bdbe-8049ff95e6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf554926-e3b6-4ff4-aa9b-94c7d55781a7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e927ac-4215-4593-b0bc-9df5e0555864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57a7294-5a6e-4900-b94f-49254fbb32d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569a6516-a4f9-46a5-89b5-8dd8b8da3731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "708e48f1-9a67-479e-a3d4-0b2cd0f126b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad587b16-05da-497d-98d3-0a422357b0c1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff601c2-d04f-460a-9068-6961a8bb41a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f62e44be-a875-4cd5-b7ed-31d7846dc3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cf7cbd-7374-4d34-9b17-22a4c894905e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd637aa8-544c-478e-8c54-8da8a37b6578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda56659-f91c-46d7-af53-380f2b70f705",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf05f4c-7389-433f-b50c-3c0c1f18b570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25df680b-4da6-4e49-af65-db3fd0776d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b444f82e-d42a-4aca-9258-4342ddb473e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f553157-659a-4946-a4a0-40fd4a270dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e8409d-5148-4b7c-9d1f-96306e477ac4",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d05ea5-95d9-4559-9e8c-2bfd9a71aa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e3b798-8763-4d85-90c7-f44c7253c5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc431d3-8c49-4152-97e6-930ae63c9ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c13545be-62d2-4fdd-9cc3-1b5d2c7aef49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956ad7ca-8ac1-47e3-9a14-f6dcdb588f63",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3b0103-6bcb-4af1-81fd-30875b4d232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee53fbe-1474-40b7-90d4-d3294c476d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cac44a-a793-4623-be37-8ea2e8969995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "609e088e-92ca-482b-b6a3-363fa9caf8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6bf296-2a67-4d39-990e-31e07ee493e4",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb152c9-e53b-4cf1-9cdc-248499c24848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2f9415-007c-4174-acd4-cc75ac0a960e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa82dce-dcda-4621-bccf-9113512dd9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea5088a-d8d1-4fe1-8db1-d256cb6eb5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f72c6b3-76f5-4232-a228-1702dde5aaad",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9173c5d8-7c6c-4b25-8fa4-bc69d7adf681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d06386f-e6b1-4ffb-924d-7e553346fbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed38ee3-3cb0-4582-9035-2b9f1ef39bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f48bea2e-a14b-4c80-ad5b-c18b021ff0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c43282-3111-4340-bd46-9efbd7c79884",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bab04a-3c77-463b-b0b4-8022ef581b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6c232d-5307-4fec-9e85-aa210881a16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83808b75-d3c3-4802-892d-65cae8ed02bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4f9a388-f7e0-4354-836e-71ac03d2cb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6f0d7c-e776-4198-b051-1c13edc8f00c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdf364c-3fe2-4ee6-be6f-f1c268e34cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f59ad9-8602-41ae-b445-d9ecf6abbd62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f214cb-0f38-4876-a4de-47dfbef5532a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "200949e1-5c11-4e06-917e-e915dc266a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce258a65-edd4-445f-a7e5-9c5c95ce4b87",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fad388e-fc7b-4e01-9f98-872e42a6e941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e2a8e8-1cb7-4465-beb0-da2c986e1a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aee1552-586b-4063-a93d-c9c54a81f9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eaaa7b5-c8c9-446f-8142-ac99717b5227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4192cafe-e9b1-49c4-a0e9-a890db6f9433",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff62d883-6ab9-4d73-8ef0-aa7900b9700f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81d4012-0fdf-44b5-a79c-7840423be3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca407da8-a350-4610-a4f6-d6797bc0e214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb860130-b61b-4428-8b6c-725abf360f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3378ab5-5f48-4e11-a369-0499c9c59389",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7787679c-e9ba-4422-a6a4-e020acdd7678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a889b146-6034-4052-95c1-971c872926ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515329a8-9787-4f68-adfc-5953f7468126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e18772fd-d10e-47dd-9330-04fa7c445098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8692b6-97bd-4176-963d-785a105aa268",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd29fafe-1d20-468e-9bfe-7bf9714aa102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be71847-0136-40e4-a81d-8540706591eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e242d8-527c-4fdc-a61e-e9d188adfed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c669b47c-e611-4854-a779-86fb9452ee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582a4ce4-997d-4277-bf0a-42f7125e5819",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93369ac-597f-4454-b02b-e590f2bafa7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90fd329-3776-44d5-8d35-6aa4d599b522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19c6edc-b28e-4c96-9671-61248f036141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86edb15-d65f-4dc4-80ab-c6a74b5c2397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0647eaf5-ca5e-41e5-910b-0ae6abd449ea",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857d9fdb-8cdd-4e80-a83b-f6e061bd6df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8ef9dc-913a-45e8-92e7-6e910ee47cca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6305acb7-37cf-4b12-9ccd-4947ab04226f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd57c24-eadd-48b5-ac1a-2a6ab4331dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49356c8a-aad9-4b64-b77b-230ac51cea67",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c76d7c0-023f-4de5-8848-58e49542936b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa69b1a-9a51-4203-83a6-dd8095ae62d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24335e6-b7a2-4520-b6f8-b7c587d2100a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ebf255-448d-4d97-8048-8968c5419332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3083ee-f2fe-422b-9ffc-5894d1a0f2ad",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d11da4-bcb8-474c-ae3d-d03b9cae8b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d98125c-828f-4ae1-b720-a1a77d22559b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf63986-524d-4684-a5bd-c2d3c1f2e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "642c5a9d-7a3a-40d6-9292-51bb9144bd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2d2852-6e27-42ba-a21b-f883b0f5de46",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76121c20-2b13-499c-9e66-a6588076b39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a0fafd-2f98-4239-90b7-3fa44f18dad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9d4348-584a-4e9e-8d19-774a9a2601b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4cc0e1-5aed-458e-8dfc-155e22e14c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6e1b23-860d-44df-a4ea-10ca607c8085",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc657c8-681b-4d8f-a487-517278834139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f230a1-c062-490a-b7fc-b7dd7e89aac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69db9498-cc7b-4525-9e65-707436f5477b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e76c19f-2759-4d76-9846-4863ba5e3929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b890052d-180f-4e10-a058-61f58e9da1c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917d8ef5-d1d8-41e9-81d7-2284359584a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fecd35ea-ca93-4070-b52a-cb09158f7919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46a9f39-ec66-45ad-b20d-ae26c730db04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd423587-423a-4c91-b8d1-e4cd45447424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa451d07-31d3-4608-b8d7-374ee2021be9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83658ff-20b0-4993-a234-d885d9ed59bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2aa498-bd2b-4549-be4e-4519f21d8ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e660071-29b0-41fd-8fcf-8c7a505116b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2936d289-46ad-4524-b777-a3085f10d921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a981a441-d097-475a-af62-a6ce34923acb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3899826d-4b5c-4571-aadc-c21c2ac944a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ac5394-d253-49cd-b0ec-0bfed8e31bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7fc1c4-b929-4a94-9a59-a76f1f514d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c52c0204-6bda-4bbe-afd1-35ad6b0b1ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a387634e-fb2e-4ba0-a8cd-83f6416b4cbc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153dac1d-55d1-47f0-b673-48c874ba2d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af1b3d0-994d-4a5d-b81d-1762f4299c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840a54dd-f137-4241-b858-84a1ef3fa4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e249ae64-b73d-44d0-adf3-c2bb3c0a247e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ca8d27-4ab9-412f-af66-58144166a591",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269abb2f-6192-4beb-88b9-3a926eaaea39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e600953d-6dfb-4330-a438-f54056507897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9afced0-03cf-452e-a65d-0373e5112f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "decc27f8-f004-4daa-a9a7-5cb7ef5baf47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a28ce46-fdae-4602-b2d2-fb9a5aafa3f0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def1877c-9d9e-492f-a613-ad17bf4e686f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fad71c5-e88d-4852-b443-068a4e40ec85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5c9086-8020-41d5-92d2-6b632c3c3785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f14736e-fd60-40b8-b597-1c944aa255a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0866c37-088f-42fe-b332-1710e5ccf4a7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d0df0b-a88e-4f9a-b925-ec0b54dbbe60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40790c94-13aa-45bf-9b0e-3bd9213f8416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48065631-9f55-4143-b16a-0ad680fd95fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6bd326-c647-4753-b5a2-2e4418a2cf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4072f9-1d28-4e49-91a1-436a5321f5ef",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967d6d15-ed7a-4d56-9d3b-184f5530aca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ae1738-098e-4a84-8a70-67e53d4de787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c314df59-a52d-480a-861a-d31beaa139dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "518d2018-7ece-46bf-b763-cc0f12e775f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d65e6c-20b7-4627-80b6-945da1ce7bcf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cf199f-6130-4627-9124-bac7edbd7535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dcd990-ffb9-4a60-957c-0eec9e8bf858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76df4aba-0384-4651-a493-9882530fffdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d790b8e2-2cd9-4082-b92b-909ed98eece7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b45a32d-9036-4191-b56f-0cafe7d62d76",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29fa620-e19d-45bd-97ac-3479d7fb9030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a261575c-d1e8-41d6-87ff-d7cf44d7e923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0ff9ec-253a-4d2f-983a-eb0155acb4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5a742e9a-4f53-4eed-9a12-94c56dc31e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f0f258-80df-432c-84ef-5dc60d703667",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c308cebb-e334-4b64-ab7f-9f95e583d0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b877f01c-4bdc-4645-afbd-9ddd42d04df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd9036-3b64-464f-bfb4-18833af0a0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dae5ad8-593a-4d75-aa5d-704e685b8201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10998172-3bc6-4fdf-ac2a-f8785ba24583",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b02fc9d-afe2-4af7-a690-cdbe1b6bf6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2bb5f03-b2ba-4e3f-925c-b7165a9ca1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ffdbc6-b9eb-4df7-aef8-489683316bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e19f843-3a74-43c3-9fe4-adcfdfebefb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0062c83-1efc-413e-8e61-7ff77fdecee7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4f0c0e-adcb-4174-84af-7944512b6e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c331f6-c95f-45a2-8ace-bc2266381c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b240909-4457-4532-9696-75e23987d7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c74264c-ee34-436e-b4c3-ec2b723613e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523bcfab-1704-436c-a912-08270cba63ff",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c74d8d9-48b7-41bf-a6f0-b730d5f7d021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f112b8-4fd8-4de4-b5bc-ee32460239b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5624cb81-325d-4c37-860b-292fea6f0443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6af69ed-c50e-44b6-8bf0-9c9da5d06e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726cb84f-af4f-459e-90f7-316c4d45319b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39079cde-36ef-43ce-b9e1-983a244870c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ee99de-fd09-42ae-95e8-ec602ce739a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000f594-7a68-4f0a-9ffb-d666d9db8c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c1ae65-186f-4745-80af-3bbff7a342c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb053de-63eb-43f6-9840-afd781bb3784",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6c56b5-bbc6-4daf-8a9c-cb92520f49b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb0c2cf-2887-4d48-b050-b757fb6b9cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1877370e-8f15-4992-9d54-a8d7726e41ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb08b231-beac-4785-bbc1-e41e199cab9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f3aebc-dfae-4a23-a309-a6aa17004e38",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777e0bc8-1634-4d72-9879-e85e45796afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdec2ba-03ab-4704-9d07-be77bfb9f01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46aab370-43af-4123-b0ec-edbb5440abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fc07e2-f278-41ef-9a7c-b11929d58343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10dbf572-c735-4f14-9be7-0518db7d0feb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da46f1d7-ccfa-44f0-a51a-0d1039b256fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278587d5-ff2e-4a51-91ce-19b893cac3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2b5116-a610-45e6-bed1-19405a5dfbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "becee0c6-fde2-4c78-9cf4-7c86bf13f845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28ab6f41-d5b3-4e4c-a5a9-e46f04dac0a6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d6d299-3df9-4acc-ae46-f198cab0071c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb609c66-51f7-4401-b69c-71e4d11643c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf21ddb-4ec0-4926-93cc-f833d346b346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ae6119-992a-46aa-a912-9b1aa543870b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5304bb-e14f-462b-a734-0d064dd50341",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dabc30-264b-41e2-a5a6-b7e6f8334732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8517bbe6-4f80-437c-b204-8ac9d940d0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72feb76f-2c70-4ef6-974f-5ecf9f1692ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "94e0d104-be50-4606-9a18-01ad145c0c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dff162-ce1e-46ec-9973-4baca44fbf9f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac617192-0d9e-44bd-9350-422b44454d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0018d316-456c-4dfb-b292-1d5fbcba6bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d9bfa1-7aae-44a5-8ab4-4227cab41ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02aee1a7-ad1b-4744-a7a1-e3935c30e842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea27840-dc51-444c-86b3-d5daab885ab9",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1ea180-1dd1-4eb7-ab01-c5f53da0c2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5293877e-be4c-4595-840f-d7829bc607a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "052d15d4-b99f-4574-bfb3-7dcd840a61c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec18ae30-f8ca-412d-812d-8de063ca08bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b87a9ad-000c-444b-93e0-2b8f931b2f5f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad435686-3ac8-494e-9b43-4d7412cb1af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c36092-14f5-49bf-bc19-7d5bef6fb0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebddba91-6b6f-47e1-80ba-322bb98f151d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "18a22ba7-ebfb-42e6-a01f-9260efcf9edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8d028c-a30e-469a-83e7-23f3a74bc6eb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5018d6c2-265d-4cbf-8521-2f9ccc3cd87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa240c95-9032-4383-8791-eac7ed2ecd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41211be5-1a4e-4d0b-b6d9-c9b5114a074d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53437c50-5ac9-423a-83af-88523f4f007c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae833c3-9eb2-4433-b1ef-496da9e44178",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51427a67-af63-40e0-ae1e-b5352358f55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1ceaf0-fe10-4319-80c5-39ad1fddd1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7331e164-e7b7-4e8b-bd6c-43cefe4411db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a30f312-cf16-4a7a-86c5-f6d25e8e0ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9261454-97c1-4216-a429-851cc372044e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066b28e1-763a-45e3-941e-85ba2e6ec51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d20d3357-0c4e-4a69-b1ba-2f48276ff542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2a235e-2f20-4b2d-9121-a60c4a7e2727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1af3f3-6960-46ad-9476-ddb6a85813e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00942e9-2a06-4607-9621-221128d8935d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9449e6e-b362-4023-bb93-f87973c3c7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5ed9c4-aed8-4b13-96c4-7fcbba734bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a343cc-fd93-4b3e-94dc-53ce383c6f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11b0030-0495-4d4c-979d-dc20fbe09096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3de9acd-921a-44a0-8e5b-f78cd27e0fb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6135cfa0-428c-4d7d-bdf5-9378739c0e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244ff93a-100f-45a9-841d-06a9174a6c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3531238-bb10-4ad1-af6a-e34d01736048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21d35092-1288-467f-8134-9ab13e0f84f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae3c163-bdfc-42b5-8380-bff33b746196",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71668da-efb6-44ee-b0c3-7d1ecb527abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742b0af7-6ce4-43a2-9ae2-279e36c846a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fc3245-da41-4e53-8eeb-56bef288b987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfafa48b-4142-43fc-b6f9-c9471d8201d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175c6b0a-de3a-4698-be89-b7fd47a0a321",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716abf56-6ea2-434b-b1ab-a812801f6f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9347fb9-5ab3-4946-af26-83f9cd983d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf4c747-9f8d-4fa8-855d-4a8120735195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda66b14-99f8-46dd-9a64-e3afe30b2559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72225072-50bd-4eb2-a82f-d237f7b6bf2e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf230e86-2f09-4f82-b3cf-ec11f154ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740a3b5e-a3df-452d-ab89-f4f9d1c407d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f98f09-904b-4420-8934-9514a4edd925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4b153880-3329-4d63-950c-150fb62a4ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f0240a-c7bc-4f55-b87a-05c863baa7de",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b178af-0424-4bbf-bacd-6c9d7ea90798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fae4c6-c51d-4041-ab38-86321086cc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704c253e-bf5c-499a-944b-40234d32228f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a848d57-b623-4361-8716-2b5fe4fadba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238df71a-eaff-4277-aae7-eb2c0f512f58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fbe5eb-ef2f-4552-ad82-7321809e6b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24999645-dbd2-4241-9836-b243ce39f3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03aa3fb6-4704-4d12-ab9d-f032aa88606e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf108d38-550d-451e-bc3a-87cdf4c696df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a2aee7-60ca-4133-935a-936859b6e001",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6fb432-3de1-46a5-b562-cc0e378837c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69690c08-05e0-42bf-82ef-c7933ff7a37f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe672ea9-7d75-4409-bb8c-52946db3987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4783a94-4a0b-47fa-b642-94f89b21c412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad88e740-f649-44db-9edd-106d47634f1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cce5755-03a7-4dca-9d02-0b50faa50bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb3bd07-3771-486f-8e52-61759fc9111a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6cab6b-50af-472f-bbae-d5f489485253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "830adcc9-2fe7-4ded-8b3d-3f38f17e1742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffec0b7-3fac-4b51-8950-7670b8fcbbd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1ae843-de26-499e-bc72-1f2904b3033c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e93ebc-2b4a-476e-b5c1-5ea1ac07a5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1427c51-1518-4ddb-a553-361ffe647c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f73a99d2-a52d-4fcf-b173-4b55c6db6994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895a8746-0a75-4548-9d19-120dbbc03975",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b9e223-a456-4290-a742-b2e822936fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a83ed0e-6b89-4ce0-9f4a-6ea947b14f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789f833c-dbd9-413b-abac-7dd4daf47a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f9f1ee-5164-40a3-8368-0dbd4d946353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10eeba90-1f70-4a0a-af00-433f7436afb0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36911e18-0682-4d61-8b56-76cbf7a7b9f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a6b5e7a-5314-4672-9279-0174eb01fb36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8df6c8-7989-4bfc-ae2a-c65d779d4f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dd1ce0-fdb7-4842-99b2-ae8d48554f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a598f4-a2bd-48e0-b1db-7e0bf9d569cc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db16956-6ff6-4478-ad3d-6c40c22e0603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c858c6-63ce-4308-9cba-1fac64b5d345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4b1c66-45e6-40ba-aa09-cc199629c9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60fa1da5-e3c3-4e68-8476-96f8551cc025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147206d6-e877-44b7-adfd-2c4859b2a379",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cf0bd2-472d-479a-b4d4-52cd1b8364c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabf6815-d965-4f9f-938b-bf5b9ecb02bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31eaedef-7dcd-41e8-9d13-98a6b5ef9bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80905a68-aa1a-4f8c-bf7a-3be6e13a91ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5973de-a288-4b7a-8aa5-1383eb6ef9e7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d861f9d-177c-400b-b2e4-d902f5673757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6417ec1f-5e80-4329-859f-2df67cfd2072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2b6740-2b83-4bfa-aeaf-35f196505f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecae3ade-998b-4fc7-ae98-b2678c49c79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61ee261-10f1-4ba6-8974-af9a9997d27f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d62165c-47a9-45c8-b342-1e3c2080973a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0894a5d-9296-4298-a737-c1f201cb5175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1825964d-7b2a-4a4b-90c2-83eddab22bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a280a6be-731c-4338-8efa-00ab58b786a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cccfa1-1746-4c42-b918-414e14037721",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdfb3a1-7c70-44cd-9036-fff19cb61dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5475b31a-c312-4e99-b03b-e86107ec34f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011ec95e-e0bd-4258-a008-52627fad93b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2565075e-b30d-40d3-b6b5-4e46dbcb5cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669e3c98-8a13-4b70-9b07-f03c82479873",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9e458d-4276-434b-83b8-c74b22ea8426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de2b72a-8d90-4795-8f98-121bc5edcfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25b06dc-9b4b-4bc3-b54a-45800e8073de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8746be-8dee-4abb-8f49-9d571aed77f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43698c7a-54c1-4289-96a5-84726cc64ff6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed1f461-1e69-4580-8033-ee2b61dc1ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c81af8f-3f83-4a48-a3d0-2c804fe83401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8281dd65-c809-4dd9-b683-bcbd7cae231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e3ed02a-ccd0-448e-8915-f25bda14bc9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459a5ba7-97ba-40d9-b8de-2a02720b9123",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57c12b0-ef5d-473d-9acb-24d60adec2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9979cf-9d27-4a55-b5ad-effbefed1c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d239dd4-7a63-4155-b509-8b645e330a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd1c7456-409c-47d6-b4b9-99b0ead6f9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec67fde1-68b5-4dcf-ab57-77e7efe95109",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd589154-736f-499f-a450-b9485b0b05ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a3329c-f404-440e-a557-46be27e02056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48125fc-e1f2-47eb-bfe4-4b008172dc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b73a458a-115a-43fb-a2f4-20dc39fb335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8176d61f-fc28-4d14-8792-cfe838837fcb",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9385596c-5546-405e-bcba-de923e2c56b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66532d7-6f38-4158-b1d2-472fa0e5c79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e23063-4b95-4732-b1f7-2c4dc2d7ba50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5848215f-e8b6-4fe4-a1eb-79aba54e64d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36663e6-8672-446b-85ac-e498e05cf4e3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f319551a-55d2-4430-b896-92a63b5ac778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba737b3-4526-4c3d-bb48-564770609c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fc83a7-0129-4364-9051-d51df291ed16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "740cc718-a9db-40ac-b36b-c011387dc114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a665e0-e28b-4b23-9128-d3889ea1fd0e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f7d74e-b061-4590-b8fc-df55bb8f661e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b448783a-5778-4588-8470-32f26fa75496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52f581c-288e-408f-a026-4ac23fe86a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e1a530-0328-4f9b-9170-de7d0bd3fd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a447939-6bb8-41e2-b7f1-12f2d04647f7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20b27c1-339b-4ac3-adef-e68f89015c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c6b336-db3b-46f2-9b08-bfa4b7f6745b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699e177d-e099-4be6-9309-89bb2211af8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad291ba4-e1ce-4a1b-9f81-5d1deef4ed77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6d0d8c-1006-4e2b-bf60-85c0330027a6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4452b89f-56ce-442f-8f38-526c5097fd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca88b5d9-c53a-4cf0-b90d-1bb54d5106d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04273b32-81b8-4fa1-ada6-dc65c45bf911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f75479f-be5d-46c8-abb1-1e4bf20dc361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f395fe-1750-4a49-8418-a0fe5ca6ce4f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec3cbc3-fa57-4b51-91b1-edc05dc8e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0d3cdd-34da-44da-84c4-0f5f012ff941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0455cfaa-26f0-48bd-92e4-0a524cd644e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aac16221-f960-44b0-8ab7-14e951a81e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d53a4c8-2d43-4d96-b30f-cbe144b73c4d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d9961e-a799-4155-b8b8-73e150634357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a57addc-38fa-4bd9-b43f-2669650821b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ace3a5-05dd-4893-bbe6-d4f24fb03274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2119e884-edf2-47ed-8476-f7dda619646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b4f995-600d-41ef-a3a4-93ce7ad72812",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40bb84c-d9c8-4496-bbfa-5c143ac3b2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a8e116f-1552-4f03-a103-3ca8b5f81594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd47c93d-e28f-4445-930f-4ba8fbf44e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd89392-3426-4c68-aa36-364a1cda3743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8f949f-2139-47d4-9632-c1550482956f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ccd6689-1454-453f-8e3b-ea78bd4babb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9b917c-6690-4f42-b0c6-7705634aad79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900bf1d8-7043-469b-bdd3-5d750ce27079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9a1e78-5403-4968-98f9-d881f6a882ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2ae063-ebe9-43c7-99e9-0a02d86437dc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4806ba31-b861-43c6-b777-39cbc0ea7d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d55e7e-d7e6-4466-a07f-d8573e90e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13caa774-40dd-4036-a01f-641695fc7012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed6f7dd-21af-4d13-ae94-41cab50dcf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad0b579-b66e-44af-a106-56d8e3bce816",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac98d3f0-bdbe-433c-b69b-90ec65275b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1ad2237-02de-4f1a-84a1-714be1243c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9444f4-906f-4add-b30d-2894724d4b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba56aba8-1cc2-4f91-ac20-a4c5b3cbf241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b4aeeb-8834-4bb4-b699-cb4ce8a81680",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08932593-c0ad-41f8-8f3c-5980f4ddc1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c4c829-fe28-444d-9874-e48d146c37f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af73087c-d618-4e77-a52e-602c8de75dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b84576-7898-4dfa-8efe-bf91f3de3092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090cfd19-8a7a-4e12-ba80-f937e85300ec",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d3cb84-3cf8-49d8-b534-c636a394b81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487a591e-ee12-4cb1-be63-a231a0260958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fb4eaf-f3ff-4be7-9db0-9357ae72e231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5527aca2-1a4f-4123-a964-061cd62a558a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d471fddd-ac7d-4eb6-8123-e5c8bc967899",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090dbbb4-d8fd-4900-8a62-8cbd26e1099f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee89f1c-5e71-4ea9-b93e-9b4bd5e7b646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d841748-67c0-4883-9651-6b1f88062fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20faf7e2-1045-49d0-bfdf-6d59d71c2099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590a8b29-4c01-43f4-a2a0-a95ebbfa7d33",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7deb6a92-caf2-4dd5-aff2-7faaef9688e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e67ccd5-74a7-4a2f-9ae1-7ba271e58cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c2ab34-d1f6-417c-a6f0-9e3e64ed1d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c6d10c-e5c1-426c-a841-7f65d920e0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785dc971-0cce-4f65-95d0-d94eb4c7ae7c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacceee5-98f7-48fb-9494-11858226405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31505d12-dc22-4d6a-ab90-b2982119bae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ea2f28-0239-46ef-9564-18dcc0a757ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeccf899-5729-4a87-99bf-ed994c6d791d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbda56c6-09f0-4c20-9260-3ce7b4529c3c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9697619-20a3-48a2-9009-f7f6ff7842ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ca3d97-717e-4da3-9f79-4e97011e9506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c556ae4-63ba-4a3d-b073-8275ba56a47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b477a833-2637-4a76-8b73-fd3cbe208be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8733ae1-51ca-4ed9-8ea4-74869accdf7f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2d26a3-ae8a-448b-b5d1-783b1cd343a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5721d98f-e87c-4996-ab97-a86f27e9ba23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8011322-0682-439f-8bb0-5fb015330af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c391b05f-8b4b-4871-9103-338a77d38207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d29309-4532-4566-945f-28a41079d309",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1c39b5-9cd7-4412-ac32-a44546c9353b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d7f681-30db-4c44-8fcf-ca7beb1835ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc920f5-b97e-476b-b110-903cd5e5c66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "908cffe8-08f8-4c33-ade4-b22f9ed80919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc9cb9d-af1e-4ecf-b8cc-8ae0481713e8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28cb8a6-dd01-477b-8f5a-40cdccc9b575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0ca96df3-cf3c-4126-b71b-ec6eb79a83e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41c3111-559e-47cc-a821-d055de869ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0f5f8b-e210-47ab-9c6c-60d2b11815de"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a090728f-1ef9-4835-91b3-c6be8e980719",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16a936da-0f0a-42a6-adc7-dcf6476dbfb2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634a8027-167c-41e4-a8ba-4e95d00bfd71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9674dca3-ea94-4c80-a88b-36255d5f0c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf471c22-94db-4891-946e-104e4859cc53",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "86542673-905b-4872-a6d4-64b127a6b5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d04e180-a5cd-4bf3-ab4b-923ec6684835",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c313e8-0497-4e08-83b0-54bd0ee784ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef440616-36d3-4eaf-993d-e8a786ee1a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70ca2f77-42df-4fa6-a7d7-20d39fac3c79",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "468d23e8-2ffa-4d61-9edc-fbcd1e25254f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fed63a8-1272-484e-9a8b-538279df0024",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d76fa6b8-5d35-45dc-945b-684db91a387b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7482e538-9947-4d8c-a22e-8df0f5d45486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94b3a34a-c319-46c1-acc6-0fdb878baa21"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fb7f329-210b-492f-9407-db0a5d413699",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef8930bf-6e16-49d8-85aa-3e5410a5a3fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cfa6f11e-21c8-456f-ade1-417cd5a1d406",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "64c4801c-2a7c-426b-815d-720503335969"
                }
              }
            ]
          },
          {
            "id": "5c9f86b7-c664-48f5-b9e1-277dbf9adc88",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9dc1da83-8e58-4bf4-b206-2f2c52e5b4e2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4301f8d0-70ff-470c-b987-cb3bc29afe77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4f38a2f-350e-445a-b94e-412532808883"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23968c8c-0ef0-479d-aa6a-bfa0cc7e1609",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a7acb48-5a4e-47e6-b775-d81447f8e8b7"
                    }
                  }
                ]
              },
              {
                "id": "b7367726-fc7f-4e51-bb9f-0c0fea6c0cdd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4db9d539-4702-48aa-981e-c381b0d01e0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdf44630-604a-4427-9395-8e7be700589b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d5db32b-5a6f-4428-935d-e856553b22dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99a8b57f-3dde-4068-9460-ea45541ee2f9"
                    }
                  }
                ]
              },
              {
                "id": "8ed12310-b792-41ac-b153-581a3903b373",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "faf82749-7b3a-4124-8707-d02d92a13bf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63fc7579-230b-4e9d-888c-c2447625ed2f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd0d8ae4-d6a6-4e25-9bd9-f34041b64f34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c8fe6258-67bd-4fdd-9ae6-cb6b9f2ec91a"
                    }
                  }
                ]
              },
              {
                "id": "386084bc-10d4-48ce-aaaa-ad653ea2e284",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "199fed7d-9539-4451-9135-9003a5768ba0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7179d563-771e-4354-b905-0dd67f40b2ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "504f7438-db74-485f-934e-25dd9228dd7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "35cd6906-e66b-43da-883a-effeee3439c1"
                    }
                  }
                ]
              },
              {
                "id": "3a98f53b-d18c-4e89-927e-d19ee563fabe",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4039103-beaf-42c0-a348-01372fc956e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bfbfbab1-97fe-42c7-9add-49da5cfded4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38b85a16-d2c9-4ef3-8a0f-e8e56a3e8314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16565fdd-b6ac-49b3-82bd-129d10e4dd74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "00a8eb86-25ea-4ec8-865d-3bf07dff3ab9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c2e26edc-fe48-4f41-8137-f53df30e0542"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c21cbd69-ad19-49b2-a608-74f48f98a93f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fc916fb5-8507-4677-932b-559c7de1af65"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6505db7e-7ba7-4a11-8349-43fa6a057508",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a7823f21-ddd8-4892-bb3b-1883d8ee811d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0a3b745-cb9d-4d8a-8970-b49bc2c73fde",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53396e64-f48a-452c-8567-1faa5818c4bf"
            }
          }
        ]
      },
      {
        "id": "5c0a27fd-12a2-4f48-b4bc-892e8047e4e1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b8843e99-cd21-4efe-b142-822d05c3c7e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ae31a00d-c0ac-4070-8274-c03ec0da03da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10a04cc2-6572-41ed-b208-2d97589d2819",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b905ec6-4cdd-4dd0-8897-2e4fb3aae3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1b9673-3d37-487a-a6ba-abd6924e9dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57efde89-7d09-4b3b-be5a-b4bb669d3109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fb292d-e737-4a47-927c-523ac960cd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7088bb-fd05-4027-b394-facbe01dc280",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe013734-d72a-4476-bfad-cc29437899cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87921472-e5d9-4494-9fc4-da781274de60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff0de3d-b22e-41bf-bf18-cf5291acbe34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1770c76-b5c5-42ad-9dfc-66147ee036e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e326a1-fffa-465f-b904-ae472ef3bc57",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfb6515-7bbc-4bf3-b62e-610512bf57ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9ea39f-e764-4c11-b6e9-c3b16d4ecc05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdff3ef3-2bd8-4143-a12e-457cabbc0cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6c278c-dd86-4984-a728-75f8295bc68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d555773c-c205-45c4-b95c-49157bf476b8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d5f749-0ca5-4c17-a315-8a4607377962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c20d1fb-34b2-469d-a7cf-dac24f4c9043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c78a57d8-72b4-4ebd-b902-fa554177fe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "295c4678-f879-4124-9209-9c7794870f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe939b40-54cb-4891-a8c4-d4e02de35af4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed97657d-b2bd-46e0-aa49-a0d01f15596e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba261bf-1f62-4d65-8c02-646e499486f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e114eb7d-b5e7-4fd5-8a46-ed915588c934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c58a6ba-6c7b-43c9-a69b-6e2d9bdd3e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9ff768-9c21-48d1-9caf-1bf3b91082c3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c410d0-e0b1-4d38-adf8-c34c831c1886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8422872f-6717-4c5f-80b2-291a8026384c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281aa69e-892e-48e6-b8cc-cd435a0e32b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a997215-f97b-4103-8c6d-b3830808d304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cf5dc2-6280-4b4d-b559-5f144f0d52f3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05c8312-0f70-44ee-89d4-c1b19dfc830e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee41870d-b70f-4cf2-a355-e952ec0b5aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8cf0995-0cae-4d06-a586-da6272d57648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be3caed-37eb-4d1d-aee1-abf440aaa9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d8fcd4-f967-4829-b2d9-b36398ebc5ca",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85858b05-0088-4e7f-95bf-7689f9878207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6425f59c-be57-4b38-b852-fe2e3b78d593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41879f3b-ba5e-40b2-81e1-79523bd68b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21078b01-923f-48e4-9701-a9a4d48b7f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec040e1-ace2-4197-8600-ce52e0538631",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7e521b-55ca-433e-a7a3-4a6b46e6ff0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3bdee2-fd34-43d1-8705-21d2558eee0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1de5b35-d05e-4084-b53e-af239b5b91cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b342b41-e7e2-47af-ad60-95c0e39460e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce14cd37-f45a-4ae2-9d89-177f86bf7758",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeedc613-30ae-4dd7-83ff-bda11f0f6ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d612c780-a4cf-4915-924e-4aae0088c7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318d462f-2dae-4a04-b7b7-f3c59531a6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a313ddf-71b4-42de-b9e0-cccf8de4b3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8810d4a6-0fcf-412d-a626-eab3510bf3bc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440df20a-1fcd-4515-99eb-5b6f3be1e845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54813ecd-2cd0-4b0f-bc8d-bf4b7e149b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8993aea7-d419-4b27-a03c-e9cc2e32602d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39a2cef3-0671-466f-9329-433598a67021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac326c2-88a6-4d1d-8799-0175f3b39909",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a1ea64-cd7f-4cd2-a7f7-b0221119533d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf2d7d9-d6f2-4f81-a45f-8bdc843cc215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83610303-98c3-4c64-9270-9d4995ce89bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a912e2-9d9c-4085-8481-9106dde91923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eee68c-2625-490d-a245-464bba1ae6b9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083360c0-3e99-427d-8a12-c1ee38b7389c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58627fb-7430-49fe-b9cc-fc0e159fc460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cde7f7-45cc-45b5-a107-50b12dc3aaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65f78e72-584e-46c5-ab18-81b26c7cbf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa605d0d-f1e2-4ad1-9153-b5cd49382a08",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630db5af-291c-4bd7-954b-6745bc311220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a421dfe-2d2c-4cd9-b5c3-61f15bfdcf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7750c2c-51ea-47af-a3a6-f14b4f6c83eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "be27a6fd-3aa6-453d-89fe-47084d108d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb5b46d-a90d-4c2c-8d80-6f9c53e48919",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cdcef4-43df-4cb2-a444-a1cd0215413b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9830aee2-1fc7-4df9-baec-2d01454b994f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fbfdf7-c629-473c-9fc4-5f11268893aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f322bb-b3ba-4cf4-88c7-63bbf465e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec3392b-ce24-4777-962d-fe32189ea075",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd819a79-cd99-4237-9eae-329e04df29f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a911947-82c3-4bb1-bfa1-66f4676626ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37808f3e-09da-4127-ac6f-042f6238f377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0369794a-f35a-4b3f-8c33-05485b271ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0619837-6632-4b6c-85c0-e5e664cfe4f7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d05ced-4c54-4e30-aa31-b188793d6fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538a191c-b3b4-4319-85bc-31c75bbe89bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafc5c6c-4bda-4844-9811-019c4ca6a0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e87e34-5438-43d0-bbc9-f106b51b02bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1e97c6-6321-4d49-8fbf-89566e361df4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac28928-e4a8-481a-bb68-f4de4657370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f51670e-5e77-4197-9460-1b921d6ecabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c322926-d13f-42cc-a82b-d84fc008a9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f06f621-a259-40bd-8f06-2b04d3ee0db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8c1dcb-fd56-4172-bdb5-f6de9c4d41c7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6723ae3e-90fc-42ce-8c1d-47e907c1cc57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baf619e7-f127-493d-b879-aa5ef3fdbd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafb95d4-87e3-4330-a5d4-d1c994b00926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8087e1db-58cf-47f5-ab08-62cf69f8d0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c393a3-2690-48b1-b90e-30a1f78c41c2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71de50d-c62e-4bd4-8212-2334c099912e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65950507-d892-4f19-a920-c9df6dbc763f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e592ab-e48a-4fbe-a591-c778f040d79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6665be1-edd8-4f80-8fb9-85cb8a8d07a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28203b4f-fce6-4f5e-bb55-d1e1beb69f64",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829e92e3-294b-43fc-82ce-362323e9aeb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b062cc-1fc2-4550-b2c0-3283a56cdc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a368c5e8-c0bf-4a9f-90c2-90baba9b4d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1529d47b-2d6e-42c1-b3f9-67279c7359b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "694f30ef-9d89-47b0-8f26-aa85cfd4a074",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "627afc93-2917-425b-8b8c-36ab8a4eae47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4ede9c-48d5-4947-8719-7ecea54d0ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7d9c71-ac15-402e-b68f-ccba94783c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7085fbbc-c13f-4e2f-b838-77327b0c01b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfdf323f-eebb-49ea-b9b5-418df7c2690b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5618be-db56-4ad0-b275-1e4e68d56901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d50be2-4848-4220-99ee-834fec2b620c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e50ba0e-0c1c-46d1-955c-b82e1b6978f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "041f334d-c894-4ad8-ac74-0ef630251805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7bbc18-e086-4d5c-b244-5b17ae261df1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aad283e-3ae2-4d5c-bc9c-ef8a33361f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ef0707-2724-4c04-9cfd-3079e78f5468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30406c8a-b34c-4ba5-8e7d-94a9846db5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bc174b-538c-4b1f-a8df-ef5bb235845d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f3c26f-4b9f-468b-80c3-7648ed22fb54",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6da593-ff88-4f66-9c2c-5d899970c0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41417f8b-23cf-43ba-90fe-e285213e9307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3fc4fe-2bfc-4972-8f5f-96c9565513fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "444711f5-ef06-4cf9-922a-da1ead2521c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0266a2f2-df44-4640-80e3-881ab2d0049c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153c8c14-4001-414e-9d25-b7ae0dc41402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d192b04-6733-4d8b-89c9-387784478940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192eaeb8-c6ba-4cb7-8da7-a8533b44ad2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0f6172-f1be-4b56-ac7e-1c501896e9ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab618cc-e755-4195-bd36-827062b66c22",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfee801-c285-4585-87b2-509d8192f2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4342ac-2eb6-4889-af15-fabdf4742022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2436ddea-7d51-4b5a-9e34-602283569c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba2bca4-97a3-4a8f-9286-e2a4a01e04dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51036cd-609b-441a-872f-75ee9384920f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a0b90d-3c02-4169-b2a8-682e0ef125fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fce0557-2c2e-4ce1-b9b7-fae444594958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6e3e2f-f57c-4747-b3af-358f328f55b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849c91f3-8391-4e62-ada0-4443442ea827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebdfd70-9945-4eb1-a1b2-827efb45978d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec73b42-adb8-4e71-bb4e-cb329517d60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3982d993-c20c-4ea4-936d-c17ad3cdf495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f135717a-e924-4e8e-b9c8-55b6c8ae9f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d8f9ee-d86c-418b-8dd3-7e83220371a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02d611e-7e7e-4302-8363-b723f3ad6241",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfdb9c2-637e-477a-b424-0e5dc06cdd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82fdb14-4853-4f2f-945f-d40620511ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57a4d92-ec04-4a4b-a730-283f0b53e624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d797b132-5a71-4feb-827e-5f0615955cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec49d5f4-a5c5-4259-98bd-03fa6766db16",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff550a97-5252-43c6-95e7-cce9d946cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af56791-cc4f-4e12-9780-83c63f7fd04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6daaf02c-cfc9-430c-8e66-b69f9cd96dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0725eb90-e484-4bb5-9932-503fb6ebcdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3833acca-1722-4134-b821-80827cbc023d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a69f9e-02a4-4dbb-a0a4-ac5449dfb55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e240668f-128d-4bed-9ac8-961996b36570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d37a33-6efc-4974-a494-17f1e158e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10788028-8c58-41e3-960f-963df5d2442c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d33e1af8-cee4-47df-b2c4-89d0e6b605ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33b22576-e4a5-4106-a424-275d535ecca4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1740f75f-fbf4-4c22-89b4-8726a4698103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d5c701-7232-4137-a528-989473a4a568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9a9dcb-ad16-4060-8b70-b356aa7a5aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a69281cc-1f56-4d42-9d33-0c73a820f02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ce96d2-c1ae-4cf3-8988-95f257920040",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80d37d0-3121-4697-948a-06f865cdf91e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "6d3afca0-153f-40c2-943e-b185b5c9878b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b6f877-ab9f-403c-baf2-7e2b84b778aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77fc2f18-dc89-45ed-bb8e-372f76d49850"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24ba3b7d-46ce-495c-a71f-1bde88d0fc13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e77b9d4-76a3-4b87-9ed7-b2b40cbf3db3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0248c56e-cd8a-43a9-a0ad-723dfb5ae334",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a4ef3665-197e-4674-a299-1da51c1337fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4b2bf91-262c-463c-a445-dacd98ff5b49",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d86cfa4-ab9a-4169-83c1-3893aa71ee99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74730dc2-8d16-402c-83fb-cf00157004e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d40cdfb-5aaa-4e55-83bd-909b6ad24d13"
            }
          }
        ]
      },
      {
        "id": "1995bfd9-8f7b-4958-b49e-375fd9198c3a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0d835b95-acd8-43d2-afb4-65fe895a0cdf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d99f39f1-3ac7-43f1-878b-e6a839e99a06",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "02b7c184-2b8f-4d19-be32-c202ffb38200",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dceddb14-a0eb-4a22-891d-0a85f1760896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7674f736-483b-4a95-819d-a27b19660a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a8df35-c478-4e88-a86c-4ef6fb6ac428",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c717d634-64df-4d76-acec-1daea29212b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6e2cb8e-316e-4315-b28a-00bd9a18af1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1690fd11-91e2-4646-8640-df1513a2d126",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec761a0-f579-4d0a-a8ac-c8947b360b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a895a7-efba-4ba6-8edf-d8dd534f2223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4191d60-de7e-4a28-abec-70ad26792866",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c38a60b-e576-4ce5-af13-a09d4f99f770",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0068ecc9-5283-4543-a4e4-df65841e8cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b380b1-7dba-435d-9076-867ad90ec06a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a082e1-03ff-4121-975e-7f830aa6da5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dbe3cb-e1de-4bae-aa19-6367d871c43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c6b779-555e-44f8-8a9d-7d715c70751d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d937508-a9e1-4d3e-aeb4-4e5746020b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b3c598-bb93-4c34-be86-59e93e0252c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5aa273-846c-4d58-a3ef-6962e8690b7e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffc169a-893e-47a5-af09-70239c5d5e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2c73c9-0efb-4ecc-a96b-c87a8fcbfab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1815a444-54f0-4f68-b653-5f1320be7186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c4acd0-6cb4-4761-a14e-12680aff9dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e3f403-9d00-4312-b9ce-ce02ac403849",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ee5c80-e82e-47f6-b1bd-a19ae41e9c5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dfa40b8-7140-41a1-81b1-a624fdc26edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f49f09-c5f6-4e80-9918-398d5cc0c1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e44fd90-f21d-4bfc-a736-0de1ca427fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2aef2de-a59d-4dee-87fa-34d53e527b9e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d155e1e5-bc32-4568-9d6b-b82f229a4751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d693d3-fed5-4c25-b42f-30fd5786792b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b9f191-7f5c-451e-a44e-33e253ff4634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dcc599-d2f1-43c4-b0e0-694fe589bb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e54e3b-609b-4309-8e8f-090f16589d30",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3b709b-e2c7-4909-95a1-ace884112996",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fbab882-dc2f-400a-8dba-1e87118c3334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e53788-4293-449f-a403-0b43069a17ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35605d75-dd0b-458f-9410-95e8b7410452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70d27d3f-92a7-4a51-9c31-88f137234689",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c914b70-34e4-4231-90d9-de2efea4b434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749e00d9-2525-4694-a2f6-2162ebdf5f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aec0c75-a2f3-498c-b714-41fa723976c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fe3748-e6e3-4047-b436-3d95a546a8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f059f6-4336-4a36-b693-fa36c6cd30da",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074f6295-2b39-4592-a708-6bc61f407f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79678a59-ed26-49bc-a657-fdd445ccdae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ec7b0c-7631-4b0d-a79a-c6bd38a31dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5087d0-2c9c-463b-a143-6517472b6039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7caa429-1ba8-4b0c-afb7-91e71d3bbc99",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e415e37c-6001-4114-893a-ee8d46d65471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52c610a2-879e-47a3-8838-f219c0ff0efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c996ebe-85f0-48a5-b12d-6e8e55bf7d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6204e5-3c1f-4ed2-8a3f-35824783a765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbef9fc2-50d9-4650-9a9e-fb2f810f0ae5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b26b854-aa46-44d8-9541-dfd3ce0de6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff096df1-d3bc-491d-b4be-8b17c070d636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cbb962-7313-45a1-81d6-e560d58ecabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edcc8d9-4bbb-4916-9f74-114e1a6d23c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca57a4e-8819-47c0-99e9-0552561db5a5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c781649-3cf0-4917-897f-c6fef4a6e652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4331e20-5dbc-4097-8bda-27b24ca21174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11038030-ded5-4f82-a55b-5fe4a93889d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3c852f-a8aa-4d92-b112-ac1e7866a59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e937ec-7ce7-45a3-bef4-48afc9c47000",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b05913c-7ce3-4db2-8324-52360ff59835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63be700a-6aa4-44a8-b05c-6e77967ea83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6437abb6-10b5-4a2c-8131-cf102062e091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207b421d-6d84-4790-8f72-75980174a727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638b3676-40d6-46d5-84f6-a5270d98d10d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a782e820-934c-45fb-bcb0-89773016d194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a3526d-d0a4-4ad2-8713-431fa071ed28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28252e1-9e68-484c-ad80-35cda70e2629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c1a2aa-03fd-4153-9574-05d98c6c5505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18939934-ac19-44ac-8124-9f7c16da3a88",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74cd69c-e36e-4a1d-b520-ea74d160bcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14783e5-61b5-4401-a600-fea2ec4122f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dcf77c-9aab-4196-97d1-80d56c3e90e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba690131-d997-4e3d-b9d3-9fbb66354fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb5eecb0-3943-4006-a7d3-ae7c6433a4fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f599d1-921c-43ec-993c-0cbe526e63c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2c2f13-19df-4014-84b7-626e4ff6ea91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b481f910-437a-49e4-be45-7011b65fbe08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30985c45-671e-49d5-b960-9c8f4b599d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e81257-d9f9-4fb2-b326-6563342fa186",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc9985-61ff-4ac9-8e73-7ca143767c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325896b0-e6e7-44c1-be81-cff5965102b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c658fd9-948c-4e4b-af11-7130663fa623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad28ca3-b87c-4182-84ab-76657630b030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350efea3-1767-41b8-80d7-4c480f93d1b8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7536e8c-997f-4a01-9e7b-bb5812821992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6cbb10a-2f4d-4529-9c79-ae12f06c58dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b197f1-1acd-4b22-88c5-8a01d69b941c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca22d32-af09-4984-9451-14b87ae27433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3575f037-6e5f-4a75-9a56-946d6be854d6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a624cc8-ba3d-4400-8848-c7b882cee42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe553ad6-39ce-4cae-8589-684f601f6ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884492c-2548-4f3d-ad4f-ea0abf4a0c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d66cb48-6da7-4125-bb18-a862c98d3280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae5ffbd-e677-4a74-85fc-0616edb98610",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516720f2-8b6b-4bd0-844a-82cf9966380d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb2da1d-9671-4756-89e0-b47955744ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7758d3-4753-488d-8cd7-9ffc232d66a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b73ea8c-a7d7-4c05-8e66-4493930834a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7489a3f-2844-41e9-90be-da760f5162b0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee3baf2-0e5a-481a-ad7a-3f8f64cc656d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6941dd2b-e354-4006-807a-2cd270cc8120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea96e492-65c4-4a2a-9a07-f20f99f5a165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe7c1a9-ba48-45b1-b2e2-46fb34ae144b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933a812b-2fcc-4f65-bc71-284559051e0f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f5ca48-6539-4dc9-b25a-c32f9d89e70e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "758ed223-2557-4eab-a2b8-7ee93f7eaf1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab048b2d-fc9c-4e7d-903f-97acec6e72f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10082f97-48c0-46d6-b2d0-81621d073a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4742bef7-5fe0-450f-bb74-078f1fa0aa2c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f2ca4c-f16b-4cd3-87fc-8fb02b7ec04c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d0ee50-b16f-47cd-9659-aa4fbd2601a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f60fc0-054e-4b75-a2df-78aa84354c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b80098-f43e-478a-9c01-0f4b56ba8cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28db3c0a-9b77-481f-a7f5-318a2513d42f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baf0724-a364-437d-ac92-1f7b93809af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07de651f-7ebc-442d-b736-4b2412ebf430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671df6a0-35dc-4880-9aee-ab03492e3b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5f78f9-7385-4914-8875-97fe0e6e2a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ea4699-05dc-4e94-881a-e8554fb53a01",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be4a2b7-555a-40f2-a57b-6879dc2d7ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df844bee-271f-4120-9767-baf2a3637ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd16e91-98fb-4c78-8096-6373e4dfc60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71acacdf-4a0f-4b76-a28c-b998de5be0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0073351d-15c6-45fa-b75c-6c7a7251d4c3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f67f9d-6f16-4af3-9baf-b721cffc3194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dc43b5-8993-49ac-867d-0115ac7f512d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60197cf-a3fb-4cd6-b153-785d77745475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c775a24b-e3b1-4753-b860-851f4a54fe24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9950fc8-52b8-4134-bbab-c6a84d6792c1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41927dc0-c46f-4f56-b4fb-2cb367e6e756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eaa0f42-c856-4085-9039-2fcbc67b86b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53fedd4-477d-4c8d-a015-b7e3b69164cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec5f127-86cd-4dda-86f8-5244fd644542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90258d72-e58d-445d-a3c6-2e3445c0cd3b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a92c69-2f5f-47d5-a5c7-0b70edd61b81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d273be1-f19a-4e06-b849-7cff295c8e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03deb2d-3904-445e-9958-76ff516d4dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94324096-b848-48fc-b278-782e4a956959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd42719b-1bc6-4779-8c58-5d0a2fc8109a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5500d839-5bc2-42aa-8a51-07c895c766de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7271a7c-da8b-4e4e-8792-176bd3749e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed86f41f-deca-4fbf-829c-6e6e17ebb94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23dcf26d-a61c-4093-bd15-66ec16bde433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80aa781-52e1-44cb-8e2a-1150b225b030",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d7bc4a-fa1b-4bcd-aeb5-3144507a6c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5d1038-8d02-41ce-96ff-87c65c879c7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71c1c8d-6037-4303-8925-72cc1e5c9f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f45ad3-eb69-4dd5-a979-1bcc86f3bb5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291fc188-465a-4c72-aa98-5b175f46c962",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b472e72-8281-42a7-b960-d3026ee4819d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38aa9b4a-1715-4a91-973d-3169845a6a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d68b99-2d59-4869-aa3f-d350d498bc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdaa25e9-ef01-43f2-806b-132b6c8c7b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a57f1e-2795-4d80-b4d1-e32b912eb931",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a35f37b-8f77-4a60-8d4f-2257a37a89a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0b11ec-4dd8-4a96-918a-3201b7b8f14a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd396bf-e820-4d0d-90e1-e9d59250c655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04fa3bc2-ba46-4338-9bff-0d80416fa4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614afc70-88fb-4f42-ac25-784eb5bb11d0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9bcfef-a69d-4847-9a6a-040c3944601f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb3b3819-a48b-4072-beb2-ba4b7b6c9ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2218f27e-570c-4dbf-a1bf-1e2f065e526a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72941ca9-7a5b-409e-9ed2-50b1f6e6fdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c8f922-7933-4de7-9411-2b725d216299",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebb3c2f-3040-4b97-9b64-0532507c72a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba8bda0-3d7f-481d-858d-2864f3190ee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7a43e8-0e14-4390-a3b6-65c06ebc926d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187a2a53-d6ea-45a4-996c-bee43d73288d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5bfaf5-0d84-4591-b963-58d5d2890109",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d35b5e4-703a-47e0-9f48-93ca87a98139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6a1803-0ec0-4a0c-ac7e-2902e3490278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e1b0db-5286-41c2-b764-47512bd0c96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40442967-022e-4532-b78f-8885e5a8370a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23755987-1e40-494e-8937-328a6be7c7c5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780fa5c8-e629-4e5a-9160-7e88cce556c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045686fe-9685-4882-b06d-0c134b973968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c454a3af-a359-4921-8f9d-69a85624b2b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3366a974-574d-42a0-91e1-7d6823b17b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4e4758-4419-4f12-9d9f-c99d73acfba8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80584f56-333e-4aaa-a8ae-43948a84e31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d124aedd-ae9e-485f-a306-c6e4d3f0fb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8ac073-aa6c-4970-83bb-2605ec6d313f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfde613a-6a5e-41a0-9e6c-9997740cdd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd543e6-90bd-4db9-be62-d6919ade3dd5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7d7a7b-9e78-4d6e-9ae2-2f05c2f80ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a7fa7b4-b7d3-45ad-b046-b856905bec99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd0b554-8128-45f2-b7ff-509453524c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda53e15-ff82-4338-91ca-757226785cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f80870e-ae3b-4518-ae26-28a832cc5ff2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62c9618-9a86-475e-bdce-c9ec6abb30ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8729e2-288c-48a1-ad0b-aa83ef4650ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef7a4e5-7595-4f85-826c-239d0850a965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e3d3bc-9ea6-492b-9b5d-0e7c201f3a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc2cfdf-01ac-41c6-9c79-a533a8e2ecbd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9613e46b-c1b4-43c7-b3c6-1a10665652e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8161ff3-f756-4e00-a5a2-e602a93bf2e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9158656-4b41-46bc-adea-9a30f7ca8d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29060b20-6b56-41be-8ced-317d3358feee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ab6a61-ed34-4bb9-9297-9f5721a6641e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6ea316-60c2-492e-b650-04108ad9a375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cb53c8-46cb-4aa3-86f3-68efcc00b78f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2bed61-a6c0-4380-ae45-7d0fc3995df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d51980c-e5c4-4751-bb85-47cd2f1b102f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8646127-4658-4606-870f-1944db01dcd1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85672a6-067e-42b2-9565-eee5a703c66c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac295a3-402e-4931-8c95-8fde7733ce74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3fc1ffd-69b2-4927-ad6f-b1d88c09f76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620615fe-8d1a-4e71-bb8d-93dd37ac898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4355611-2a19-4669-a06c-c1670742355b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fb728a-4e8a-4cf1-af51-2ad411840638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b359102f-1c99-43f4-a12e-814ad20fbc8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd13f655-5515-4dea-a10b-14bdbfc98a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685e804c-c4cf-46e8-947b-9502212f62e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb4e82-cce9-4167-a31e-e989e8ba91a7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ace1745-d3fc-4a90-9825-7b888e6284dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37034954-26db-43d0-8a09-8cb3e0c5e127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0364d8d-9c4b-465a-9c33-833209d95acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5779d26c-2ab7-4f58-9af2-df7d2cfe9ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5225a7d8-7275-41bd-b85c-307e4e269bde",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfe12e9-2556-478e-861e-0a8ee7c34009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6cb02a-3cb0-4cda-90ab-a80411c4b060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c789d6b-1055-4b9f-861a-3bf42b9c8792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ce12bf-30f2-49c5-942f-4d61f5602515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11442e0-5b0f-456b-b985-97775a308ec8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63b60a1-17ec-404c-a8a0-b033826a5ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9699667-526f-40f7-b9fd-b148f966d90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51ab1eb-0aad-40e2-b0ff-c3cc0bcee8fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7f4725-9b5c-4ae5-abf2-85873bdcfe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecb099e-175c-429d-9c07-a2a19228c9be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b367ff-9975-4f2e-8ae3-3676523a0d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e49df2-193c-4b27-a5c5-adbfd9d274c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e4796e-560e-4f08-be4a-4120782e5abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99ba0e9-5070-41be-9a20-f0d43de8b0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f7feca-b668-4e79-b03b-30fec2ccaf65",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1f2354d-bb26-4a04-bf53-42c0482e1c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a59e92-e3b5-4ab6-ace5-2231d9d8a8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65909cae-9635-4b34-b360-697cf52e400c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42140f4-c9b5-4056-b899-e15ffd2a8b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5d43cf-30e6-4455-a320-95ee32cb483c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a541f10c-eae3-4523-8712-98edbdf7e984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc76c092-4a89-4562-9ae4-13af63424385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f54d5f7-4f40-4767-9a17-5d46db7d11f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66b3c09-5f94-4bce-a81c-76d6db086702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395ded53-91cf-4183-8459-6cd61c488c30",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa602ca-8fb1-40b1-9173-f7e39c3002b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af13c35-3bc6-4fb8-bcf8-80c99465df78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feaba3f7-f2dc-48a4-a0ee-d36f4cc86ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fbffb9-f0a3-4a7a-9f2c-5fa2b14b4360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f273ba6f-256f-411c-9df5-f4c968cfb893",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec56f737-1840-4b1a-bacd-48402d8bc942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c53d9b-27ef-427b-92f3-30d845c022b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e06a90a-9d9d-4a22-85bb-157427a03f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c55dca-136d-4e29-a87f-baf6536a73e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549712fb-bc6c-4419-89a4-6b0a3680579a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8661820d-e87e-4648-b135-50729e2cde53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6326a1c8-3e9d-433a-a98a-fb32e7b9f2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe2dbbf-4c9d-4357-b3c7-388abf72e8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f12ded9-0dca-456e-8f1c-018455d47042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151172d7-f68e-423c-8185-96fcde37c4e2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114d345c-f0df-4d93-a06f-9649b13e22f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa3fa2d-818b-4e1b-904c-0241253e7f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1df8306-cfcd-4bfa-ae84-90be80731797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc9b6bd-a201-4a15-957a-ec26ea0237a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0819682-7626-49a5-9a6f-028ca906d471",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a4a89f-04f9-4688-a349-cb40e92d3898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32eaa761-f826-4779-8643-bb2e70eb2e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab94b10-49c9-48b5-bb65-853e2b912710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be782ec-96b8-49e5-8bbb-c2b3ec11c358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6883abd7-3e9e-431c-8882-60e6f479292f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a470c8c-0120-4846-bfc0-74a9a963725e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aad7bbf0-04c2-4ec6-95f2-ccfd300bf056"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed05e64-bd8a-4fd9-8ec7-4605cc1bba03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "634fe816-2c2e-4dc4-8e3a-9057d682bead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ecb223-dde4-44b7-8cf0-a860a570b581",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b912192a-a086-4ae0-b39c-05ec5fa14765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af711502-e212-4ea8-bfb0-211164d3959d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0526b68-a176-4372-b83f-b4e2504af6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adce9a5f-b9d2-442c-9214-52126ceed6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f6d608-a7ab-42a7-8ab9-a12e34f32454",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ffae4d8-6f97-4e09-843b-8110a28ff39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ad62c7-aaa2-4b34-9799-a5ecca7eed2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "225280aa-45de-4505-b5f9-76e5447e3924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57decdd-89a7-4ff9-b805-2fd83157b3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08904077-9357-40f4-a225-12f0e86d1480",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f20538-7597-438c-8818-0d7b71cc08c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79664ea1-f7ff-4af4-8dd3-59fbe3d81e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838bd5d8-f0b2-4e9a-a158-914953441b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987a150b-cc76-4406-8b9e-880157942d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5f708d-d981-492a-a4c0-5297299e8f3e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8432358e-bcee-4723-ba53-003f47bcaabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97707edb-7aa2-4784-a4b9-95b347374048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d0ec9b-5287-4e55-925c-ee601a3126bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6528f2fa-a133-4309-8080-2c2eeec1cfc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3def8490-f85c-4dae-8984-1bb26e1753e8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff58a0a3-7afa-4df7-ab53-8bd80ca982ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb85c313-6c8a-4bc7-8de5-992c73136191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f132056-36b1-4427-80ad-3eee3b36f46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1436e336-6446-4b40-9d6c-0ce803eac7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c677be8-0979-41d7-9c4e-b2ff4cc8cced",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975479cf-7a05-465d-a38a-23a1c7c313d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea20eff-cfe8-43c0-913f-8caf4e690086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15317d8e-e6f0-4de7-b88c-5492aa25e28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f83e492-3057-426a-8e7b-dd03c7c27192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5881fa4-e759-468a-8760-257336aa6527",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc779488-0779-4d0a-8ff1-832c1f5b8166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5366a8bd-8d28-4399-9d01-39c32d9b6f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4879d6dd-a4d4-465e-a5ad-aec4657d5c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28008345-c148-463d-a4c3-62dc7041011b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb23e99-8c47-4e95-8b3a-fcda59bd64ee",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1528eb29-ad24-4452-a5bd-263930f606a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d79c71-aa2a-4b97-998d-498cc01af48f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeccc1f-0761-48c9-a363-855a5776d65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d35e6e1-ffda-4a2f-b2c6-1b87ee4cd9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd3bd32-a836-4fe3-8c4c-2b55348f0dfd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ddb321-57f7-44b5-bc28-47b10fd96963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec53548f-a96f-45d8-a36d-10dbc42b8095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a481fbf2-440a-4368-a364-51396df89af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6e71e3-3e1e-4183-ac63-415a01d60aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9180b798-3fad-4edc-b99e-8f0adf748340",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2f2c28-bf73-48e5-8fa0-3f5b1cbbbf33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f69b5f-27e4-4049-ada1-c610249785e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0adc73e-fd3f-4ec7-8bdf-82e958c2d02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9410762-57c9-4c52-8418-9de95c0363f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101a3042-88fe-432d-b990-cb7d133691b1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c370546-0624-4b43-8869-7e3ac055bb50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fbc0f56-bed5-4363-88d7-25988b482d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f764ef70-64ba-41cc-abba-c15dc873c565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b584dc-6ed7-4589-b40f-d0133a9a9b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000da1e4-510f-488d-8bc9-b89dc1d95776",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92450b1f-249e-4a1e-9ed5-b7526f1eee35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a526ed85-cee1-45f2-ac4a-11b112439a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cfb10c-77ba-4d4e-ba1a-67262a236936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a282fc-75a8-4631-a734-acf363c9d3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402fe69f-a325-4b3a-a580-b280021c0e33",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a947e1c5-365f-4579-b392-abcb99322c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d63cc124-f23d-44b7-a6c8-f5fa5bb23abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "407bd609-5857-45b4-a7c2-a643cf0add99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "364ea026-f0b6-442e-bc29-39577d96e94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ca5554-5b7a-4071-9fa3-950e89c1f56e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f7b9a0-ea0c-40a7-b0bd-c9eef822415c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407bc8dd-7619-44b4-ab41-2b7ad4fb5726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e777e3-c761-46d4-a932-6fa4e907710b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18eecd80-7301-4cc3-976f-3378f92dad46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a785b267-2660-4212-85b2-9d0c95c48bd7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75ee7cf-98c1-449f-9f45-4f1b29bb8be4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe1e5c10-04b5-45a6-8807-8795526c1c87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89251536-70d6-456d-8abb-2da9e061a63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0135278-79de-46b4-9be9-8e834fa98b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dab0db-9215-42b0-a467-2353e6e514fc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba4481e-503b-4898-a0ed-3273ce37b74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4bb9e0f-8d4a-4003-a73a-4609c80f7c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484c80ea-73da-41f3-b9aa-5facb34492f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8425ea5-07a0-44ae-b051-7546608b406a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b45aa07-1b1f-46c0-af58-3086b1f8aca3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9492f5af-37ad-495e-99dc-b31fb617538c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db28e19b-4be7-4038-b6da-d9893c671b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c053364a-4328-4af5-a607-7dcef720201c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b5d2b8-d6e6-4b9f-8997-e9c8f0641019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff41557-ec39-47f5-b2d5-a47fd1d44d50",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b79eac45-5b24-4c37-8a9d-b61650ec8ea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "453f0322-bcca-4530-99ba-52274345b1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f112cccf-fb37-4a97-8cfe-9a6a6fbf4476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e876055-054e-47bc-ac4a-72b85d5f1f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7a579f-5219-42fe-b066-ddafd2e5e435",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9433ec-7645-4ecc-b0c1-06d328224e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1b8f126-b1e9-477d-bcde-8ddefb92ca06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fc96ba-1d63-4916-aee7-3a20a70cec0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fee25b-049a-4b17-9f60-f4525558873f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081da97d-7b7c-474d-8c63-2e3abac5c30c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b974677-443f-4cb4-8738-7568dbc85981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a55476-83e2-4a08-8852-618d6483e271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69053d8e-5843-4599-a20c-f3d6f366681a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ef87bf-1b76-42af-9a4a-2f0ceb680372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5481b820-612a-4335-aec3-ac53cd79d1c0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c70287-13a1-440c-b04c-acb966177797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f28c650d-e3df-4806-941b-e5f9c8abb230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa8d4f5-a9b8-4600-b589-f5042afc6eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4741e493-cdf1-493b-aa6e-167827709a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac0d395-06d6-4c01-8fb9-2503a9dea3b9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c341a6f7-2670-4256-a740-1ed89164cbdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66e34266-f95e-4958-97b2-f1d6dc4474dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175cda63-c83e-45fe-bb02-0d1a9639a403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbbd22f-7c28-44e2-a4fb-ebf9382a3eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7d0c98-3797-4cda-8318-eb16e55a854a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d16c5fe-ef8b-45af-8834-caffcd5d990d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f11587-4b70-4f24-a2a1-428d16f31c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbeb528-77b5-4ac6-a2aa-c92e232167ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "838a0b05-95d9-4eb4-b7a7-974d2746956c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e1bb5e-a0bd-4211-b129-dd1cb13561e9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cd8141-e439-40aa-b520-78c086b93163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebec74a8-c09b-43c8-b25f-e77a1f762b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af753db0-6a41-4b8f-8237-a96cd1052be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3158e9c5-a865-4e72-bdf7-7c4124c8539e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a348578e-d759-462e-b273-a5da062f9140",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a81742-9835-46c8-ae9a-2c465f565f18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b24ce459-3e08-415f-a879-a6f28b787b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18f7a6d-485f-4343-8df6-e9af18a381cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb950950-4856-4d95-b67f-c71c776b8c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8affe7e2-0e66-4ea8-9321-fc248ae8af8f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a43364e-9feb-40e1-9814-ca9ffce7c4da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d68adf56-b5c1-4bda-874c-ac0d60dd3ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62189afb-379a-4b70-845b-f0e077b8f6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25563a0b-6ee9-4072-850f-0828bb40e9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8514f0-5a35-4429-971b-dc5990f59493",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b34f956-1419-40b3-9a71-ecc3a474f0cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d7629e-dfc5-4074-bf05-ad59b8d442d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84872c9f-e0ec-45e8-885b-b9b0c0ffc786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e059aefa-1349-4b8a-ac75-32dfeb64f84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d4e977-25dd-46fa-9774-ef1d56604992",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85861cd-3ee1-45bd-b483-13d628926f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff927514-c627-43c4-8079-dc0548ec49ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72800b0c-73b3-42d6-bd2e-469b7de4b0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79562b2e-4a45-4851-b89b-3f748d3df13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ff9121-120b-4c74-8c29-80c8c6463c05",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfb7d38-c534-43f4-a065-949a3f5072e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76b7510f-0cd9-4fe2-9065-e403baba46ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4004b81-470d-4312-bd99-43f30664a10a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9759fdd2-aa49-4ea6-92ea-daee50c7749b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192b6f40-0ec5-4ef8-9e1a-cf1752e7cd35",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fcba98-2e06-4d97-ae04-53c8ab3cf5e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62ee39f-1d71-4b13-940a-6178e92cda89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4c6a26-d123-490e-9d58-2a902b80f9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bffaa37-6ce5-4a0c-83c7-e677809b29bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a73926-97dc-42c0-8009-9cd2bb936261",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c740116a-f042-40ed-9f16-4cc33e9895d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb7ac78c-6400-466e-8018-a17af43e2cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c3fe75-2ffd-4390-903d-a047ee503ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a331f2e4-650e-43a7-8ca4-e0ef4393182e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48ed55b-6c35-4af7-8634-4ce5b1bb7f74",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5045895f-1df5-4630-bfcc-80747cb1f88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d147e1fb-e538-4f61-9199-aef293d2f12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b326ccab-61dd-42d9-9fe0-4b2fbb7e2e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e561230a-e32b-451a-9a74-b140332b051b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde7ee49-07e6-4bc2-850b-9492a545de83",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be0d432-4267-4bdb-975c-02b55b53ef54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb77e7fa-4a86-4b21-a946-0c8083c3f5ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c747beb-1e6f-476b-b973-4c8679c43743",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdc742f-c8c8-4471-bf87-adbe3841573d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79940dd2-fce5-4a07-bc55-f127094091f5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe13977a-a4ad-40a8-a624-38eaf7389093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac32750-90e9-4197-aa25-69ecaa9cad47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0514950-0edf-471a-9d69-4af1951284d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ade7c0-23b5-4c90-a060-59eb94925d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea8e2bd-6daf-4cab-b32b-fc74988166f4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11aafe7-f677-4333-8aa0-d99ffb4d4de5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ac3a0a-c3ae-4931-8f39-86fd74159f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db47a0e6-ed95-4c37-ac9e-6105c3924731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2d995c6-1b8f-4ab5-b5d5-28a0238b0841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35497ba1-775e-456f-abab-899278c175c6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fb0572-e601-42f5-9d6e-b4f6ea4a3448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a5fff0f-0e76-4911-9364-b483b11f0ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70020bbb-84e9-4700-87b7-1b6166fa129e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65930a4-f118-4eed-8e70-69a33e488145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2232fe04-98e6-433e-bbd5-1115c820746c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e660123a-cd24-49f5-8aaf-321885b66b5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05bd53ff-adb7-4a3d-a792-e2968d181904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29f4a27-67ef-4f40-bf5c-b312ced31902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fff393b-93ad-4900-97b1-0640687cbbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b30d17-5474-4d64-8ca4-88fce65c931c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17bf75bb-1e73-45c6-9057-3b3ada829903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1252267-31ee-4f73-ac25-898140d34b51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25506ee6-1a7f-4507-a8a6-477fbaa29730",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1bdd78-b2d6-4278-bad4-5d40595abf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec83dd13-f2dd-4241-a8e6-022eb2304225",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9c1843-10ba-459c-9881-5643ebe06a97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b35cd92-f3e9-4588-89ee-2684a2170797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad0461a-b61c-4140-9ed5-e4003e19b00b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bc7314-5b39-43a9-a7f2-721b4d715e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d97557-e40a-4974-9cc0-8b371907e86b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c6c57a-f654-4f26-b582-b5e4379c96dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171775ab-d9e0-4f78-beae-c8ac5f4231d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2e78a1-bd30-4d44-9271-d9a267e72ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d71580-6777-4597-9238-2fc198746671"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95b54cf3-a974-46c7-b1fc-77ed59dcbfc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a128029e-015b-4938-80ea-da39da965d01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edc9f4c2-e717-4508-a384-6936d499b914",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc756fdb-0d48-4571-9a75-2ca191b622bd"
                    }
                  }
                ]
              },
              {
                "id": "ab30ce37-3b06-4a7c-8541-b2670916fb2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27a62f98-e477-4c73-8c8e-b6873b845767",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8be4419-d400-40f9-85b7-0b7cbbeacf77",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9ee4a32e-4fd0-476a-8220-827ac0dd3c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c94b12-c6d4-4170-ac05-f43a71e6fac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a89b57a5-8f69-418b-8d04-715756baf27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70470e10-d142-419d-bbd8-e13437d8e46f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa062c8-e309-4fc9-b44a-796039b9aa3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8198b21e-d546-42d2-a889-94d31330795c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f93635a-a35b-4131-869a-a7850ed2bae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32ab58ae-25fd-494d-a506-4447e3a3ec42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "558a97d0-886c-4d0b-a275-a77d8fec269d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5d3e4e9-a94b-4fe9-8dc2-22e6cba577d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c1de29e-d4aa-49c6-8f69-e68fd66fdb8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d8f60ec-f898-4793-81a4-ae02669bdd1f"
                    }
                  }
                ]
              },
              {
                "id": "4a57a29c-a56d-498a-a574-d6cc351e8451",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "df0e8d3e-784e-430b-a67a-3249b38b7030",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a13d49b-1eef-4760-87f0-9a66adbd6130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "61cfa3b2-a677-49cf-b854-19426a7918a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f970272-9fda-42c0-b0ca-c9316ccad3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24f541d-04c4-4b07-95ee-8c8e058f6391"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "252ef44c-1e0d-4d88-aba9-ebb58c63bd08",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc2e1ffd-0e41-43b5-949e-8e232150edc2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "357f6f19-510a-4743-ba47-ebba4ca4bb48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f1214d9d-50b2-45b2-936d-dbf1be19d4f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2132f609-9c7c-4891-a0ab-e895cac28fa2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6362b604-169c-4362-8451-a971c2fa1e7c"
                    }
                  }
                ]
              },
              {
                "id": "8c1653e2-3f56-4483-9e1d-50f6006fa694",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5599c8c-a2dd-41b7-9601-22bf1e8c9302",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "835c4656-0d19-4a25-8cd4-61fbee5263c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71728ed1-3ac6-4c87-8d4d-a02135eea676",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b590694-0731-42b2-9361-8bff94b472db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc4f655a-8c9f-460f-8369-55752732fee9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "37f8d0c9-0d31-4b24-82c2-033f987d01e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74d369fb-1c1e-4397-852c-6449f284b874",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fcca4ba4-5a48-4be0-8fd7-302d5b950c9c"
            }
          }
        ]
      },
      {
        "id": "d42a8cf4-a593-4b84-bcc5-cdd06d9bfd9c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3ab67cd4-a497-4d5f-8e99-9d94af7d42a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52709ce6-d019-4b36-9ef6-665e2a63e5da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ffb1cf55-406e-40e9-84f5-f4add53ba0de",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b2dede-604e-44cf-8882-c68da551f241",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "25d11e35-99c4-4907-9a94-fdb095555633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9ae74-4a62-426c-bcbc-2f70c558195d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8779e49-c2e5-46b0-bfe5-8d18c1e40cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fc4944-5a5a-47c2-9ed9-d1d38563009b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e8d221-0f0c-463a-9fa9-211d2eea49c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8b0fdcd1-aa45-405b-9494-cc27d56a17bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6de9e6-76e3-432f-9345-52d7b80bebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "697801ed-672a-4b9f-bff3-d40be416ac9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55ad8d42-eb0a-4aaf-9ce9-1e2389d4b4ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aeb2f12c-26dc-419d-a29d-6c47130d0824"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3405adac-ab13-4cb8-b3b3-12b57b2fdef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f7a9e0c-ec8e-437f-bd41-5c1664611b3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "703dd31d-0f6e-4a5a-9ab0-52e9a0f6142a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "683050fe-2cdc-496d-8170-d4c680c0a117"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e33aa721-5708-41fe-a5b5-f85539d1a3b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "562e3181-8518-4b32-a6f9-6165de2338f0"
            }
          }
        ]
      },
      {
        "id": "568d3f5b-9986-42fc-ac34-05ea8e9873b3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5153d1ef-d26b-43c6-96bf-ae59985fa2ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f7af8eb-32eb-482a-b8f2-851d4d3a063e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ede3bf5-9cc8-4ae3-9160-4f2e1129d783",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c39d9b-9bcf-432a-a51e-040a3eb9c955",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1702153f-c460-411b-ad25-519b73e7e1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e2f256-2c81-4330-b59b-8d5821a87625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69971513-8ca6-4aaa-bcee-6d320e0fb21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e73d813-6461-44d3-91bd-37fde2e06809",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c34dd3-5565-4e1a-81df-3bc26003b443",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b74fc8a5-fb0e-41c9-8900-54105350b6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6e9d2e-3f57-4992-b8b8-b7159554877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61cca54b-821c-4ddb-a366-930fbeadea01"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3ce6bfd-8b74-4cde-88aa-d16ebb52d4c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92e66ab0-0415-4822-88a9-acb9fbd8bae4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "474697b9-3175-4f0e-9413-eb0bdbf51c85",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22dcaed9-38ec-4952-a999-77ab3214e3ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae38ed62-c474-4350-b037-a35b387987d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7a31527e-c43f-4774-a337-877a5d5da04f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f7b3a5a-42bc-452e-b455-e31ba25f29ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fe70320-7fc9-4e40-aa08-d5a8db8bc434"
            }
          }
        ]
      },
      {
        "id": "121a37cb-6e70-4d70-849b-aa1dc824ac33",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bc5708d9-471e-4ba2-a16b-704cd6d85a81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7658ea89-73ff-46c3-8285-b2e521cb6778",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80063b31-40c1-4db3-943b-963086bf0747",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ccab7a-f491-4c0f-8357-fb40d04463f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b19debf-bb9c-4700-a31f-9d3f69fa412e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49a1062-3e36-4177-ad0c-517c5fcb8073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "087ef4a7-14aa-47fc-bfd0-59fd9087589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d8534b-87f5-4ff9-a13e-6518b0ba3537",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f7caaf-9e18-4ca6-ba39-7cd90bb0691f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0d369c28-87e4-46b8-99f7-fe0b6630bf7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb331697-1cc9-4889-a024-ef4aadbf9f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3d102c2-96ac-444b-a879-c22badae6bb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc7a2da9-32cf-4fe3-938a-d5065b9bf101",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65d3bd2d-c43b-4b76-8653-41dca726e03e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fed63730-8059-40ce-8b5a-6af6a923878f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae00a363-ae08-4f31-acaa-892c2ec5ad17"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38f60a2c-13e3-4043-a50f-ba8c26d649d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5fbf2a44-4d06-48f2-88ae-c910c7bd835d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e896e6a9-57c4-4089-b868-9b7435a62628",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "feeef165-5fa2-4c02-af01-3294ab911cde"
            }
          }
        ]
      },
      {
        "id": "5f35d28d-4778-4bef-97c3-fc64057b9aa7",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7c519db-fda2-4b44-ad29-d2252e9ee9b3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f8eab91-03a0-41d8-95c8-4b9e45671c98",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c8d0612b-b687-47f0-aecb-84503ae51478",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8598772-a497-4462-bb63-c0abf7598680",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c63d9710-14aa-45fa-b385-8296971ad6cb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 23
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 616.2290076335878,
      "responseMin": 7,
      "responseMax": 5960,
      "responseSd": 656.0559062577339,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1671151057259,
      "completed": 1671151232000
    },
    "executions": [
      {
        "id": "b1bb14a9-6990-44d6-8d1b-5d6de78bb10e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3cfab5df-b3f7-4e58-8b58-434744e22044",
          "httpRequestId": "80252b73-55ad-493c-b813-dc7abc02b5d4"
        },
        "item": {
          "id": "b1bb14a9-6990-44d6-8d1b-5d6de78bb10e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f605d604-70f6-4529-bfa9-2bf6725a002f",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "0dab25c1-8413-42d2-8510-180bf31fea69",
        "cursor": {
          "ref": "243484c6-d1b4-4b66-a7da-0d96f09a4d98",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1b49ffcb-07fa-482d-9ca3-667161780994"
        },
        "item": {
          "id": "0dab25c1-8413-42d2-8510-180bf31fea69",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "36270a63-db32-4b4b-bcfd-f780c813f49d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "d4d2e331-94af-4c41-b75a-2cae5413471d",
        "cursor": {
          "ref": "f37ae6e1-f5ad-4c30-b79b-9137ff816a78",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "56392a9f-e1d8-4b60-8322-99203d32a179"
        },
        "item": {
          "id": "d4d2e331-94af-4c41-b75a-2cae5413471d",
          "name": "did_json"
        },
        "response": {
          "id": "a98ac893-1dcf-4ba7-b7dd-6a87ee84038b",
          "status": "OK",
          "code": 200,
          "responseTime": 647,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e31b48-3e46-45e5-bd72-c3f884fd13e9",
        "cursor": {
          "ref": "9348152e-68d1-4ce0-b13c-5046bb477f2d",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5eab2c16-383b-4ef1-93cc-728e3a3402b6"
        },
        "item": {
          "id": "05e31b48-3e46-45e5-bd72-c3f884fd13e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "db8be6df-9821-450a-afd2-162705a57b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e31b48-3e46-45e5-bd72-c3f884fd13e9",
        "cursor": {
          "ref": "9348152e-68d1-4ce0-b13c-5046bb477f2d",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5eab2c16-383b-4ef1-93cc-728e3a3402b6"
        },
        "item": {
          "id": "05e31b48-3e46-45e5-bd72-c3f884fd13e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "db8be6df-9821-450a-afd2-162705a57b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff71a6c-44d5-4fa1-a615-8df7be0c21f3",
        "cursor": {
          "ref": "14aefb76-b89b-4ed8-bff4-d45406f452f0",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6b8f7ddc-8f26-455d-8c6d-bd15ea7b6168"
        },
        "item": {
          "id": "1ff71a6c-44d5-4fa1-a615-8df7be0c21f3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32848390-1d37-429c-9bdb-2c0f66e1a1eb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 602,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750fb5fe-14b4-4ae9-8a14-db02437095fb",
        "cursor": {
          "ref": "561f6569-94b4-420b-8535-4fa28e96f1fb",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e967c93d-5358-4055-b9ad-22a0932322a5"
        },
        "item": {
          "id": "750fb5fe-14b4-4ae9-8a14-db02437095fb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c99fa514-f49d-433d-90de-d4a833abb230",
          "status": "Not Found",
          "code": 404,
          "responseTime": 656,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df45f32-96cd-4502-8792-f3c458861ced",
        "cursor": {
          "ref": "6e9cf0a7-15e7-46fd-8456-47c66a8f4f29",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fd4a4cab-e174-494e-8fed-8030d54f95ac"
        },
        "item": {
          "id": "9df45f32-96cd-4502-8792-f3c458861ced",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0461902c-4cc5-489b-a7f5-d4568f02fda7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddc228c-d100-4846-bf53-7b19f5cb11b6",
        "cursor": {
          "ref": "f4c38d40-4ca5-4b5d-8413-bc4017875823",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "beb56c21-64fe-46e8-b97a-d2c4659ac895"
        },
        "item": {
          "id": "1ddc228c-d100-4846-bf53-7b19f5cb11b6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b117e12c-c5c4-4ed4-aee0-036fb9d44aad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ddc228c-d100-4846-bf53-7b19f5cb11b6",
        "cursor": {
          "ref": "f4c38d40-4ca5-4b5d-8413-bc4017875823",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "beb56c21-64fe-46e8-b97a-d2c4659ac895"
        },
        "item": {
          "id": "1ddc228c-d100-4846-bf53-7b19f5cb11b6",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "b117e12c-c5c4-4ed4-aee0-036fb9d44aad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 520,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4bf8a0-ebeb-4631-943c-c336fadd91e7",
        "cursor": {
          "ref": "ebc7b0d6-489f-4a76-9f68-1f07cd02060a",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2c2355ca-af8a-4284-905b-f4f84dedf24d"
        },
        "item": {
          "id": "cc4bf8a0-ebeb-4631-943c-c336fadd91e7",
          "name": "identifiers"
        },
        "response": {
          "id": "413563e3-92b5-4b1b-9eb0-3d8278e9bdcc",
          "status": "OK",
          "code": 200,
          "responseTime": 847,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266fbd6a-d2a9-4092-b97b-3d4af4dead49",
        "cursor": {
          "ref": "9cb051ff-4f95-4375-bd90-1a5c7121c128",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "040ed6f7-7d8f-4060-b125-fb3d34bb3bdb"
        },
        "item": {
          "id": "266fbd6a-d2a9-4092-b97b-3d4af4dead49",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34305237-9c5b-4cc1-8410-00f5bc06e6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266fbd6a-d2a9-4092-b97b-3d4af4dead49",
        "cursor": {
          "ref": "9cb051ff-4f95-4375-bd90-1a5c7121c128",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "040ed6f7-7d8f-4060-b125-fb3d34bb3bdb"
        },
        "item": {
          "id": "266fbd6a-d2a9-4092-b97b-3d4af4dead49",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "34305237-9c5b-4cc1-8410-00f5bc06e6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21528469-f9bb-4233-956c-ccfc4b92c8f9",
        "cursor": {
          "ref": "07102260-ca94-455d-91f0-8dd127f0006b",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0acb515a-4181-4702-9f74-272133fb9450"
        },
        "item": {
          "id": "21528469-f9bb-4233-956c-ccfc4b92c8f9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a187bb74-1ae0-4205-87fa-4fc01b3e3e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac91d09-2fe1-4b0b-ae5b-a327c7e2ce24",
        "cursor": {
          "ref": "d3e8125b-108e-432f-adfa-9d6f4287b47b",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "985df690-65a7-4ce8-aab1-7947f2a839d0"
        },
        "item": {
          "id": "eac91d09-2fe1-4b0b-ae5b-a327c7e2ce24",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "e306b591-a12e-4940-a72a-3b7f3abf1d0f",
          "status": "Created",
          "code": 201,
          "responseTime": 2245,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "1ae650a7-bb47-4377-b81b-2baab8dad255",
        "cursor": {
          "ref": "2aeadd53-de11-4f70-bfe6-5f1c7c9078d3",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0a870f02-048d-48b7-862e-ff715a6035ea"
        },
        "item": {
          "id": "1ae650a7-bb47-4377-b81b-2baab8dad255",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ed17358c-4a5b-4273-ab92-a1d9bb995b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6849ddf-a4d0-4b15-bd1e-a2a7adad5d1f",
        "cursor": {
          "ref": "a6c0766c-c96e-49ee-8366-71c92c1e9a5d",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f15db0ac-e34f-459b-bed4-6cd7b772887b"
        },
        "item": {
          "id": "c6849ddf-a4d0-4b15-bd1e-a2a7adad5d1f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5089f87b-d987-46d1-8df5-069e7dd13af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367b9776-824c-48e7-9e91-3c90811096f0",
        "cursor": {
          "ref": "f151ef8b-f906-48be-8179-acf8fb72ff3a",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ce2ea6ab-8eac-4a20-929a-9166b3f5ad26"
        },
        "item": {
          "id": "367b9776-824c-48e7-9e91-3c90811096f0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2b1a4b6b-d49f-4ff2-a14d-f257379f1fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa074f7-93ff-47f2-8e5b-bd135600669a",
        "cursor": {
          "ref": "6529303c-b2ba-47dd-a7d2-8c58ff4ba298",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a51f3fb5-60a0-477b-8c88-62ff51a7d227"
        },
        "item": {
          "id": "3aa074f7-93ff-47f2-8e5b-bd135600669a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5ec61fdb-1181-4181-a82b-049568cbb6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f44c6b-3f6f-4ddc-a904-03340deb6726",
        "cursor": {
          "ref": "26fb3def-784d-47ed-bdbd-2691bf2545a8",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "83a85585-bcd6-4331-8439-493b348be9d2"
        },
        "item": {
          "id": "86f44c6b-3f6f-4ddc-a904-03340deb6726",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c99b0935-7a88-4ddb-94d2-29ca02004f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf554926-e3b6-4ff4-aa9b-94c7d55781a7",
        "cursor": {
          "ref": "1b03674f-30a0-462d-b8c6-fc97dde17e8d",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "44743513-e005-4b6f-a188-8d5530039ff2"
        },
        "item": {
          "id": "bf554926-e3b6-4ff4-aa9b-94c7d55781a7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2000fb2c-2d59-4913-a295-98d23d107f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad587b16-05da-497d-98d3-0a422357b0c1",
        "cursor": {
          "ref": "bcaef3dd-d5bb-4451-b556-3e31fd76a691",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2fcae4ff-ab4a-4eeb-8a02-e60de4d94a8d"
        },
        "item": {
          "id": "ad587b16-05da-497d-98d3-0a422357b0c1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "8ecd8896-f23f-474f-91eb-f799efa7a8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda56659-f91c-46d7-af53-380f2b70f705",
        "cursor": {
          "ref": "f835cee7-47dd-488c-ae6f-e85c29424cba",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2b753ffc-c97a-44d5-8dbe-9805abee1ac0"
        },
        "item": {
          "id": "bda56659-f91c-46d7-af53-380f2b70f705",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5db89aec-897d-486a-9ef8-8b42e4cec3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e8409d-5148-4b7c-9d1f-96306e477ac4",
        "cursor": {
          "ref": "c27945d1-75b8-43a3-91f4-51dc7d05321f",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "54d91e86-7fba-444b-90c9-3846d06d5ba0"
        },
        "item": {
          "id": "11e8409d-5148-4b7c-9d1f-96306e477ac4",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "691b7507-3d11-4140-bf74-e0a257662ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956ad7ca-8ac1-47e3-9a14-f6dcdb588f63",
        "cursor": {
          "ref": "2af0234e-4c19-4d39-a5dc-be1594fde250",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0882cb45-8205-4cd1-bf5d-1a9741a60ae0"
        },
        "item": {
          "id": "956ad7ca-8ac1-47e3-9a14-f6dcdb588f63",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "76ca2d45-b06e-47ff-b259-e7d11de09a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6bf296-2a67-4d39-990e-31e07ee493e4",
        "cursor": {
          "ref": "92f10e39-6ec2-47da-8e98-987005ca0bb9",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9c7e0772-8546-468f-861e-e8c58c4dc84f"
        },
        "item": {
          "id": "8b6bf296-2a67-4d39-990e-31e07ee493e4",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "f665430c-daf5-487b-b740-57ad46b011cd",
          "status": "Created",
          "code": 201,
          "responseTime": 4227,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "9f72c6b3-76f5-4232-a228-1702dde5aaad",
        "cursor": {
          "ref": "5b99d980-cc1e-40e5-9160-8bfbb82b2a18",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "56b44a32-0bd6-46c2-a20c-dbc972d3e497"
        },
        "item": {
          "id": "9f72c6b3-76f5-4232-a228-1702dde5aaad",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "68dfc25f-cc5e-4120-8007-2d5fcbcc9d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c43282-3111-4340-bd46-9efbd7c79884",
        "cursor": {
          "ref": "b37a140e-e69a-475f-882a-ceb77b28111c",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "48eda318-b90b-49e2-98d4-dd135a43bb46"
        },
        "item": {
          "id": "e8c43282-3111-4340-bd46-9efbd7c79884",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9bf0a371-22be-4b47-b440-ca6e473a69a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6f0d7c-e776-4198-b051-1c13edc8f00c",
        "cursor": {
          "ref": "f051eeed-354a-4282-b9df-fb28b261e6df",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "77639227-dc0f-4f17-afe3-7bea1f7014c1"
        },
        "item": {
          "id": "fb6f0d7c-e776-4198-b051-1c13edc8f00c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5842d0a1-8054-4c59-9b7e-35e49d7c3a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce258a65-edd4-445f-a7e5-9c5c95ce4b87",
        "cursor": {
          "ref": "3c93ce7d-c622-42c0-8dc7-6e1e04f63b48",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3c809fd2-96d4-4c9c-a6a7-f650c32d0d02"
        },
        "item": {
          "id": "ce258a65-edd4-445f-a7e5-9c5c95ce4b87",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e589def8-566f-4fa1-8cac-6e04fe62c2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4192cafe-e9b1-49c4-a0e9-a890db6f9433",
        "cursor": {
          "ref": "356de6e8-12cc-4259-92f5-bbf8006b1898",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f3802257-d679-4b92-9332-20f94d985017"
        },
        "item": {
          "id": "4192cafe-e9b1-49c4-a0e9-a890db6f9433",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2611187e-28b3-403e-9df9-f88b84200bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3378ab5-5f48-4e11-a369-0499c9c59389",
        "cursor": {
          "ref": "f045490a-4681-4bba-a799-0dd20662790c",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9a599dd1-8516-4783-a9a0-61ec2875ec9c"
        },
        "item": {
          "id": "e3378ab5-5f48-4e11-a369-0499c9c59389",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5f679c5a-3f0c-4318-bfb9-d12dc857c783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8692b6-97bd-4176-963d-785a105aa268",
        "cursor": {
          "ref": "7ffe7cd3-c763-415b-974c-f9bdbede0170",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ad6fad1a-f704-45f1-97b9-f60a286320d5"
        },
        "item": {
          "id": "6c8692b6-97bd-4176-963d-785a105aa268",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6f2abe2e-e2c3-4b80-89fe-d52a39ecc5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582a4ce4-997d-4277-bf0a-42f7125e5819",
        "cursor": {
          "ref": "489565b3-d618-4027-b01c-c74020f98451",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ec60808b-85f6-4ad4-8ff1-af0d158048f6"
        },
        "item": {
          "id": "582a4ce4-997d-4277-bf0a-42f7125e5819",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a7efb493-af8e-424d-b894-57a42bf744e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0647eaf5-ca5e-41e5-910b-0ae6abd449ea",
        "cursor": {
          "ref": "3fefbbab-90e5-4a6e-97b7-d960a1883531",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9d403b54-f693-4645-b378-7ab7b89b9686"
        },
        "item": {
          "id": "0647eaf5-ca5e-41e5-910b-0ae6abd449ea",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1832f23e-98bc-48f4-acf8-0536a7d23cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49356c8a-aad9-4b64-b77b-230ac51cea67",
        "cursor": {
          "ref": "c15e39a3-4306-4bdc-abff-54c94aa17e11",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ed13c5fb-1da3-457d-89d3-2611b140fc20"
        },
        "item": {
          "id": "49356c8a-aad9-4b64-b77b-230ac51cea67",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "75baef77-11b6-43c5-8d0e-2aabe8d48ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3083ee-f2fe-422b-9ffc-5894d1a0f2ad",
        "cursor": {
          "ref": "9d11fd28-76fa-4333-b07a-7677eec70214",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f3d7b853-c863-44ba-aab4-05ef373a8650"
        },
        "item": {
          "id": "9f3083ee-f2fe-422b-9ffc-5894d1a0f2ad",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f4530829-b30d-423c-8834-76e7e59ce2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2d2852-6e27-42ba-a21b-f883b0f5de46",
        "cursor": {
          "ref": "b03ccd43-5e65-4cf8-a6b0-172c1776355a",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5b3d9d3a-3d2a-42b8-9d56-1d4840a8a17a"
        },
        "item": {
          "id": "da2d2852-6e27-42ba-a21b-f883b0f5de46",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cfb2558b-1f19-4bb7-8bea-c0930c8341ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6e1b23-860d-44df-a4ea-10ca607c8085",
        "cursor": {
          "ref": "a2211d75-694f-4174-b374-538842694699",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "26446580-aa22-4331-adc8-ef62fe88fb91"
        },
        "item": {
          "id": "9b6e1b23-860d-44df-a4ea-10ca607c8085",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d4cce1a1-1a1c-4a5f-8404-97b9748d41b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b890052d-180f-4e10-a058-61f58e9da1c7",
        "cursor": {
          "ref": "95ebb816-d90e-4d27-8dbf-1a7ec031c5d4",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e4595442-e84a-40be-b77e-ceafd32a18e9"
        },
        "item": {
          "id": "b890052d-180f-4e10-a058-61f58e9da1c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "61d88360-667a-472c-8ae9-969a5830bb82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa451d07-31d3-4608-b8d7-374ee2021be9",
        "cursor": {
          "ref": "e9a14c67-8c6a-4f9b-8d4b-0242a54c0626",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "da98f71c-21a2-4854-a1e3-ed11fe34802a"
        },
        "item": {
          "id": "aa451d07-31d3-4608-b8d7-374ee2021be9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ca02a550-40c3-45d7-8d55-f0366df8479d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a981a441-d097-475a-af62-a6ce34923acb",
        "cursor": {
          "ref": "1a7840aa-91f8-4d56-98a1-205a5cc78378",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "bbe8d753-16ab-4dab-a664-72dedfb7ff62"
        },
        "item": {
          "id": "a981a441-d097-475a-af62-a6ce34923acb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d3f37e34-93d0-488e-be11-f6f3d8ad9eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a387634e-fb2e-4ba0-a8cd-83f6416b4cbc",
        "cursor": {
          "ref": "98aa3ab8-43f2-42e2-954e-533be7f7f12d",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bde5e269-f554-4b21-818a-a2a81d58db14"
        },
        "item": {
          "id": "a387634e-fb2e-4ba0-a8cd-83f6416b4cbc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8fcf8114-6f35-444d-916b-3734bda4b5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ca8d27-4ab9-412f-af66-58144166a591",
        "cursor": {
          "ref": "bcef07f3-43b0-4866-93b9-81bff9cada11",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c839ff25-0e3c-493a-9024-7cc3a8abb236"
        },
        "item": {
          "id": "b3ca8d27-4ab9-412f-af66-58144166a591",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dac0675b-d380-4eb4-8c1d-023d8747a525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1014,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a28ce46-fdae-4602-b2d2-fb9a5aafa3f0",
        "cursor": {
          "ref": "d272c701-b088-4600-b27a-da173fa805f7",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e84f2c54-132b-46eb-a6ef-bf83f011c848"
        },
        "item": {
          "id": "3a28ce46-fdae-4602-b2d2-fb9a5aafa3f0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "45b2e1fc-53ac-4d3a-8ed0-71ae6a58f2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0866c37-088f-42fe-b332-1710e5ccf4a7",
        "cursor": {
          "ref": "18f7dd54-6088-4f1e-9a51-226258086f68",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "78d18145-3813-42d8-be51-34c893e65521"
        },
        "item": {
          "id": "f0866c37-088f-42fe-b332-1710e5ccf4a7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "aed05c22-b914-4358-af02-dc581b7e04f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4072f9-1d28-4e49-91a1-436a5321f5ef",
        "cursor": {
          "ref": "38522490-daba-4f41-9669-173708d1a808",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "412f3340-9639-4446-b4d9-2d928ac41aab"
        },
        "item": {
          "id": "af4072f9-1d28-4e49-91a1-436a5321f5ef",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8a48acbf-2ec6-4152-ac92-96745c582425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d65e6c-20b7-4627-80b6-945da1ce7bcf",
        "cursor": {
          "ref": "c9bba59a-59fa-43cd-a1c3-5b5dbaaec5f9",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0e443890-b3a1-4247-8bfd-6f51cdfd2b8a"
        },
        "item": {
          "id": "e6d65e6c-20b7-4627-80b6-945da1ce7bcf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5f9c89fc-15fc-47fb-b333-382aa4c1313b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b45a32d-9036-4191-b56f-0cafe7d62d76",
        "cursor": {
          "ref": "1e18d88c-9ff3-4a7a-92a3-6b7dc70a916e",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "259822c4-3c11-4cb2-8a94-065a17ac3cf5"
        },
        "item": {
          "id": "1b45a32d-9036-4191-b56f-0cafe7d62d76",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bc1c3099-949a-40fc-9e53-0bda9da22b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f0f258-80df-432c-84ef-5dc60d703667",
        "cursor": {
          "ref": "d3f6f89d-f02c-4d44-9c0d-a64f9cb839c7",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c32689fd-452f-49b7-b83c-52b89a8882c9"
        },
        "item": {
          "id": "a2f0f258-80df-432c-84ef-5dc60d703667",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "096933c7-f10a-4059-919a-bdf070612c5b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 602,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10998172-3bc6-4fdf-ac2a-f8785ba24583",
        "cursor": {
          "ref": "bd23b078-757b-4460-b170-6e97bdcdbbbb",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "bc3fc934-c017-4013-946d-3c4aa8fbc563"
        },
        "item": {
          "id": "10998172-3bc6-4fdf-ac2a-f8785ba24583",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5f97df72-036f-4292-961d-d3ffb80af1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0062c83-1efc-413e-8e61-7ff77fdecee7",
        "cursor": {
          "ref": "2a4cd694-1a12-40e9-90a6-f85780b6538b",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2857b71f-7929-44ae-aa99-53e33dfa9ffe"
        },
        "item": {
          "id": "a0062c83-1efc-413e-8e61-7ff77fdecee7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8eaec22f-aab2-470f-9563-5a55fea19318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523bcfab-1704-436c-a912-08270cba63ff",
        "cursor": {
          "ref": "5b783f9d-68bb-43ab-a987-2f319b1bc74b",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5a706467-73cf-4185-8712-155a361927f4"
        },
        "item": {
          "id": "523bcfab-1704-436c-a912-08270cba63ff",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f7ce7d77-722b-4919-8485-2d9a7ccf08a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726cb84f-af4f-459e-90f7-316c4d45319b",
        "cursor": {
          "ref": "a15edb9a-7042-4be6-b0be-460d80e7bbb1",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f3fcfb84-59b9-4ecb-9ef3-7c8d4adbdec6"
        },
        "item": {
          "id": "726cb84f-af4f-459e-90f7-316c4d45319b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a6caa2a3-db34-465f-95e4-ea7999f9b482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb053de-63eb-43f6-9840-afd781bb3784",
        "cursor": {
          "ref": "b3d837ae-e00d-4184-b478-d8ddd3e7c222",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "12a32f77-39f0-450b-8cdf-48ebe4bbf87b"
        },
        "item": {
          "id": "eeb053de-63eb-43f6-9840-afd781bb3784",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "49b2178e-bffd-4118-bd64-c155439b7862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f3aebc-dfae-4a23-a309-a6aa17004e38",
        "cursor": {
          "ref": "fdb2772e-d0c1-4ea9-a9c1-3ce0b863cb63",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3615e382-ecb8-442d-a89a-c879a1ec1014"
        },
        "item": {
          "id": "27f3aebc-dfae-4a23-a309-a6aa17004e38",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "74d73c33-ff9a-4e75-9770-7c1f8ab19b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10dbf572-c735-4f14-9be7-0518db7d0feb",
        "cursor": {
          "ref": "c96232a4-74b9-4bb7-a24b-8bb903866e4f",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e317f353-b140-4283-be01-c3bed1522e0b"
        },
        "item": {
          "id": "10dbf572-c735-4f14-9be7-0518db7d0feb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "58be7ea5-4322-421f-88e0-321f347dacdc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 731,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ab6f41-d5b3-4e4c-a5a9-e46f04dac0a6",
        "cursor": {
          "ref": "7f8d8070-8cf5-41bf-bb4f-c099cfafadbc",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7d4836cc-eacb-48a2-82c7-0e4dd80e0c6d"
        },
        "item": {
          "id": "28ab6f41-d5b3-4e4c-a5a9-e46f04dac0a6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8ef7b5ef-5ce1-4dda-b7a5-ec160c544a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5304bb-e14f-462b-a734-0d064dd50341",
        "cursor": {
          "ref": "98a2fe3a-e656-4ab3-b25b-ac3d90f52648",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "93cc03b3-6890-4a29-83ba-0c8146d076bc"
        },
        "item": {
          "id": "4c5304bb-e14f-462b-a734-0d064dd50341",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5ee53102-f73b-4517-a803-39c7bfabbd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dff162-ce1e-46ec-9973-4baca44fbf9f",
        "cursor": {
          "ref": "ae979f51-0996-4c36-86e4-3f9c3fcfd913",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7469262c-b06f-4ad9-af04-369bbdd56c3d"
        },
        "item": {
          "id": "80dff162-ce1e-46ec-9973-4baca44fbf9f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f7c9c7cc-751b-47a6-984c-8fbe2b1d981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea27840-dc51-444c-86b3-d5daab885ab9",
        "cursor": {
          "ref": "0bf134ab-a157-48f9-8b20-57f39c9b00ca",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "09a0ed9c-59c6-4de9-af1b-cb25d43d3914"
        },
        "item": {
          "id": "0ea27840-dc51-444c-86b3-d5daab885ab9",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a85ec630-e5c1-4192-8e20-5e2d81bfb356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b87a9ad-000c-444b-93e0-2b8f931b2f5f",
        "cursor": {
          "ref": "26459f2b-ceff-47a0-b359-417854aea738",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "29fcfda2-3742-4d6d-ab30-0307083ab43c"
        },
        "item": {
          "id": "2b87a9ad-000c-444b-93e0-2b8f931b2f5f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "01d92c30-9e5d-45b6-92c0-d82ec816c223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8d028c-a30e-469a-83e7-23f3a74bc6eb",
        "cursor": {
          "ref": "f18b9e3f-990b-4c2b-8d76-c54c04cb08c2",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dd5c082e-7eac-4666-b72a-853fd19b538a"
        },
        "item": {
          "id": "fb8d028c-a30e-469a-83e7-23f3a74bc6eb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c9bb43d5-0e88-43f9-84cf-1b5c1cd62916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae833c3-9eb2-4433-b1ef-496da9e44178",
        "cursor": {
          "ref": "e12525cb-d0cb-4602-bd92-6dc13c835468",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "32cb16df-5c7e-424e-8d0d-1bfe66332dd9"
        },
        "item": {
          "id": "8ae833c3-9eb2-4433-b1ef-496da9e44178",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "dcb81625-dd15-4117-9fc8-ab032bc53f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9261454-97c1-4216-a429-851cc372044e",
        "cursor": {
          "ref": "c5333eb6-5fb2-4a86-b354-01e9dc59bdf0",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f12ac479-b5e4-49f7-b4f6-1339bbe05310"
        },
        "item": {
          "id": "f9261454-97c1-4216-a429-851cc372044e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bfc79bb5-bc3c-4a2b-83ff-f03aef9e4776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00942e9-2a06-4607-9621-221128d8935d",
        "cursor": {
          "ref": "321c2bcb-4849-444f-9202-8bd276930fb6",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "15cd3bb2-3616-44dd-9718-311b8b62aea0"
        },
        "item": {
          "id": "a00942e9-2a06-4607-9621-221128d8935d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9251b109-c8a7-4d5d-bf92-677bf2caa626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3de9acd-921a-44a0-8e5b-f78cd27e0fb4",
        "cursor": {
          "ref": "b7750866-b907-4a97-b619-beda15bae66e",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "078e39db-9d63-42c6-ab04-9b9e8aaf0d08"
        },
        "item": {
          "id": "e3de9acd-921a-44a0-8e5b-f78cd27e0fb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1e47d2e8-27f0-4686-ae63-155a64f5bf4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae3c163-bdfc-42b5-8380-bff33b746196",
        "cursor": {
          "ref": "4c8760e2-7860-4d54-96c1-0d720d27bfeb",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "27b7db1d-cc0f-455c-bb87-587c52ca5bfc"
        },
        "item": {
          "id": "aae3c163-bdfc-42b5-8380-bff33b746196",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5dde6200-307c-4e27-872d-e648cd979425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175c6b0a-de3a-4698-be89-b7fd47a0a321",
        "cursor": {
          "ref": "d2b58498-e15d-42f5-893d-706903eea2ba",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "636c531a-4647-4ce3-a026-7960b7e2d6bc"
        },
        "item": {
          "id": "175c6b0a-de3a-4698-be89-b7fd47a0a321",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "76649438-3297-42d1-8f52-69ff295e2bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72225072-50bd-4eb2-a82f-d237f7b6bf2e",
        "cursor": {
          "ref": "2b3771e0-67e7-4203-95dc-583de0bf0a34",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "81bb4c6f-7bb4-4b80-8b55-f0910dec241a"
        },
        "item": {
          "id": "72225072-50bd-4eb2-a82f-d237f7b6bf2e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "40af5792-8c5c-4772-b48c-f8cc92d134c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f0240a-c7bc-4f55-b87a-05c863baa7de",
        "cursor": {
          "ref": "1f073969-90b6-4277-b69d-6dc71142bf15",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5799cf18-e5f2-400e-88f6-091999b99626"
        },
        "item": {
          "id": "95f0240a-c7bc-4f55-b87a-05c863baa7de",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eaba1489-c109-4301-8226-19113c452b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238df71a-eaff-4277-aae7-eb2c0f512f58",
        "cursor": {
          "ref": "7a179b25-e7b5-40c2-9d90-9ae38fafbd1f",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4ee992a0-50ff-4941-a907-a7dc1c700b83"
        },
        "item": {
          "id": "238df71a-eaff-4277-aae7-eb2c0f512f58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bd28b10f-7346-4e91-9dc3-76d4aeddeb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a2aee7-60ca-4133-935a-936859b6e001",
        "cursor": {
          "ref": "01bcbbb9-9f4a-402f-8f13-d17debc7d53d",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2a2b351a-6763-47c2-a533-bcc1dd629ac2"
        },
        "item": {
          "id": "d9a2aee7-60ca-4133-935a-936859b6e001",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c68ee989-2d57-417e-9cdd-2f21ccb998e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad88e740-f649-44db-9edd-106d47634f1f",
        "cursor": {
          "ref": "20666912-3d43-465d-bf1a-a95b0dffa2c4",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b433827c-90bb-42ec-9228-96e6e4443e60"
        },
        "item": {
          "id": "ad88e740-f649-44db-9edd-106d47634f1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "aaa7dfdc-7e58-4c0b-a653-bc412b2314a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffec0b7-3fac-4b51-8950-7670b8fcbbd4",
        "cursor": {
          "ref": "504e72dd-f520-41e6-9218-fab2f4e42eab",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "90b238f0-6a01-4d6d-83a8-dba5668b8d3c"
        },
        "item": {
          "id": "9ffec0b7-3fac-4b51-8950-7670b8fcbbd4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "31813eb0-20d6-4254-9f85-19b5145e1aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 694,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895a8746-0a75-4548-9d19-120dbbc03975",
        "cursor": {
          "ref": "4eb73bca-41f7-41a2-bc47-2ea6c39495d2",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ebbded29-7fa8-488f-a72b-eaffdaf87318"
        },
        "item": {
          "id": "895a8746-0a75-4548-9d19-120dbbc03975",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8392a165-d2f9-45b2-8b32-deb3b3d81cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10eeba90-1f70-4a0a-af00-433f7436afb0",
        "cursor": {
          "ref": "1779b8cf-66ba-419d-8b11-b74dd0f1ccd1",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3d369779-d032-46a2-b19b-86f3023300b0"
        },
        "item": {
          "id": "10eeba90-1f70-4a0a-af00-433f7436afb0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "523ff4d7-100d-4246-ac18-ab47c0f0b18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a598f4-a2bd-48e0-b1db-7e0bf9d569cc",
        "cursor": {
          "ref": "e9f96e79-2493-4d7e-afd2-e242d6e1ab79",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c9ea8944-edbe-4ffc-befb-65889700ee70"
        },
        "item": {
          "id": "57a598f4-a2bd-48e0-b1db-7e0bf9d569cc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "64ddaaee-7f82-4e8a-84c6-0d0000a346fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147206d6-e877-44b7-adfd-2c4859b2a379",
        "cursor": {
          "ref": "fad2afbc-79b9-4424-8fbb-dc037d7b61c9",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0e2f9134-41f5-463e-8a5a-7ff008ed9663"
        },
        "item": {
          "id": "147206d6-e877-44b7-adfd-2c4859b2a379",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e5032765-d326-4a34-8f60-9153707d3172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5973de-a288-4b7a-8aa5-1383eb6ef9e7",
        "cursor": {
          "ref": "2a6a245f-c93b-46ee-9c90-0e34dbeeb33b",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c1526d2b-79b5-4d9e-b49e-172f803ba8a5"
        },
        "item": {
          "id": "bb5973de-a288-4b7a-8aa5-1383eb6ef9e7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8de03b0f-cafa-4b1f-bfbf-826fca52043c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61ee261-10f1-4ba6-8974-af9a9997d27f",
        "cursor": {
          "ref": "cff19a81-f9ae-4f0d-b909-ce984a514fb2",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "863d4bf7-7bba-47b2-8366-fa43bdea27e5"
        },
        "item": {
          "id": "e61ee261-10f1-4ba6-8974-af9a9997d27f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6c350cbd-7275-4570-8f1b-06bd57ff10f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cccfa1-1746-4c42-b918-414e14037721",
        "cursor": {
          "ref": "a3bb608a-492f-4491-8d1c-8574c6742665",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "58e65c8e-0bad-4097-a366-d94eb30f8a1b"
        },
        "item": {
          "id": "94cccfa1-1746-4c42-b918-414e14037721",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9b5cec66-f14f-4912-99b5-10fd7d10bec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669e3c98-8a13-4b70-9b07-f03c82479873",
        "cursor": {
          "ref": "87ccebd2-4f7a-4358-a6c7-a2477a976170",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "80a9e699-d2c3-4212-a660-24a071a11008"
        },
        "item": {
          "id": "669e3c98-8a13-4b70-9b07-f03c82479873",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "de7ee40c-1d8d-4dc9-9131-9523467d71de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43698c7a-54c1-4289-96a5-84726cc64ff6",
        "cursor": {
          "ref": "6fb3f5c6-89ca-47b9-8585-25b362093ffd",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a4650cd4-0201-4bca-a946-1b429055b99e"
        },
        "item": {
          "id": "43698c7a-54c1-4289-96a5-84726cc64ff6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fc6cdde6-4c0c-491e-a727-cd0dc574bf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459a5ba7-97ba-40d9-b8de-2a02720b9123",
        "cursor": {
          "ref": "3473aa92-623c-4b30-885c-33ffd97f5e58",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6493c8ec-fa4e-4a9b-8c9a-ee69ce68605c"
        },
        "item": {
          "id": "459a5ba7-97ba-40d9-b8de-2a02720b9123",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d5037e74-aa63-4c74-af36-d3a4cbdcf292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec67fde1-68b5-4dcf-ab57-77e7efe95109",
        "cursor": {
          "ref": "d2a34e02-fb02-49fa-873f-4a003a1f1d07",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5481c833-07f3-4149-92da-b5919ffda536"
        },
        "item": {
          "id": "ec67fde1-68b5-4dcf-ab57-77e7efe95109",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "64feba59-9a32-43f3-8481-276c4964adef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8176d61f-fc28-4d14-8792-cfe838837fcb",
        "cursor": {
          "ref": "2ea5f68f-4a19-4e67-90b0-4926af885127",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b741f870-3a4f-4704-a921-9123bd27a405"
        },
        "item": {
          "id": "8176d61f-fc28-4d14-8792-cfe838837fcb",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9f83de3b-6c4b-43f8-84a7-7c512b816a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36663e6-8672-446b-85ac-e498e05cf4e3",
        "cursor": {
          "ref": "84c42930-5aef-443c-bc27-2a1c47f02b1f",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ea0f7118-2b56-41e2-b8e9-fb133883e0e3"
        },
        "item": {
          "id": "e36663e6-8672-446b-85ac-e498e05cf4e3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "50032d03-c8e7-474a-bf15-aed93057bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a665e0-e28b-4b23-9128-d3889ea1fd0e",
        "cursor": {
          "ref": "7a5c58ef-2f6e-436e-827e-fb00500aa549",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9e2bf11b-499f-4a47-95bc-2ab5300b0c82"
        },
        "item": {
          "id": "f1a665e0-e28b-4b23-9128-d3889ea1fd0e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2a33bd98-8c89-456a-b057-d82a0a7c4623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a447939-6bb8-41e2-b7f1-12f2d04647f7",
        "cursor": {
          "ref": "d228af01-1ad1-40a1-b4e2-ca58d79dcaae",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1cce74ac-81ac-4a9c-a2ac-78cfba1da096"
        },
        "item": {
          "id": "3a447939-6bb8-41e2-b7f1-12f2d04647f7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "814f8318-fd65-4a6e-a2f9-f886feb98688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6d0d8c-1006-4e2b-bf60-85c0330027a6",
        "cursor": {
          "ref": "0b8a51e0-61c4-4506-a170-67b7281432f1",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "50841933-ec7b-435e-90d5-c644a0e8e968"
        },
        "item": {
          "id": "8d6d0d8c-1006-4e2b-bf60-85c0330027a6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cacbf142-3267-4054-a4e1-ea02cb72667c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f395fe-1750-4a49-8418-a0fe5ca6ce4f",
        "cursor": {
          "ref": "f484e07b-590e-4600-81dd-4a160567ecb5",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "67b31be3-3239-4a5c-bd76-64bb8d08a8d9"
        },
        "item": {
          "id": "80f395fe-1750-4a49-8418-a0fe5ca6ce4f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "66c47dba-488d-44aa-9dfe-d837e777ae07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d53a4c8-2d43-4d96-b30f-cbe144b73c4d",
        "cursor": {
          "ref": "548b637e-13c7-40b0-85a6-2151d47ea630",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "679840dc-3bf4-4bff-b7a7-6916fd3c7032"
        },
        "item": {
          "id": "2d53a4c8-2d43-4d96-b30f-cbe144b73c4d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ccf89ef7-ee8e-4b73-b301-f405f609095c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b4f995-600d-41ef-a3a4-93ce7ad72812",
        "cursor": {
          "ref": "43bb7220-6a96-4612-b3ce-4f180a18f131",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "33d04cef-f602-47b1-82a3-1ff9dff00ac5"
        },
        "item": {
          "id": "71b4f995-600d-41ef-a3a4-93ce7ad72812",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "03e52c9b-a611-4449-a1b1-eedb0f2b0975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8f949f-2139-47d4-9632-c1550482956f",
        "cursor": {
          "ref": "5d930c92-4bba-4713-b47d-8255f4f39914",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d3762496-61db-463d-a92c-6d9da68ad034"
        },
        "item": {
          "id": "2c8f949f-2139-47d4-9632-c1550482956f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "cf03c412-c8f0-4aaf-8f46-3b1bc776b0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2ae063-ebe9-43c7-99e9-0a02d86437dc",
        "cursor": {
          "ref": "baa52c3a-5cdc-42a6-970f-c9f17cc7e5dc",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5d871704-ea27-4c20-9ce7-7217146e6414"
        },
        "item": {
          "id": "7a2ae063-ebe9-43c7-99e9-0a02d86437dc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c6060828-ad56-4a0a-b55e-fda080dcc24f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad0b579-b66e-44af-a106-56d8e3bce816",
        "cursor": {
          "ref": "c4a47d3d-6ef0-4723-a6f9-1508f7c17e2f",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "12e21cdb-93b1-4838-9f8b-5df2e6fa206a"
        },
        "item": {
          "id": "bad0b579-b66e-44af-a106-56d8e3bce816",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "38833523-e826-4b50-b767-85dcc745ef68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b4aeeb-8834-4bb4-b699-cb4ce8a81680",
        "cursor": {
          "ref": "f885f938-427d-4d47-8119-8b020c75a179",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9854c030-b20d-474b-94a0-43a428e35c97"
        },
        "item": {
          "id": "e5b4aeeb-8834-4bb4-b699-cb4ce8a81680",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7ed2bfdd-c527-4712-ae8e-3e147a7a96a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090cfd19-8a7a-4e12-ba80-f937e85300ec",
        "cursor": {
          "ref": "c9957ed6-f73b-4877-9deb-aa5e2c14bff0",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2be54b05-347e-46c9-85e1-d6466093fa7c"
        },
        "item": {
          "id": "090cfd19-8a7a-4e12-ba80-f937e85300ec",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0851f2a9-1120-4021-a6af-cec6360b8acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d471fddd-ac7d-4eb6-8123-e5c8bc967899",
        "cursor": {
          "ref": "89ec85d7-050d-41ab-a809-e2a069dfee03",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "128b3f79-55a4-487f-92a9-0f6046840ac3"
        },
        "item": {
          "id": "d471fddd-ac7d-4eb6-8123-e5c8bc967899",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f287e54c-6244-4d63-b3c5-56335492859c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590a8b29-4c01-43f4-a2a0-a95ebbfa7d33",
        "cursor": {
          "ref": "a259642a-9046-43e8-ab17-a7e59e300beb",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b87b66f1-24db-4600-a7d3-5e9dea7b7c12"
        },
        "item": {
          "id": "590a8b29-4c01-43f4-a2a0-a95ebbfa7d33",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0f0e075e-dbbb-4e1a-b535-85c1ab71e94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785dc971-0cce-4f65-95d0-d94eb4c7ae7c",
        "cursor": {
          "ref": "64c59b8b-cb8d-4d1c-b516-c84b30ae8ae2",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ee446e04-f062-4cba-92b3-fc99d3a48166"
        },
        "item": {
          "id": "785dc971-0cce-4f65-95d0-d94eb4c7ae7c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f2a62577-dbea-4953-a657-c6ea41eccf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbda56c6-09f0-4c20-9260-3ce7b4529c3c",
        "cursor": {
          "ref": "9d667bea-c8f8-40d8-b718-915affbf6585",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "75cbb5a6-8da1-422d-a35e-7280d61bbfea"
        },
        "item": {
          "id": "bbda56c6-09f0-4c20-9260-3ce7b4529c3c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "68cb6852-4436-4e00-bc78-84f85bd8a908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8733ae1-51ca-4ed9-8ea4-74869accdf7f",
        "cursor": {
          "ref": "9240c1ce-dcb3-462e-850c-abb5adf3400b",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "07f13e42-14ff-4114-813f-365e70045250"
        },
        "item": {
          "id": "b8733ae1-51ca-4ed9-8ea4-74869accdf7f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "85f706f2-750e-4da9-806f-fa49de79e9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d29309-4532-4566-945f-28a41079d309",
        "cursor": {
          "ref": "81203c36-da94-44bb-ad24-0553d47263cf",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8bf129ad-9fff-4ddd-b58e-7a22236bdaf7"
        },
        "item": {
          "id": "87d29309-4532-4566-945f-28a41079d309",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fd287fd1-f25b-4d1b-a8fc-1a77fcf1d345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc9cb9d-af1e-4ecf-b8cc-8ae0481713e8",
        "cursor": {
          "ref": "d46be232-3d53-40d6-9bc6-c12221fea3e3",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "654b89c3-69d9-4d8b-926e-99edbc10bcd6"
        },
        "item": {
          "id": "dfc9cb9d-af1e-4ecf-b8cc-8ae0481713e8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0e344140-b057-4079-8136-fd1f6b35a4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a936da-0f0a-42a6-adc7-dcf6476dbfb2",
        "cursor": {
          "ref": "165182ce-674a-403e-89ab-155eae276532",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f4be4a4e-110b-4724-b77e-52086d89f252"
        },
        "item": {
          "id": "16a936da-0f0a-42a6-adc7-dcf6476dbfb2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e5a2f0fa-9c97-4b68-aa45-9fc58b1ebd11",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d04e180-a5cd-4bf3-ab4b-923ec6684835",
        "cursor": {
          "ref": "c849d81c-c126-4a94-bc4f-c72fc737533d",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8843264a-6702-45bf-ab99-44588cd9de7f"
        },
        "item": {
          "id": "2d04e180-a5cd-4bf3-ab4b-923ec6684835",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "1368d3f3-8ca2-4341-aa2a-c80fbea620ad",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 657,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc1da83-8e58-4bf4-b206-2f2c52e5b4e2",
        "cursor": {
          "ref": "d4bfbb85-8966-433a-9b85-3d3e0bf3840c",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9564bd8b-06ed-49b7-91dd-2fa10e9cbed2"
        },
        "item": {
          "id": "9dc1da83-8e58-4bf4-b206-2f2c52e5b4e2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "78bf623d-50a4-4b11-a8c9-1505556cb90c",
          "status": "Created",
          "code": 201,
          "responseTime": 3540,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "b7367726-fc7f-4e51-bb9f-0c0fea6c0cdd",
        "cursor": {
          "ref": "2c5bb54f-7230-4734-90a8-bdc5a68c2aa1",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dc09e314-384c-4228-b83e-3202e9126866"
        },
        "item": {
          "id": "b7367726-fc7f-4e51-bb9f-0c0fea6c0cdd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e8cc6a68-3400-4b6d-a3f0-b82dc0d2d2c5",
          "status": "Created",
          "code": 201,
          "responseTime": 3589,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "8ed12310-b792-41ac-b153-581a3903b373",
        "cursor": {
          "ref": "7ecc4a34-7152-4b16-9f46-94a5b956ecdf",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "14d619fd-7198-4b70-adbb-80fe11e9747d"
        },
        "item": {
          "id": "8ed12310-b792-41ac-b153-581a3903b373",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d8b60ec4-0283-4544-8467-d49726d3c7be",
          "status": "Created",
          "code": 201,
          "responseTime": 3516,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "386084bc-10d4-48ce-aaaa-ad653ea2e284",
        "cursor": {
          "ref": "5eeb2b64-2aa4-43e1-bb52-f4a75aabe40d",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2eaaa520-6589-49ca-a18d-1cf755a532cd"
        },
        "item": {
          "id": "386084bc-10d4-48ce-aaaa-ad653ea2e284",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "68af3099-2e1c-4319-a48a-996021590f00",
          "status": "Created",
          "code": 201,
          "responseTime": 3800,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "3a98f53b-d18c-4e89-927e-d19ee563fabe",
        "cursor": {
          "ref": "164bcb26-8a46-4032-a758-ac33b3eab349",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ef8b0fe9-e0a6-4bb0-816a-d9d6d86e1837"
        },
        "item": {
          "id": "3a98f53b-d18c-4e89-927e-d19ee563fabe",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "63c643c9-5b1d-48bf-a41e-666bd48c6836",
          "status": "Created",
          "code": 201,
          "responseTime": 5960,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "10a04cc2-6572-41ed-b208-2d97589d2819",
        "cursor": {
          "ref": "40d0caa4-2e4c-4dc4-9c2a-a2604baaf72e",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "633c2e4e-8e89-4bac-a9b0-38a328a13b06"
        },
        "item": {
          "id": "10a04cc2-6572-41ed-b208-2d97589d2819",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2c53ceb5-d19f-48f2-acae-d2d486b7e8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a04cc2-6572-41ed-b208-2d97589d2819",
        "cursor": {
          "ref": "40d0caa4-2e4c-4dc4-9c2a-a2604baaf72e",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "633c2e4e-8e89-4bac-a9b0-38a328a13b06"
        },
        "item": {
          "id": "10a04cc2-6572-41ed-b208-2d97589d2819",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2c53ceb5-d19f-48f2-acae-d2d486b7e8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7088bb-fd05-4027-b394-facbe01dc280",
        "cursor": {
          "ref": "e6332bf6-988a-4e68-a64e-d202825abc04",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c0eee5d7-b07f-46f7-a520-417a319d146f"
        },
        "item": {
          "id": "fc7088bb-fd05-4027-b394-facbe01dc280",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0baa752d-94a4-440a-b791-897553e7a229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e326a1-fffa-465f-b904-ae472ef3bc57",
        "cursor": {
          "ref": "fa4647a2-302a-450c-af90-499e1a13b338",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f23eb240-363f-4846-8e57-36490ebec53e"
        },
        "item": {
          "id": "c8e326a1-fffa-465f-b904-ae472ef3bc57",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "198af745-9143-47a2-ab6c-e1e38395b8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d555773c-c205-45c4-b95c-49157bf476b8",
        "cursor": {
          "ref": "0c4bac8b-9613-4d57-907e-551235348242",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7726c9ee-39a1-4f46-a090-b157256432fa"
        },
        "item": {
          "id": "d555773c-c205-45c4-b95c-49157bf476b8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "03989b39-9e96-4427-9e57-b42596f40642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe939b40-54cb-4891-a8c4-d4e02de35af4",
        "cursor": {
          "ref": "37e59464-fe86-4672-8969-08e55341acca",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "39d2cf98-7781-43c8-82eb-6ee773a8ffba"
        },
        "item": {
          "id": "fe939b40-54cb-4891-a8c4-d4e02de35af4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "455b9d1b-9d0b-4674-9215-84c1b8f118ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9ff768-9c21-48d1-9caf-1bf3b91082c3",
        "cursor": {
          "ref": "927d99f9-375e-4033-8ade-e7d1956a8856",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb9c50bc-712c-4264-abdd-9bee1f9d0a77"
        },
        "item": {
          "id": "df9ff768-9c21-48d1-9caf-1bf3b91082c3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8bea3891-b616-4188-ad9f-08429df0e09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cf5dc2-6280-4b4d-b559-5f144f0d52f3",
        "cursor": {
          "ref": "bd296af8-5b6b-4c3e-bebd-fa89a7add325",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5585276f-7eae-4bc6-92d3-daee4c02d34f"
        },
        "item": {
          "id": "02cf5dc2-6280-4b4d-b559-5f144f0d52f3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cc597ddc-d4ea-41c3-86f6-48c5128bca64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d8fcd4-f967-4829-b2d9-b36398ebc5ca",
        "cursor": {
          "ref": "17f5fed3-1600-4895-aa7a-4e0969a79aef",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3a50e12f-59d9-4820-bd9d-e64fb9246dd9"
        },
        "item": {
          "id": "c8d8fcd4-f967-4829-b2d9-b36398ebc5ca",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8d6aa63-a8e6-40f4-baff-d9fa02aeb120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec040e1-ace2-4197-8600-ce52e0538631",
        "cursor": {
          "ref": "912d9370-8332-4f1a-aaeb-a34c8fc69969",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "21f94933-fda1-4b5a-9e69-489088d66f33"
        },
        "item": {
          "id": "5ec040e1-ace2-4197-8600-ce52e0538631",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "70cb5efe-f2be-437f-9eea-ce0799521af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce14cd37-f45a-4ae2-9d89-177f86bf7758",
        "cursor": {
          "ref": "07fcdec3-00a5-439d-9c4d-9302013b9b9f",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c183fe3f-987c-4390-a18a-20c8505ef0db"
        },
        "item": {
          "id": "ce14cd37-f45a-4ae2-9d89-177f86bf7758",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2020fd50-1062-4ab6-a631-b60e776c0c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8810d4a6-0fcf-412d-a626-eab3510bf3bc",
        "cursor": {
          "ref": "91728e14-1834-46da-9b22-43dda5d3a072",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1dec2fc5-0d84-406c-836b-184b28881c67"
        },
        "item": {
          "id": "8810d4a6-0fcf-412d-a626-eab3510bf3bc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d5154ece-91c7-4af0-b846-db1c75525197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac326c2-88a6-4d1d-8799-0175f3b39909",
        "cursor": {
          "ref": "27f959f4-7a0b-4ff7-9656-75b66842c7c8",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e0ec5ad1-d389-4951-a7d4-bc6452052025"
        },
        "item": {
          "id": "dac326c2-88a6-4d1d-8799-0175f3b39909",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "03aaefca-56db-4aa4-b7c0-afaebd807ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eee68c-2625-490d-a245-464bba1ae6b9",
        "cursor": {
          "ref": "8c8f7b00-b4a9-4fbf-a152-6145c8b96290",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "222b3e90-e7ad-4264-bf76-93afe62dba8f"
        },
        "item": {
          "id": "19eee68c-2625-490d-a245-464bba1ae6b9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75f0e31c-a281-454d-82ed-984a9cf485c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa605d0d-f1e2-4ad1-9153-b5cd49382a08",
        "cursor": {
          "ref": "f78787e0-feef-41e9-b0ce-796253ef685d",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "592fefe4-17d6-407d-a9ef-d36f546acade"
        },
        "item": {
          "id": "aa605d0d-f1e2-4ad1-9153-b5cd49382a08",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "912b23ab-6691-4a78-89a5-600632188693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb5b46d-a90d-4c2c-8d80-6f9c53e48919",
        "cursor": {
          "ref": "55e9739b-9992-4059-a6c8-4e74cf17cfd8",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1e62a7ea-4f88-408d-b983-329a1d4d7362"
        },
        "item": {
          "id": "ecb5b46d-a90d-4c2c-8d80-6f9c53e48919",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e7cbaeba-c36c-482d-9fa5-ee1189a5e422",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec3392b-ce24-4777-962d-fe32189ea075",
        "cursor": {
          "ref": "9cf46d32-3c83-4b4f-a690-c3f61e2804df",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "38b219e2-b159-4e4e-9c84-40a038c06387"
        },
        "item": {
          "id": "2ec3392b-ce24-4777-962d-fe32189ea075",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "74934c9d-d2bd-4dee-a95b-8c84af7fbe79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0619837-6632-4b6c-85c0-e5e664cfe4f7",
        "cursor": {
          "ref": "60bff122-1912-4365-8b7f-4810bd2072ba",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f3dc8c7c-9aef-4b75-a873-eddeb881bf93"
        },
        "item": {
          "id": "a0619837-6632-4b6c-85c0-e5e664cfe4f7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "11e5d9c9-d59c-40e2-9b00-939080079306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1e97c6-6321-4d49-8fbf-89566e361df4",
        "cursor": {
          "ref": "4c1d45b4-9a6c-44b0-b2a5-0c60a9ec2b29",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f8928f85-62bf-4d46-b81c-88521bf7b5d4"
        },
        "item": {
          "id": "9d1e97c6-6321-4d49-8fbf-89566e361df4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "43f56587-ba16-4539-b7f6-39ee76593f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8c1dcb-fd56-4172-bdb5-f6de9c4d41c7",
        "cursor": {
          "ref": "e7ffe846-8237-4c1b-b553-51f410888a52",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0716021-b634-43d6-873e-1b1b9bf947ab"
        },
        "item": {
          "id": "9c8c1dcb-fd56-4172-bdb5-f6de9c4d41c7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "91e43c09-869e-459d-ad0f-b8ab223e2ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c393a3-2690-48b1-b90e-30a1f78c41c2",
        "cursor": {
          "ref": "e1394afe-a7f1-49fa-be42-a21383f26d49",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6bf63656-f61e-4b46-86d7-57816445c588"
        },
        "item": {
          "id": "f9c393a3-2690-48b1-b90e-30a1f78c41c2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "336d3582-d588-44c5-9820-44723a215ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28203b4f-fce6-4f5e-bb55-d1e1beb69f64",
        "cursor": {
          "ref": "d41c2b84-8951-4c5b-bb9a-594d375dd043",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e5ce3209-0ffa-4adc-8a6a-b2772b536049"
        },
        "item": {
          "id": "28203b4f-fce6-4f5e-bb55-d1e1beb69f64",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "81687fad-2d93-482c-9229-6088eb82175a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "694f30ef-9d89-47b0-8f26-aa85cfd4a074",
        "cursor": {
          "ref": "912bec06-79ee-4c6f-b042-f7dff6bc7c7b",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4675ce74-4d14-4870-9f13-29681ef1aad7"
        },
        "item": {
          "id": "694f30ef-9d89-47b0-8f26-aa85cfd4a074",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ed77a35-4c00-4f20-a6f1-a4a5e8d593af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfdf323f-eebb-49ea-b9b5-418df7c2690b",
        "cursor": {
          "ref": "d82f5613-5e13-4862-83b7-1da82df44a37",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "12fe435f-5c15-49b5-afac-f6f33d051384"
        },
        "item": {
          "id": "bfdf323f-eebb-49ea-b9b5-418df7c2690b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed4bc443-4ff3-4d80-bdae-63560696238a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7bbc18-e086-4d5c-b244-5b17ae261df1",
        "cursor": {
          "ref": "3fb39047-4111-4772-bf30-855266e6f07a",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6df83f68-417b-4c25-922a-394987917cdc"
        },
        "item": {
          "id": "5b7bbc18-e086-4d5c-b244-5b17ae261df1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4c5fa7ad-c27c-4574-987a-9527e180c639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f3c26f-4b9f-468b-80c3-7648ed22fb54",
        "cursor": {
          "ref": "ab9ddcca-a385-46be-8a2b-fbd582ca9f65",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "22c0bf3a-e37b-45b3-a442-a45b501afabb"
        },
        "item": {
          "id": "39f3c26f-4b9f-468b-80c3-7648ed22fb54",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6a1854ce-fc93-46ad-a764-5830f6ab98ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0266a2f2-df44-4640-80e3-881ab2d0049c",
        "cursor": {
          "ref": "27317a05-0d5f-4f6b-a340-92bcf1ed1b0b",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "27e8b1e0-003f-45cc-acf5-6eee052fc4d6"
        },
        "item": {
          "id": "0266a2f2-df44-4640-80e3-881ab2d0049c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a2d75240-3b94-4a08-b1f8-b92e8658fc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab618cc-e755-4195-bd36-827062b66c22",
        "cursor": {
          "ref": "c07051e4-2495-4f0e-9873-5fc5a088c4a7",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bdcb4d2b-004d-480a-8098-1a7107409d12"
        },
        "item": {
          "id": "8ab618cc-e755-4195-bd36-827062b66c22",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "535fc3c8-7c38-492a-9eba-facb6d9b8c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51036cd-609b-441a-872f-75ee9384920f",
        "cursor": {
          "ref": "bece67bc-e328-45df-af51-c072fae37662",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0fbb593d-0193-4ed3-86f8-f7f716907b9b"
        },
        "item": {
          "id": "d51036cd-609b-441a-872f-75ee9384920f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7445d3b4-ace1-4422-9853-61de9de08bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebdfd70-9945-4eb1-a1b2-827efb45978d",
        "cursor": {
          "ref": "0fac79a2-472f-4e85-aabd-af0e75e2f25e",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "03593341-ead5-4dde-b690-26d845308b98"
        },
        "item": {
          "id": "1ebdfd70-9945-4eb1-a1b2-827efb45978d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ed2ecc20-2324-4bda-b4e5-1be7045972eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02d611e-7e7e-4302-8363-b723f3ad6241",
        "cursor": {
          "ref": "8004bb06-0f86-4dbb-a4d3-bb94d87a6cb4",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "92ce5a11-f8c6-450e-8728-0836ba032755"
        },
        "item": {
          "id": "d02d611e-7e7e-4302-8363-b723f3ad6241",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "166a4d18-d13d-4937-b661-223aef4dc6c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 751,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec49d5f4-a5c5-4259-98bd-03fa6766db16",
        "cursor": {
          "ref": "6ebb77dc-319f-49f8-831a-82b8a3603fca",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "03ad8a32-d436-4553-9014-e4ee02ef307e"
        },
        "item": {
          "id": "ec49d5f4-a5c5-4259-98bd-03fa6766db16",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c392577f-5e7c-4f9a-a967-d6c1ba14b4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3833acca-1722-4134-b821-80827cbc023d",
        "cursor": {
          "ref": "19635d57-4a41-4c44-81b5-141e365769a8",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "000031b7-bcae-4b14-a37a-245db8d7e1fa"
        },
        "item": {
          "id": "3833acca-1722-4134-b821-80827cbc023d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "540d41ed-a3bc-412a-a0fb-f4db82f307b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b22576-e4a5-4106-a424-275d535ecca4",
        "cursor": {
          "ref": "2e752c40-a74d-4e3a-bba2-37ad3a1a54a2",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4dec33e5-f0fa-4137-941a-04626ed3bfd7"
        },
        "item": {
          "id": "33b22576-e4a5-4106-a424-275d535ecca4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e0213e6b-4c9b-4cb0-a28c-310f3e95191b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ce96d2-c1ae-4cf3-8988-95f257920040",
        "cursor": {
          "ref": "f6e42c16-4320-428c-8163-1e6bba08d77f",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "69f112ea-90df-4c69-88d8-ea1fe22cd8f9"
        },
        "item": {
          "id": "71ce96d2-c1ae-4cf3-8988-95f257920040",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "25a63368-7e44-4d5a-a56d-d3a24ab509bd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 767,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b7c184-2b8f-4d19-be32-c202ffb38200",
        "cursor": {
          "ref": "9aa3e065-b73d-4aef-a6b3-9f3da7176b5d",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "667a13bb-e8cf-4d51-bf12-a5e5a257d451"
        },
        "item": {
          "id": "02b7c184-2b8f-4d19-be32-c202ffb38200",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "801b0360-aa81-4fcf-a359-9a3d9c080864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b7c184-2b8f-4d19-be32-c202ffb38200",
        "cursor": {
          "ref": "9aa3e065-b73d-4aef-a6b3-9f3da7176b5d",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "667a13bb-e8cf-4d51-bf12-a5e5a257d451"
        },
        "item": {
          "id": "02b7c184-2b8f-4d19-be32-c202ffb38200",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "801b0360-aa81-4fcf-a359-9a3d9c080864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a8df35-c478-4e88-a86c-4ef6fb6ac428",
        "cursor": {
          "ref": "5579b7e9-55f5-4291-8ad3-d2c2aa3b390a",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2b3e55e8-8c28-4ac2-8aba-401a488209a2"
        },
        "item": {
          "id": "57a8df35-c478-4e88-a86c-4ef6fb6ac428",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "55889276-cf9d-4509-b1d2-f357a288b45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1690fd11-91e2-4646-8640-df1513a2d126",
        "cursor": {
          "ref": "395899ba-48dd-49dd-a21f-fc44436d4d93",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4a2a31c6-6c28-4a44-9d09-a58cbf1cd9e5"
        },
        "item": {
          "id": "1690fd11-91e2-4646-8640-df1513a2d126",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0ca2ce40-28d6-4894-997d-29a9966c9631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4191d60-de7e-4a28-abec-70ad26792866",
        "cursor": {
          "ref": "db0a0edb-45f3-4e9e-9d8a-aacc6a7706ca",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0d12cdad-c17e-4060-80ab-00e09a6ba41e"
        },
        "item": {
          "id": "a4191d60-de7e-4a28-abec-70ad26792866",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e46e73ce-577d-4d55-b689-7467b51fc103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b380b1-7dba-435d-9076-867ad90ec06a",
        "cursor": {
          "ref": "119f366d-b4fc-4296-bdca-9e9c0209b646",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6d0f257e-9a00-4c59-bcfa-28d5a1026f41"
        },
        "item": {
          "id": "38b380b1-7dba-435d-9076-867ad90ec06a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "817d37fd-c905-4949-bad8-496b6d99229f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c6b779-555e-44f8-8a9d-7d715c70751d",
        "cursor": {
          "ref": "5bc8e03d-9091-4af9-9172-a833a4c251bc",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9aa752c7-d05f-4fbf-98d8-479c21614df5"
        },
        "item": {
          "id": "f6c6b779-555e-44f8-8a9d-7d715c70751d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8a9e17e1-46a6-4dd6-b6e3-c7c22ffac549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5aa273-846c-4d58-a3ef-6962e8690b7e",
        "cursor": {
          "ref": "42091814-904d-4145-91f3-d7df93b196a0",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6bcd26a3-9ed3-4cbe-a71f-a6ad4979a501"
        },
        "item": {
          "id": "cf5aa273-846c-4d58-a3ef-6962e8690b7e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b34d785e-ee12-4ea7-9770-ea73468d4c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e3f403-9d00-4312-b9ce-ce02ac403849",
        "cursor": {
          "ref": "18dbccf1-e405-432a-a6f6-79da6274a486",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ab5fdd1d-abae-4bab-aebd-8afe364dfe8d"
        },
        "item": {
          "id": "98e3f403-9d00-4312-b9ce-ce02ac403849",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b998b735-29e7-406d-b86f-82cf29d15d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2aef2de-a59d-4dee-87fa-34d53e527b9e",
        "cursor": {
          "ref": "e4a910aa-38c2-40f2-a8ac-04d8e9b95352",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b5d544ac-ad3d-44c7-963a-eaf2ffdcad87"
        },
        "item": {
          "id": "b2aef2de-a59d-4dee-87fa-34d53e527b9e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "983fdc8d-a709-4e80-bd14-a49ffa73fffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e54e3b-609b-4309-8e8f-090f16589d30",
        "cursor": {
          "ref": "fc35dc6d-3952-41e9-a730-7f2a53fb0625",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43234d1b-997f-4d26-833a-2f06c1c50df7"
        },
        "item": {
          "id": "37e54e3b-609b-4309-8e8f-090f16589d30",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "fab8a0d8-3686-44aa-8791-1ba1b5a5ab75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70d27d3f-92a7-4a51-9c31-88f137234689",
        "cursor": {
          "ref": "33c7dad3-2334-4ede-a5ec-589855ec9ce1",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "32fbfee7-ead5-4187-9e91-07a0082732ec"
        },
        "item": {
          "id": "70d27d3f-92a7-4a51-9c31-88f137234689",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "41438699-06b4-4e50-a1f4-fd9a66fb4a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f059f6-4336-4a36-b693-fa36c6cd30da",
        "cursor": {
          "ref": "5d3ef61e-05ab-4b4e-a5c7-e66e35b5820d",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8d218197-c641-488a-85dd-ef5dbd62574f"
        },
        "item": {
          "id": "f6f059f6-4336-4a36-b693-fa36c6cd30da",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2da6fcce-d300-4fd4-ac54-cc635f2c1072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7caa429-1ba8-4b0c-afb7-91e71d3bbc99",
        "cursor": {
          "ref": "79a437b5-73c8-4a83-948d-2b461e2b5df7",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "17d00191-9821-468a-8de6-c815758ec44e"
        },
        "item": {
          "id": "b7caa429-1ba8-4b0c-afb7-91e71d3bbc99",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7204c3e5-dea4-4001-ad9d-3c6069fd958f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbef9fc2-50d9-4650-9a9e-fb2f810f0ae5",
        "cursor": {
          "ref": "5839e55e-4027-4a19-949b-8757e313cbcf",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2950f8e7-671a-471f-af3b-85866b665a3a"
        },
        "item": {
          "id": "bbef9fc2-50d9-4650-9a9e-fb2f810f0ae5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "099137cd-ade6-447f-9304-ab83f7f94e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca57a4e-8819-47c0-99e9-0552561db5a5",
        "cursor": {
          "ref": "d399d1c6-bf96-483c-a752-1861355ada35",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "628edcbc-f9a4-4a6f-8766-009fd6f44698"
        },
        "item": {
          "id": "1ca57a4e-8819-47c0-99e9-0552561db5a5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7d2c913e-5e00-43b8-9485-69ff2b00a4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e937ec-7ce7-45a3-bef4-48afc9c47000",
        "cursor": {
          "ref": "8871ec27-cb9d-4ed0-a14b-2c09f0bb527f",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1084927c-f010-4e1e-b0a1-c86daab1a8c3"
        },
        "item": {
          "id": "f8e937ec-7ce7-45a3-bef4-48afc9c47000",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "87492434-eaa8-4014-8e9e-d1f0260eb464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638b3676-40d6-46d5-84f6-a5270d98d10d",
        "cursor": {
          "ref": "34dc44bb-19fb-4e30-b4ac-042d94102947",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f057f3eb-2b36-48fa-ba0e-2c08f09a928f"
        },
        "item": {
          "id": "638b3676-40d6-46d5-84f6-a5270d98d10d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "745611ab-83cd-4d57-9696-99ba287f0806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18939934-ac19-44ac-8124-9f7c16da3a88",
        "cursor": {
          "ref": "331eca21-cd7e-459b-ba14-6dc6051a87a3",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c897f9d3-acc4-4249-a84a-fb41ab486f5e"
        },
        "item": {
          "id": "18939934-ac19-44ac-8124-9f7c16da3a88",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "ecce1138-2f9f-4ac2-8d1c-9f597e8ae1fd",
          "status": "OK",
          "code": 200,
          "responseTime": 3554,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "bb5eecb0-3943-4006-a7d3-ae7c6433a4fe",
        "cursor": {
          "ref": "41a9068f-ebd9-4d76-a385-314e2b4fff8b",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "300e8d5a-69b7-4bca-952d-f85ddbabdb29"
        },
        "item": {
          "id": "bb5eecb0-3943-4006-a7d3-ae7c6433a4fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c9fcecb7-fcdd-4aa7-bf67-f8341afccb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e81257-d9f9-4fb2-b326-6563342fa186",
        "cursor": {
          "ref": "71533efa-d3cc-4f88-a43a-921d1c296c2b",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fa21d4e1-acf4-4929-bde8-1834ad25f33f"
        },
        "item": {
          "id": "64e81257-d9f9-4fb2-b326-6563342fa186",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3e60b79a-1de1-4e88-a44e-67a36cad6e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350efea3-1767-41b8-80d7-4c480f93d1b8",
        "cursor": {
          "ref": "87145ff2-be82-45d6-9e87-fdbece4bcb28",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c1d39097-943e-40d4-8414-8f2c22cdbd95"
        },
        "item": {
          "id": "350efea3-1767-41b8-80d7-4c480f93d1b8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "08ff2b43-5249-4b83-85d5-0fb1eb0398bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3575f037-6e5f-4a75-9a56-946d6be854d6",
        "cursor": {
          "ref": "5fa1c67c-4ed6-4bd6-af52-128099d3a862",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b8e6f1d6-b210-44ed-8bc8-ff9e82c12197"
        },
        "item": {
          "id": "3575f037-6e5f-4a75-9a56-946d6be854d6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bad8441c-daf8-4481-be66-c1c3a44251d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae5ffbd-e677-4a74-85fc-0616edb98610",
        "cursor": {
          "ref": "f2b2e601-3ef2-4244-b087-ff6d26668afb",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2867b97b-41bc-41d9-b7bd-21e4132fb832"
        },
        "item": {
          "id": "5ae5ffbd-e677-4a74-85fc-0616edb98610",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5eb1683d-cad0-487c-b05a-309ae77c47f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7489a3f-2844-41e9-90be-da760f5162b0",
        "cursor": {
          "ref": "95b65319-464d-4ebf-9c17-103176d81d77",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7d61135e-4b0d-4883-8cae-9c5201dc64bf"
        },
        "item": {
          "id": "f7489a3f-2844-41e9-90be-da760f5162b0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fc9a07e9-0858-4b18-84d8-8af318ffeaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933a812b-2fcc-4f65-bc71-284559051e0f",
        "cursor": {
          "ref": "40195213-aed9-4d64-bab7-be72285d97f4",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0bee0711-bd23-40a3-8e6b-158d491d4f9c"
        },
        "item": {
          "id": "933a812b-2fcc-4f65-bc71-284559051e0f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "5c023f35-bdd1-419d-9dbf-0514a3c78ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4742bef7-5fe0-450f-bb74-078f1fa0aa2c",
        "cursor": {
          "ref": "58960622-9d27-4750-9a6e-b5535d121c5e",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3cea2b22-86ed-4321-8a26-ec3e4008cbd1"
        },
        "item": {
          "id": "4742bef7-5fe0-450f-bb74-078f1fa0aa2c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "376e3cb4-7098-4f2f-a9b6-1ea9b17d63cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28db3c0a-9b77-481f-a7f5-318a2513d42f",
        "cursor": {
          "ref": "9b62c90f-ee83-4ff3-a217-cc42bab3bc60",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "50b21b29-2260-4347-bc21-c09c7b3f9b4c"
        },
        "item": {
          "id": "28db3c0a-9b77-481f-a7f5-318a2513d42f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "47b602a0-a46a-4e54-8653-77ba6a5547be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ea4699-05dc-4e94-881a-e8554fb53a01",
        "cursor": {
          "ref": "72c5b84f-9522-400e-986a-9732c15d679e",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6cc26831-f1af-4670-90fb-b2ec11c74913"
        },
        "item": {
          "id": "94ea4699-05dc-4e94-881a-e8554fb53a01",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cd8964bd-6dd0-4a24-a47a-800193b529b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0073351d-15c6-45fa-b75c-6c7a7251d4c3",
        "cursor": {
          "ref": "b522c643-12fe-4229-a796-fc6937a45085",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f8ac91bf-807e-4f95-95e3-eb0567036399"
        },
        "item": {
          "id": "0073351d-15c6-45fa-b75c-6c7a7251d4c3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f3fd79b6-1571-454b-a2f6-b9f783d4c760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9950fc8-52b8-4134-bbab-c6a84d6792c1",
        "cursor": {
          "ref": "92680357-cdce-4abf-859c-4aabefe007b7",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e93aaa12-9c77-4631-b5f7-90f039600a76"
        },
        "item": {
          "id": "e9950fc8-52b8-4134-bbab-c6a84d6792c1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9bd5ff8e-0ae1-40ff-addd-adb116244428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90258d72-e58d-445d-a3c6-2e3445c0cd3b",
        "cursor": {
          "ref": "c64ceb49-1575-4f77-b4ac-42c98980d85e",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3b82f103-7e64-4462-95fe-c29c0a65828c"
        },
        "item": {
          "id": "90258d72-e58d-445d-a3c6-2e3445c0cd3b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7fce1324-2f6e-45e1-86bf-cb49fd348fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd42719b-1bc6-4779-8c58-5d0a2fc8109a",
        "cursor": {
          "ref": "a6b5254f-4d48-4fd4-a404-a193270d979a",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a627701f-4eaa-41e3-a159-c1bdbab170fd"
        },
        "item": {
          "id": "cd42719b-1bc6-4779-8c58-5d0a2fc8109a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "103ffb57-0956-48fa-9921-54c51358712b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80aa781-52e1-44cb-8e2a-1150b225b030",
        "cursor": {
          "ref": "81ca3478-a10a-4f31-89cd-12e170c7ccfb",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "091d59c6-925a-4d5f-aa8f-e6441a4ab3f5"
        },
        "item": {
          "id": "f80aa781-52e1-44cb-8e2a-1150b225b030",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "84a05b22-c1e5-4d81-bb87-f223abd0f74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291fc188-465a-4c72-aa98-5b175f46c962",
        "cursor": {
          "ref": "20d6cf75-9095-4d3b-9a42-a516d244826a",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3cbb1701-ac86-4760-9155-251db0714987"
        },
        "item": {
          "id": "291fc188-465a-4c72-aa98-5b175f46c962",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2211764e-8122-4e8b-b193-d2794b1d38ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a57f1e-2795-4d80-b4d1-e32b912eb931",
        "cursor": {
          "ref": "b72a58f3-6783-44d1-b298-9133db186e49",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ee7d497a-e19d-4cf8-886f-50d1d16e69ee"
        },
        "item": {
          "id": "90a57f1e-2795-4d80-b4d1-e32b912eb931",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "21715785-e0fc-469d-835d-d7157fe16ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614afc70-88fb-4f42-ac25-784eb5bb11d0",
        "cursor": {
          "ref": "b936a9af-c712-40bd-a7ee-d67d98e8021d",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "287530d7-545c-438b-91c3-bcbfbdba3e37"
        },
        "item": {
          "id": "614afc70-88fb-4f42-ac25-784eb5bb11d0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "99692066-1fa7-4879-97c9-2dc1a0ebaac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c8f922-7933-4de7-9411-2b725d216299",
        "cursor": {
          "ref": "78676c59-e90c-438e-8666-df4bb6e77dcc",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a6c99bb6-0351-4599-aafa-9ffdb8061fb0"
        },
        "item": {
          "id": "82c8f922-7933-4de7-9411-2b725d216299",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "671b012f-89a4-4ff6-aa86-2421f38ad9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5bfaf5-0d84-4591-b963-58d5d2890109",
        "cursor": {
          "ref": "93e4178a-e597-4545-8e8a-3f2d7fddca66",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fe5facf5-c1c4-4028-82e6-5cbddba589c0"
        },
        "item": {
          "id": "4c5bfaf5-0d84-4591-b963-58d5d2890109",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "90853a6c-1461-40cd-962c-89e2351b0c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23755987-1e40-494e-8937-328a6be7c7c5",
        "cursor": {
          "ref": "987ac5b8-33e5-44e6-929c-a0928f0d2aed",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8b442d1b-620a-4e1a-93fd-16f133c6e6dd"
        },
        "item": {
          "id": "23755987-1e40-494e-8937-328a6be7c7c5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ca2bb6fe-4613-41ad-84ac-a3c955e9d93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4e4758-4419-4f12-9d9f-c99d73acfba8",
        "cursor": {
          "ref": "b1762a32-99b6-4de1-99d7-b62beb04048f",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f3b6f85f-2797-477b-bb11-199e5ad5f0cd"
        },
        "item": {
          "id": "3b4e4758-4419-4f12-9d9f-c99d73acfba8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4be4c849-a900-4bba-bbce-f7ad6d71e247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd543e6-90bd-4db9-be62-d6919ade3dd5",
        "cursor": {
          "ref": "6d72ff11-67dd-43c9-b50c-67b8a691f664",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cf68ecc1-f34f-4fed-bd8d-096a5c3cb151"
        },
        "item": {
          "id": "8dd543e6-90bd-4db9-be62-d6919ade3dd5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "de43438b-0ab4-4e23-8e4b-496031b71b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f80870e-ae3b-4518-ae26-28a832cc5ff2",
        "cursor": {
          "ref": "22079918-e133-4d2a-bbdb-55497174f873",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c3c1b8d3-7954-42ef-b752-d9ac3d08e02b"
        },
        "item": {
          "id": "1f80870e-ae3b-4518-ae26-28a832cc5ff2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f2ebc227-bf55-4053-a67f-40089600964c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc2cfdf-01ac-41c6-9c79-a533a8e2ecbd",
        "cursor": {
          "ref": "5e71e0dc-4a33-4f39-93fd-875afafe4ec3",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6384e0c3-d799-4d99-a265-e72c738a4871"
        },
        "item": {
          "id": "3cc2cfdf-01ac-41c6-9c79-a533a8e2ecbd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c27b1500-377a-4d7f-b009-9a4b81de4745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ab6a61-ed34-4bb9-9297-9f5721a6641e",
        "cursor": {
          "ref": "9c167f8a-51d0-42b7-bc64-357c743d635f",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "86fc9e17-ff18-4f95-9b9d-78e68e01df24"
        },
        "item": {
          "id": "63ab6a61-ed34-4bb9-9297-9f5721a6641e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "7041f6a8-f299-48f3-9165-7e57283f31cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8646127-4658-4606-870f-1944db01dcd1",
        "cursor": {
          "ref": "1b9ee09d-b986-4cdf-8e06-66068d901ec4",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "5900c5dd-f131-400d-9f2d-ca758d74186a"
        },
        "item": {
          "id": "a8646127-4658-4606-870f-1944db01dcd1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4a09ec32-15fe-47c7-9ef9-eb75a72b31f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4355611-2a19-4669-a06c-c1670742355b",
        "cursor": {
          "ref": "da62ff28-e193-4735-a3f6-f8192b1cc235",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "73bfe0c0-67e2-4029-aae5-070c5ae57ce3"
        },
        "item": {
          "id": "c4355611-2a19-4669-a06c-c1670742355b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "88e61828-ba49-41b7-a9e4-4980bbcef263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb4e82-cce9-4167-a31e-e989e8ba91a7",
        "cursor": {
          "ref": "3cfa0ca4-3585-4621-aadc-137563f039ba",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "86596866-eb8d-4cc2-9282-b5c2cccc4698"
        },
        "item": {
          "id": "81fb4e82-cce9-4167-a31e-e989e8ba91a7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2c897f3e-0837-4c48-9c71-c465de5eaf18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5225a7d8-7275-41bd-b85c-307e4e269bde",
        "cursor": {
          "ref": "60620b68-7623-4596-8254-3baaacf8c433",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "03538b0d-bb12-4534-936a-fa72eb17c4d8"
        },
        "item": {
          "id": "5225a7d8-7275-41bd-b85c-307e4e269bde",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e7daf8a3-057d-414b-835d-d9f5eea770a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11442e0-5b0f-456b-b985-97775a308ec8",
        "cursor": {
          "ref": "c9813b9f-4146-4d71-af49-70ee381d52c5",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "12d1795f-22c0-472f-80c9-648525327fd2"
        },
        "item": {
          "id": "a11442e0-5b0f-456b-b985-97775a308ec8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "be28aeb4-0142-4e81-8d31-0cf24c22aa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecb099e-175c-429d-9c07-a2a19228c9be",
        "cursor": {
          "ref": "066da915-d99e-4997-bca5-6a4bc10646c3",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e15d42a3-2d11-4c7a-8871-c0e90206c5b1"
        },
        "item": {
          "id": "7ecb099e-175c-429d-9c07-a2a19228c9be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bd58b0fb-c3a5-4c0b-b51a-65a6152b46f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f7feca-b668-4e79-b03b-30fec2ccaf65",
        "cursor": {
          "ref": "96223d6f-f508-4934-bc7a-6ae7ff75f853",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "71e63551-3192-4b6a-a749-c9b95a2a6fad"
        },
        "item": {
          "id": "f4f7feca-b668-4e79-b03b-30fec2ccaf65",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e21d0aa2-58f9-4d62-aa44-5f853f26a4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5d43cf-30e6-4455-a320-95ee32cb483c",
        "cursor": {
          "ref": "8e2c1a2c-9f7d-4b82-920e-e33f1519acab",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0e5b53ee-6994-4557-9f71-0b13f5f5fa43"
        },
        "item": {
          "id": "2d5d43cf-30e6-4455-a320-95ee32cb483c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "079692b6-9d11-4574-9c44-181dd4e117cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395ded53-91cf-4183-8459-6cd61c488c30",
        "cursor": {
          "ref": "93cdfcce-a37b-49b4-b663-c6776d9039bf",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e6527e6f-d4a3-4c26-b616-487cca3b9145"
        },
        "item": {
          "id": "395ded53-91cf-4183-8459-6cd61c488c30",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c3c9a605-7329-4f1c-9dd3-bf0db0a80300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f273ba6f-256f-411c-9df5-f4c968cfb893",
        "cursor": {
          "ref": "8136ef4c-e7b8-404e-a299-e3dc3f812a46",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "31865389-a85c-4e74-af0f-70a0ae8b3837"
        },
        "item": {
          "id": "f273ba6f-256f-411c-9df5-f4c968cfb893",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3db00b7c-6b71-405f-961d-a164d78992ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549712fb-bc6c-4419-89a4-6b0a3680579a",
        "cursor": {
          "ref": "fb71166a-88de-4609-a96c-5b70d8258e07",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9b1ef6d1-6aa6-4e44-8130-73ccb7c53eb8"
        },
        "item": {
          "id": "549712fb-bc6c-4419-89a4-6b0a3680579a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e0b5e788-923d-499c-830a-67c8fd9596a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151172d7-f68e-423c-8185-96fcde37c4e2",
        "cursor": {
          "ref": "27d0ba3e-6a24-4de1-99c4-7f473ec2d306",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "049b6832-ee1f-498a-9f8a-e272f25f1f2e"
        },
        "item": {
          "id": "151172d7-f68e-423c-8185-96fcde37c4e2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6e42ba13-05ac-442a-8b58-b0a8db087179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0819682-7626-49a5-9a6f-028ca906d471",
        "cursor": {
          "ref": "a565e34e-8003-4496-8843-18de7f38ca98",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f343a75-360a-4a67-a3ec-79f923a44e1e"
        },
        "item": {
          "id": "a0819682-7626-49a5-9a6f-028ca906d471",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ce4064fa-afc8-454a-bb54-5e38ed4eba0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6883abd7-3e9e-431c-8882-60e6f479292f",
        "cursor": {
          "ref": "ae765f90-2d97-4191-bf40-3c41fca3407e",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "92da4c5b-94a6-43f3-b5db-a40e08cba8be"
        },
        "item": {
          "id": "6883abd7-3e9e-431c-8882-60e6f479292f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a5192603-9d77-4c55-b529-a805e4e985de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ecb223-dde4-44b7-8cf0-a860a570b581",
        "cursor": {
          "ref": "cc8ba23f-8115-41dd-b5ca-a64f3d169f9e",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fe222282-6b04-45bd-922a-bfbc5a39f939"
        },
        "item": {
          "id": "d5ecb223-dde4-44b7-8cf0-a860a570b581",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b8037dbd-cf36-40b1-a2bb-4263d3d6fdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f6d608-a7ab-42a7-8ab9-a12e34f32454",
        "cursor": {
          "ref": "a607666a-5384-4f66-a5d3-6f0adcccfdba",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2425c958-de9c-46d5-8d39-1f212f020707"
        },
        "item": {
          "id": "49f6d608-a7ab-42a7-8ab9-a12e34f32454",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "32990681-c42d-4d91-b3e8-d29cadd64218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08904077-9357-40f4-a225-12f0e86d1480",
        "cursor": {
          "ref": "75851913-f537-4bbc-b0a0-742f362fb058",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c795c336-18c7-4d5c-9876-43bcaee9fb6a"
        },
        "item": {
          "id": "08904077-9357-40f4-a225-12f0e86d1480",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9ae9327b-d952-4fce-9238-f66131fe9cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5f708d-d981-492a-a4c0-5297299e8f3e",
        "cursor": {
          "ref": "7154eff0-4c39-4677-8eab-49d807eed9d0",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "eb6873f4-7b13-4a2c-8683-104a8d682c34"
        },
        "item": {
          "id": "2b5f708d-d981-492a-a4c0-5297299e8f3e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f123bc04-354a-4d88-8923-52a41a386397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3def8490-f85c-4dae-8984-1bb26e1753e8",
        "cursor": {
          "ref": "bead1450-f589-49ac-a5ee-d4766e32fc2c",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "616aaae7-b3be-45eb-8239-0096ea08f4ce"
        },
        "item": {
          "id": "3def8490-f85c-4dae-8984-1bb26e1753e8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08ec3524-1968-4b27-a3bc-15602559879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c677be8-0979-41d7-9c4e-b2ff4cc8cced",
        "cursor": {
          "ref": "f1b5df1f-7c76-4ae9-a91b-18e2f581371c",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fa9e4560-69b1-4bd0-b740-be43f8be84d7"
        },
        "item": {
          "id": "5c677be8-0979-41d7-9c4e-b2ff4cc8cced",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "87778da0-5536-47e6-bdb3-b223a9475d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5881fa4-e759-468a-8760-257336aa6527",
        "cursor": {
          "ref": "74859c3c-8432-4ef5-9efb-e536af4ee6d0",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b8a73d87-d4c8-45ef-a122-f842ac553970"
        },
        "item": {
          "id": "e5881fa4-e759-468a-8760-257336aa6527",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0c09b1e3-40c5-4884-9095-eae68c0f7e0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb23e99-8c47-4e95-8b3a-fcda59bd64ee",
        "cursor": {
          "ref": "5335d2cc-2234-426a-8130-75531426b791",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "866d21d8-5344-4b06-854e-b982774d995c"
        },
        "item": {
          "id": "feb23e99-8c47-4e95-8b3a-fcda59bd64ee",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8475cf30-efad-4217-bac9-0df34f7daeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd3bd32-a836-4fe3-8c4c-2b55348f0dfd",
        "cursor": {
          "ref": "12d1cea5-bfc2-45b4-bc20-886fd83a9204",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7f3ce799-3530-42fe-a7af-c82df2374028"
        },
        "item": {
          "id": "ebd3bd32-a836-4fe3-8c4c-2b55348f0dfd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "034db062-e238-4cde-89c9-18d009cc7985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9180b798-3fad-4edc-b99e-8f0adf748340",
        "cursor": {
          "ref": "dc1ff265-123b-49ad-a7a5-c48d28391549",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "741cfcc4-2538-4e95-bb7f-7a6531d1c286"
        },
        "item": {
          "id": "9180b798-3fad-4edc-b99e-8f0adf748340",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a1ca3538-f761-4729-b8d6-2cd3a9b5e0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101a3042-88fe-432d-b990-cb7d133691b1",
        "cursor": {
          "ref": "01643584-0df2-4b87-929c-f1132265e2e1",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f0f7ddff-2ac4-495f-b9f4-954079e02bf2"
        },
        "item": {
          "id": "101a3042-88fe-432d-b990-cb7d133691b1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "51646471-395f-4ada-9606-06ab0d3b2e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000da1e4-510f-488d-8bc9-b89dc1d95776",
        "cursor": {
          "ref": "cf27c6cd-6221-4e29-a6ae-a3c74b2b8e03",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d5369e4b-ab5d-427b-8e0d-d6c1681fa4f9"
        },
        "item": {
          "id": "000da1e4-510f-488d-8bc9-b89dc1d95776",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ab5b583a-d538-4da5-8f7f-8f3fed63e540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402fe69f-a325-4b3a-a580-b280021c0e33",
        "cursor": {
          "ref": "9e131dae-39b3-45f3-b108-90f21f9243d8",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "81612467-dc6d-4fdf-93af-9adc0ed9cd1a"
        },
        "item": {
          "id": "402fe69f-a325-4b3a-a580-b280021c0e33",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b603f203-d896-42ae-ae00-62f07df42e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ca5554-5b7a-4071-9fa3-950e89c1f56e",
        "cursor": {
          "ref": "f83e2a07-99f3-40a5-8765-135bcfa79f37",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4e4815aa-cf86-4823-98ea-53bbfe94c4a0"
        },
        "item": {
          "id": "29ca5554-5b7a-4071-9fa3-950e89c1f56e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "56a9e304-cd9b-4eae-bb8e-3ae77a7edb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a785b267-2660-4212-85b2-9d0c95c48bd7",
        "cursor": {
          "ref": "0015b14f-0d7a-4581-b764-17c8302dcaa7",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "28b3b005-4566-4239-8989-11fa3bd9b2b9"
        },
        "item": {
          "id": "a785b267-2660-4212-85b2-9d0c95c48bd7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "352f3d4a-bd50-4307-a79d-a67c5ffa8c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 813,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dab0db-9215-42b0-a467-2353e6e514fc",
        "cursor": {
          "ref": "304801ac-7421-4a58-b1f7-18912de003f6",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2f093c85-d2ca-4065-8531-3a8f91e49b9b"
        },
        "item": {
          "id": "d1dab0db-9215-42b0-a467-2353e6e514fc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "caaf71fd-4a7f-435a-8cef-8b3f415acc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b45aa07-1b1f-46c0-af58-3086b1f8aca3",
        "cursor": {
          "ref": "d9bbbfb9-a3e2-4da0-9751-314491773b01",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "01cad227-6f82-4be9-9e87-6ebaee5ea08d"
        },
        "item": {
          "id": "1b45aa07-1b1f-46c0-af58-3086b1f8aca3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8bf15f58-1a47-4efa-8b79-dda25253fed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff41557-ec39-47f5-b2d5-a47fd1d44d50",
        "cursor": {
          "ref": "058e6f21-9406-4ed8-8edd-694bfe4aa588",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "83ab7168-03b3-4b6c-8e9b-9fc48b5f22ab"
        },
        "item": {
          "id": "2ff41557-ec39-47f5-b2d5-a47fd1d44d50",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "535ae487-8a57-4a9b-82d4-19ced3f92d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7a579f-5219-42fe-b066-ddafd2e5e435",
        "cursor": {
          "ref": "7d3acb7a-cf98-4565-a0da-658b009369b1",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "14f05c10-f709-4fcf-9c2a-6da0ac3903f8"
        },
        "item": {
          "id": "ab7a579f-5219-42fe-b066-ddafd2e5e435",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "94ccb8d7-1a1b-445b-bdd7-c85a584a5368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081da97d-7b7c-474d-8c63-2e3abac5c30c",
        "cursor": {
          "ref": "ef868c40-e362-4e88-b129-31e13549c7cb",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ee4c92df-fce8-4c9a-9784-a9937c656617"
        },
        "item": {
          "id": "081da97d-7b7c-474d-8c63-2e3abac5c30c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f3ba3ae9-d9af-4bab-8f90-bca6a111ae7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5481b820-612a-4335-aec3-ac53cd79d1c0",
        "cursor": {
          "ref": "724a66a1-5a8f-4eeb-a1cc-db662113fc80",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b37a451f-6f87-4783-b3aa-eb072ab83927"
        },
        "item": {
          "id": "5481b820-612a-4335-aec3-ac53cd79d1c0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b219b8a7-6757-4042-9178-57bac115ea06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0d395-06d6-4c01-8fb9-2503a9dea3b9",
        "cursor": {
          "ref": "7912950b-e51a-4bc5-a386-d6892b2533d4",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "10cafdc4-5772-48c2-be57-d05d6e1e280d"
        },
        "item": {
          "id": "5ac0d395-06d6-4c01-8fb9-2503a9dea3b9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e11f5815-0628-48ec-a12d-e1e4f77426e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7d0c98-3797-4cda-8318-eb16e55a854a",
        "cursor": {
          "ref": "74038c05-c0f6-4379-99b8-75bfdda34702",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3326de77-a712-4cec-97b1-10fcda259b5c"
        },
        "item": {
          "id": "7a7d0c98-3797-4cda-8318-eb16e55a854a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "614de62a-ec1e-4441-8254-de74c2df98ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e1bb5e-a0bd-4211-b129-dd1cb13561e9",
        "cursor": {
          "ref": "045f48f3-9561-4e7a-b41c-9dd03413cb90",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a8ba281d-ba3a-4ea0-9f8e-2f2b659d74e7"
        },
        "item": {
          "id": "99e1bb5e-a0bd-4211-b129-dd1cb13561e9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5a293e8b-e45c-4ada-aceb-910fc2a7c18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a348578e-d759-462e-b273-a5da062f9140",
        "cursor": {
          "ref": "0c237ca2-ebd0-4183-914a-a8b077b20c21",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ab3b7e21-13a6-4498-b02e-cbe3be21f4f7"
        },
        "item": {
          "id": "a348578e-d759-462e-b273-a5da062f9140",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0776258f-ed28-4915-9f77-2e340aaa1c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8affe7e2-0e66-4ea8-9321-fc248ae8af8f",
        "cursor": {
          "ref": "d74a89b1-25eb-47ec-a9ed-05fd2e64901f",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "560d7643-5a88-496c-b328-a54a8fcf3b9a"
        },
        "item": {
          "id": "8affe7e2-0e66-4ea8-9321-fc248ae8af8f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9ee9f115-c2de-47e2-a462-82a92aa53094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8514f0-5a35-4429-971b-dc5990f59493",
        "cursor": {
          "ref": "bab2a080-38c0-4d40-98ab-b8471085fea9",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1fcd292f-69b3-480e-93f3-2b013a862d90"
        },
        "item": {
          "id": "5a8514f0-5a35-4429-971b-dc5990f59493",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3a3c75c1-16ac-46b4-8032-d01304ff20df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d4e977-25dd-46fa-9774-ef1d56604992",
        "cursor": {
          "ref": "ed167389-f2c8-4a45-b027-8fa40732c25c",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a829c501-f327-456e-9abd-d2e9b5b44ae1"
        },
        "item": {
          "id": "76d4e977-25dd-46fa-9774-ef1d56604992",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9f9bf917-e9ec-4377-b2ee-c0998c09e5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ff9121-120b-4c74-8c29-80c8c6463c05",
        "cursor": {
          "ref": "3c3ab59f-f575-4daf-9467-efcfd6fb3f5a",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5d678131-0e58-484a-b535-0c926d392a83"
        },
        "item": {
          "id": "a9ff9121-120b-4c74-8c29-80c8c6463c05",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6b0360b7-599f-44e1-b733-8db3681cdb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192b6f40-0ec5-4ef8-9e1a-cf1752e7cd35",
        "cursor": {
          "ref": "4423cd27-f2d9-4fd5-a93b-1a69095a9f45",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "731e54d7-19c8-485b-bd16-320242f3a934"
        },
        "item": {
          "id": "192b6f40-0ec5-4ef8-9e1a-cf1752e7cd35",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb863220-707e-4a45-9337-8adda08c85e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a73926-97dc-42c0-8009-9cd2bb936261",
        "cursor": {
          "ref": "42c4ef5c-b540-4816-b840-734574112f8d",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b8be2bac-9dcc-4daa-8916-0d7383f6b5c3"
        },
        "item": {
          "id": "c2a73926-97dc-42c0-8009-9cd2bb936261",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e84ad39d-2820-4a1e-8655-cebe85cf6d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48ed55b-6c35-4af7-8634-4ce5b1bb7f74",
        "cursor": {
          "ref": "f420f54d-3609-43ee-9878-b832226b32cb",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "46ae52f0-f72a-406e-b8ab-9d33b903cef9"
        },
        "item": {
          "id": "a48ed55b-6c35-4af7-8634-4ce5b1bb7f74",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a9e2f959-3847-46ef-8734-320ef27f9f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde7ee49-07e6-4bc2-850b-9492a545de83",
        "cursor": {
          "ref": "de618020-7398-41f7-beeb-9bfb1a8238ef",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cc6e715d-ffe3-4f43-b891-23c40dedf85d"
        },
        "item": {
          "id": "cde7ee49-07e6-4bc2-850b-9492a545de83",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8dfd5754-eca7-4d9a-9227-645c3ed76118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79940dd2-fce5-4a07-bc55-f127094091f5",
        "cursor": {
          "ref": "eef9a89b-6d60-44e9-8ec0-f987fcb09eab",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "450814f8-1289-4e4b-b2ef-71eba493de37"
        },
        "item": {
          "id": "79940dd2-fce5-4a07-bc55-f127094091f5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "be35a11e-89a3-405b-a1ec-0a43d618cfd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea8e2bd-6daf-4cab-b32b-fc74988166f4",
        "cursor": {
          "ref": "3499f1c0-b2e6-4d5e-8fa4-47204d5b5c4b",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9324abe9-82dd-4b23-b27f-b98a250d9feb"
        },
        "item": {
          "id": "4ea8e2bd-6daf-4cab-b32b-fc74988166f4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aaa71a49-f4cb-43d6-a39f-56892306c019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35497ba1-775e-456f-abab-899278c175c6",
        "cursor": {
          "ref": "3226e88e-222b-444b-824f-2ebb6cf29571",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a42dd2e-a36d-4325-a7b2-e3a6880c4bc4"
        },
        "item": {
          "id": "35497ba1-775e-456f-abab-899278c175c6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "99c3335e-5d3d-4ef2-ba96-7b3516d2499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2232fe04-98e6-433e-bbd5-1115c820746c",
        "cursor": {
          "ref": "869e9cad-8e38-4052-8180-e6fe4b484793",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5975ed59-ab9d-4a3d-98b4-2ef8cd4948a4"
        },
        "item": {
          "id": "2232fe04-98e6-433e-bbd5-1115c820746c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0a727676-2ce4-4ba6-bcaa-9c87942c542a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b30d17-5474-4d64-8ca4-88fce65c931c",
        "cursor": {
          "ref": "31d5b57a-3c20-4b08-83e2-c8166ec5704e",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3e5904cc-e128-4c71-84ed-40ccd25c1bfe"
        },
        "item": {
          "id": "f4b30d17-5474-4d64-8ca4-88fce65c931c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d01c4c85-0544-4f4c-b11c-e81e3acb7cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec83dd13-f2dd-4241-a8e6-022eb2304225",
        "cursor": {
          "ref": "1f007071-ee28-4757-9988-69bc1dbb1c1b",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "58866142-acfb-4720-84b8-7c3c0448453f"
        },
        "item": {
          "id": "ec83dd13-f2dd-4241-a8e6-022eb2304225",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "332abf44-e156-4695-af9f-c1f5cefca398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d97557-e40a-4974-9cc0-8b371907e86b",
        "cursor": {
          "ref": "b0df6121-5781-4e09-97a9-20ea09fda99b",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c526a3c9-48e1-44e2-b553-edd1628f21db"
        },
        "item": {
          "id": "e2d97557-e40a-4974-9cc0-8b371907e86b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "50bdad67-3f7f-4fac-866d-44a8831e26d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a62f98-e477-4c73-8c8e-b6873b845767",
        "cursor": {
          "ref": "24722050-2e13-45bc-af8e-9630ace53136",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8aaac2ea-eb25-44dc-8657-64b7ee3c6ba7"
        },
        "item": {
          "id": "27a62f98-e477-4c73-8c8e-b6873b845767",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8092d792-9fcb-4823-b745-fb0090a7d82a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70470e10-d142-419d-bbd8-e13437d8e46f",
        "cursor": {
          "ref": "29b84983-c0b9-4de6-9438-139f6d8b1551",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "112b253d-f195-4e32-9af4-7651eff8a4a6"
        },
        "item": {
          "id": "70470e10-d142-419d-bbd8-e13437d8e46f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2762282f-ff60-4ce9-b7b4-26a3693e1e22",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 332,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0e8d3e-784e-430b-a67a-3249b38b7030",
        "cursor": {
          "ref": "2ce87562-56f4-4b0d-a0a7-fc5d0109c9c4",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4016ae3f-ccba-409e-b430-8af912fd51fb"
        },
        "item": {
          "id": "df0e8d3e-784e-430b-a67a-3249b38b7030",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "56600835-c8f2-409b-a93f-65d3b362273f",
          "status": "OK",
          "code": 200,
          "responseTime": 434,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2e1ffd-0e41-43b5-949e-8e232150edc2",
        "cursor": {
          "ref": "258e71d9-35ae-4a9d-bc2b-1d012dd10660",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "524f6a24-7434-4778-a68b-d21b7c0fee38"
        },
        "item": {
          "id": "cc2e1ffd-0e41-43b5-949e-8e232150edc2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d6af31d8-1d69-4c59-b4e8-e058276a8bff",
          "status": "OK",
          "code": 200,
          "responseTime": 3344,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1653e2-3f56-4483-9e1d-50f6006fa694",
        "cursor": {
          "ref": "c555f67b-7a2d-4bb0-b553-1892f324c224",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "05ce2342-4e6f-4e6c-af92-089b5af1d312"
        },
        "item": {
          "id": "8c1653e2-3f56-4483-9e1d-50f6006fa694",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b2d823e5-80fb-4f3b-a261-4ca490ab307e",
          "status": "OK",
          "code": 200,
          "responseTime": 3208,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb1cf55-406e-40e9-84f5-f4add53ba0de",
        "cursor": {
          "ref": "8055e26d-9831-450c-afcd-0ae95f04f72f",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef8a818e-1a6f-4086-8b2d-8601cd0b8ec7"
        },
        "item": {
          "id": "ffb1cf55-406e-40e9-84f5-f4add53ba0de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d6989c4d-8a35-40ed-ac4d-dc20d310251b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb1cf55-406e-40e9-84f5-f4add53ba0de",
        "cursor": {
          "ref": "8055e26d-9831-450c-afcd-0ae95f04f72f",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef8a818e-1a6f-4086-8b2d-8601cd0b8ec7"
        },
        "item": {
          "id": "ffb1cf55-406e-40e9-84f5-f4add53ba0de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d6989c4d-8a35-40ed-ac4d-dc20d310251b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb1cf55-406e-40e9-84f5-f4add53ba0de",
        "cursor": {
          "ref": "8055e26d-9831-450c-afcd-0ae95f04f72f",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ef8a818e-1a6f-4086-8b2d-8601cd0b8ec7"
        },
        "item": {
          "id": "ffb1cf55-406e-40e9-84f5-f4add53ba0de",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d6989c4d-8a35-40ed-ac4d-dc20d310251b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fc4944-5a5a-47c2-9ed9-d1d38563009b",
        "cursor": {
          "ref": "ebca9bb2-4a1c-4941-95cf-9f231b2ab168",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5352323a-56fd-4a90-9b26-2a9f2511a6d5"
        },
        "item": {
          "id": "53fc4944-5a5a-47c2-9ed9-d1d38563009b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "1bcbb676-53ff-43d3-9d89-c2ae423fb6f7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 341,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ede3bf5-9cc8-4ae3-9160-4f2e1129d783",
        "cursor": {
          "ref": "ddaf723f-7af6-4558-bd8a-764ea09d3cbb",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "26fa1827-99e0-42e8-9a06-29af5bbe760e"
        },
        "item": {
          "id": "3ede3bf5-9cc8-4ae3-9160-4f2e1129d783",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "665c90b1-e9bd-4efa-889a-0b267d123990",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ede3bf5-9cc8-4ae3-9160-4f2e1129d783",
        "cursor": {
          "ref": "ddaf723f-7af6-4558-bd8a-764ea09d3cbb",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "26fa1827-99e0-42e8-9a06-29af5bbe760e"
        },
        "item": {
          "id": "3ede3bf5-9cc8-4ae3-9160-4f2e1129d783",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "665c90b1-e9bd-4efa-889a-0b267d123990",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e73d813-6461-44d3-91bd-37fde2e06809",
        "cursor": {
          "ref": "72d7e1ec-8a00-46e8-8cba-d8b29deef2c0",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "e2ea963f-cb75-4a39-950e-a2a30dc3b8c9"
        },
        "item": {
          "id": "7e73d813-6461-44d3-91bd-37fde2e06809",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "c530e188-2887-49f9-bbb7-87c1c15e0d10",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 608,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80063b31-40c1-4db3-943b-963086bf0747",
        "cursor": {
          "ref": "cf5ac30b-59f0-4a15-aa43-c07c1e58387e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ad53c72e-a913-4ffe-a845-f11c89c69ad1"
        },
        "item": {
          "id": "80063b31-40c1-4db3-943b-963086bf0747",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f1aaa581-df7e-424f-877b-01b456d8c71d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80063b31-40c1-4db3-943b-963086bf0747",
        "cursor": {
          "ref": "cf5ac30b-59f0-4a15-aa43-c07c1e58387e",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ad53c72e-a913-4ffe-a845-f11c89c69ad1"
        },
        "item": {
          "id": "80063b31-40c1-4db3-943b-963086bf0747",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f1aaa581-df7e-424f-877b-01b456d8c71d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d8534b-87f5-4ff9-a13e-6518b0ba3537",
        "cursor": {
          "ref": "4924301c-b6b5-4fa5-84c7-54bf31cc41f5",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3de452ca-5e5e-4db0-a4c1-5105cae547d1"
        },
        "item": {
          "id": "f1d8534b-87f5-4ff9-a13e-6518b0ba3537",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "382c4f50-2eb8-4f11-8955-c5456fdb91b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 550,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}