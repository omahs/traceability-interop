{
  "collection": {
    "info": {
      "_postman_id": "691a6d66-244e-4521-a0e5-6768dd6cf6f4",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bfed6c27-a201-4d70-a3ea-f7a9374b1646",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5904577d-b3d1-49ef-bce6-926e9e8a437e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "376ef8ae-5daa-4e0d-b243-d35daf768397",
                "name": "did_json",
                "request": {
                  "url": {
                    "path": [
                      "did.json"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8d183d3-8d2f-4600-9f58-4ba43ed4139c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac5e2dcc-c79a-4a61-a4e2-9f6aeaa1804c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "563cf549-542b-440f-847e-8db9e9b90565",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "12dd62c2-e0ea-4701-9e02-fb6181513a5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "169d1d5b-7f1b-4a62-8583-7a0dbd71e631",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d6b9cb7-a4d6-4a3b-ab1b-8f03b2db9e75",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556c6a53-81a5-4dd3-8f3f-90f0875214ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a57df42e-7e73-4a90-b8a2-70b4f75c4f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81017c40-c03f-4fe0-bbc5-1a9448a5919a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5498966-25a4-45ce-a7d1-97a92d98b980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14a0d40b-0a89-4f32-bfee-4096686f8940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e87562-d4c6-458e-a622-cf93e567e7dd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda790c8-e4c7-4b8f-960c-9e745ca8537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30300ae3-2963-4992-8a43-192ef5dced2f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46acba1f-1581-47c4-914d-814b39115c06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cda1fddc-3841-413a-a9b8-79ebde3b43cb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8bbbc0-2078-41ea-9a8e-65c9c4b3af50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "753140f7-bc99-4b9a-9c6c-774705289a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9f4cc4-bd4d-41f0-8ecc-b36583630872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e8381e-3e20-4e31-b030-4aefe9f140ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e11cb52-57af-4ecb-9088-72d2776e29c4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5dcc386-6914-4d05-9ab9-28b16ef806dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a84fb873-8722-4033-90f2-a80638e25ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b00fffa-cc2a-4f39-ab18-84329b18d203",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3cbb6210-9ee4-4673-9b0f-9d400991c659"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d1bc12a-cc97-4f26-8d6a-f8c37786cf15",
            "name": "Positive Testing",
            "item": [
              {
                "id": "802098e6-a067-4a14-a29c-3cf118c32512",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d2aa2d3-be4c-4f6f-8a92-8b15a53580d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "03b24f5b-93c4-45ef-b67e-ff42027f11c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18262b62-e22f-4652-9c45-9d9452c0768f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "550ddca1-40dc-44ea-8b2b-fca0d3de37bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5697cc30-7bc9-41a7-b65d-24de120ba23e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d1acbb2-617a-4926-b56a-991fa222b475"
            }
          }
        ]
      },
      {
        "id": "ede94c5d-1aa2-41af-9afc-ecb732984910",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9f640fb1-b507-4a6c-92ac-9043bc762bd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8f03586c-d74c-4c50-a825-57e4a60ff76b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "231b7152-f6bc-4914-8f8f-33ba370fec9c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba46ded-2cd4-4e4d-8550-51aaf2e82f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc9b05d-b560-4141-80c5-16f18fe191ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39514d35-fdb8-4328-b2d2-170085c0e944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential is required",
                            "delete rawBody.credential",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3f89d4-0461-48b8-be1c-dcb013f7cf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f63d50d-711c-4c02-aba2-2e6e1daf91e9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9186487-428a-4b46-90b1-3a87d750f220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf4a46d-b895-44e3-b70b-4f62c1af0162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03dda62-9792-4fe6-9eb0-ad45703ad33f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context is required",
                            "delete rawBody.credential[\"@context\"]",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ba7d2d-6271-4497-8cc7-05e489ea2e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ba4b08-f6d4-4cd1-b9f5-db9efdb0598c",
                    "name": "credentials_issue:credential.@context:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4275d1cf-2f20-4d3b-b9c0-17adc658ad4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614604ac-c127-4f78-af7f-f292262d6818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e328ba-4513-438e-86e5-cba4c2f4d467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context must be an array",
                            "rawBody.credential[\"@context\"] = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad80905-cca0-4d56-a10d-c0d2a2a091c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93c6517-753a-4690-bfe4-44c079de135b",
                    "name": "credentials_issue:credential.@context.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e764ad17-4035-4cf3-a624-b8c7a0b6f3eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "761e12ad-3c40-4bd4-b551-0fddbfe7d88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7244d853-0e06-44f0-afb5-b6d4e529670e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.@context array must contain only strings",
                            "rawBody.credential[\"@context\"] = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8122f709-647f-41e8-918e-0c8af6144486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0c195a-8b91-4da7-a8d8-cffbbea26550",
                    "name": "credentials_issue:credential.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e951e-b29c-4be6-b532-746c3bd4d496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231cbc82-dad0-468f-8444-e0bf84af99f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe45fd0-f8d8-4b09-84ed-cc719b20ba26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.id must be string when present",
                            "rawBody.credential.id = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79373ab7-f3b3-4e1e-96c7-99dc9e792d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85aa6476-308a-4113-b24a-dd3ca2829e0b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b81c31-fbc7-4ac6-84c3-081041f283e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e90abd5-fb62-4621-bcda-dc3454507f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cebe3f-003c-4461-8ce8-063946a009cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type is required",
                            "delete rawBody.credential.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb3e84fe-8a72-4234-89d2-bece5d458049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f877e27-cda0-45c4-b623-167f27ce14d0",
                    "name": "credentials_issue:credential.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d54075-a9f6-4e58-befb-965d88227343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaf7dd4-7448-467e-abd4-5e48734ffee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89272d11-1051-4ca7-9017-4a4952b45659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type must be an array",
                            "rawBody.credential.type = 42;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab5ba246-8c87-4568-9dce-b8a80a511bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7035520-7af8-454c-a8ef-3c5335477776",
                    "name": "credentials_issue:credential.type.members:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3639730d-1405-4cdc-8a8a-4134bf07ea74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c33133a-1f5a-4ac2-b990-a6ee9316d4c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f87838e-4d45-4141-be44-09f4721583a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.type array must contain only strings",
                            "rawBody.credential.type = [1, 2, 3];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba7cd5c-24e8-4d87-9d11-a4499c182b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49537967-2ef1-48ef-b0f7-d53d01d014f2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd32a66-84b4-496b-aed1-8b8d0f4420bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f44c8eb5-2bd1-4e93-a996-1cd3e14623d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686ed842-e092-40d0-90b0-afb23ad28113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer is required",
                            "delete rawBody.credential.issuer",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63fc730-9b7b-456c-8660-d06221d89092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84178a1f-c456-4c2d-bbc8-30edc8a42a9e",
                    "name": "credentials_issue:credential.issuer:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0d3630-c2f6-4b8d-894e-906785b3ba2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c7cd68-9670-4b77-94c9-d6583048ee3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2eecee-aa5a-4193-9337-d59052e35f91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a string or an object",
                            "rawBody.credential.issuer = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e10b419-a5ea-4a84-b5f8-c906de7b268f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ad1082-76ef-47e0-8b84-d1d9539cd54b",
                    "name": "credentials_issue.credential.issuer:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5c8a3a-6ce1-4ac0-9155-97f750e44606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bc5c37-0ad8-4ff4-9317-bb2089dae0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eea5d67-e676-4ac7-ade2-320d23372879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be a URI when it is a string value.",
                            "rawBody.credential.issuer = \"not.a.uri\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "27cc0ef9-7563-4cff-842d-aa5cb7a94518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d175ab17-ef1b-4b2c-8cc0-99ea757db84b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e54461-ad8b-47cd-b581-59ef8bebeed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17765913-f735-4183-8c39-9e94ce577d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77008b3-469f-4400-9ddb-3e323d5d949f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer must be known to the endpoint.",
                            "rawBody.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "b7003399-31d5-4846-a787-d1f767d3bbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738c6dcd-bc01-4797-99ff-8f2b23837a27",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b049be12-3148-4b25-87da-a0f8792b125e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c4d713-6782-48a3-90e5-0d40111322b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1875ba7f-9369-4f37-a9ae-652419a55fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id is required when issuer is in object format",
                            "rawBody.credential.issuer = {};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8549b49-d2be-4b32-a957-7e7274a1511c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a638a3-8715-4c31-87a3-61d6c02db1be",
                    "name": "credentials_issue:credential.issuer.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0564225-3fb8-4eef-9096-3c7f152adbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d760befe-8398-4429-b540-50531f9e509a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3383b86a-7e07-48dd-b661-916afed329c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id must be a string.",
                            "rawBody.credential.issuer = {\"id\": [\"arrays are invalid\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef5a9c2-55d7-4e96-9348-d2aa920dd54f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4578c7-354d-4b1d-b1bb-f25922ee0231",
                    "name": "credentials_issue.credential.issuer.id:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cc0927-5c4c-4a8a-bc71-9751798a400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88b4eb9-7ce1-4961-87df-7653a7f49bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5f27d1a-243d-434e-b48a-68831a12a86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be a URI.",
                            "rawBody.credential.issuer = {\"id\": \"not.a.uri\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "107dc7df-51f6-40b7-8c6f-08e37e7e6107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54589cc-c268-4ab7-9e12-9118d29ed4fc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3b6133-78d2-490d-be4e-71d9eb0f489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b1ad672-fa1d-4cc3-82fd-b16ff8ea504a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689b4797-a987-41a1-b302-4321369f4336",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuer.id string must be known to the implementation.",
                            "rawBody.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));",
                            ""
                          ],
                          "_lastExecutionId": "760420fd-ae7b-46c8-a514-590635a3698a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e179a1c-c24a-432c-a146-699b3aaf9756",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d12a9b5-0472-4ee8-bb63-3ba0f30501cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c8b89c-81c8-4a11-9866-c013c3bf4ffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c51bf7-6ec8-416d-82bd-5547f13a9bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate is required",
                            "delete rawBody.credential.issuanceDate",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01c4891-28aa-4abb-9a9d-21bb8f235088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef027e9-f323-4309-ae28-88d49959d488",
                    "name": "credentials_issue:credential.issuanceDate:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6694022-c6a4-4ad9-a04a-21a8476f65a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3a0626-e40e-431a-8954-63a4fbc94398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c644cd-b7f4-40b1-b0e8-c933a188e678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be a string",
                            "rawBody.credential.issuanceDate = [\"arrays are invalid\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98244547-897d-4168-a665-b4ca1f2b5cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943006ff-3410-4cdf-90da-47881ddca95c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eef0b41-4068-4957-b92d-b1efce673b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b289e09-cbc1-4887-aaa5-0431785b3c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b055a2-3de8-415a-b8b0-2a5666948752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.issuanceDate must be an XML Date Time String",
                            "rawBody.credential.issuanceDate = \"not an xml date time string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa6b4dc1-53f7-4152-b7e6-f959ddc3afd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35222423-e8c5-4e50-830a-90ef881051ba",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ee6512-ed78-4dd5-adcc-a0dc19d5c66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e14c2c-4585-4baf-a86c-64ab73f4f5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586fce4a-3efc-4f0f-a7d0-ef63adaed74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject is required",
                            "delete rawBody.credential.credentialSubject",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead9be46-e0e6-40e9-96cc-7ca7c3125a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60bca22-41e3-4406-95e2-a668593e17b2",
                    "name": "credentials_issue:credential.credentialSubject:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9458d292-b59e-4fd3-acb9-c2844c29d674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75c1c85b-3586-4d46-9afe-ede475a238af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27960ee0-d157-4065-9b3f-c4748a24d58a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject must be an object",
                            "rawBody.credential.credentialSubject = \"did:example:1234\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c55e9712-5bbc-4f39-ad23-c6073092800c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683c608c-fa1e-48ad-a591-d3df0234a700",
                    "name": "credentials_issue:credential.credentialSubject.id:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1646e1c2-88b6-4b55-84fe-8cceb442c7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28022563-d821-4872-ad59-16bb373780e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28b1583-2f44-4b84-8e26-81e3c3d59281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// credential.credentialSubject can be an object with an optional \"id\"",
                            "// property that must be a string when present.",
                            "rawBody.credential.credentialSubject = {\"id\": [\"did:example:1234\"]};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2bc857-d37d-46b2-9186-fb57159f4b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a7d980-d774-4047-af7a-d17cee4edcbc",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1773f325-20d2-49d3-848e-84102298c188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3819fbe-fe21-4f25-bb55-0c20a6299d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06f38ee-267e-4593-b4d3-1a25aff3d23b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options is required",
                            "delete rawBody.options",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38781be4-3437-4cf2-a612-02ff33581170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8d19e5-7bdd-4aad-944c-8ff41829c28f",
                    "name": "credentials_issue:options:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3fe312-d79f-4fd1-9d4f-28caeffef731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f3b5f98-4ccc-40f9-a0d4-aeb3f7835ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4595832f-ad56-4fcb-81a7-dc8c99de7580",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options must be an object",
                            "rawBody.options = [\"array\", \"element\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76a56f1-5617-4599-a72d-0a360b94d13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5994aa94-46c9-4d1b-b561-e33d3a7fc4dd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bc3659-96a9-4ba9-ae78-4a33892acac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f1a6165-fdf2-40a1-8fb4-2c8a1e8d9c84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaadf7eb-4aa5-4507-84bb-a87a82ac09ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type is required",
                            "delete rawBody.options.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebd787e1-c181-45d8-9552-327fea208ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da6f828-4c46-4fb8-bb39-30494fed2e36",
                    "name": "credentials_issue:options.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b3f3cd-7ec9-4da1-acbe-60a7fbbc826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e62371-dd3f-4c48-b945-40a8d23632c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecac5767-f402-4d04-a5de-44c258afca8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be a string",
                            "rawBody.options.type = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557daebf-c94d-448d-9638-fdbc4c479046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb69fa9d-70ee-4293-b384-9b0cb89fe77c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886640db-3705-4fb7-b2bc-6dba2b1ad9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a0cc531-ce89-4834-832c-79793596f9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db26aae2-8096-46e5-9486-ea87bbeb3a94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.type must be valid",
                            "rawBody.options.type = \"invalid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4a63f5f-fc29-467b-9739-ea5fbce23307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10e5efe-8b02-48f8-8191-1091d1ebe115",
                    "name": "credentials_issue:options.created:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{access_token}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4567417a-2185-49a0-8773-7c75f33753f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab2c70b-10ae-4696-b193-5539b291a0c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c00b2ad-ee82-4b63-8b01-047d30c1dcac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.created must be a string when present",
                            "rawBody.options.created = [\"an\", \"array\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572c5b80-7240-47ce-9e6f-86c8caf0484b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a26c00-ef36-42ac-8636-92fc744251d4",
                    "name": "credentials_issue:options.credentialStatus:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae0138b-77b0-4cd8-bc70-e5923758dce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ada1b7-84b7-404f-922b-1f85222462c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456ca0b8-813b-468a-ba4f-017a5242698a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus must be an object when present",
                            "rawBody.options.credentialStatus = \"a string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ced1dbba-75a0-43a1-bf1d-519023247cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f73edf8-aded-4dd8-a118-8ae83d897974",
                    "name": "credentials_issue:options.credentialStatus.type:wrong_type",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19006a9c-233e-491a-b88a-7ea9f629677b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3617e50-3026-4dcf-92ce-fbf4866ed8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131c9ec6-61fd-4c72-8cf5-81cf16b818de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be a string when present",
                            "rawBody.options.credentialStatus = {\"type\": {\"foo\": 42}};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352b9ea2-e55d-426c-a981-26a1928bcc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1bc5de-9aaf-45ab-ab0f-78109c5ddeb4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5aeb13-2b00-423c-ab81-add6f08d8e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be4041c6-95c8-4a38-b6c7-7bf4515c1a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c2e445-c976-4624-9890-de602ca662fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"rawBody\");",
                            "",
                            "// options.credentialStatus.type must be valid",
                            "rawBody.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c83c4b2-d04e-4958-915b-369a5467cbf1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99603646-d8fb-4f55-8ef3-907b4f6c97f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6906a44-e6ab-4535-b957-2ac16938edcc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dd03b1-4516-46da-8ed8-35a54b3ba47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55aa1f29-2b85-4966-a832-76b002d53f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d998b9-b790-4d2d-98d2-4e24391c446f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "892a7e87-fed8-4063-9457-db80529a8807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "532774a2-db94-4329-abd9-7c0aea280d5c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae44d7ef-17cc-455a-8702-cb41bfb849bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a33ebe0-c81e-488a-829a-fdd6b5ba5f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f50156-a648-4563-9d28-8b871ba8c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "680e39b0-32ad-4b07-9825-ebbef5875cec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed3cdd2a-3c86-457a-a447-aeacc1d28692",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8addca9-e7eb-4828-9ef2-01bd44e3af56"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b12ae10a-f9a1-43f0-9088-47e7b2a786b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bbf1a1f-6ae8-48c8-8dc8-899e06018708"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2a15ada9-bf05-4645-84a6-c0c13e624cb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0a5a692-2f3a-4a2a-8117-7e28493bd105"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f1ae6d87-5383-4118-85c8-f5b4eb4da87c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "185513f4-81a4-4bd9-a713-78b9ccdca95b"
                }
              }
            ]
          },
          {
            "id": "27c317eb-3c2e-4f07-9dc6-e28189139eff",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4dd4bbb-6ff4-4f64-802f-5fc95781d45f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fe18536-b7af-471e-a849-ed7183b30c3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json();",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json();",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuance_date\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbff1f7e-763b-42b6-aa18-811a6cbee8d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b07454d3-6f79-43b0-b557-639d2a913e11",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "e4c94b2b-4980-4f96-874c-3a64778ccd1a"
                    }
                  }
                ]
              },
              {
                "id": "b8b09ba6-a33d-4296-91cb-0c0865b53ec7",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7872b265-5192-4b61-9c83-b2587c0dd034",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e8eb489-f1f9-43f0-9e7c-ea067892497c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "786dd800-51e9-4057-826f-2a98136023b6",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.id is optional",
                        "rawBody.credential.id = pm.variables.get(\"credential_id\");",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "800b50d5-7192-414c-9fca-6aa1b70c6404"
                    }
                  }
                ]
              },
              {
                "id": "f052e433-70d1-4f7a-870f-b59ad92c8c4f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa9850d-cb51-4ec4-b3d2-6be145a8cf3c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json();",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"credential_issuer_id\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c9fc5a0-e32d-446a-9aec-ba18ae705ac1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f84f31b6-bb6e-47f6-bc70-93c5c92e6def",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.issuer can be an object with required 'id' element",
                        "rawBody.credential.issuer = {\"id\": pm.variables.get(\"credential_issuer_id\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "834fa7a7-0d4e-4b36-b37d-1f1af6ef3d01"
                    }
                  }
                ]
              },
              {
                "id": "19ceb406-7c1d-45f0-ae06-d7cbd14476b6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e576b661-a136-4e4f-8f92-440db449af64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json();",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credential_subject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f01e1c24-2264-47db-adb5-7452da7e8945"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0acc480-fea9-4df2-9951-9ae40dce7bd3",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// credential.credentialSubject can be an object with optional 'id' element",
                        "rawBody.credential.credentialSubject = {\"id\": pm.variables.get(\"credential_subject\") };",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "f8273248-1090-44c6-966f-67ac4ac18923"
                    }
                  }
                ]
              },
              {
                "id": "d9aa975b-cc3f-4509-9265-66231f6d3eb4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80441ccb-09d5-462a-95f7-6b0fd9c4d749",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "80eef151-5eaf-4d5e-8907-9c17670e227f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3d1687a-78a5-4444-8cbe-36a3f69c09ba",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.created can be an optional string value",
                        "rawBody.options.created = \"an arbitrary string\";",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "0a06a27a-5560-4914-8ebe-94ad5b98d2d7"
                    }
                  }
                ]
              },
              {
                "id": "fbd75927-4584-4060-8b79-04154fb70b78",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "163852af-153f-4732-90ec-1fbab121e5cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e79ea31-1347-4ff8-8357-a86873b21cf7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3e4b4fd-446c-4eec-aa16-3601f175c4e8",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus can be an optional object",
                        "rawBody.options.credentialStatus = {};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "871444b6-e6e5-49dd-a83e-191cb4fe108b"
                    }
                  }
                ]
              },
              {
                "id": "7c47afe8-e7e3-4961-a35b-be25159ea5f4",
                "name": "credentials_issue:options:opt.credentialStatus.type",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d77e6b0-487d-4a2f-85fb-c61d067c21e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a570349-387c-4d66-ac58-4f7acec0f434"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c98d776d-b4e2-4a8a-91a5-59f3ef3b89cd",
                      "type": "text/javascript",
                      "exec": [
                        "let rawBody = pm.variables.get(\"rawBody\");",
                        "",
                        "// options.credentialStatus.type can specific string",
                        "rawBody.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "",
                        "// Request body must be serialized before sending over the wire.",
                        "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                      ],
                      "_lastExecutionId": "81b621f7-d077-4b1d-b895-4675f7d00d61"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6ebae9d-4215-4f3a-bbe7-8c3a55abeaf0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03a83d78-c9f5-470a-93b9-faf25ab9ea2e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8b6bebc4-7d95-4c1c-a756-86198feeed75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "117f61ef-7da2-4b23-b1d0-effbfb9bf484"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50b967c8-453d-4388-ba90-ca6cbeba974a",
              "type": "text/javascript",
              "exec": [
                "// Raw body should exclude all optional items and should contain",
                "// first alternate version of any 'oneOf' elements defined in the",
                "// OpenAPI schema.",
                "",
                "pm.variables.set('issuance_date', '2006-01-02T15:04:05Z');",
                "",
                "pm.variables.set(\"rawBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": \"{{credential_issuer_id}}\",",
                "        \"issuanceDate\": \"{{issuance_date}}\",",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"created\": \"2020-04-02T18:48:36Z\"",
                "    }",
                "});",
                "",
                "// Obtain an access token with the required \"issue:credentials\" scope",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Obtain the credential issuer ID via did:web resolution",
                "utils(pm).getIssuerId();",
                "",
                "// Set the credential subject to use for testing",
                "if (!pm.variables.get('credential_subject')) {",
                "    pm.variables.set('credential_subject', 'did:example:123')",
                "}",
                "",
                "// Set the credential id to use for testing",
                "if (!pm.variables.get('credential_id')) {",
                "    pm.variables.set('credential_id', \"urn:uuid:{{$randomUUID}}\")",
                "}",
                ""
              ],
              "_lastExecutionId": "0b5607b6-b79b-41aa-b52c-0baa5b710c30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a2b4da1-d3fa-4c8a-82ba-68aaae3bc134",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f841f170-dc7c-4813-acf0-647f1a2ecbf7"
            }
          }
        ]
      },
      {
        "id": "60d40415-bcc7-4207-a6d6-069984d2a18a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f667248b-20a4-4eb7-a305-f6850f411fb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5425aaa-58d4-4c10-b670-ada70fb84602",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0b831f78-c115-48b1-aeb5-a2098abf86cd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34abd012-1687-4852-b588-ccf0b5cbced4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d481d812-a3ed-4ebc-bff8-d3d70143c337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "274ea107-5089-4574-9188-e36ac5c0beaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76733135-6721-449b-93db-00f095a73955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df564f8e-c347-4792-bfc2-9a74ac79a469",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf4ce2c-6eb2-44db-b18b-c6698feea561",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "71716b54-b38e-4532-9567-9112c39411e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0649bc-e356-4264-93b5-e71b0fcf6e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ad105ee-cf58-4e49-a295-6cc22f9ad26a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3312404-9402-43cb-a93e-7e1352af4147",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61e653ff-1f37-4278-8bfe-d26f4a6c28c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5593cbe-fe40-46a9-ba3e-4a147c77fb8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffcd23d0-cf6b-4d25-b28c-cdd63aa2833e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da0b3132-d290-4611-9d05-2fde545f3a26",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"update:credentials\" scope",
                "utils(pm).getAccessToken('update:credentials');",
                ""
              ],
              "_lastExecutionId": "29301ce4-3170-479d-aa02-af67431ab1ac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b9a00cb-b4de-4aab-b498-377483f19029",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5472a3c6-958d-4e9e-a937-7714f81dd079"
            }
          }
        ]
      },
      {
        "id": "8ab629ab-9664-438a-ba03-cce360dc6016",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d4dda62f-598a-47f1-9ff4-b95cee065fb1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48cc7aa8-360d-4af6-91f9-907b1fb7d9f7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2b1afa8d-a5e0-41db-a8dc-7b2dd5de1da0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e75e740-1ea3-4c8b-8bfd-c65ec527e38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca055df-bd0b-49fe-9684-5ff9d96fe13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771e90fd-fbf8-46fc-a60a-4ac6e0fdc0a1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47cafc2-8794-438c-a951-8c3a523aba62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c7f366-0528-4884-991d-bf0720a1722f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbe4565-b3be-4b9e-b9a3-727029d004b4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d52c645-e4c9-4301-bda9-e6968536da2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e42340-67ea-4364-9c99-62046ea6bfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7986b85e-8a94-4b15-871e-5e401d4c8fce",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a868b3-a16f-4e55-a974-1545d49fd9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec822ea-847b-4b6d-a0f8-11654a1fe83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2188ef68-236e-4502-aa23-f264939b0b91",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f557bf-fb18-4b47-9960-2d7a752f00cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b814d2-98b8-4dd9-b110-26392e027d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495df1e5-e563-44ba-9ac2-77e1b018f525",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57073f4-ea53-4ed1-8f1c-93b94da93588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e692d81e-1f81-48f0-bead-a35ab8ba8524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6466266b-e625-4e41-91d7-d2e44fc7d793",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1f7d27-c2ec-4168-a6bf-9ae123fa1397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f83d6a-8180-4149-a14b-be4c2c159724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c45702-11b2-438c-90f3-86425fd0993a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242dac97-72a9-4cb3-b4bb-edc8babc2ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7545d9e-1588-4e58-b6fa-ccf840e2551d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a730de23-faad-4790-a06f-9cb3fa1e3053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335865e7-d086-4d0a-a8f1-da7a47c28fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f317be34-e720-4502-8b76-59a9e224677c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814065f9-0b24-4360-ad30-6cc1168b6ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8269448f-cf21-4a20-9f6f-ba4df5cdc4cc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79df2b9f-89a8-40d3-93a9-b243a0c8bac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a872ae8-50db-440f-8883-0fedb06f3ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b8a6fd-67f2-4ead-bd73-54135ed48272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d35d3a9-98e7-481e-98a3-6edf8dd80e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f79224b-999c-4bd1-9ea6-8dbb56b5989a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bffe4a3-ca45-4a6a-becf-62ab2c86223a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30d3b1e-8187-48aa-810b-961557192a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d42553-a649-4a65-9117-f216a8c02598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c015568b-af5c-4a1d-a222-7337e32e3cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02905a3-85ff-43da-8249-502b6df3459f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..RJunbl8K6pk5JyKv0VkmdJT4I8sfatEPdbup0RAYKU6F1fDvEZ8j0xFlr1ocpNQGIi4H5cufTCRE3Fi45ZQ-CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1099617e-3087-4e10-920e-b8912ace1583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b4d0ef-4b90-40db-8acc-d04b34f89a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7433caeb-d040-4cf1-ac6a-d0332dc42859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358a45b0-9a91-4d50-ad91-4f7ee61e10ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dcdf068-3aa2-4131-a556-967e775db794",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb6a091-963a-41aa-b11a-e35ae0b5085d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9577a81-982c-4bcb-a17b-cecf40eb749c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0731cd29-ccfe-4e05-83e0-e05391251e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ff86d0-1866-481c-b7b7-9db155f639f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4384458a-c99d-4128-b2a1-50c605c5616a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e54167-960d-419a-9b12-305aa2f23700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df0cb9b-3e02-4db7-8a43-ce726ac05f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78183106-cbc6-429c-b335-d109074517dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f70f457-8780-4db2-9ce9-54e17f3ab06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7a902f-c349-4738-96e1-e543dc4b18fd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7ea6cb-0a5f-4593-b3e6-03ece02c38ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9fbba24-d15d-4bcf-be00-8ba1ef30ab3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc74953-2bb6-469e-b5c2-f965082a9fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7f88e5-0d10-474f-b728-a82fd9b72bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a06e11-e16f-48f9-8529-39c3ee65fa99",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8057376f-3688-4836-9af3-19863ed5db70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf898bc8-ffe9-43c3-b098-26c7cf52bd92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae95bae-1bbb-4c4a-9594-b150eb04114b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5318ae44-1675-40b6-81e5-773d14c1f3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17685fcf-9206-4308-b801-1993793889e9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5960e11d-4433-41f0-9436-086c561b79f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eacf1dc7-85a8-4349-be99-16c05eaf528d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa13b76e-c7e3-48e9-a65e-37b7cbcbe507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaceaaa-120f-4f51-aa4d-16f7641b6d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccda113-5e0c-4ac9-be20-455a485a3644",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520cbef3-04ba-4bae-8848-91f1c07e9b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b0d6cf-5ada-4d81-a1e1-6f3a4dc2b253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939ecf03-f649-4986-b06f-74afe7cc9f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde78d68-7693-4729-a4d0-5011dd79ce75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd8b2fe-6b98-418a-a12f-f03154adccf7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..CaZ2UcTNDOTCXaDXAclLPy7_3rpuf2sbL5xwaMnN2abolieE_C7fB7RsmZ7i5_6CoKRhGnrM3_YkAms8IlObCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5334c0-ce60-4687-9bdb-3957eea52687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbb5c632-6604-4f45-9515-c5808b2970e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfb29bd-dd76-42ed-a28c-584affb7e292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b9de88-0a7a-4a7c-b268-0a6bacb808b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fb8319-bd39-47c6-9221-d3b4e5c53ce1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..yonwdW7r7YFAAjZZxjVrYPkLVrbLR5TMZ3bkWN1uo2UbUi5tgtlikoyyHlj8QD0MPA7xd4Jv-1PlryIVOqtUCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1197af10-455b-4c47-9ab5-d18e7c16fc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684435ad-1355-4014-b6df-09962e0bd823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33642ba7-2285-4d50-9b10-7277f5a3e55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a8ba9f-b1ec-4bdc-bcfb-92c5514b67b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71844db6-cd38-4b4a-b97d-8e5d70a469de",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TRCl90uRMmkycDvfeHw1S7yxyAVl1-Vc2SfwwDzXkn1SqfCJxptwVsgJWwr3gQRAqveZR0xrxQczy4tWHq2FDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21a2206-502a-459a-b801-dc9d61fc7181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66a324a-19a6-4d92-8387-c55d515f2b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d130aa1-6cfc-4447-b5a6-8ba483f6fc5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3632532-6e4d-4df2-9f62-2066dcaf3dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cc9aef-7941-493a-8ecb-86b0759fd1f8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..33cnhPeRXCGz478h0OHf8saAVLVXrxpUI5wG_hdHUWjqKz-bnw2xRGx837FIMgC5jICPlDjEQl1c_durehmQBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d779c22-0db4-4e67-919a-7bc49e660d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b14e30ea-f031-4d2f-a4ac-939efa26c833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a693963c-9b98-4469-8593-95a7d0586785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994ec0bb-14d1-4f6d-b631-16281d748097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07897e61-02a3-4745-99ec-a20a42b4d20d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ymo0kNnQ9mVHr1RKpfCuR_ekUAXzNEM7stSEtbbFv4ZPZb6NK7kUBkckgwrZyBp8re9RQEedJ9yiyfzTL41dCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0997e608-6ec4-433c-b760-e423e25a2c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c65ae161-86bb-4c99-ba82-bec03f5f5070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fc8e77-71cc-4a6d-a878-8f2ed9c01527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6921f3-56fd-40c5-847c-19ca6a17db82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d455bcc1-a30c-462d-a5d3-b91586c6e4cd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d75e633-b4f4-48bb-86f2-036292dc3d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecab667-82e9-469a-9faf-6c3d75f5b784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d00355-c9d1-4469-b142-97d237200104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75c6b7d-d50b-447f-bf18-c3da5f0ca56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9797184-27bd-4a89-b8cc-363131fc3709",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c874d9f3-b74b-4405-b8e3-32d977cf5b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e86ac146-b60c-4a36-852f-7f6e08ef20e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b57da8-c53e-4487-9688-f4f86bf96019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8445a952-c51f-4afb-b712-669d4fb78ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e09bedd-9e4f-42a3-b028-3bed77017ecb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa3a08d-a4f8-4977-a3b1-8a0a0b248c70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a67166c-e099-4706-9a4b-406695eb8efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c99602-9acc-4cd5-915e-77d7350054af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2945c360-608d-44ac-a673-d2e779f99415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331564ae-7cff-49cc-aa44-74dad9e2a195",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a67e27-b018-4db7-8e7c-95ff27c9a11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "832bc19e-795d-4fdc-9de1-958d76531a22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99cc0c5-66b7-4e00-bbb8-d49f61cd362a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324ccd8c-d844-4697-b3bd-9645f6916706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9480851f-7430-432c-aa1d-d4b07af97afb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbee6de-6853-4788-94c5-e7593366c9a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dfd1f23-3144-44c8-a87e-8554dd06ab26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1ecd64-2dfa-4a6e-8279-7bb01a006722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0efcc0-3242-4aa3-bf57-8cca6a5ac5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03cc92a-900c-4ac8-911c-a0d7e67df7d0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c14ee3c4-84d3-40e9-a2b7-a2455e27bd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e816c5-3ba8-4ba4-9ad4-1376f01fae2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e195db3b-3a67-42ed-be4b-ef876757a0a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed97469-9d56-4b0f-8d5e-22e2237aada0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07a58e27-def5-40a6-967d-521b5f700478",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccccc595-a0f2-49b2-ba9a-03bd5a3a54d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a79073f1-5ca2-47a4-bf4f-3cb865bda4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af653bb2-ac29-4beb-b6d3-2f5a76e8eea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bba07ff-9f12-40ea-83cf-3ae162fa7bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840d93fb-589e-4ba9-ab07-8622214c5b8b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02ad5b3-bc35-41b7-b71a-f6a0dcd3d521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4526517a-77d9-4c73-8daa-5ff1d1e0b900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f9d57d-b8bd-4dad-b405-0465bcacc79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba93bbb-14ea-43f3-93d9-a8949a5b719d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d10b53-8911-4812-8c93-f4867a2bfec3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115e6440-fc43-4df5-913e-54a8a3a2bdbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08485f9-9f5a-4f7d-90ba-2719fa40ae45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05602f4f-09af-4cfc-8235-ef17af57a103",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5a6bb4-4a75-4368-ac9d-f8d891fc3f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb54410-8db0-4547-8794-f64dfe34cbc8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a14174-6ca5-4620-891a-fab2cb50e2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e1b8d0-35ce-4dbb-ad5d-582302af9dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd88381-1af4-48dd-b0c2-7f061ed4952f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9db38a79-20bb-4119-a2e3-bc33123366a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78ff876-a492-4822-b7e0-9c1c7561d07c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb86bd93-8399-4671-a21d-70ace8568edd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cc4d56-f96a-43d2-9231-7452e7be0e1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4b187d-a22d-4bc5-bb0a-358f5b599c63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082971f2-83b2-4963-ae36-6b2e231dca31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f52dbf8-328b-4130-b9c5-1691885397b7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef67815b-7c02-45e5-9f8d-0d2bab144bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270a1b25-e4d3-4e78-af63-d4d28d961a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4268526-e511-4766-bf15-85ed96f01c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6e807d-c17d-466b-b681-bfec712cf33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74f43f5-ac8a-4671-973e-d7786e23ca88",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bgY03ZzK02APUHCDiqUVMYbbvu4mSPNC1sGY3lTC8ko7j5oZDB4rB8FRzsXCc9L0O4nHx4UNJURCsRZUErbRCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b09fbe-1b02-41e7-8b73-82c6d1012929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c2dcac-6524-4d01-99a9-74bb38a6e18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e39dd9-989c-419a-8159-682efbd86e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25bf734-08b4-4a41-a16b-8afd0b24d65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f162846-6275-44e2-9c05-0346a54b937d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..2Mu6q2PaIBjmfXHqLuT7XIFthDHboV4bdlIdLFY9KxapUXic6uhoefYFrarss-AN_5dUHdjWnHEMCoWYjW4MAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efd1537-9e7a-46a1-b7c3-291748bebf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d48592-0e6e-43ca-a0a3-2bf5a31d25aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7449a9-6418-446e-b325-fe7bdba91ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b6227d-7fd6-4f86-b368-ec56f4900a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6396f6ec-fde9-4cc9-ac15-c0dad003d704",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..L3RWLJfQzaffmRy3vXZF_7gfdlR-iQbA_8TjGFaBCmaOqm8R7Qi0B6JivEqshh8MZWufDitgO-r6ASk2iaGVDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6595e8-6687-464d-a36a-454449f7c4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be9cd75-86b7-4c16-a03e-3abb11703a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dede3cb0-7ee4-4089-861f-d5f3ae966db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b779672-90ee-43c2-a806-d2e4943b6a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9de1ae-b448-413d-b709-ae29a745f13d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xkCnC0dheSr9rWQn6uxLta6CXejSLy7FIQkZT2rYiOV0jmWW8SWcCdLqHg2gJ3WyBBmxj_zRwNBpFIUvsLCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c0f353-d126-4d8b-b1d2-b0307f09e657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fb7e6d-d566-4ffe-838a-247adc982605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d0bd74-d013-4f97-93a8-771a80223526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c970ded5-8abb-4b77-a7f4-e2a3d8f0301b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feda7aaa-acd1-4e04-b252-4a28dfc99030",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909c4e5f-cce1-4fde-afd7-a383cf079784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fbbe76-bec4-499a-8743-3d5a04de840c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fca1322-3209-48c5-bded-a7b1aa056ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771699ab-8eb7-447f-8160-87b4f5c035ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b562b5-cd14-4053-b503-747975112ff3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..E4WypAOLo4KNTnvHucei_9yLEMdlq_UwhS7mexlp5i3hF8SfBAlLv2scHANd3Ikhtqr9JIyaXuDnIN2LsaVFCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f7c0a8-7641-4fc4-be4a-73d86a297f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbcbff1-7b3a-45aa-adaf-59f7bb777ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a226065c-5590-4c0d-8522-91aa764fd27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fceb60a-80fa-4a43-b920-5e00cfb8e5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b098d52e-865d-4ed9-b0bb-42f8baf37b0f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rnEgkKo3EQPiGixl67oPIFuZ7H9zueq0ELswP2p_FdahgJooIojScCnp-AcxeC_G6YDtLUbsNlVy0SkDvTnwBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08058d10-507d-4fcf-aea3-46c255479b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b46913-1fa3-44f8-af9b-e011a27cfd3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58f528c-20e8-403a-9886-c723dd8b312a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa350fb3-3360-4a3d-8ffe-e1b98a389a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de0aa76-2d7a-4a72-8020-ba387b130503",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..nK8J_eHLw18__7Byp9ohgpDCHY1-Wfpw8vk-8k-nw4ezzjlwYoYjbo9x_xx3ES0WY0aCN2Xr9SbRoZHr78P0CQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7aa0a5-77a2-4205-9488-534208a99966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df2ee92-1b83-421c-8e33-e62cfced4f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a566047-8c40-44bb-94f2-d71e71543604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae513cf2-2b04-43e6-826b-6a5da6e7bebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d2aef5-aa8a-4e01-9801-a223e8746b15",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n0Ffdz9nyzKuJw3OlGpU5h8clE5I6MFEFEEobztPABGQn1hFRN7CBx_BmDMsT7KF3jSLl008sTJ3RllFql5QBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476b62f4-4730-4727-9e50-e9ff21e9e4a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4538c495-8503-4686-a7bb-ca71e0b53f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ef1cea-d52a-4ac9-8148-45689e80e1a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176f3914-feb9-4142-be5e-f65a260d7116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8c0cdb-12d7-4d2c-9dba-9f92a2819364",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GEyy2tqmKf8AzHhXY06veUbSRVk9uoQIu21GZlYtcdMGh-VrTjvfVg2R8DAFtCBe6tEUL4dnsM87mT-20nG5Dg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7899f4b1-cc9e-4430-9dfd-ecb700de2f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40acd41-0d6d-48b9-a7d4-e887107be735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fb2d6b-c6a9-415b-ad6f-6c25f5eb9136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd164fe9-764c-4683-baec-b9a2978e388e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e565bf3-690f-42db-ba10-a5e13b82c162",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39134075-8d16-4def-ab76-113d37788e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9011bb9b-c366-4f29-9d32-37a7a1aa121a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ea5f02-e5df-489c-b31f-38e48c04d31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c6c3f3-b33b-45e6-8d2f-2c5db99da3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ffb268-67bd-4bac-8882-deddcede3462",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vuVI_mdt7bpVwmKIsmIusWlCbj-wk33p6_FC2COcGBKzh9m5jxydHlDRIM6YoJQJWpS8_EavVFKwQvPuLuwNDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dd73ff-2af5-4f47-8df4-a0d812b2c856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef1d089-ac7b-43c0-8d9f-67ea60dfd484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4506ca-375a-4d91-be96-abfba5421bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1377b482-34c5-41b3-bea7-2cddc1ad11ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b29282-a5a5-4bd6-952e-41f62291c302",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jurLQ2KXgTdIxIAB1dwcysrBFVMT95g3Mn2SuyxAubRWS8Rbe-dFsoVG24kxo5wE6EZVYEuES8uHwNX_SSrvBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f49b338-8eb0-47aa-99bc-06ac95aeeb56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac7183c-a5e6-4ee7-ac8e-4a1ae43eecdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50e85e5-36b5-45a9-bdea-59eff803b745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bb85f9-dd33-488d-ace6-16b432261962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fa79df-f688-402f-8302-339e957af791",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..HyTRfrVnRzNCXO3qmmbQnmtXYV_bAdmZg-27bnuBGqQScL87kkmPfY3CpSTLN_8aV72mVBkvy1-uvYhkQotmDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bc9cab-c680-4c9e-9b24-18c9dd6c3a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0dbf391-42ea-48d6-941f-afcaa459eba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53287a51-240b-4ee3-a470-1a70468b8c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf6e2df-9d68-4baa-bfef-3de8237c56f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d307c65a-7fe1-43f5-841c-7406110411b6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..WtxX0aIcE2JJ6T-a5nqfvElr_E5NwRYeOJgRBqeAVVFNJJaQJh6rz1V6nZsDl2xsblGQxCAaWQq9V6SphImACA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0f75a5-34d7-4c1b-8438-f97782e578eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3d4d7e-c1d0-401c-979a-87cf0b5149e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff7b964-c785-449d-93f8-c0f489cadd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af80bb2-101d-4cac-85fa-76c3b0fa950b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08ae1b4-47ef-4cf8-8c03-0b25eaea1736",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5NhiK8XqFDY7TB3l0Mli_VAhnflErggK8zlj71jNg6F5WD4eNAVufeVLhK8HtvGaC-7R7nQzQfzkCH9692DUAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399fe24d-a036-4fa4-822d-9a543d5b1e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ed32b2-b163-46f1-ac4a-f29a1b62e38f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1efa1dd-d65b-423f-bb44-4d1bc33bb555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c283ebed-006d-456f-a048-64cbdfdbe2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a63ab3-ed39-42b7-b2bb-87a1c777bd77",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1phNak29yV9Dt7ljiilV_cD1b78U9dV8Zhwjgrocc4Nahxchof8QHmEAFjfupRQZ71WIBpW-VGUtW-OwUu6eDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bd03e3-5317-4165-8576-ef0cccd32fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a92c9a3-c89d-47a2-a366-2d974f14f36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade9d9a0-8989-4a5a-aea2-f27f0d685412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945e9200-6cd4-450d-8742-4d51f008e6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51180bd6-e38a-42d9-9e1f-1d3b1feaf16d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b591a103-af8a-4812-a9a9-144e171059dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8518acb2-4733-4c85-b133-25dbc6b669f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b1efb4-4839-48a8-892e-942bd3261871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d95bc8-e120-4510-872a-c44ec624c860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7afb5-23ba-4442-b21d-593a423b20a9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219ce3d2-f247-4854-934e-ff20a81d8f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa204b33-58af-4251-9b02-e6b65f554b32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad4781b6-5ce8-49a6-a827-9fc35412ddd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36835841-4769-472b-8e02-59eea54bbac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3265538-b9ee-483a-a90b-95cdecaf5952",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..j1W65DhMkwul7bodXfKrVNsT_27QIFO7rI-8TDk0-ef-wu4PU7OuA8MFAOXfx-HdVf5KdqVu0BB1ITE6WjIXCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5db147-325d-4ff8-8d2a-f287ab82a5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f331799-6c43-4dcb-b586-a0824dfb684f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7017df3a-4ed7-468f-99dd-3fe3f0cc59f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57989e22-b361-4d64-905b-faf01e08036a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66b45e7-e57b-49c6-a05a-7a5063486678",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Wm4yBzXF87zLmyA0LMEwHSWs-2EfPpdN2yJstmvPJkPVLFdXKUdjh7lZuHNVtTkAMGNT8Wi_RZ5Q1BWAY054Cw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f53f374-7c0a-4ab1-811d-2e546b7de471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd9b508-03e0-4470-80a1-6864f97c4c16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e26c28-7639-4f21-94ab-99565c4ad7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe99139f-6a22-4ff0-8827-7a571982afbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06accddc-aae4-4fe3-af32-9c694e5dc6b7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..jbb-uyU5OrakaqoC-9v-KQVdCXvOfr4Vjxox8hwFNP6qggsTP9NhHuq-T2Vdyag8BweIFTykT0SR_jAgtOxKDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6d4bf2-a8a7-4370-9974-29af5f22e266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a3c882-d2e9-4c33-a428-473f781d9161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2b6e5e-ff4d-492e-aa98-72bc14669023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24c6c9e1-b6b4-465b-b8c2-ca93ac68e88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c438e98-bfe1-4451-abd0-d3e30ad5ac7b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..J3mhnnbzRyvk8fyfh7fwzuuznEROTdVRM_MrdE-HV93WdGfTdgVhebmdmVZHmvmJiQaxYiIuD-natToEB7xvCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7008c0-14e9-4399-919f-266571121899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab3aa93-b9e1-4aa4-8760-d721bcb24b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af9521f-008a-4e8e-90ef-244ee3aac018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a005d9e1-3296-4d42-b6d2-fce82cd25e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a45c063-f26d-4c59-875a-45d4fcf9dd4b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VDVadt3rnBQ7P8dSYyZU5RHdfxVBWz3liR1wKbXbfBuaNT-rJYOoUCLQj-7IQ2elQaB4Fhp2nsgul9ZQmZc1CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d64fff4-c788-4651-9378-2016ccee6d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b64018-019d-4496-bf04-69ac09ea25d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "162f5ecb-4ba7-4c02-857f-3a68d4b20b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e833de00-0e7b-4f84-ac5d-e7c54b5b64c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff85deb-fa38-40a3-9bb5-5541fde71f62",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Kz272GRCnCfgHy4D8txIaM1bY5O5vW8iFfQrL2B8a7OnaVTcq6nF-dhqnoMLHPEbrUNzHK7spVAZG05Njl6CDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e36986-0faf-4cc0-afae-467c82bc0f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ded12084-db2d-4ade-bac9-b046a15da6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21e29cb-0179-4b57-a41b-c88f8c17a405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24cff70-415a-4af2-bed9-bdf9de365da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f965e09-d078-4a30-b379-da8e06fc1712",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..P9pVMuK8IN7B38_-uHlTyqAeQFcasIOW06wJWEZDZLPpaeLA4L-S6ee-tZsbGmM0QoSr8WTkbqkhiXpEhuIbAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99bba74-5559-4eb0-8c4e-d35266bfda90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f373bd-d500-4c5d-8c89-77a13247b382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a9b80b-ddd0-4973-a1cc-6793431bf2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2629660-49a0-4be9-91a8-37c60f67d03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa56c0c-5f92-4f4f-b980-89a31857a185",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rdlyOsz8ZwKwD5_CacS7c9iPQnRUIywCc_sHdyJlADD9Cq4cRwRw0wwJ7OZtLDylbm512V0s3Cn69i1qMWc8Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a31a9a9-75e3-4dca-be92-59eef64f6417",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c3705a-65a4-4eb4-bc35-eea99c83b4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "003ca4ee-44f9-4faa-8122-6d0540315256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecfad5f-7129-49f4-8c44-3af4d08cde3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3da997-68da-44d6-9f94-aac4208ba509",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:web:example.com\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YXI2e8nVY98qybXn64g4bOG063TH6yjKFmSF9gRq0MtX3q3cex1t5ayc38JjZSBEgoJTKQzUTbL71FOukoNrAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4d7dc6-abf1-4496-a7f7-efd6d15ae77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abebc144-b42c-4f71-b5dd-968ab3dfbc9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f3e9fb-99c7-4607-9ef0-a1ef3bb8408a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aff0bf5-6dfa-42ea-90f7-ef7d8c6bd155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d14286-142d-4e14-81f5-0c8c13a4b119",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1f5030-4f0d-4631-b451-30bbe52348be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1466a41-6ef4-4be3-90f9-472472a3daee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562b925c-fe69-482c-a89a-75ae9b70421a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd64ed0b-0033-4508-9480-f875ff3c8558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b0d6aa-fd20-4ce6-80eb-10853cb7f2c7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6845fce6-4365-474c-844a-611d787ca0e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d05cd596-2f46-483c-b868-a162db665b02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deac30ad-f160-4e85-b40d-557dd50328a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea31b30-dc43-494a-9440-e14e6fe8a671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f304417-b3b3-414f-a9ba-56dd90bd682d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f8ba7d-b0bd-4df7-b582-340c150d98a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b42affc-d674-438d-b717-afe374003a8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac06914f-fda9-434f-9d90-3aac6348915b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d9a4f99-7594-4172-b6b6-9d3e2acf62ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27d91db-0dcd-4994-a1f6-97babfd3f7e0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41599609-a798-4472-933b-fb9f6fcf2fa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0aaa43-3e00-40b9-966e-283521d7a3e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2a2b4f-02e5-46af-b17c-35360d14ecc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecf6ee5-f573-48a9-9c18-25bd64606c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6899da3-8ba3-418d-bac5-aeb43c6f804a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b92c39f-7808-47d8-8666-8c7a35e929ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bfe906f-939f-447c-a9f0-05400c65eab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386dabf5-6aaa-4f4c-827f-3cf54a974859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04df54aa-28a4-4622-8744-add92ea19263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89626ac3-3954-4b45-a753-f638779c862f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6735146-c537-4481-9883-89e1ad6c3e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f0b276-2f43-4b70-a572-d466411f0c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff70ef-a55b-4089-98e3-193d112ce481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c170f81-68b6-4310-9d50-5ab7706187e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d126efe0-452b-488f-b36f-8123593d5839",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d901ce-b1a8-4088-ad79-c3a85f41846c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ae00c1-b286-4b0e-97d9-5b42268361fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9948c645-89cb-4fbf-8834-0fcb0e31854a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146dbc8e-574e-4746-9a09-206df804d02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87915f1-6d90-48d1-b428-04588075f4bc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7d63a2-9d5b-4fe8-836a-48ee130f4809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dff0bed-3b2c-49f3-9373-c59d86935f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b99ab49-cf43-4207-b3c1-9b487231f509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69775a9f-b898-4ccc-b7e3-e8aa5a56bed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b816b457-31db-4fa6-be27-b76c40d9603d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3f03bb-8b81-43b8-b81f-c4f9685d43f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7428127d-0c16-4bef-8d69-ab9b0dcab3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "800f327a-de95-408f-b60b-9d92c3327b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22f3602-2498-474e-987a-6936be6284bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b93e6b-df29-4bd4-ac58-16af9f202035",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89e1498-c278-42f4-893d-648d89382cd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba632da5-7fac-410f-9990-8ba55957ea3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68dd1b15-39d0-4d21-beba-fa0e4647be61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be1630b-b522-4913-8534-70c28bb2e9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107c5e13-00c2-4149-a911-81bc6509a433",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cbeeae-09f7-4b76-ac68-c7742b2a09fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1be6a8e-e38f-4c4e-b843-6caa072a2e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09914e11-6601-4fbb-a477-a8c92d44cfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d843fc5-c246-4ec9-a72d-f60d0eb75cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965081fc-6c44-41fa-b686-7dcc612eeec9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec427683-67e9-43fe-9f5d-3ca26e16fc3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "878f56c9-3e2e-4117-86cb-db35635fa16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ca6d5c-18f2-42d6-bc75-30dc0ef6a93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1216e6b7-83a8-45b1-8056-50c9c415a79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0580b917-0c50-4362-a426-89f909c16d58",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5947c121-c428-4c64-8d1f-c8af441b117a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c084232a-078f-4227-b434-8c82400a7bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422da3c3-afb8-49a8-8c25-a787f988c886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0d2258-adef-4a6f-805a-8e34d9bc0bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2684ea-e87e-49cd-b76c-01499fc028fe",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca15387-3ec4-4f21-99c0-43cc5dc55d81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1136b26-7a6a-45d4-a128-316c61a66e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97ea100-ce4a-4d64-aca1-4772cbe5da28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e1db96a-e312-4573-8a2f-7e44a79cad2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbfd317-dd3b-4e51-bb8f-40d26f46473f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f63b36a-7e03-4ddf-bf6f-1fda90364600",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d39b7327-904f-456d-b6db-4f55e9370919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e273650-cdf8-434a-9d78-936032d401ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd1f21c-7faa-4f04-9685-9c7a099caac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5a994e-a6f4-486b-80d2-99705640d952",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d809a5-820b-4e0f-9da2-46d152385aed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e984b5-4920-4b4c-b34f-0ca075a6960f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7895c88-36ff-4ba6-980e-43a06163a597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0804ecf-1b2a-4205-8fa4-e65ee1a4467c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cf8dfa-a589-4a8d-aa30-2a224d44171e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30c2d45-4569-4071-81ee-e6f3dc8e3642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0bc9670-7f08-4b22-b41c-35ee0fb3a993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262f3bfb-7cb1-42ec-8eba-a685020253a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366e3622-3826-4b7a-9b45-e7cabc965400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789aca31-8835-4927-9d62-17a4eb22e2ed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497ec0c9-ffc1-44c2-9641-43914ff6ee05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "188d5f9c-0730-4ded-baae-299989ad7017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09185d73-e54f-462f-a499-63766f00a5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac202201-c466-47f9-8ae5-ca7e1414a052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dac3621-e350-456e-adce-ece5bc97dc48",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962f0447-bf74-4b39-9df0-23092b0dcf07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e16c57-ed16-44d9-a376-673f373c080e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb841fa-86a3-4cd6-8c18-34c602adf1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfbe18e-bb69-445d-8215-76efe3e2983b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d40edd-ac4a-416f-8035-febf940ed537",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c867100b-e69d-4d73-a183-db8912c833ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ecc7839-4caf-475a-a1d0-2582438a9bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce45368-d6a2-4f40-92c3-d56ad9df24ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958933e7-f099-4114-a657-afff6cdfe880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab46a9c-06ee-4690-ac36-63154fc6c024",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4846f6-5e29-4ddf-9fa7-d0841e34dff8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26069606-e03c-4c18-999c-461380f2e2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86df9f94-8d35-422d-afce-ad3aee8bdd8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ad9406-851a-4462-8dd5-bbe7fae0eded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa065de-e869-4bcc-854a-f20031b179b7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b9c8be-c86a-4fdd-8281-6c12a0fb7935",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9930e062-8721-4855-b48b-fb33df743f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80066469-34cf-4118-b70b-daa0fdc91190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd94660-d332-4147-8378-9c71c43ec0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99109d04-7e1e-4961-9741-b1515fa203f6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7254aa2c-ccee-4990-b330-7a948dfb2602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08437ecc-29f8-4855-81a9-e65b4ba0d662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92445ed1-b68b-409d-b63e-e1d5f138161d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0698c0c5-633b-4885-afd1-8f7e4b733937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f908e95-1aab-4318-af06-fa9378fe8c05",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26223bc-c6cd-404b-a0f1-16d7d47b40dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7239613b-730a-4484-b712-e05432d6142f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2466d4b-276c-4a76-8884-4e28b04f0985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffeb1b84-e189-45b5-91fd-3177ba5f79b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989f1a81-8356-4473-987c-3ac22d335253",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de95480f-8182-4b24-a6b2-8a2721ce87c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2daa4f7-06e0-4be2-8c86-7458413befec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cda243f-e156-4f9b-aba4-dd260cd4a1ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c289ac7-a9e3-4dc2-ab12-2e3c2f3a8a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2374ee0-a114-41d5-951e-f78221993844",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116c543d-8650-47b4-aa12-ea9b1dc785f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90292367-6a42-427e-b4ea-599fb4a70765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca0d0d-5bbe-4554-8e90-f30df0b6d0d2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11114ebe-995c-4643-ac92-ca544ef15a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925a1259-eee5-4b0c-bfc7-43effce2c9a9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c947f456-bd45-4036-99e7-8ab8eeb397de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52aa26d8-e276-4d59-acd3-4cc5115af2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9697884-d100-4c9b-9b97-c407992d605f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32055dcd-a0c6-4a2c-9598-2bf847ec07ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52225b4e-a8f5-4db6-82ef-ba1c91f3ee9a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a08ba9-1479-42f6-8c06-c7b5eefba58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702ea62f-726b-4005-97a9-bbd27b4a249d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef3025e-76c3-4cc7-88cb-33d436efa67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbe0d58-ede9-43a7-b263-80d77a7ec773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e456c5-5157-4a79-afa0-63b4b567fd8f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bf4461-646b-4c6d-8082-bfe6a4a50cdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9027fc78-899a-4e57-a673-b33610af82c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24808385-bdc8-4ed8-8c9e-7c3b24332b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd799aa-52e9-4217-b115-94b591059572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b5c839-3d40-46e0-948b-0936fb46293c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c72944-2787-498e-8a22-0dac1e2e43e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "675378ba-309f-463e-9521-c3e81f6ec22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5aa776-6f7b-4fd3-b407-69caac555d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97eacc5b-abeb-435e-b9c7-63b984149a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9399b60f-d368-48ec-9bdb-bce40fdb3927",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f504f1d-068a-4817-96e5-de4af3f3bfcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "279bb756-c01c-4bd6-b190-abf3d4021708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7a051f-f098-4ab5-a6a1-57ce4b802783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41ffce1-03d4-4d0d-aa1a-4a6f753c4fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ffe9ed-c918-43cc-9497-c260b66f0830",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf65424-4f7c-4a8a-b661-b678679cd65b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe030c84-7e9a-41f0-8edf-9c580eae9af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8308e3-0f1e-44a4-a308-4edce422ef9f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca64ee81-e44f-40d4-8809-c814dd2115a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6030ba-2297-4809-b284-efa67d2c38a1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0381961-992b-46f5-bb10-ee6f6b215f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f60ba85-82fb-4eb1-b0da-a2bfa494246f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaec260c-fb6a-4828-b62d-056be3038f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9aea418-c28e-4548-be69-e394399334b7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21721676-5f59-4559-988a-62e03ff5ca16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "243e782e-47f2-4de3-8de5-608fd3f87c80"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6225232-b0b4-47d0-aff1-9f3f00164141",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e0251f6-06c1-4d77-8bc1-14ca9bdbc32b"
                    }
                  }
                ]
              },
              {
                "id": "5db15031-c029-41d2-ba4f-a2d51818d8a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f391375b-907b-4cee-896d-1e47e38364d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872a7cf5-15af-4aed-bbe3-f58690445462",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b88a0d91-4360-457f-a35c-d311c13d5861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6af8781-5934-472a-8f06-6a92dc3ca08f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3835261b-6d4b-47a1-9b4d-7729586a5649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7caffed-dbf6-443a-a34e-a86062bf7cdf",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636b20d4-0b1d-44e2-a102-94fe7da02770",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "332a8fde-477f-4306-970e-eb716bff770a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a4d9f-7e63-4aa8-b994-393a9c4ac1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0186682f-ae68-4ed4-9a83-d668849f781d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95df1a98-c5d7-49ae-818e-858a41b42f6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "315c265e-67e1-4387-b3f4-c51db6386329"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fff5296-4006-46a4-a026-6e473ffa921c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e9cba35-bdbe-4742-8670-a0b065eb56a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e46d2b2-cedb-46fb-9f85-b3cd095e09c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c702b1d0-28fc-478b-b2c8-c337e53ba51f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "774c1b38-9821-4a38-952a-f154670032cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "426c8a9a-8f9b-4393-96e3-a8120ab93eca"
            }
          }
        ]
      },
      {
        "id": "28c95099-caa7-44de-85e3-0b8d2f3bc608",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5b67ea28-60b2-49c0-9766-5b9e8a86f1a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5a6bb23-af34-4602-9fb7-6a4124fcc59f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de6c98d0-b78a-4367-b647-7875b126b69f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60ccff3-1565-44f1-b114-4c892f0124d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956f27de-f0a9-4e19-b629-53cd553e6f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b79d72-43c4-4698-a071-5960c2d5c736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f113479d-8532-4d2e-8d4a-3b2c0934273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b173d1aa-665f-4052-9982-0fb7007c485a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50ed5c7-f405-4912-b438-8c8223b80376",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "de96930f-ff6b-4a41-b329-79794fb7c097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4758eea-0863-4bbf-8cd9-071d2d1b2b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f456facd-14e5-4d6f-ba8b-031843d8dd7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa3cc9c7-ba71-4738-90b8-af667d8cb700",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0de6a024-adf1-47c8-ab38-984aa30f4ce6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffafe9cd-6c88-4c07-a436-c0261213ccfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62d67d46-c9a5-43f2-871a-873dd867c8b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c15e950b-dc7c-40ad-8a9f-a389f9ca6c7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope",
                "utils(pm).getAccessToken('submit:presentations');",
                ""
              ],
              "_lastExecutionId": "8c74bd39-d1de-4437-ae66-c5fa61623733"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "abec4702-4a0b-459c-9c2f-23962514a34b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "317c6418-d24c-4281-b42c-3036dc00c2c2"
            }
          }
        ]
      },
      {
        "id": "d18072cd-7672-46e6-aca3-024a56725e0e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "10695364-57a3-4662-97f5-456b4d65aecf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2de7f7d4-a61d-4d0b-b778-66068415d92d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b911d15-0288-477c-9355-65b8dd0ad659",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32b97db-cfd0-4f69-b7f6-7975137ba321",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658283a1-2554-4d1a-ab7a-372bcb67db13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c175dab8-2fd1-4a69-917f-4dbcb63a147f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "733786a4-c81e-44ea-a48d-4551e45f478c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b374a3c4-d5a0-4e9c-9702-3222cc8f15fc",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92aac5c6-5c3e-4d7b-8cbf-2823e30f3973",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "97f72413-8b0a-4f19-a09f-e4027e882eff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae9fa5a-6e39-4013-bec8-98cc5a33ecf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "640b99a9-c7f0-4da1-b54e-2c8535b9d7da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "228ed88f-ddc2-40a7-ad30-8ee5508a6144",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12205659-a5a1-420e-97cf-fb77a58cc014"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df62ce51-7cf0-434c-b6ae-55c5a1da2350",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b0ac186-b5d4-4e19-b50e-e769b9f771b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa343c8e-8a5f-42c1-a343-9f1f09d6af28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope",
                "utils(pm).getAccessToken('prove:presentations');"
              ],
              "_lastExecutionId": "b32ae79f-5eb2-4022-9672-48c0f4b5b323"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f8ec8f6-dce4-4147-b6f8-495d3ce6d51a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbcdc7e5-9798-4879-b9d5-9c8040c9f930"
            }
          }
        ]
      },
      {
        "id": "b69ef7b8-73c1-4680-9daf-2e325d6c41b9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6fc06ed1-77c8-42d8-87ac-cac6dbaa880f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "52a09d99-b1ad-4d80-b23b-bffe1ff93c83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5f0984fe-84ec-4357-96de-89a1809af4dc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8266e77a-39f4-4abd-b1c4-5b202d9eb385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9cc33a-6444-46db-8c7f-3eb16db4c0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b418fd04-ad31-489d-a166-8a75702ca3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "487028a6-7a64-4b25-b445-1a5f44b7249f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c0842f-a1c3-4ce6-9f70-e02492653361",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f19090-2722-4b5b-9932-03af416ace54",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c81d3dc8-7b42-42b0-bf3b-a8dbda402417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1757efa0-92c4-41eb-a92b-4d75252cd0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c6be288-a714-4c3c-88a9-fc2fb6e1caab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77babf5d-b2d9-44ce-994c-8c1d19bf811e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80d5b555-697f-40ae-a255-ce771266d52b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56d4aa53-8f55-4c4b-926a-0c225da05765",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35de63f5-6b3f-480a-8b6a-d2203bf5c9c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aed94c82-f237-41ea-9544-424a82f199b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope",
                "utils(pm).getAccessToken('verify:presentations');"
              ],
              "_lastExecutionId": "3b0605c0-0f79-4198-9f74-2b7a2451b5e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2ccc268-3269-474c-a650-729c861164bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad86918f-ee96-448c-b983-64dcf9ad881c"
            }
          }
        ]
      },
      {
        "id": "796fdea1-d596-4bc1-a9be-9ab932bb9972",
        "name": "Presentations - Notify",
        "item": [],
        "event": []
      },
      {
        "id": "e27ba79a-8ae4-47ed-8767-7cbadd227742",
        "name": "Presentations - Submit",
        "item": [],
        "event": []
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1193,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 200,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 152,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 309,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 602,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 591,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 99.165,
      "responseMin": 31,
      "responseMax": 2353,
      "responseSd": 229.05108114785205,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1663807927633,
      "completed": 1663807954495
    },
    "executions": [
      {
        "id": "376ef8ae-5daa-4e0d-b243-d35daf768397",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 152,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b3c1cff9-93ac-40a1-a50a-d7a7b3756091",
          "httpRequestId": "4bddc4c3-0ec0-4a08-b91b-36635910d4e1"
        },
        "item": {
          "id": "376ef8ae-5daa-4e0d-b243-d35daf768397",
          "name": "did_json"
        },
        "response": {
          "id": "58666c30-ace3-494b-bb25-5d5b528ba631",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.service[0].type should be array",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.service[0].type should be array\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "id": "2d6b9cb7-a4d6-4a3b-ab1b-8f03b2db9e75",
        "cursor": {
          "ref": "ede210ce-69f2-4538-9fc5-9fe04a200ead",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "785b1ad8-102c-48f7-8f9a-f1738d04026b"
        },
        "item": {
          "id": "2d6b9cb7-a4d6-4a3b-ab1b-8f03b2db9e75",
          "name": "did:invalid"
        },
        "response": {
          "id": "c770007a-5b27-4858-b0fc-28abdaf351b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6b9cb7-a4d6-4a3b-ab1b-8f03b2db9e75",
        "cursor": {
          "ref": "ede210ce-69f2-4538-9fc5-9fe04a200ead",
          "length": 152,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "785b1ad8-102c-48f7-8f9a-f1738d04026b"
        },
        "item": {
          "id": "2d6b9cb7-a4d6-4a3b-ab1b-8f03b2db9e75",
          "name": "did:invalid"
        },
        "response": {
          "id": "c770007a-5b27-4858-b0fc-28abdaf351b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81017c40-c03f-4fe0-bbc5-1a9448a5919a",
        "cursor": {
          "ref": "0a9ec7d0-d870-4063-8263-29e441374846",
          "length": 152,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9cb315a2-d86a-43c7-b50e-dd1ac83fd787"
        },
        "item": {
          "id": "81017c40-c03f-4fe0-bbc5-1a9448a5919a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "08ac2cc5-7bd7-4a82-8e28-d777a0ac15b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 144,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e87562-d4c6-458e-a622-cf93e567e7dd",
        "cursor": {
          "ref": "3d450073-cff2-4395-a9d1-e7a64a781e13",
          "length": 152,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e531fd26-810d-4be6-b195-edf4db156b90"
        },
        "item": {
          "id": "24e87562-d4c6-458e-a622-cf93e567e7dd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bbc4e16b-d331-43ad-adab-100cc7e0e49d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda1fddc-3841-413a-a9b8-79ebde3b43cb",
        "cursor": {
          "ref": "68368f5a-7f4e-4d4e-995f-64f404b93d18",
          "length": 152,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "17ab0d08-4856-4912-bcab-29013a211f76"
        },
        "item": {
          "id": "cda1fddc-3841-413a-a9b8-79ebde3b43cb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7f22e285-e2ba-4a36-b25f-c1a7e5b71fc4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e11cb52-57af-4ecb-9088-72d2776e29c4",
        "cursor": {
          "ref": "ab1f77e1-4fd8-4757-8f93-4faec275a184",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "353d16ba-b394-47cd-8709-2ef5869e1943"
        },
        "item": {
          "id": "3e11cb52-57af-4ecb-9088-72d2776e29c4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "76e9c04b-8686-46a2-be11-dfc0f883aebd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e11cb52-57af-4ecb-9088-72d2776e29c4",
        "cursor": {
          "ref": "ab1f77e1-4fd8-4757-8f93-4faec275a184",
          "length": 152,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "353d16ba-b394-47cd-8709-2ef5869e1943"
        },
        "item": {
          "id": "3e11cb52-57af-4ecb-9088-72d2776e29c4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "76e9c04b-8686-46a2-be11-dfc0f883aebd",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802098e6-a067-4a14-a29c-3cf118c32512",
        "cursor": {
          "ref": "0f6b6d44-f4e9-4af6-a49f-42e67ffd1b63",
          "length": 152,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "06dc8f0d-59de-4a77-9aef-d1d48c1d35a8"
        },
        "item": {
          "id": "802098e6-a067-4a14-a29c-3cf118c32512",
          "name": "identifiers"
        },
        "response": {
          "id": "256671a6-1ca9-48bb-b1e2-d2d5961b0d07",
          "status": "OK",
          "code": 200,
          "responseTime": 2087,
          "responseSize": 1396
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231b7152-f6bc-4914-8f8f-33ba370fec9c",
        "cursor": {
          "ref": "da101380-d271-43f5-b3fd-d73603b7a699",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d25fdc3a-81fa-47b7-9531-0567e42308dc"
        },
        "item": {
          "id": "231b7152-f6bc-4914-8f8f-33ba370fec9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "94ff6513-19f6-4a3b-abe3-0ffecbaf28de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231b7152-f6bc-4914-8f8f-33ba370fec9c",
        "cursor": {
          "ref": "da101380-d271-43f5-b3fd-d73603b7a699",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d25fdc3a-81fa-47b7-9531-0567e42308dc"
        },
        "item": {
          "id": "231b7152-f6bc-4914-8f8f-33ba370fec9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "94ff6513-19f6-4a3b-abe3-0ffecbaf28de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231b7152-f6bc-4914-8f8f-33ba370fec9c",
        "cursor": {
          "ref": "da101380-d271-43f5-b3fd-d73603b7a699",
          "length": 152,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d25fdc3a-81fa-47b7-9531-0567e42308dc"
        },
        "item": {
          "id": "231b7152-f6bc-4914-8f8f-33ba370fec9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "94ff6513-19f6-4a3b-abe3-0ffecbaf28de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f63d50d-711c-4c02-aba2-2e6e1daf91e9",
        "cursor": {
          "ref": "1565da53-c42b-403b-8b4e-4409ce0198d0",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b6a1c870-cb60-4c85-95fb-77bab4af8356"
        },
        "item": {
          "id": "7f63d50d-711c-4c02-aba2-2e6e1daf91e9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d44d8671-f20d-44c3-9e1f-9899154e3e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f63d50d-711c-4c02-aba2-2e6e1daf91e9",
        "cursor": {
          "ref": "1565da53-c42b-403b-8b4e-4409ce0198d0",
          "length": 152,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b6a1c870-cb60-4c85-95fb-77bab4af8356"
        },
        "item": {
          "id": "7f63d50d-711c-4c02-aba2-2e6e1daf91e9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d44d8671-f20d-44c3-9e1f-9899154e3e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ba4b08-f6d4-4cd1-b9f5-db9efdb0598c",
        "cursor": {
          "ref": "b3e2ed57-f0f0-466b-a5c8-162a492763d3",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f269b062-bbb9-428c-94ee-d3bf303dbcd3"
        },
        "item": {
          "id": "27ba4b08-f6d4-4cd1-b9f5-db9efdb0598c",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "5bca0231-5913-4fdb-9a16-1c060ff9941a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ba4b08-f6d4-4cd1-b9f5-db9efdb0598c",
        "cursor": {
          "ref": "b3e2ed57-f0f0-466b-a5c8-162a492763d3",
          "length": 152,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f269b062-bbb9-428c-94ee-d3bf303dbcd3"
        },
        "item": {
          "id": "27ba4b08-f6d4-4cd1-b9f5-db9efdb0598c",
          "name": "credentials_issue:credential.@context:wrong_type"
        },
        "response": {
          "id": "5bca0231-5913-4fdb-9a16-1c060ff9941a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c6517-753a-4690-bfe4-44c079de135b",
        "cursor": {
          "ref": "5512f886-8dc7-4a2e-b3fa-29f3222d62c2",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8d5be927-2046-4bad-b811-5ee90477b7b7"
        },
        "item": {
          "id": "b93c6517-753a-4690-bfe4-44c079de135b",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "7b87a303-bb5a-4cfa-8349-65042f07b578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c6517-753a-4690-bfe4-44c079de135b",
        "cursor": {
          "ref": "5512f886-8dc7-4a2e-b3fa-29f3222d62c2",
          "length": 152,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "8d5be927-2046-4bad-b811-5ee90477b7b7"
        },
        "item": {
          "id": "b93c6517-753a-4690-bfe4-44c079de135b",
          "name": "credentials_issue:credential.@context.members:wrong_type"
        },
        "response": {
          "id": "7b87a303-bb5a-4cfa-8349-65042f07b578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0c195a-8b91-4da7-a8d8-cffbbea26550",
        "cursor": {
          "ref": "a13213ca-b07d-44fe-8fe6-e92e337dcf9a",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d0b9ba08-5c55-4f59-a897-fb679f5c40e9"
        },
        "item": {
          "id": "6d0c195a-8b91-4da7-a8d8-cffbbea26550",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "cd5756e7-f2dc-4df4-a557-c38b150f9f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0c195a-8b91-4da7-a8d8-cffbbea26550",
        "cursor": {
          "ref": "a13213ca-b07d-44fe-8fe6-e92e337dcf9a",
          "length": 152,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d0b9ba08-5c55-4f59-a897-fb679f5c40e9"
        },
        "item": {
          "id": "6d0c195a-8b91-4da7-a8d8-cffbbea26550",
          "name": "credentials_issue:credential.id:wrong_type"
        },
        "response": {
          "id": "cd5756e7-f2dc-4df4-a557-c38b150f9f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aa6476-308a-4113-b24a-dd3ca2829e0b",
        "cursor": {
          "ref": "78f7e5fa-90eb-4a66-b12e-043ed607949b",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "87332bda-de79-4390-8746-d75bcad921f6"
        },
        "item": {
          "id": "85aa6476-308a-4113-b24a-dd3ca2829e0b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a2f3f9c9-e0d3-46a5-b14b-4ad7a6da2051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85aa6476-308a-4113-b24a-dd3ca2829e0b",
        "cursor": {
          "ref": "78f7e5fa-90eb-4a66-b12e-043ed607949b",
          "length": 152,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "87332bda-de79-4390-8746-d75bcad921f6"
        },
        "item": {
          "id": "85aa6476-308a-4113-b24a-dd3ca2829e0b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a2f3f9c9-e0d3-46a5-b14b-4ad7a6da2051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f877e27-cda0-45c4-b623-167f27ce14d0",
        "cursor": {
          "ref": "ad6b9d57-dbc3-4f08-a65e-249597844ca1",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f1d738f4-6385-4009-867a-f6d11c19ee37"
        },
        "item": {
          "id": "5f877e27-cda0-45c4-b623-167f27ce14d0",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "35a6512f-d2cd-4f62-beb3-2deedefa35ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f877e27-cda0-45c4-b623-167f27ce14d0",
        "cursor": {
          "ref": "ad6b9d57-dbc3-4f08-a65e-249597844ca1",
          "length": 152,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f1d738f4-6385-4009-867a-f6d11c19ee37"
        },
        "item": {
          "id": "5f877e27-cda0-45c4-b623-167f27ce14d0",
          "name": "credentials_issue:credential.type:wrong_type"
        },
        "response": {
          "id": "35a6512f-d2cd-4f62-beb3-2deedefa35ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7035520-7af8-454c-a8ef-3c5335477776",
        "cursor": {
          "ref": "7fa675cb-0ad8-4a8b-add9-7c2bcc31ff0d",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d2caf37e-891b-4301-8acb-02503e54ce17"
        },
        "item": {
          "id": "a7035520-7af8-454c-a8ef-3c5335477776",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "38de5637-ee4f-4129-ae1a-45390b060c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7035520-7af8-454c-a8ef-3c5335477776",
        "cursor": {
          "ref": "7fa675cb-0ad8-4a8b-add9-7c2bcc31ff0d",
          "length": 152,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d2caf37e-891b-4301-8acb-02503e54ce17"
        },
        "item": {
          "id": "a7035520-7af8-454c-a8ef-3c5335477776",
          "name": "credentials_issue:credential.type.members:wrong_type"
        },
        "response": {
          "id": "38de5637-ee4f-4129-ae1a-45390b060c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49537967-2ef1-48ef-b0f7-d53d01d014f2",
        "cursor": {
          "ref": "09f92ba5-f591-431d-8eb9-9c36b9cd17cd",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9aaa2b7-66a3-4402-b164-c75cec64e5c5"
        },
        "item": {
          "id": "49537967-2ef1-48ef-b0f7-d53d01d014f2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "38ae18ae-8701-460a-a75b-a2c6c68e9be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49537967-2ef1-48ef-b0f7-d53d01d014f2",
        "cursor": {
          "ref": "09f92ba5-f591-431d-8eb9-9c36b9cd17cd",
          "length": 152,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e9aaa2b7-66a3-4402-b164-c75cec64e5c5"
        },
        "item": {
          "id": "49537967-2ef1-48ef-b0f7-d53d01d014f2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "38ae18ae-8701-460a-a75b-a2c6c68e9be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84178a1f-c456-4c2d-bbc8-30edc8a42a9e",
        "cursor": {
          "ref": "de5d2a85-db0a-464f-8aac-f8e5c8196b92",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8c6bfdb9-9f65-4dca-8e5d-211ed00a63ac"
        },
        "item": {
          "id": "84178a1f-c456-4c2d-bbc8-30edc8a42a9e",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "74c86536-6bf3-4af9-ad40-384d82c35749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84178a1f-c456-4c2d-bbc8-30edc8a42a9e",
        "cursor": {
          "ref": "de5d2a85-db0a-464f-8aac-f8e5c8196b92",
          "length": 152,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8c6bfdb9-9f65-4dca-8e5d-211ed00a63ac"
        },
        "item": {
          "id": "84178a1f-c456-4c2d-bbc8-30edc8a42a9e",
          "name": "credentials_issue:credential.issuer:wrong_type"
        },
        "response": {
          "id": "74c86536-6bf3-4af9-ad40-384d82c35749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ad1082-76ef-47e0-8b84-d1d9539cd54b",
        "cursor": {
          "ref": "c2c9ac59-cedd-4a10-8968-ce3fa2c015fe",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c257112e-1d96-4c64-9cec-ecbaef54895c"
        },
        "item": {
          "id": "25ad1082-76ef-47e0-8b84-d1d9539cd54b",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "a0a0c5f6-06c7-488a-8d19-7420670162c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ad1082-76ef-47e0-8b84-d1d9539cd54b",
        "cursor": {
          "ref": "c2c9ac59-cedd-4a10-8968-ce3fa2c015fe",
          "length": 152,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c257112e-1d96-4c64-9cec-ecbaef54895c"
        },
        "item": {
          "id": "25ad1082-76ef-47e0-8b84-d1d9539cd54b",
          "name": "credentials_issue.credential.issuer:invalid_value"
        },
        "response": {
          "id": "a0a0c5f6-06c7-488a-8d19-7420670162c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d175ab17-ef1b-4b2c-8cc0-99ea757db84b",
        "cursor": {
          "ref": "dd44cd55-9552-4889-9d13-d1939da95422",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dceb49e3-7693-4277-a02c-1e64e3e6cf17"
        },
        "item": {
          "id": "d175ab17-ef1b-4b2c-8cc0-99ea757db84b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dad2917e-9dc5-4436-9280-e625137483a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d175ab17-ef1b-4b2c-8cc0-99ea757db84b",
        "cursor": {
          "ref": "dd44cd55-9552-4889-9d13-d1939da95422",
          "length": 152,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "dceb49e3-7693-4277-a02c-1e64e3e6cf17"
        },
        "item": {
          "id": "d175ab17-ef1b-4b2c-8cc0-99ea757db84b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dad2917e-9dc5-4436-9280-e625137483a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738c6dcd-bc01-4797-99ff-8f2b23837a27",
        "cursor": {
          "ref": "58468eda-6d5b-436e-8c9d-7ca98e0b9269",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "33600494-bd20-4040-9a16-07e4b1821795"
        },
        "item": {
          "id": "738c6dcd-bc01-4797-99ff-8f2b23837a27",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "211be5e5-d6db-435a-ba65-61cebf977c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738c6dcd-bc01-4797-99ff-8f2b23837a27",
        "cursor": {
          "ref": "58468eda-6d5b-436e-8c9d-7ca98e0b9269",
          "length": 152,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "33600494-bd20-4040-9a16-07e4b1821795"
        },
        "item": {
          "id": "738c6dcd-bc01-4797-99ff-8f2b23837a27",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "211be5e5-d6db-435a-ba65-61cebf977c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a638a3-8715-4c31-87a3-61d6c02db1be",
        "cursor": {
          "ref": "9f039252-4e6a-4930-9f63-121a62b3ac2f",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59c3ec33-0e25-44ea-b655-09a22b695292"
        },
        "item": {
          "id": "81a638a3-8715-4c31-87a3-61d6c02db1be",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "e7892e1f-b5f4-46fb-8a79-b27ab331edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a638a3-8715-4c31-87a3-61d6c02db1be",
        "cursor": {
          "ref": "9f039252-4e6a-4930-9f63-121a62b3ac2f",
          "length": 152,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59c3ec33-0e25-44ea-b655-09a22b695292"
        },
        "item": {
          "id": "81a638a3-8715-4c31-87a3-61d6c02db1be",
          "name": "credentials_issue:credential.issuer.id:wrong_type"
        },
        "response": {
          "id": "e7892e1f-b5f4-46fb-8a79-b27ab331edcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4578c7-354d-4b1d-b1bb-f25922ee0231",
        "cursor": {
          "ref": "59cb8a07-3bfe-4f72-a82d-93ba7ff1bd7e",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb1d23e9-62de-4316-ab4d-f23d490fa9cc"
        },
        "item": {
          "id": "df4578c7-354d-4b1d-b1bb-f25922ee0231",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "073668b0-78ef-4b37-aae3-24fd5d0e76db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4578c7-354d-4b1d-b1bb-f25922ee0231",
        "cursor": {
          "ref": "59cb8a07-3bfe-4f72-a82d-93ba7ff1bd7e",
          "length": 152,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb1d23e9-62de-4316-ab4d-f23d490fa9cc"
        },
        "item": {
          "id": "df4578c7-354d-4b1d-b1bb-f25922ee0231",
          "name": "credentials_issue.credential.issuer.id:invalid_value"
        },
        "response": {
          "id": "073668b0-78ef-4b37-aae3-24fd5d0e76db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54589cc-c268-4ab7-9e12-9118d29ed4fc",
        "cursor": {
          "ref": "7dfc9818-942f-48a3-8aff-6f55fe0d6764",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "22fc139d-ab42-4aef-b79b-ac44631618c0"
        },
        "item": {
          "id": "a54589cc-c268-4ab7-9e12-9118d29ed4fc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "46b8227d-9ee8-493c-ba56-4d5651974dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54589cc-c268-4ab7-9e12-9118d29ed4fc",
        "cursor": {
          "ref": "7dfc9818-942f-48a3-8aff-6f55fe0d6764",
          "length": 152,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "22fc139d-ab42-4aef-b79b-ac44631618c0"
        },
        "item": {
          "id": "a54589cc-c268-4ab7-9e12-9118d29ed4fc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "46b8227d-9ee8-493c-ba56-4d5651974dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e179a1c-c24a-432c-a146-699b3aaf9756",
        "cursor": {
          "ref": "7078e1ec-82b3-4f10-bcbe-cbd5b3e7e8e7",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aae28714-9d57-4f38-a0be-44c37c7d1407"
        },
        "item": {
          "id": "5e179a1c-c24a-432c-a146-699b3aaf9756",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1ae28ceb-c47f-4afe-99f1-870008d6a223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e179a1c-c24a-432c-a146-699b3aaf9756",
        "cursor": {
          "ref": "7078e1ec-82b3-4f10-bcbe-cbd5b3e7e8e7",
          "length": 152,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "aae28714-9d57-4f38-a0be-44c37c7d1407"
        },
        "item": {
          "id": "5e179a1c-c24a-432c-a146-699b3aaf9756",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1ae28ceb-c47f-4afe-99f1-870008d6a223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef027e9-f323-4309-ae28-88d49959d488",
        "cursor": {
          "ref": "8d8dc373-6427-4d8e-a2cc-6c0a63f89dad",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f3aa7412-0648-4d67-8cff-bb55e113ab59"
        },
        "item": {
          "id": "0ef027e9-f323-4309-ae28-88d49959d488",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "9bf865fd-7024-43f7-a443-12bd426f7c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef027e9-f323-4309-ae28-88d49959d488",
        "cursor": {
          "ref": "8d8dc373-6427-4d8e-a2cc-6c0a63f89dad",
          "length": 152,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f3aa7412-0648-4d67-8cff-bb55e113ab59"
        },
        "item": {
          "id": "0ef027e9-f323-4309-ae28-88d49959d488",
          "name": "credentials_issue:credential.issuanceDate:wrong_type"
        },
        "response": {
          "id": "9bf865fd-7024-43f7-a443-12bd426f7c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943006ff-3410-4cdf-90da-47881ddca95c",
        "cursor": {
          "ref": "6d0a5735-d046-4ff8-8a82-df76c8309da0",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c238be57-8be7-4142-a058-928f17872384"
        },
        "item": {
          "id": "943006ff-3410-4cdf-90da-47881ddca95c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e7abb961-2001-44e2-922b-3b625e7ba483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943006ff-3410-4cdf-90da-47881ddca95c",
        "cursor": {
          "ref": "6d0a5735-d046-4ff8-8a82-df76c8309da0",
          "length": 152,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c238be57-8be7-4142-a058-928f17872384"
        },
        "item": {
          "id": "943006ff-3410-4cdf-90da-47881ddca95c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e7abb961-2001-44e2-922b-3b625e7ba483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35222423-e8c5-4e50-830a-90ef881051ba",
        "cursor": {
          "ref": "3a35c3bd-08a6-474c-a538-4ab77d71de45",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "17282cec-a9d4-45c8-b64c-ea193236a011"
        },
        "item": {
          "id": "35222423-e8c5-4e50-830a-90ef881051ba",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "68f3b47d-4f1e-4e11-88eb-10b017c68f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35222423-e8c5-4e50-830a-90ef881051ba",
        "cursor": {
          "ref": "3a35c3bd-08a6-474c-a538-4ab77d71de45",
          "length": 152,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "17282cec-a9d4-45c8-b64c-ea193236a011"
        },
        "item": {
          "id": "35222423-e8c5-4e50-830a-90ef881051ba",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "68f3b47d-4f1e-4e11-88eb-10b017c68f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60bca22-41e3-4406-95e2-a668593e17b2",
        "cursor": {
          "ref": "7ce032f3-b97a-46fb-a7db-02a7cf22c2b0",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "144ac961-faa8-4d5e-b7c1-d2bc7a011975"
        },
        "item": {
          "id": "d60bca22-41e3-4406-95e2-a668593e17b2",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "01cee8fa-2891-4431-abc8-1d731c98fe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60bca22-41e3-4406-95e2-a668593e17b2",
        "cursor": {
          "ref": "7ce032f3-b97a-46fb-a7db-02a7cf22c2b0",
          "length": 152,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "144ac961-faa8-4d5e-b7c1-d2bc7a011975"
        },
        "item": {
          "id": "d60bca22-41e3-4406-95e2-a668593e17b2",
          "name": "credentials_issue:credential.credentialSubject:wrong_type"
        },
        "response": {
          "id": "01cee8fa-2891-4431-abc8-1d731c98fe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683c608c-fa1e-48ad-a591-d3df0234a700",
        "cursor": {
          "ref": "77a9c308-3bc4-4f94-8a3a-eda59ae73d15",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e118bda9-9a6b-475c-ad62-a2874b9c7e3c"
        },
        "item": {
          "id": "683c608c-fa1e-48ad-a591-d3df0234a700",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "8404fdaf-efad-41c8-bf47-e99c70cc2a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683c608c-fa1e-48ad-a591-d3df0234a700",
        "cursor": {
          "ref": "77a9c308-3bc4-4f94-8a3a-eda59ae73d15",
          "length": 152,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e118bda9-9a6b-475c-ad62-a2874b9c7e3c"
        },
        "item": {
          "id": "683c608c-fa1e-48ad-a591-d3df0234a700",
          "name": "credentials_issue:credential.credentialSubject.id:wrong_type"
        },
        "response": {
          "id": "8404fdaf-efad-41c8-bf47-e99c70cc2a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a7d980-d774-4047-af7a-d17cee4edcbc",
        "cursor": {
          "ref": "39af0b9b-4867-40e4-8957-9e81683ca212",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24302d68-9117-47ec-a522-057668d9048e"
        },
        "item": {
          "id": "68a7d980-d774-4047-af7a-d17cee4edcbc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c170e791-1c4a-4ec5-8aa5-e9d45a66333f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a7d980-d774-4047-af7a-d17cee4edcbc",
        "cursor": {
          "ref": "39af0b9b-4867-40e4-8957-9e81683ca212",
          "length": 152,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24302d68-9117-47ec-a522-057668d9048e"
        },
        "item": {
          "id": "68a7d980-d774-4047-af7a-d17cee4edcbc",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c170e791-1c4a-4ec5-8aa5-e9d45a66333f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8d19e5-7bdd-4aad-944c-8ff41829c28f",
        "cursor": {
          "ref": "e449c338-4c5a-4db4-80af-d635a04dc61e",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f89b9678-c678-44ba-aa4c-777fb30370f8"
        },
        "item": {
          "id": "8a8d19e5-7bdd-4aad-944c-8ff41829c28f",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "46f8f9da-2de2-4dc4-9691-4ca1b77be432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8d19e5-7bdd-4aad-944c-8ff41829c28f",
        "cursor": {
          "ref": "e449c338-4c5a-4db4-80af-d635a04dc61e",
          "length": 152,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f89b9678-c678-44ba-aa4c-777fb30370f8"
        },
        "item": {
          "id": "8a8d19e5-7bdd-4aad-944c-8ff41829c28f",
          "name": "credentials_issue:options:wrong_type"
        },
        "response": {
          "id": "46f8f9da-2de2-4dc4-9691-4ca1b77be432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5994aa94-46c9-4d1b-b561-e33d3a7fc4dd",
        "cursor": {
          "ref": "79b45531-920d-46a6-b22d-c24e324985e8",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "53eb4af2-61e3-46c6-b664-6b3858fa2edc"
        },
        "item": {
          "id": "5994aa94-46c9-4d1b-b561-e33d3a7fc4dd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7c117b0e-557e-4f3a-91ed-cbd2eb170de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5994aa94-46c9-4d1b-b561-e33d3a7fc4dd",
        "cursor": {
          "ref": "79b45531-920d-46a6-b22d-c24e324985e8",
          "length": 152,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "53eb4af2-61e3-46c6-b664-6b3858fa2edc"
        },
        "item": {
          "id": "5994aa94-46c9-4d1b-b561-e33d3a7fc4dd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7c117b0e-557e-4f3a-91ed-cbd2eb170de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da6f828-4c46-4fb8-bb39-30494fed2e36",
        "cursor": {
          "ref": "ef8f8b61-4c92-4927-aeb2-52924563de74",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4b74812c-8b05-4f0f-8c31-751c41ef6fcc"
        },
        "item": {
          "id": "2da6f828-4c46-4fb8-bb39-30494fed2e36",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "21094fe6-971b-4259-aabf-960c4aefe118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da6f828-4c46-4fb8-bb39-30494fed2e36",
        "cursor": {
          "ref": "ef8f8b61-4c92-4927-aeb2-52924563de74",
          "length": 152,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4b74812c-8b05-4f0f-8c31-751c41ef6fcc"
        },
        "item": {
          "id": "2da6f828-4c46-4fb8-bb39-30494fed2e36",
          "name": "credentials_issue:options.type:wrong_type"
        },
        "response": {
          "id": "21094fe6-971b-4259-aabf-960c4aefe118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb69fa9d-70ee-4293-b384-9b0cb89fe77c",
        "cursor": {
          "ref": "a05243a1-2af0-43fa-90fd-06e316fce507",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "787f98c1-970b-4674-8a9d-8d204cdec547"
        },
        "item": {
          "id": "bb69fa9d-70ee-4293-b384-9b0cb89fe77c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0f66b5d5-17ce-45c9-aabe-451592d29ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb69fa9d-70ee-4293-b384-9b0cb89fe77c",
        "cursor": {
          "ref": "a05243a1-2af0-43fa-90fd-06e316fce507",
          "length": 152,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "787f98c1-970b-4674-8a9d-8d204cdec547"
        },
        "item": {
          "id": "bb69fa9d-70ee-4293-b384-9b0cb89fe77c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0f66b5d5-17ce-45c9-aabe-451592d29ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10e5efe-8b02-48f8-8191-1091d1ebe115",
        "cursor": {
          "ref": "29c98afd-463a-4a60-9731-8e961622e528",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46da0f6c-6980-42f5-8ebf-4e4afd7d3549"
        },
        "item": {
          "id": "e10e5efe-8b02-48f8-8191-1091d1ebe115",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "bb7c3c5f-296e-41b4-ae46-223dbaef3490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10e5efe-8b02-48f8-8191-1091d1ebe115",
        "cursor": {
          "ref": "29c98afd-463a-4a60-9731-8e961622e528",
          "length": 152,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "46da0f6c-6980-42f5-8ebf-4e4afd7d3549"
        },
        "item": {
          "id": "e10e5efe-8b02-48f8-8191-1091d1ebe115",
          "name": "credentials_issue:options.created:wrong_type"
        },
        "response": {
          "id": "bb7c3c5f-296e-41b4-ae46-223dbaef3490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 347
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a26c00-ef36-42ac-8636-92fc744251d4",
        "cursor": {
          "ref": "c56e6557-9d6b-4334-8834-487bef26dee1",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8e0b9db9-53bb-463d-b9e1-88c801955376"
        },
        "item": {
          "id": "37a26c00-ef36-42ac-8636-92fc744251d4",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "9a849ecd-2ba9-4b7f-a168-943046d77aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a26c00-ef36-42ac-8636-92fc744251d4",
        "cursor": {
          "ref": "c56e6557-9d6b-4334-8834-487bef26dee1",
          "length": 152,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8e0b9db9-53bb-463d-b9e1-88c801955376"
        },
        "item": {
          "id": "37a26c00-ef36-42ac-8636-92fc744251d4",
          "name": "credentials_issue:options.credentialStatus:wrong_type"
        },
        "response": {
          "id": "9a849ecd-2ba9-4b7f-a168-943046d77aeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f73edf8-aded-4dd8-a118-8ae83d897974",
        "cursor": {
          "ref": "c7f26f06-5517-4916-a324-0913827d2832",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "83dee120-9f6c-47ac-baaf-5e43eaf966e4"
        },
        "item": {
          "id": "6f73edf8-aded-4dd8-a118-8ae83d897974",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "eee28637-8d6c-425b-9cde-c2b4f0969d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f73edf8-aded-4dd8-a118-8ae83d897974",
        "cursor": {
          "ref": "c7f26f06-5517-4916-a324-0913827d2832",
          "length": 152,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "83dee120-9f6c-47ac-baaf-5e43eaf966e4"
        },
        "item": {
          "id": "6f73edf8-aded-4dd8-a118-8ae83d897974",
          "name": "credentials_issue:options.credentialStatus.type:wrong_type"
        },
        "response": {
          "id": "eee28637-8d6c-425b-9cde-c2b4f0969d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1bc5de-9aaf-45ab-ab0f-78109c5ddeb4",
        "cursor": {
          "ref": "816f99f8-6257-4b7a-8e88-3098f4ad3795",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "39e41a53-1b0b-4908-aa99-c04b67973092"
        },
        "item": {
          "id": "fc1bc5de-9aaf-45ab-ab0f-78109c5ddeb4",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "045d6a05-d24e-4e80-8e1a-eb44ad3ffdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1bc5de-9aaf-45ab-ab0f-78109c5ddeb4",
        "cursor": {
          "ref": "816f99f8-6257-4b7a-8e88-3098f4ad3795",
          "length": 152,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "39e41a53-1b0b-4908-aa99-c04b67973092"
        },
        "item": {
          "id": "fc1bc5de-9aaf-45ab-ab0f-78109c5ddeb4",
          "name": "credentials_issue:options.credentialStatus.type:invalid_value"
        },
        "response": {
          "id": "045d6a05-d24e-4e80-8e1a-eb44ad3ffdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6906a44-e6ab-4535-b957-2ac16938edcc",
        "cursor": {
          "ref": "5a6ae6cf-4977-43e0-b9d8-07251deb827d",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "389860c3-2f23-4b81-bf27-0b17cbe321fa"
        },
        "item": {
          "id": "e6906a44-e6ab-4535-b957-2ac16938edcc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a2feb4f-1c14-48e7-b909-65885e1a30b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6906a44-e6ab-4535-b957-2ac16938edcc",
        "cursor": {
          "ref": "5a6ae6cf-4977-43e0-b9d8-07251deb827d",
          "length": 152,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "389860c3-2f23-4b81-bf27-0b17cbe321fa"
        },
        "item": {
          "id": "e6906a44-e6ab-4535-b957-2ac16938edcc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a2feb4f-1c14-48e7-b909-65885e1a30b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532774a2-db94-4329-abd9-7c0aea280d5c",
        "cursor": {
          "ref": "62a82e7e-af06-4120-8fed-ba86bec327ce",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "02e0cb61-bbe0-46e2-90b5-b086d6b5201e"
        },
        "item": {
          "id": "532774a2-db94-4329-abd9-7c0aea280d5c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7b844701-b188-4bbf-ad24-0bd996e42278",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "532774a2-db94-4329-abd9-7c0aea280d5c",
        "cursor": {
          "ref": "62a82e7e-af06-4120-8fed-ba86bec327ce",
          "length": 152,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "02e0cb61-bbe0-46e2-90b5-b086d6b5201e"
        },
        "item": {
          "id": "532774a2-db94-4329-abd9-7c0aea280d5c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "7b844701-b188-4bbf-ad24-0bd996e42278",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 34,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dd4bbb-6ff4-4f64-802f-5fc95781d45f",
        "cursor": {
          "ref": "99249185-c025-4d19-8ad1-6e22f3c1eacd",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "21851776-1184-46a5-8bdf-f233e6f99e17"
        },
        "item": {
          "id": "c4dd4bbb-6ff4-4f64-802f-5fc95781d45f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8c1121fe-7de0-4aab-9892-06545584ce4e",
          "status": "Created",
          "code": 201,
          "responseTime": 2353,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dd4bbb-6ff4-4f64-802f-5fc95781d45f",
        "cursor": {
          "ref": "99249185-c025-4d19-8ad1-6e22f3c1eacd",
          "length": 152,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "21851776-1184-46a5-8bdf-f233e6f99e17"
        },
        "item": {
          "id": "c4dd4bbb-6ff4-4f64-802f-5fc95781d45f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8c1121fe-7de0-4aab-9892-06545584ce4e",
          "status": "Created",
          "code": 201,
          "responseTime": 2353,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b09ba6-a33d-4296-91cb-0c0865b53ec7",
        "cursor": {
          "ref": "c3f7a9af-c322-4c7f-9abc-95ea329556ac",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f46a39d0-7159-4e93-81bb-3a8443bbd1c2"
        },
        "item": {
          "id": "b8b09ba6-a33d-4296-91cb-0c0865b53ec7",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "d26f38f9-9bb3-4a10-9804-02fbe2dcffd6",
          "status": "Created",
          "code": 201,
          "responseTime": 321,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b09ba6-a33d-4296-91cb-0c0865b53ec7",
        "cursor": {
          "ref": "c3f7a9af-c322-4c7f-9abc-95ea329556ac",
          "length": 152,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f46a39d0-7159-4e93-81bb-3a8443bbd1c2"
        },
        "item": {
          "id": "b8b09ba6-a33d-4296-91cb-0c0865b53ec7",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "d26f38f9-9bb3-4a10-9804-02fbe2dcffd6",
          "status": "Created",
          "code": 201,
          "responseTime": 321,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f052e433-70d1-4f7a-870f-b59ad92c8c4f",
        "cursor": {
          "ref": "6320c22e-6cc0-4797-b122-517cae9de28c",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f2e99297-7f4b-414d-ac29-83d20d612faa"
        },
        "item": {
          "id": "f052e433-70d1-4f7a-870f-b59ad92c8c4f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7da4805f-1779-42a6-ad09-9993bc9a4676",
          "status": "Created",
          "code": 201,
          "responseTime": 362,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f052e433-70d1-4f7a-870f-b59ad92c8c4f",
        "cursor": {
          "ref": "6320c22e-6cc0-4797-b122-517cae9de28c",
          "length": 152,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f2e99297-7f4b-414d-ac29-83d20d612faa"
        },
        "item": {
          "id": "f052e433-70d1-4f7a-870f-b59ad92c8c4f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7da4805f-1779-42a6-ad09-9993bc9a4676",
          "status": "Created",
          "code": 201,
          "responseTime": 362,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ceb406-7c1d-45f0-ae06-d7cbd14476b6",
        "cursor": {
          "ref": "2d01e4a7-96f8-4b7e-ae7b-1cd676bf9732",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cb791b83-b8b8-4363-a766-bd96f7dbf147"
        },
        "item": {
          "id": "19ceb406-7c1d-45f0-ae06-d7cbd14476b6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26794d1a-a268-4d93-9c57-a4b58dadec81",
          "status": "Created",
          "code": 201,
          "responseTime": 297,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ceb406-7c1d-45f0-ae06-d7cbd14476b6",
        "cursor": {
          "ref": "2d01e4a7-96f8-4b7e-ae7b-1cd676bf9732",
          "length": 152,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cb791b83-b8b8-4363-a766-bd96f7dbf147"
        },
        "item": {
          "id": "19ceb406-7c1d-45f0-ae06-d7cbd14476b6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "26794d1a-a268-4d93-9c57-a4b58dadec81",
          "status": "Created",
          "code": 201,
          "responseTime": 297,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aa975b-cc3f-4509-9265-66231f6d3eb4",
        "cursor": {
          "ref": "518d9113-14a4-44f6-a226-5170e9bbaa7e",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38163b10-f1ee-4bc2-a1fc-f46525b97095"
        },
        "item": {
          "id": "d9aa975b-cc3f-4509-9265-66231f6d3eb4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "db7cbfdc-ea8c-484d-a2a0-52e13c12f0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "d9aa975b-cc3f-4509-9265-66231f6d3eb4",
        "cursor": {
          "ref": "518d9113-14a4-44f6-a226-5170e9bbaa7e",
          "length": 152,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38163b10-f1ee-4bc2-a1fc-f46525b97095"
        },
        "item": {
          "id": "d9aa975b-cc3f-4509-9265-66231f6d3eb4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "db7cbfdc-ea8c-484d-a2a0-52e13c12f0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 345
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:45)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:45)"
            }
          }
        ]
      },
      {
        "id": "fbd75927-4584-4060-8b79-04154fb70b78",
        "cursor": {
          "ref": "37c40e45-dd46-410f-91bb-58de6318a973",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6143f5e4-7895-4750-ae0a-5c73e37f1804"
        },
        "item": {
          "id": "fbd75927-4584-4060-8b79-04154fb70b78",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "76ca50fb-7ddf-4e64-8d71-b7a1ecb1a2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "fbd75927-4584-4060-8b79-04154fb70b78",
        "cursor": {
          "ref": "37c40e45-dd46-410f-91bb-58de6318a973",
          "length": 152,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6143f5e4-7895-4750-ae0a-5c73e37f1804"
        },
        "item": {
          "id": "fbd75927-4584-4060-8b79-04154fb70b78",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "76ca50fb-7ddf-4e64-8d71-b7a1ecb1a2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:46)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property '@context', data should have required property 'type', data should have required property 'issuer', data should have required property 'issuanceDate', data should have required property 'credentialSubject', data should have required property 'proof', data should be string, data should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:46)"
            }
          }
        ]
      },
      {
        "id": "7c47afe8-e7e3-4961-a35b-be25159ea5f4",
        "cursor": {
          "ref": "3c7bf445-c71c-45f1-b271-f8d4a01a8079",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1bfeff26-93f3-4402-8313-e052f2c46894"
        },
        "item": {
          "id": "7c47afe8-e7e3-4961-a35b-be25159ea5f4",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "4a8c6271-74bd-4c8a-826a-eeae4d4f56e5",
          "status": "Created",
          "code": 201,
          "responseTime": 310,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c47afe8-e7e3-4961-a35b-be25159ea5f4",
        "cursor": {
          "ref": "3c7bf445-c71c-45f1-b271-f8d4a01a8079",
          "length": 152,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1bfeff26-93f3-4402-8313-e052f2c46894"
        },
        "item": {
          "id": "7c47afe8-e7e3-4961-a35b-be25159ea5f4",
          "name": "credentials_issue:options:opt.credentialStatus.type"
        },
        "response": {
          "id": "4a8c6271-74bd-4c8a-826a-eeae4d4f56e5",
          "status": "Created",
          "code": 201,
          "responseTime": 310,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b831f78-c115-48b1-aeb5-a2098abf86cd",
        "cursor": {
          "ref": "4f85806d-b0b2-45a4-b7d6-30ad12ce60dc",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ecf50fbb-3905-4a40-b22d-fbb9897d593c"
        },
        "item": {
          "id": "0b831f78-c115-48b1-aeb5-a2098abf86cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b4efbee1-4e73-489b-b3a4-8ccabb7e7a09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b831f78-c115-48b1-aeb5-a2098abf86cd",
        "cursor": {
          "ref": "4f85806d-b0b2-45a4-b7d6-30ad12ce60dc",
          "length": 152,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ecf50fbb-3905-4a40-b22d-fbb9897d593c"
        },
        "item": {
          "id": "0b831f78-c115-48b1-aeb5-a2098abf86cd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b4efbee1-4e73-489b-b3a4-8ccabb7e7a09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df564f8e-c347-4792-bfc2-9a74ac79a469",
        "cursor": {
          "ref": "7ab2c188-aba9-4ecb-800c-b9addfa2aeeb",
          "length": 152,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5087d12f-869a-4547-a014-67940ca7755b"
        },
        "item": {
          "id": "df564f8e-c347-4792-bfc2-9a74ac79a469",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "065a1557-66e2-43e1-a7e6-bc77ef0cb62e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1afa8d-a5e0-41db-a8dc-7b2dd5de1da0",
        "cursor": {
          "ref": "c0bbc5a7-0738-4a14-a838-f89f28a407cb",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee3d71c8-8f20-476f-8687-32bda9e27c0b"
        },
        "item": {
          "id": "2b1afa8d-a5e0-41db-a8dc-7b2dd5de1da0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "941bc0ce-a186-4751-8364-b1200a9b72d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1afa8d-a5e0-41db-a8dc-7b2dd5de1da0",
        "cursor": {
          "ref": "c0bbc5a7-0738-4a14-a838-f89f28a407cb",
          "length": 152,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ee3d71c8-8f20-476f-8687-32bda9e27c0b"
        },
        "item": {
          "id": "2b1afa8d-a5e0-41db-a8dc-7b2dd5de1da0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "941bc0ce-a186-4751-8364-b1200a9b72d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771e90fd-fbf8-46fc-a60a-4ac6e0fdc0a1",
        "cursor": {
          "ref": "8f4cc241-53ce-4a46-b780-88e4c0ce0ea8",
          "length": 152,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "47894363-eabe-4718-96ad-aac03acdfbae"
        },
        "item": {
          "id": "771e90fd-fbf8-46fc-a60a-4ac6e0fdc0a1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8ddcb77c-f1d5-4571-b67f-ee4317d742f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbe4565-b3be-4b9e-b9a3-727029d004b4",
        "cursor": {
          "ref": "82cab6a9-2e22-4784-8a9b-a80e2eaec050",
          "length": 152,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eb46eaa4-d450-4c56-b86b-022d3801691d"
        },
        "item": {
          "id": "8cbe4565-b3be-4b9e-b9a3-727029d004b4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "31c9b32a-ed17-451a-b1be-d52be959646e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7986b85e-8a94-4b15-871e-5e401d4c8fce",
        "cursor": {
          "ref": "fa748166-6b43-4813-a336-5c79b0643441",
          "length": 152,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "abdd8406-8c4c-406f-934f-d6424ee5bd8f"
        },
        "item": {
          "id": "7986b85e-8a94-4b15-871e-5e401d4c8fce",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "91848ae4-8e9c-4d5f-99c9-883b1423dc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2188ef68-236e-4502-aa23-f264939b0b91",
        "cursor": {
          "ref": "fe6806a0-f6ac-4275-8589-595944547189",
          "length": 152,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2e78146f-2c59-4d73-bfda-87b7858fa298"
        },
        "item": {
          "id": "2188ef68-236e-4502-aa23-f264939b0b91",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4416e166-5e6b-4992-b12b-c2de67f507d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495df1e5-e563-44ba-9ac2-77e1b018f525",
        "cursor": {
          "ref": "0da2c5fb-384d-491e-b56c-164a2de92806",
          "length": 152,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2947c18a-fe9a-4706-98b5-19f21f6bb0de"
        },
        "item": {
          "id": "495df1e5-e563-44ba-9ac2-77e1b018f525",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d94a71bc-be04-4205-b851-a4a9c2486f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6466266b-e625-4e41-91d7-d2e44fc7d793",
        "cursor": {
          "ref": "efb9bef5-6edf-42db-83d1-0f0ed155fe39",
          "length": 152,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6e72cdbe-4401-4ad2-94d4-93e0b6a6d7cf"
        },
        "item": {
          "id": "6466266b-e625-4e41-91d7-d2e44fc7d793",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "15ff4898-e515-48d2-8368-f07700349622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7545d9e-1588-4e58-b6fa-ccf840e2551d",
        "cursor": {
          "ref": "91618e40-5fe2-44cc-9cb8-a899e302e03c",
          "length": 152,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6b59918c-54ef-4ea4-8620-045a8bd74a48"
        },
        "item": {
          "id": "a7545d9e-1588-4e58-b6fa-ccf840e2551d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "48a04030-cf70-4109-9c00-5d14267547df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8269448f-cf21-4a20-9f6f-ba4df5cdc4cc",
        "cursor": {
          "ref": "3e269780-13ff-460f-9151-ed3588fd4860",
          "length": 152,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6fe0a2b1-9a59-494d-8dce-295c13e2cb6b"
        },
        "item": {
          "id": "8269448f-cf21-4a20-9f6f-ba4df5cdc4cc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "777e66bd-37ea-45e7-8dfd-b8eeba197905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f79224b-999c-4bd1-9ea6-8dbb56b5989a",
        "cursor": {
          "ref": "2e832dc8-0eb1-4374-98d5-7878828c16da",
          "length": 152,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b091b041-224f-4fcb-abe2-4d18bcf3b836"
        },
        "item": {
          "id": "7f79224b-999c-4bd1-9ea6-8dbb56b5989a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c4145fc3-5071-4329-9ebe-7ccf514f3576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02905a3-85ff-43da-8249-502b6df3459f",
        "cursor": {
          "ref": "ccff5b61-bc8f-40fc-97d7-32574e7d96d2",
          "length": 152,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0f56eae5-9096-4f73-b0e8-a3cdb6918403"
        },
        "item": {
          "id": "c02905a3-85ff-43da-8249-502b6df3459f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "941acb41-78b8-43d5-b323-6458106774ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dcdf068-3aa2-4131-a556-967e775db794",
        "cursor": {
          "ref": "37804e04-fb8f-41cf-a4d9-f6ca3051ac90",
          "length": 152,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b97942a3-13fd-4066-a9cd-7c79172b601c"
        },
        "item": {
          "id": "5dcdf068-3aa2-4131-a556-967e775db794",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8a3a9037-f00c-4308-bcfd-69d6b3ae96b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4384458a-c99d-4128-b2a1-50c605c5616a",
        "cursor": {
          "ref": "af2d57b4-7691-4982-b8cf-f99d116936db",
          "length": 152,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "013e84d9-11a5-4d03-a2fc-b5348bc19905"
        },
        "item": {
          "id": "4384458a-c99d-4128-b2a1-50c605c5616a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7f9b5858-a0fd-4110-94e2-502af95de91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7a902f-c349-4738-96e1-e543dc4b18fd",
        "cursor": {
          "ref": "32fc9ac0-087f-427a-a981-c1843905019b",
          "length": 152,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "cb036b1c-452a-4483-9c9a-0b7b1eeb44cc"
        },
        "item": {
          "id": "aa7a902f-c349-4738-96e1-e543dc4b18fd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a97a41c-d421-4b9b-aafc-0d19b3438b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a06e11-e16f-48f9-8529-39c3ee65fa99",
        "cursor": {
          "ref": "906afa57-ae89-473d-b2e6-cce58b09c743",
          "length": 152,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6abe82f1-3f3a-42cb-96bc-86fbf5cc88eb"
        },
        "item": {
          "id": "e9a06e11-e16f-48f9-8529-39c3ee65fa99",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6d966026-be76-4200-a618-658d0ae936c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17685fcf-9206-4308-b801-1993793889e9",
        "cursor": {
          "ref": "b42724ae-8dc5-40ce-9284-30f659d97d20",
          "length": 152,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "aa5f5c54-bb1e-4895-a0e3-0a5ab96c8ca4"
        },
        "item": {
          "id": "17685fcf-9206-4308-b801-1993793889e9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "75461a2b-dbf9-4546-bbea-7afe11ccba5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccda113-5e0c-4ac9-be20-455a485a3644",
        "cursor": {
          "ref": "99a5cfa3-2f5d-4bd3-9588-f3c5454053c7",
          "length": 152,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "da03db7c-5276-46df-9f2f-1b30b2619e8d"
        },
        "item": {
          "id": "eccda113-5e0c-4ac9-be20-455a485a3644",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "596b511f-1cd1-42df-8d87-cd247e708768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd8b2fe-6b98-418a-a12f-f03154adccf7",
        "cursor": {
          "ref": "624d8dda-6839-4205-800a-a51760794273",
          "length": 152,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "99728b47-9b38-41dd-87f3-6aa7688ff156"
        },
        "item": {
          "id": "2bd8b2fe-6b98-418a-a12f-f03154adccf7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fbf2770a-0920-4536-89b7-fb803f476c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fb8319-bd39-47c6-9221-d3b4e5c53ce1",
        "cursor": {
          "ref": "76075dda-a679-4713-8101-b85ffe869383",
          "length": 152,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e71e93a6-3651-4d0a-bf7a-1f6db4e5dbba"
        },
        "item": {
          "id": "e3fb8319-bd39-47c6-9221-d3b4e5c53ce1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5c3fd592-899a-436e-b70b-83417f24e03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71844db6-cd38-4b4a-b97d-8e5d70a469de",
        "cursor": {
          "ref": "3fa0e1db-a969-4a9a-8974-78327c092004",
          "length": 152,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4932b4f9-f319-490f-a695-18511a2016d4"
        },
        "item": {
          "id": "71844db6-cd38-4b4a-b97d-8e5d70a469de",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b7508d9d-94a7-4734-b111-c5c174656f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cc9aef-7941-493a-8ecb-86b0759fd1f8",
        "cursor": {
          "ref": "1e4d812f-e045-4ba7-a2e1-027ea9f7ca64",
          "length": 152,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8958a95a-b3e8-476f-9a72-2c4f0900f0a4"
        },
        "item": {
          "id": "56cc9aef-7941-493a-8ecb-86b0759fd1f8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "de9d6e59-622d-4a58-8c23-dd9dde2ca2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 194,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07897e61-02a3-4745-99ec-a20a42b4d20d",
        "cursor": {
          "ref": "718863ae-30e7-4fb5-aa68-64457ef9882d",
          "length": 152,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5da26b90-9edf-4555-b024-62f982a8df01"
        },
        "item": {
          "id": "07897e61-02a3-4745-99ec-a20a42b4d20d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ca85a927-edb1-4af9-b38c-b1b7261302f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d455bcc1-a30c-462d-a5d3-b91586c6e4cd",
        "cursor": {
          "ref": "266c1104-aac2-4463-b70e-6e5304bc4716",
          "length": 152,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "46550b41-77d4-4d3d-8085-5d8e49056a62"
        },
        "item": {
          "id": "d455bcc1-a30c-462d-a5d3-b91586c6e4cd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a9db539-7437-41a5-a868-927110c9ad80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9797184-27bd-4a89-b8cc-363131fc3709",
        "cursor": {
          "ref": "4bd6d1a4-1665-4e9d-b9a5-a89225af79e2",
          "length": 152,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f8448dc7-8caa-40ad-9081-508036ba2b19"
        },
        "item": {
          "id": "b9797184-27bd-4a89-b8cc-363131fc3709",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "97bb8d41-566b-4996-a5a5-f23730359fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e09bedd-9e4f-42a3-b028-3bed77017ecb",
        "cursor": {
          "ref": "63b6e9f7-7494-4d24-a62b-fed5a7ed1180",
          "length": 152,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3fd52b1d-4028-481e-9d8f-e0eac3531961"
        },
        "item": {
          "id": "8e09bedd-9e4f-42a3-b028-3bed77017ecb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a2e331a-857c-4104-86e4-4246693d5835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331564ae-7cff-49cc-aa44-74dad9e2a195",
        "cursor": {
          "ref": "89fc81ff-4d10-47c6-9b4a-c6a6507d74f9",
          "length": 152,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "68e4e2c9-a02a-40ae-99d8-022b4285fd3a"
        },
        "item": {
          "id": "331564ae-7cff-49cc-aa44-74dad9e2a195",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f027df68-862a-4659-8c12-9a476ce5378e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9480851f-7430-432c-aa1d-d4b07af97afb",
        "cursor": {
          "ref": "cba02554-7c7b-4804-9ad4-8ef0bc473c06",
          "length": 152,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9f7f15ec-e02e-4361-912c-b403062c7a9d"
        },
        "item": {
          "id": "9480851f-7430-432c-aa1d-d4b07af97afb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "da363e33-f7df-4f0d-86f3-ceefdf85ff7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03cc92a-900c-4ac8-911c-a0d7e67df7d0",
        "cursor": {
          "ref": "23632140-bfaf-4ce1-9d96-ee97544bef3e",
          "length": 152,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1a93ec5a-0546-4b67-ae62-1e922bfd162d"
        },
        "item": {
          "id": "e03cc92a-900c-4ac8-911c-a0d7e67df7d0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "02696bb7-b606-4f27-b0a7-97748dd2845b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a58e27-def5-40a6-967d-521b5f700478",
        "cursor": {
          "ref": "2d6fc282-532e-462a-8b4f-5969b52c10c1",
          "length": 152,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "81d5c255-100f-4cd2-88d2-e6cb3b0fdfce"
        },
        "item": {
          "id": "07a58e27-def5-40a6-967d-521b5f700478",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8b719b56-d664-419f-9fcc-670486724231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840d93fb-589e-4ba9-ab07-8622214c5b8b",
        "cursor": {
          "ref": "48f88a77-0404-420f-aaa0-1a6c06d0e419",
          "length": 152,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b570fc31-de4b-4c15-90d7-819a55321337"
        },
        "item": {
          "id": "840d93fb-589e-4ba9-ab07-8622214c5b8b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2385f5d6-5cc9-40a2-ba25-93038236b64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d10b53-8911-4812-8c93-f4867a2bfec3",
        "cursor": {
          "ref": "b8eb8fad-84f9-477e-acfe-3ac6cdd60458",
          "length": 152,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ae96b3ff-dc7e-4107-8682-b77afa9d21d1"
        },
        "item": {
          "id": "43d10b53-8911-4812-8c93-f4867a2bfec3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "938ba95f-a8e1-4b7b-bb65-b83a74840c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb54410-8db0-4547-8794-f64dfe34cbc8",
        "cursor": {
          "ref": "3da42f08-b67a-43af-b931-ee15f86b7af7",
          "length": 152,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "80eb8759-5958-435e-9d8e-f77f3e08e8a5"
        },
        "item": {
          "id": "ecb54410-8db0-4547-8794-f64dfe34cbc8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a359e035-3e80-4a76-86d0-804102d1dd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78ff876-a492-4822-b7e0-9c1c7561d07c",
        "cursor": {
          "ref": "212b68fd-7985-48eb-8a55-f5796f92dec1",
          "length": 152,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e2af029a-cede-45d0-852b-739c1ec219c3"
        },
        "item": {
          "id": "c78ff876-a492-4822-b7e0-9c1c7561d07c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f8cf8631-0484-464c-88d9-048dfdb5ac39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f52dbf8-328b-4130-b9c5-1691885397b7",
        "cursor": {
          "ref": "a08c77ca-f498-4622-bba7-6eca11cf312f",
          "length": 152,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bb179595-ec22-4fbb-a07b-92bf00eff1fe"
        },
        "item": {
          "id": "7f52dbf8-328b-4130-b9c5-1691885397b7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a3e74954-78ab-4d48-8658-6f9535772fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74f43f5-ac8a-4671-973e-d7786e23ca88",
        "cursor": {
          "ref": "6ff69d1f-bf38-49ac-bd8d-85c83fadc20e",
          "length": 152,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e6a86db6-74de-44ab-94af-a3b007df656a"
        },
        "item": {
          "id": "f74f43f5-ac8a-4671-973e-d7786e23ca88",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c23b7751-2fd4-427c-acae-d830ed315bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 198,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f162846-6275-44e2-9c05-0346a54b937d",
        "cursor": {
          "ref": "8c8c744f-3ba5-4741-b058-f6fcfd99c274",
          "length": 152,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "87b3744f-3316-45ba-a56f-b9131629ada1"
        },
        "item": {
          "id": "1f162846-6275-44e2-9c05-0346a54b937d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54b4512f-d2a2-4179-a07d-a0a3302842f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6396f6ec-fde9-4cc9-ac15-c0dad003d704",
        "cursor": {
          "ref": "879f4893-495e-4a1f-bd54-76ae07ca771e",
          "length": 152,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4ea78613-3355-457b-8405-e686d1c8aa48"
        },
        "item": {
          "id": "6396f6ec-fde9-4cc9-ac15-c0dad003d704",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ba894c09-0a62-4160-8639-47de941c0e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9de1ae-b448-413d-b709-ae29a745f13d",
        "cursor": {
          "ref": "15afa6f0-2d91-4969-a79b-75a8d7a7c3ba",
          "length": 152,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "73d78ec0-0b13-42c4-8e29-31891a3753b5"
        },
        "item": {
          "id": "8c9de1ae-b448-413d-b709-ae29a745f13d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cf1684c5-c392-427a-9826-307acf7f0efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feda7aaa-acd1-4e04-b252-4a28dfc99030",
        "cursor": {
          "ref": "b73619bb-34d4-4e0b-bb7e-fc67c1d6227f",
          "length": 152,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3e72a16e-1908-4cfe-a5d5-2f9d2a62ae37"
        },
        "item": {
          "id": "feda7aaa-acd1-4e04-b252-4a28dfc99030",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6e75d428-81a2-4d9a-b399-c5aae406effd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b562b5-cd14-4053-b503-747975112ff3",
        "cursor": {
          "ref": "ff399e61-98aa-4770-b0b3-9a15dc362a3f",
          "length": 152,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "165b9f62-2315-4183-8525-69d8248eba03"
        },
        "item": {
          "id": "00b562b5-cd14-4053-b503-747975112ff3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5ba2c82a-4a30-4970-b284-d23ae7b47ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b098d52e-865d-4ed9-b0bb-42f8baf37b0f",
        "cursor": {
          "ref": "114c5ca0-ea9a-4df0-bf88-391614a71275",
          "length": 152,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c5691d5d-fca2-4d2a-a320-d3ac59208d27"
        },
        "item": {
          "id": "b098d52e-865d-4ed9-b0bb-42f8baf37b0f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "48ff4bc9-d280-4c92-b4a0-a346ae7b88a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 185,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de0aa76-2d7a-4a72-8020-ba387b130503",
        "cursor": {
          "ref": "222868f0-6c5a-4323-81fa-683e9f75f8e7",
          "length": 152,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1d474ddc-8391-458a-878c-af782526f27f"
        },
        "item": {
          "id": "3de0aa76-2d7a-4a72-8020-ba387b130503",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "43b31123-5fe8-48b6-9bf3-f07d238a607f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d2aef5-aa8a-4e01-9801-a223e8746b15",
        "cursor": {
          "ref": "5e20ce30-fc6a-4862-a8e8-a59113fd713d",
          "length": 152,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "21eb454c-1a85-4f70-b4da-561978d35850"
        },
        "item": {
          "id": "94d2aef5-aa8a-4e01-9801-a223e8746b15",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "42bfc991-b2d2-45cd-87b6-2cba84c149b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8c0cdb-12d7-4d2c-9dba-9f92a2819364",
        "cursor": {
          "ref": "606bf387-154c-47d4-b6d9-75c455c8289d",
          "length": 152,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c117540c-9caa-47dc-a0bf-3195aeb70a5b"
        },
        "item": {
          "id": "5a8c0cdb-12d7-4d2c-9dba-9f92a2819364",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "73ff2c25-4e69-43e6-a9af-164d975e5bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e565bf3-690f-42db-ba10-a5e13b82c162",
        "cursor": {
          "ref": "9524da3c-284a-43d2-80f4-4f86bbee52cf",
          "length": 152,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ed7c4940-df8f-41c0-9652-0c56eb635db7"
        },
        "item": {
          "id": "5e565bf3-690f-42db-ba10-a5e13b82c162",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "77834f26-2818-4b52-8047-3bd7c590a801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ffb268-67bd-4bac-8882-deddcede3462",
        "cursor": {
          "ref": "6424d82f-cbf9-431a-9d72-fb6e43aa720c",
          "length": 152,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2e69afe9-ab16-496a-b9f4-8d6ceedba032"
        },
        "item": {
          "id": "89ffb268-67bd-4bac-8882-deddcede3462",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d43e170c-f9d6-46d1-a68a-7732417b3c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b29282-a5a5-4bd6-952e-41f62291c302",
        "cursor": {
          "ref": "1080fd49-c17c-4412-bffc-52ac4a5c42dc",
          "length": 152,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e8f1123f-440f-4abc-b653-de3a1570aed8"
        },
        "item": {
          "id": "33b29282-a5a5-4bd6-952e-41f62291c302",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c91efb26-7aad-4be2-aa70-c25970a9f083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fa79df-f688-402f-8302-339e957af791",
        "cursor": {
          "ref": "b641be99-d9c2-4bf2-9791-e1dfe350fe2e",
          "length": 152,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a7106a18-1e42-4d91-b91b-7f791be3aed7"
        },
        "item": {
          "id": "60fa79df-f688-402f-8302-339e957af791",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1a129591-3fbf-4ba9-9d13-f9570f602e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d307c65a-7fe1-43f5-841c-7406110411b6",
        "cursor": {
          "ref": "1a09218e-8151-4fb8-ad38-c3883118b97b",
          "length": 152,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "029d6639-0542-4189-b69f-5d018fe113f5"
        },
        "item": {
          "id": "d307c65a-7fe1-43f5-841c-7406110411b6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "34aa7559-b363-40ae-8ce0-82d369340ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08ae1b4-47ef-4cf8-8c03-0b25eaea1736",
        "cursor": {
          "ref": "b567e4ab-5737-4116-9570-73a28d07046c",
          "length": 152,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7e64fd1b-1646-4831-a168-34f23cb850cd"
        },
        "item": {
          "id": "a08ae1b4-47ef-4cf8-8c03-0b25eaea1736",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bf20522e-532a-4c28-a6e0-640bca0e74ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 191,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a63ab3-ed39-42b7-b2bb-87a1c777bd77",
        "cursor": {
          "ref": "9505855f-b6cb-4e01-b1aa-4ddf268300d6",
          "length": 152,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "731e0f5a-1ebe-4609-a69d-6724ca904303"
        },
        "item": {
          "id": "55a63ab3-ed39-42b7-b2bb-87a1c777bd77",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5d69a484-b58d-441c-be21-89772f30323b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51180bd6-e38a-42d9-9e1f-1d3b1feaf16d",
        "cursor": {
          "ref": "e563ca3c-abc2-42c0-96e3-ac56efe0edf0",
          "length": 152,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "25a91fd7-6dda-44bf-8c2a-63dd02805d77"
        },
        "item": {
          "id": "51180bd6-e38a-42d9-9e1f-1d3b1feaf16d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0b2442ee-46cc-463c-a5bc-35032f7c3435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7afb5-23ba-4442-b21d-593a423b20a9",
        "cursor": {
          "ref": "51a2dfb6-1cd1-43b6-9d92-503436555689",
          "length": 152,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "71468ab2-9978-4e2c-b269-6ac4b422bc36"
        },
        "item": {
          "id": "3ca7afb5-23ba-4442-b21d-593a423b20a9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "35f995b6-b5a6-4fa9-a326-68c4b477b646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3265538-b9ee-483a-a90b-95cdecaf5952",
        "cursor": {
          "ref": "b81055e9-f5f6-4490-94f2-2720acf62b26",
          "length": 152,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "af5cc822-6776-4095-aa36-23f68061b4c2"
        },
        "item": {
          "id": "c3265538-b9ee-483a-a90b-95cdecaf5952",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c1712aff-5aaa-40f1-90e3-92408e342b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66b45e7-e57b-49c6-a05a-7a5063486678",
        "cursor": {
          "ref": "601cb421-74b4-49d2-b447-5601ae8ef035",
          "length": 152,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "35046d90-59c4-4a88-8025-aaa2199d6184"
        },
        "item": {
          "id": "b66b45e7-e57b-49c6-a05a-7a5063486678",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3c402b6c-7eb5-4f9b-999d-a453a2c0d13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06accddc-aae4-4fe3-af32-9c694e5dc6b7",
        "cursor": {
          "ref": "28088329-411d-4790-99ad-d740747236aa",
          "length": 152,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "dee1961a-c7e3-4a6b-8006-14a2ea896238"
        },
        "item": {
          "id": "06accddc-aae4-4fe3-af32-9c694e5dc6b7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "09c6affe-da99-44cb-bdf9-242050a7ba89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c438e98-bfe1-4451-abd0-d3e30ad5ac7b",
        "cursor": {
          "ref": "5babcaed-b8a6-44ba-8d04-f090a4c227c0",
          "length": 152,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a3983f07-8845-4779-9055-7fc6f2e226d6"
        },
        "item": {
          "id": "8c438e98-bfe1-4451-abd0-d3e30ad5ac7b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6595a66a-ff63-4924-a11c-5efe8ac99ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a45c063-f26d-4c59-875a-45d4fcf9dd4b",
        "cursor": {
          "ref": "e067ff60-92e7-4550-a784-0a674b50673a",
          "length": 152,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "00dea1fd-1201-4086-ac01-860e1d8f7bc5"
        },
        "item": {
          "id": "1a45c063-f26d-4c59-875a-45d4fcf9dd4b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1349cfb6-22a1-40d0-8430-efc2c1cade3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff85deb-fa38-40a3-9bb5-5541fde71f62",
        "cursor": {
          "ref": "b2f325b6-e3d1-4798-b138-e5ad7e850220",
          "length": 152,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "00c95338-cad9-4a33-932a-9a0470d714d1"
        },
        "item": {
          "id": "bff85deb-fa38-40a3-9bb5-5541fde71f62",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d07a1939-1647-4a8d-b659-9e1b8b554c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f965e09-d078-4a30-b379-da8e06fc1712",
        "cursor": {
          "ref": "c4fb2551-db9d-41fe-ab10-d755333e4749",
          "length": 152,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ad526c44-c23c-4030-8abc-2016b8e49646"
        },
        "item": {
          "id": "9f965e09-d078-4a30-b379-da8e06fc1712",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b45ea258-3374-4266-a5b6-46828a5b1fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa56c0c-5f92-4f4f-b980-89a31857a185",
        "cursor": {
          "ref": "00463ec9-1196-4daa-a6fa-9ee6c06fe1f2",
          "length": 152,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7914bbd9-6b3c-4805-ab80-1bf47e2336e8"
        },
        "item": {
          "id": "9fa56c0c-5f92-4f4f-b980-89a31857a185",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a52bf4cc-8a6e-412c-bb29-48410430dcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 197,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3da997-68da-44d6-9f94-aac4208ba509",
        "cursor": {
          "ref": "58c804bb-1ca9-4a4b-9b4d-4e261a400e92",
          "length": 152,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "51bd142b-ac95-412d-bb59-88f863c11032"
        },
        "item": {
          "id": "7a3da997-68da-44d6-9f94-aac4208ba509",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "35471b64-6493-4f2d-af60-be2a458300c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d14286-142d-4e14-81f5-0c8c13a4b119",
        "cursor": {
          "ref": "3cb18dda-250f-4d23-823b-b9caa525e5f0",
          "length": 152,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "502619ae-55e9-4307-a46f-dd11c4abdfd2"
        },
        "item": {
          "id": "d1d14286-142d-4e14-81f5-0c8c13a4b119",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3e32b5df-283c-4858-8c12-63211f09ec4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b0d6aa-fd20-4ce6-80eb-10853cb7f2c7",
        "cursor": {
          "ref": "ae55e51b-ade2-448a-bafa-c4c824702094",
          "length": 152,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aa522d58-88e9-47c6-8658-c04356f4c645"
        },
        "item": {
          "id": "75b0d6aa-fd20-4ce6-80eb-10853cb7f2c7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3ecbae37-ad38-4573-9276-cfceb8ea4cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f304417-b3b3-414f-a9ba-56dd90bd682d",
        "cursor": {
          "ref": "8201c093-7dad-42d2-97c4-a968d2ddccef",
          "length": 152,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4731091e-2931-4640-b8ec-152c50e58646"
        },
        "item": {
          "id": "6f304417-b3b3-414f-a9ba-56dd90bd682d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3f74f88c-3734-43de-9516-817386b045d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27d91db-0dcd-4994-a1f6-97babfd3f7e0",
        "cursor": {
          "ref": "3e6cf99c-f860-41f1-82e5-6593f1176dad",
          "length": 152,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b2db8f7-9087-46e7-b6d2-7efe3ec299df"
        },
        "item": {
          "id": "c27d91db-0dcd-4994-a1f6-97babfd3f7e0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4693d7ec-a302-42f1-9bea-d995ba9fc12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6899da3-8ba3-418d-bac5-aeb43c6f804a",
        "cursor": {
          "ref": "86aa5d2e-b2a7-4cbc-808f-e7842970b48a",
          "length": 152,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a2656a59-fa8c-45b9-ade5-1a46fe02c004"
        },
        "item": {
          "id": "c6899da3-8ba3-418d-bac5-aeb43c6f804a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "cdcc120e-ea1c-46cc-b1b8-58b0b23e71fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89626ac3-3954-4b45-a753-f638779c862f",
        "cursor": {
          "ref": "54c00993-3961-4f96-b042-84165c1e1624",
          "length": 152,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "501d2a0e-627c-4d6a-975c-4dbfba113a08"
        },
        "item": {
          "id": "89626ac3-3954-4b45-a753-f638779c862f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9520b3e5-c1bd-4e36-818c-9ab56d3a4215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d126efe0-452b-488f-b36f-8123593d5839",
        "cursor": {
          "ref": "676a9284-012e-4c4f-b589-20ec9a0a26af",
          "length": 152,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "14b03a5d-6063-466d-8fae-1ed58af7d63e"
        },
        "item": {
          "id": "d126efe0-452b-488f-b36f-8123593d5839",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "085e6766-5243-4bd5-9d90-593c4ede61e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87915f1-6d90-48d1-b428-04588075f4bc",
        "cursor": {
          "ref": "1e7d6974-3053-46b1-8aab-02e230261c94",
          "length": 152,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8ab1a67f-a532-4a24-a038-f51bd743cb14"
        },
        "item": {
          "id": "e87915f1-6d90-48d1-b428-04588075f4bc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "60a9262c-8135-438d-b718-d77371164920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b816b457-31db-4fa6-be27-b76c40d9603d",
        "cursor": {
          "ref": "e6cec78f-ef5a-4b76-a64c-8f0c4240e327",
          "length": 152,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7175b976-5f76-49ee-9aba-ae7a028d088d"
        },
        "item": {
          "id": "b816b457-31db-4fa6-be27-b76c40d9603d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "db410c00-722e-47a1-bf2d-44cc8266336a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b93e6b-df29-4bd4-ac58-16af9f202035",
        "cursor": {
          "ref": "e53ae041-9910-4bae-a479-8df07603876c",
          "length": 152,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f9dc782b-aae2-4b7d-bf67-1158d2f1e603"
        },
        "item": {
          "id": "54b93e6b-df29-4bd4-ac58-16af9f202035",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "15e40548-5c80-4d09-aad6-b6d96f849814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107c5e13-00c2-4149-a911-81bc6509a433",
        "cursor": {
          "ref": "5ec01d42-3d0c-43a4-a055-927e18961d4c",
          "length": 152,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c3b97afb-3c44-4f27-871d-cadb0bd96ecf"
        },
        "item": {
          "id": "107c5e13-00c2-4149-a911-81bc6509a433",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ab5c5f8b-3eb0-4ac9-b0de-60a2229548b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965081fc-6c44-41fa-b686-7dcc612eeec9",
        "cursor": {
          "ref": "e36cff5f-affa-4df4-b981-840bb741bdb1",
          "length": 152,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8714dc62-87d4-4e82-b51b-3714a1b03ec9"
        },
        "item": {
          "id": "965081fc-6c44-41fa-b686-7dcc612eeec9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cedf5b90-7ac0-40ed-b4a0-94de038308e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0580b917-0c50-4362-a426-89f909c16d58",
        "cursor": {
          "ref": "fa17b2e8-d34b-4529-8505-e8bca84cfe89",
          "length": 152,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b02ba537-524b-4975-8a1f-9a9c1b63d595"
        },
        "item": {
          "id": "0580b917-0c50-4362-a426-89f909c16d58",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "78402bdd-41c6-4273-ae0e-701c99465be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2684ea-e87e-49cd-b76c-01499fc028fe",
        "cursor": {
          "ref": "bac3c730-5a72-4f9c-940d-8fffb78894b8",
          "length": 152,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "19a91fcc-9e2b-4a9c-96da-9e9fec033934"
        },
        "item": {
          "id": "9c2684ea-e87e-49cd-b76c-01499fc028fe",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f6ea08c3-439b-49de-b6b9-c536778196a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbfd317-dd3b-4e51-bb8f-40d26f46473f",
        "cursor": {
          "ref": "bbba2b9b-70f8-4aad-8395-96c358bba53b",
          "length": 152,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6931cc09-94f2-4015-9f7c-61c32e15dd52"
        },
        "item": {
          "id": "bbbfd317-dd3b-4e51-bb8f-40d26f46473f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "841c0622-a87e-4fdd-9580-888393826979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5a994e-a6f4-486b-80d2-99705640d952",
        "cursor": {
          "ref": "4ef601de-7092-4d0c-bd78-27bc7e11d147",
          "length": 152,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "037ad39b-e50b-4dbf-98e8-3a6792797b0b"
        },
        "item": {
          "id": "da5a994e-a6f4-486b-80d2-99705640d952",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8acffb4c-5823-420f-865e-b046b8973378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cf8dfa-a589-4a8d-aa30-2a224d44171e",
        "cursor": {
          "ref": "8f01e8ab-79af-4023-a4b7-bb3808d36721",
          "length": 152,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8737061d-116a-4cde-a325-552512c2f110"
        },
        "item": {
          "id": "e1cf8dfa-a589-4a8d-aa30-2a224d44171e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "652c89ec-5051-4028-9817-ad889792516d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789aca31-8835-4927-9d62-17a4eb22e2ed",
        "cursor": {
          "ref": "1cb1b98c-e568-4937-84a0-96adb54f4766",
          "length": 152,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c0e6e683-b564-41d8-b5da-66e1eec9b4cc"
        },
        "item": {
          "id": "789aca31-8835-4927-9d62-17a4eb22e2ed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4662f3a7-0c24-4724-81b0-2bfbe34bbe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dac3621-e350-456e-adce-ece5bc97dc48",
        "cursor": {
          "ref": "9a728a1f-339b-457d-8b63-01524b24d8b7",
          "length": 152,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e1905657-ee49-4034-9449-05bf2edff39b"
        },
        "item": {
          "id": "0dac3621-e350-456e-adce-ece5bc97dc48",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "5c0c8502-72ee-407d-8c4d-04923c671096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d40edd-ac4a-416f-8035-febf940ed537",
        "cursor": {
          "ref": "5c06953d-f32e-4ca3-8540-ade10b05d5ff",
          "length": 152,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "70d5e2d7-a483-4b5f-9c2a-20117dd26ba8"
        },
        "item": {
          "id": "30d40edd-ac4a-416f-8035-febf940ed537",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5347063f-fea5-40cb-a1e4-66d353e569f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab46a9c-06ee-4690-ac36-63154fc6c024",
        "cursor": {
          "ref": "4b0b3c79-64d7-49cd-b8ed-8d812252a1e1",
          "length": 152,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1e4c6869-937e-4ad1-ad75-27a1339b752b"
        },
        "item": {
          "id": "dab46a9c-06ee-4690-ac36-63154fc6c024",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "03b91c63-9385-425b-bc18-115b89ab5234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa065de-e869-4bcc-854a-f20031b179b7",
        "cursor": {
          "ref": "384470fd-7de2-46d0-b429-b766d570c3b0",
          "length": 152,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "550f9c21-b9e0-4c1d-a227-87343d47dc73"
        },
        "item": {
          "id": "aaa065de-e869-4bcc-854a-f20031b179b7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d564113f-bb0a-47af-b026-0d42bc121e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99109d04-7e1e-4961-9741-b1515fa203f6",
        "cursor": {
          "ref": "cf8ae49d-18a1-4141-9f43-44e65e8bf441",
          "length": 152,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "297ce01e-efe1-4a08-9603-4d66b70877e1"
        },
        "item": {
          "id": "99109d04-7e1e-4961-9741-b1515fa203f6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "65be8d71-ffc0-47da-b776-87b6fed2ea09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f908e95-1aab-4318-af06-fa9378fe8c05",
        "cursor": {
          "ref": "e414cfe2-f13d-400a-83b3-c8e3636befd0",
          "length": 152,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d2e865aa-4eae-4b02-876a-3267a0c43c7d"
        },
        "item": {
          "id": "4f908e95-1aab-4318-af06-fa9378fe8c05",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cbf7a56b-4ca8-435c-b54c-cb8e8c50f579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989f1a81-8356-4473-987c-3ac22d335253",
        "cursor": {
          "ref": "14dbd5c2-463b-445f-96b3-ed4d14a353a9",
          "length": 152,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7b1476c2-fc38-4050-bcaf-6a9e89487f54"
        },
        "item": {
          "id": "989f1a81-8356-4473-987c-3ac22d335253",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2552adf7-dfe7-4bc2-b019-8db06b1e110e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2374ee0-a114-41d5-951e-f78221993844",
        "cursor": {
          "ref": "15eea1a6-c69c-48f2-b915-21913c383c55",
          "length": 152,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cdcb47f3-09f5-4611-b846-25df28c905aa"
        },
        "item": {
          "id": "b2374ee0-a114-41d5-951e-f78221993844",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0f565443-1938-4bcd-8ffd-d3f5a90b0ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925a1259-eee5-4b0c-bfc7-43effce2c9a9",
        "cursor": {
          "ref": "6296bb3f-dca8-4304-8011-8a349239fd6e",
          "length": 152,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "db82d19c-968c-4046-9ff1-78ecef6805d4"
        },
        "item": {
          "id": "925a1259-eee5-4b0c-bfc7-43effce2c9a9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "31b3eb63-c7c6-408c-83ab-bfb62aaab1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52225b4e-a8f5-4db6-82ef-ba1c91f3ee9a",
        "cursor": {
          "ref": "a77f82a4-e8d4-4fda-9b89-b6e71560b8c3",
          "length": 152,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "59bb9b49-ee46-4b0b-b723-04a04bd93b9b"
        },
        "item": {
          "id": "52225b4e-a8f5-4db6-82ef-ba1c91f3ee9a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9e8c4ce5-f597-4c26-abf4-5e25f6821573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e456c5-5157-4a79-afa0-63b4b567fd8f",
        "cursor": {
          "ref": "f34153f6-84a4-4c53-89d5-d3133a03a12b",
          "length": 152,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "855f48b3-1a87-4551-868b-deb75bd0355a"
        },
        "item": {
          "id": "94e456c5-5157-4a79-afa0-63b4b567fd8f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8037acd6-f851-401c-93d4-253164a3452e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b5c839-3d40-46e0-948b-0936fb46293c",
        "cursor": {
          "ref": "645c1e47-3f5b-41c1-b5c3-17c6d9792fec",
          "length": 152,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "41205b3f-6791-4b9f-939a-8ae3ec3eb186"
        },
        "item": {
          "id": "c6b5c839-3d40-46e0-948b-0936fb46293c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "77d8c7dc-9017-4d2a-b8c3-34da44712916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9399b60f-d368-48ec-9bdb-bce40fdb3927",
        "cursor": {
          "ref": "32e5689d-83de-461a-8956-67cdedc952a0",
          "length": 152,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "18ec2bdc-ba19-4784-bc12-16d474e3cc2d"
        },
        "item": {
          "id": "9399b60f-d368-48ec-9bdb-bce40fdb3927",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1082d263-07f3-436b-8398-1fd74db14664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ffe9ed-c918-43cc-9497-c260b66f0830",
        "cursor": {
          "ref": "8f7d9d75-6174-4e3b-a16f-13f4634b2363",
          "length": 152,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "30f3abef-27b0-4df5-acb3-82cd3aa71b54"
        },
        "item": {
          "id": "c3ffe9ed-c918-43cc-9497-c260b66f0830",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2b0b2043-8d9b-4b95-b93e-ff0ad080ad88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6030ba-2297-4809-b284-efa67d2c38a1",
        "cursor": {
          "ref": "53f29322-a10a-44e7-8f0e-499a64ad3abd",
          "length": 152,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dc35df34-baa1-4331-b07c-1a35289a3641"
        },
        "item": {
          "id": "bd6030ba-2297-4809-b284-efa67d2c38a1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b85c6c1a-28b9-4327-9be6-73cd29d39ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f391375b-907b-4cee-896d-1e47e38364d8",
        "cursor": {
          "ref": "0fde2563-9c4b-4dcd-a5c0-c15314680b79",
          "length": 152,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4541c24c-0e47-4110-9bd2-261867ac5e30"
        },
        "item": {
          "id": "f391375b-907b-4cee-896d-1e47e38364d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fc810d22-9656-41b3-9e84-c742563eba2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7caffed-dbf6-443a-a34e-a86062bf7cdf",
        "cursor": {
          "ref": "6abe5675-30d5-4cb2-9515-40a022b02486",
          "length": 152,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "617155f0-e5f2-4891-87d1-ff4fca992318"
        },
        "item": {
          "id": "f7caffed-dbf6-443a-a34e-a86062bf7cdf",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "55d2aa6a-1d9e-4d0d-bb6d-f5869ed66c22",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6c98d0-b78a-4367-b647-7875b126b69f",
        "cursor": {
          "ref": "1dadcb56-c727-42b9-9ea9-890c71a1960d",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "66e4d713-a4a3-4c79-9f98-173c083e8243"
        },
        "item": {
          "id": "de6c98d0-b78a-4367-b647-7875b126b69f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9508b240-78d0-4749-bb37-577b3eb156a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6c98d0-b78a-4367-b647-7875b126b69f",
        "cursor": {
          "ref": "1dadcb56-c727-42b9-9ea9-890c71a1960d",
          "length": 152,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "66e4d713-a4a3-4c79-9f98-173c083e8243"
        },
        "item": {
          "id": "de6c98d0-b78a-4367-b647-7875b126b69f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9508b240-78d0-4749-bb37-577b3eb156a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b173d1aa-665f-4052-9982-0fb7007c485a",
        "cursor": {
          "ref": "755fc6e9-6d31-40f7-93f9-6ef7151dce6c",
          "length": 152,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e4dd986d-1f87-4397-9645-10d42dcd5a08"
        },
        "item": {
          "id": "b173d1aa-665f-4052-9982-0fb7007c485a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "c08ce862-784b-441c-b4e5-37dbb75a33ef",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b911d15-0288-477c-9355-65b8dd0ad659",
        "cursor": {
          "ref": "31e27cab-3ff0-4c02-ab35-0538e24716a7",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ac5e5bd6-039b-4b7f-8ef5-3890c78ad69b"
        },
        "item": {
          "id": "7b911d15-0288-477c-9355-65b8dd0ad659",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f26911d-3e9b-4442-847d-12ed52b89957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "7b911d15-0288-477c-9355-65b8dd0ad659",
        "cursor": {
          "ref": "31e27cab-3ff0-4c02-ab35-0538e24716a7",
          "length": 152,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ac5e5bd6-039b-4b7f-8ef5-3890c78ad69b"
        },
        "item": {
          "id": "7b911d15-0288-477c-9355-65b8dd0ad659",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7f26911d-3e9b-4442-847d-12ed52b89957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:149)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:149)"
            }
          }
        ]
      },
      {
        "id": "b374a3c4-d5a0-4e9c-9702-3222cc8f15fc",
        "cursor": {
          "ref": "064a733e-04f2-453f-96ed-8d10b751b0b4",
          "length": 152,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fef4b971-30d6-47d7-9cf7-073e936ecf20"
        },
        "item": {
          "id": "b374a3c4-d5a0-4e9c-9702-3222cc8f15fc",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5bf9f82f-eab2-40dc-be4e-660b8402aed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 209
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 403",
              "message": "expected response to have status code 403 but got 400",
              "stack": "AssertionError: expected response to have status code 403 but got 400\n   at Object.eval sandbox-script.js:1:150)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.code should be equal to one of the allowed values, data.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:150)"
            }
          }
        ]
      },
      {
        "id": "5f0984fe-84ec-4357-96de-89a1809af4dc",
        "cursor": {
          "ref": "07058e9d-d952-499f-9c38-963dd477af08",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "62cdec7d-c21b-4bc3-a023-5613c6f1b2d6"
        },
        "item": {
          "id": "5f0984fe-84ec-4357-96de-89a1809af4dc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "753f0520-d4b4-4a93-afbf-5b9fe4ea8de6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0984fe-84ec-4357-96de-89a1809af4dc",
        "cursor": {
          "ref": "07058e9d-d952-499f-9c38-963dd477af08",
          "length": 152,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "62cdec7d-c21b-4bc3-a023-5613c6f1b2d6"
        },
        "item": {
          "id": "5f0984fe-84ec-4357-96de-89a1809af4dc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "753f0520-d4b4-4a93-afbf-5b9fe4ea8de6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c0842f-a1c3-4ce6-9f70-e02492653361",
        "cursor": {
          "ref": "0b0c3b09-e416-4650-b5c0-053f24d59a09",
          "length": 152,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "08bfd5ee-ad3e-4a2d-8182-d1718d632a98"
        },
        "item": {
          "id": "25c0842f-a1c3-4ce6-9f70-e02492653361",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "21e12b46-1df4-4887-a4cb-a41205a5bbc4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 32,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}