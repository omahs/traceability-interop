{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e1a88ae4-ec0c-4ff7-b192-e7afdb194034",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6b7e5f7c-4811-4131-985c-c63a91b8456a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d21052bd-e3e6-4805-af40-eca5eb29678d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d893004e-b3e8-422f-bc01-03075f58c27a"
                }
              }
            ]
          },
          {
            "id": "64e3113e-7073-42f7-b31c-ef5adf4eb760",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b240aa89-4a29-48c5-a76d-943c49f922e7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0e8a640f-f289-4128-bafd-fe283e0e2187"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5922220e-82b0-49e3-86b0-810fe2c0c9bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "34080f40-b1bc-4063-a1fb-d738becfcc13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "78aa86d4-6878-4ce6-9a79-bfd82783da39",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6f3e203-6734-414c-affb-1f9b4a68912b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "214e5492-9495-4222-abe9-c88e5ff15f9f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20dfb63b-961b-4a94-baed-d38b14c7cfeb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6893ed96-a2b8-4be1-b094-a27eba315c8d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ebc603d2-dadc-4a1f-9180-6bb9e9b84f6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32175f6f-b6bd-4a2a-ab42-1afe8f1f267a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48005b95-d1d6-4eba-a8c8-992c05bc5982",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "65c3aa31-1435-40ce-879f-bb17c67487a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4813ddf4-3f66-4508-b99c-1c69d2b4a0ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c5062fce-2e1a-47dd-a00d-4e51c437b838"
            }
          }
        ]
      },
      {
        "id": "17f5bcaf-38eb-466a-b770-058e7437b85a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cdb9aa12-876c-4351-85b5-2c1849de3dd4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe7410fc-1424-4538-a7b8-ce7ea2813793",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1339be6-8e94-49ee-9ff2-fc07011a0f54",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee2233d-04ef-41f0-801e-868a6e97602e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df239f91-7e35-49c8-8df4-92a5c3a5c34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea1e9fa2-282a-4193-90e9-8562f17117c4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8939eba4-825e-48aa-8a63-1afe93f702f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67b20114-4afa-4997-9d7d-71a59a87eb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01a1685-d0d7-413e-8015-6464ee8a42da",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e429bbaa-87ce-483c-95b6-f841537a8104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d650b43-e667-4cc6-8428-ebeb7e972769"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ce2781d-2776-4911-a229-5a7a76c54bdb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "533acce5-102a-4425-af03-9023d1636258",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5355e856-8dc5-41be-9157-9d6e1807f95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dfc9a9d-30fa-44e0-a73b-9af912c3c579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fee871-6472-4ddd-84c0-d0983ca9142b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dffcb9-bf2f-4ab1-afa4-421cc0db0674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dab17f-19e5-4239-8b33-e3f36dedf7eb",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c0a6ed8-427e-4ab7-b165-a9b7a648da16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64f4dc78-68fd-4520-9aba-b2824ec60c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abc5681-375b-41af-9b3b-64491b76a47b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "9fc31cd8-a76f-450f-a6eb-a5a8f1bdb114"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2306a8b2-0d8d-4756-a54e-37a3eaeb7dc3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "76d3296e-aec9-41be-9943-1b27f3797be8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5132205-40d7-437b-8194-1387bd9f5386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "94305381-cf62-40ee-b309-80f2bafca169"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c1b6067-5d81-408e-b467-7098e475f05f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "46a17588-393c-4adf-8b66-81aaf315feea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d727b9e-1497-485f-b175-23c34c989bda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb43b6e7-ba1d-4be1-9994-acbb6914c07d"
            }
          }
        ]
      },
      {
        "id": "8b911d9e-1f59-49c3-9faa-533f10142f91",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f3057f41-2fa9-4c37-a59f-f0ca0544fe09",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54cb0cba-f1d5-4662-a7d3-f9b0867fcbf6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "671e6646-f445-44cf-91cd-cc5a8b86e88c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05bedef-086a-4406-bf94-fa5755162ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adcc66e-0416-424d-925b-697bd1201944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196aab39-d0fa-46bd-9b1c-0d0593536933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "423c5e09-cc0e-4730-8719-60b98059e574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9e9edf-6c90-481e-a47a-e5c536a958f0",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17571a5-9863-461d-9687-602f521a509f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3017089a-3331-4106-bec3-cac6a67f8c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b209ecca-f067-48e5-a825-64d588cebe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49e4a2f3-c9df-4b9d-97fc-fc432a15d04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ae1390-6b85-4ed1-b586-186cc0720d01",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9052a3-1480-4052-a345-388cbcc1f360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba72ebca-2354-48b3-ab0b-44866b2b918e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea8d0b0-114e-484e-a044-45fd25b68ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac0c9058-7198-4772-b64d-b26416ffc300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be1ddc0-1177-4606-93ab-b19f27e84291",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9ff66d-d892-4f24-b824-ceb2414446e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7c8e8d-29d4-4127-ad28-94479b638ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4a7391-1a10-4cfa-820f-753e8d885592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7079c3cd-a0aa-4398-b819-3b7b2b473c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d6adcc-fd47-4507-89ae-49a3aa583ae7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e07b308-1832-4d89-bd63-df21cf37ef82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923150c8-8035-4c1e-ba52-4b47ccf861dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4bf87b-ea3b-4f9f-a640-58cb9f660b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c445c210-076f-4800-87ff-9afa0b2b7499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dababec8-82d7-4388-8f77-e76250f9e63d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537fdea0-6bad-429f-a406-2c8d1687bd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5989d7-4093-4913-8f17-229a53ad37c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ea743b-9235-4087-b05b-f41baf66c473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faf87e6e-2c10-4fdf-ad18-3be358bf5198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcfbe02-fb24-444e-9a8a-785ecd189335",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd8a46c-7c04-4ecb-b77c-61313e59b8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8335a81-6dc1-407b-9c45-5fc133e8b20e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78148a90-0a9e-493b-9a80-948f8612c0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1ac9660-ab6b-4497-89a6-1d7480b0be3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0aaacf-8b98-4109-b1f0-18e9499ee33c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2be041-ec86-4c48-a8dc-ef8356153e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00448d00-b7bf-41ca-8a4a-0c26fd12e7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e8cad5-6aee-4437-bb83-479d8784c7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d45d3ffa-bae2-4187-9dbb-7e25c2ff98bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1e4636-cfde-4942-a6bb-e7243491fd37",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77eb79bd-4bea-41dc-8aef-d133fc7f2af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "454be237-6eac-4c7e-a6cd-4e7028e950ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df02feb-17d7-4b0b-816f-247afa6c5582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dd37bf6-100f-43ea-b14d-a947958e2417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc260bd-ed99-478b-9ef1-29189828c5c2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ad971f-9a1c-4bdc-bb97-ef465edf77e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b723c3-7413-42f7-a5b0-4b6ebc0038c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdb307a-c421-4dc7-a01b-4298e7077aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2165f60b-5c19-4c40-b433-e4be7313e85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3fdec0-bcf1-4947-8f86-2029c28ef47e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf30938b-35ef-459a-b98c-ae8a93db39a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36dd748c-05cf-49eb-acea-380e78bfec78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d10fd4-25aa-4f8f-9af7-bf88fa47c3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3e8e2b7-16ce-4e74-9e6b-29487de44138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2156c164-c035-4e51-89b4-cfa1e1c2360a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f60c7-505f-4b3e-9c8f-eedea7e5d7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a433c29-78de-4f1f-8bfe-53cedd3f3e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b7676b-0df2-4369-af7e-df196b82c6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "353502f9-8043-4780-95b0-c71b32bf3c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22d095f-0d56-4fec-963c-6c4cee1b3f4b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "864edc36-1d0c-479b-a166-7172206e1d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534af3b7-ef61-46eb-b9b1-ab8b8291af86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91cdf4a-7542-43db-ae58-a212c73cfc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "327e1d05-0132-47b1-8033-fb89a48aed46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b059b29-fa8e-42d4-8275-e2ee1466fffe",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27869c71-6a4e-4b71-b8a8-59207e0d76a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a11e96f8-f8e6-4047-8f69-d432862d1d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71f8182-5731-4a95-a1b0-06d9c2b9445f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a41582de-83e1-4024-af08-25bede086111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bbfba8-ca73-4830-b0ae-3b03c183a74c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaa9d2c-b6d1-4fe3-a929-d578811e7e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d95bbb5-e108-4f7c-a1e7-aa3ca375db4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07735ef-d4c1-42eb-8250-ab040cf44c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "acd1c23c-b3c5-4d9e-a2f6-c9a265205f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c1dcdb-a6ae-4432-aa50-24e5ca2776c4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b918921f-45ab-4927-b8e5-29e899e094b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb1f1e9-3f1d-45bf-881a-c9af0469a91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3130d37-9002-416b-917a-a224ff157323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81da15cd-1b73-43a5-ba3c-62d23f5a6ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd76e3b4-002c-4008-ac72-a87874977853",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bab363-64ee-40ff-95a4-3864430da030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d40da39-6f7a-42bc-bf4a-132205887f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea48812f-ff7a-42f3-b828-0fd559c7e751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ae99c11-2521-4fa8-a20a-56bbbcf5b3a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bc98f1-791f-4f29-b360-a87e1f8ebed1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2984a1cb-e012-4d43-9113-f563acb81870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516b2202-fcbf-4a42-9af3-1a6d759c43ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa290778-394f-4c66-a348-59f4ef23249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0860a82c-2f84-4107-8907-78f431bb0d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454da7e7-3a9c-4aaf-984c-0989be1e3601",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49834284-92df-473b-a939-8578941f3e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35a7aae-83f5-4e03-89a1-3c57467d4f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07169f2c-1c92-408d-8ac3-7d60aa45bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfecd5f2-319d-440a-914b-d9c0e8b1d2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ccd977-7175-4eae-b50c-3bbc6ac897fb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e17ad8-3d71-42fb-b058-f443913c5daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a54bcba-6248-4339-8190-8a6bc38e9675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88955a1e-6beb-482e-b72f-d2a1b5615e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77208ad5-a091-4773-8d4f-aeacc14238db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25be5cba-8c28-4e7d-b9c0-7bc581205c9e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6a56d0-fc14-49df-b32e-e0e6b2f49549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f8ae10a-a073-413e-916b-3a56b3181b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31a58c6-d1d7-4ed0-95e4-0dd7538280c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d158f460-98dd-4552-8cd5-5f11febf8a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05700028-7e41-45d8-b111-b9840896e758",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d33d79-8a46-434e-92ab-228aff78afad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23e9ce3-1b14-4536-bf35-e5d600eb1de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6949e07-af75-4247-a56f-4f256eda25cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd5af57-fdcd-4aea-93fc-a04b985949d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4854bfba-3461-4e98-9336-75242ec1a4f2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a499ecc-af1b-487c-9328-6ad17f839830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de387935-5906-4ccc-8a65-2827710ad24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b232600-7426-4fe4-8974-e5756472bb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf92c9d6-01b3-48a9-bcc8-fa40d2d7cbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab5b7c6-29cd-43fd-af34-842c13972474",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d89f1d9-e906-4676-aa9d-5a586bd0e39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17208c89-fcf3-4fff-abf7-576ace103d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb319db-9b3b-4bd8-ba50-be071d3bf51e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b3e70cb-4b09-4130-8bc4-c6b6085a7b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc6dc14-688c-45b0-ab89-39538b85666e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd63bef9-03e1-477e-9fb5-8fceb8cf1e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e9522b-4600-4b06-89a6-fc79dbe5e62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f286e8b-13d1-4c4a-98f6-d76ae6160dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2245a3b9-22e4-42f0-b25f-900e10ad67c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638f323-fdb2-4126-ae11-c4de1aecd48d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2538c4a-d76d-472f-a359-d2ce4f3b2677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5c14a7-2c95-4af8-9760-65b2e02abfa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a99d78-254d-4fa9-b9cf-9da198491d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "165f6468-b2cf-4b41-80e6-f411440309c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3879ac-ea2c-4a52-9d7a-9aca487239de",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb62cbf-919c-4015-bc78-cb0673b881a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a384c580-0f10-4628-bcdd-268dd03d870d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc27991-77e2-4f2b-840e-569cd8e89c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0707735-9e9a-4134-b313-294840918066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ad6906-73c3-48b0-b2cf-d82bc9ac21ca",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c5a074-2bc4-4753-abdd-20e8498cfcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e75f30-f9d2-4590-a7e3-4a676ed87d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb52969c-b781-4227-9e31-32276bd38213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "036bf2c4-5f53-4d13-a39c-c18daf58ad86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f9f567-db4a-45ed-b34d-170cc05cba0a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e495723-558d-4e49-b5b6-2600d446c6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45f510c-f79b-4685-bed4-5a4aa34a95fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adff3df7-6a74-45bc-a2f7-22b6449c329b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1420e44-073f-4595-82c9-792ed62aba98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb4a7d3-b9c3-4db6-a2fb-be6d4ba504d4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ac7cc5-6d02-40e7-98ea-891b3e5fb9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3691fe4a-a767-4d50-a805-d2341f24d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff83d848-b351-4ab4-bfae-f397c813671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3e0bcd-789c-4fcd-a144-e4f1c33a8595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfd4b5e-c774-4882-a883-e4348b476194",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ab2d95-1c5f-4eaa-a9f6-f66a3f39c4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4ff329-fe65-4f61-acf9-7f046ae3608f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171734d6-b9b2-4b12-bb22-8261a061d3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "090493ba-b2ba-4d5e-a627-e2125235767a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64b8a9-fd77-40a4-93bc-b42f0351f1a0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef66a91-1181-43ef-b094-77448dbbda9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff76f331-9696-49c5-8329-7f0cfff58bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "403bc4fc-8ca9-4f04-9f22-c1962149227a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6332fc5-112d-420f-b477-e2ab3e5213ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0c810c-d961-4ead-977d-710f44f28940",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db4e60d-554a-4586-bdd4-6c3ec1c5496d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0d375a-0bbe-4d28-b4d9-e0e6fed13a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d4ac4e-16f2-4ada-a280-7bdd1dadcfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "093e4206-1e4c-478d-8bfe-f5027de000ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232f87e8-ba4b-4e15-a058-213a3361ae5b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ed1ad1-1cec-4ae1-ac23-258e442dfb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2211ae09-3418-41d5-b305-e42182e1d498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d94c80-6a17-467f-a667-4957e45464ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24025251-136b-473d-89d0-08bcf5041762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74db573c-d711-4e32-b6e2-443b5f46a9e8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce65070e-3e77-4e68-b459-30f5dbe4fd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfefce24-5e49-451c-9e9f-cbc7730d48e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddde7c4e-d20e-47b9-9f59-34a301a71fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e2200bb7-b46d-4229-8d7f-e9ab29ad2af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9153a74-c3aa-445d-8543-f7f21d161679",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870d7972-04bf-421b-8353-89a19239ec4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d8ca730-2fd3-49aa-9159-f98bc066b81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044e0ad2-c886-40a3-b021-94acf7d75f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "62b1a0fd-2605-4b1a-9207-caa09ead7c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f3298c-aa08-4cc6-ad65-b4ac0c6c6a69",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ab2af3-dc22-44fa-9369-3addb570ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ca2bbf-3ea1-4297-97cf-d0990ea52ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f378a14f-68ca-4aea-a363-9fb39d2b419b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a16147e3-ac98-432d-9fa6-aa9fd8ac283b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0895062d-cea3-4a4f-a008-cb8804077ce2",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "026df1b4-f5f6-4b6f-ac8f-50177b029669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79d69a97-e815-4728-8299-be73e81833e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f9101c-5934-4914-a618-75bab1e07f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff8da8a1-7173-44b5-9714-31c7e492ce78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5e5122-08d7-4d4b-a811-4eb9d6d7df9f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35b9c5a-6049-4c63-bc16-314c37ea5475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fc3f5c-433d-4915-a8be-f4dd807d34c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000a010-cd59-4498-9a76-3cde984d6342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a05a885-408f-4b25-ba9e-aff3bb1542fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c52a4b9-c1b3-4ff1-abe5-3bc0ecc4983a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ae9012-7bd3-4d4f-9b41-99d37ab9ad55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f99b831-4fd2-4d65-b59b-72c7e9dd0add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d90a8b2-d828-4625-a38b-e7a7013c6c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb4b49d-573f-42bd-8ef0-f1629f5529c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5018fae-718c-4281-88aa-3dbc5196c535",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5382e917-4088-4492-aeb8-64b54de69a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ca43d3-183f-4626-9468-8814a60f9bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7981580e-e116-4876-839a-1b1db53526f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4f0095-6c2e-47ed-a255-d149fd5bce92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2533c52f-5b73-401f-91c0-652672604072",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33fcad8-c6ef-4da1-ad4c-9bfb7c485a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835ae6dc-566f-4100-9828-8d4b150311f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0dba2e-8904-428e-afec-edcd5ce2fce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fab1b0e3-6fca-4a1e-89f4-17d5836306b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2142014c-9cfd-4414-890b-7d5e02661997",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d436b5d3-c34b-47dc-9033-b4c252f72953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10520cb3-b59f-4dc8-b3a8-6dd056f97c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2172335f-8683-4b5e-bfce-83cf91f752f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "75b896ca-70d2-4351-bd5c-2d5c4a192eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1862041d-5580-4436-932d-f5b568d2d3a6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f781695-2117-4351-af66-c19f9ef0ad06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdb0f85-3256-41ca-b4bd-50246dac7ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b1ccb4-bd1c-4d73-afef-35336d7947c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca42caf2-3568-4192-9119-c42879b5eb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918ba254-188f-4d45-a13b-8515b0a4d897",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1f710f-0853-42dc-b51e-b23eeff5264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0249bd10-bd6f-4f8b-a835-f1fddac6c174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc11abbf-390b-4c58-9399-8a3136d4c58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb770106-babb-453b-8452-d6ddc1ab759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac679d3c-48ce-4a8d-94b1-54a23849dd66",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04684fe-2e0a-4b73-a727-bd2af6c5ed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d264f718-7f12-49e5-8c8b-634e4b2fe34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca87fdc0-2dd4-48ca-a35c-b4ae48c1832d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3eea6ce-ac23-4f9a-b578-9a2ab99c2cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5e657e-1470-4184-a903-b8ed7b420d86",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ca72a8-703b-48b6-b48b-2e5bec32c347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c4a8f0-1795-4376-a120-bae465d4ede3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5663320-aff2-4dfc-af46-d975ae1d2497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3175ef-4dc3-4da5-b104-f0d86aa4f44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2677ae5-dfa0-4fae-94bf-40fa2a29cb55",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d39f33e-171c-4156-979f-64c4cab7a183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e641d1-0225-48cb-8a21-93c47d9209b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0475cd-8cf5-42a0-8e3e-ea0a40fc3679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58d49a28-fee0-4768-88c8-5d8cc8152703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf56492-20a3-43af-afea-9b4a829d5c88",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e71ad00-7f58-4fb8-ad51-5d613b8cdec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b13d77c-61c2-499a-9bde-276c4acc41d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09a2733b-8565-4c2a-94df-bc86bedff771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04dd6c7d-c367-46e3-8421-02954e02d8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe572fba-6582-4854-b63f-aa1470f91f66",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd19bf1-bc1a-4edd-a2e7-0184bde9358a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e994bb-98c6-41fb-82fc-4713bb095c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98efdad4-de75-4cf4-aa8a-aacea2bbd32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebab3c00-6b61-4f64-9ac5-ef54f1874cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a80620b-d575-4d1c-8f3f-6cb6c1b9717c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359128b8-c60c-4c3b-af91-dee8e0e5e5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca809fa-f729-45a3-b301-d6c42d934a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9216f9-fa13-483b-9067-044927a0ed77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "43a1070b-e722-4141-89ba-380e23caa956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd49eff-497a-4fca-82c0-a082377be368",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b869a5-0162-4499-96df-ac1f439c5d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cd54c8-fa2f-4b4e-b60b-ed4ed9be5102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8a3351-37bd-4700-99ed-8f98cb73e08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f93e367-b3d7-4624-a8a1-4f67954397a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bdbd9d-01be-4528-a320-e8860b3fe92f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb1c8a6-bbab-48f7-9658-bfd6c50b312f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51209678-928f-40f4-85e3-0e175ff83aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedadcf6-77be-4859-a074-c47fd78e33c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6100cfd-18e3-4240-bd8f-93ea72ce09ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6322e5-81e5-4691-bf7e-0847f5937916",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf1e469-e8f1-4373-808d-347a26fb4e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da6987d-5056-4e28-a061-400947699e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ff7eb2-0c7e-4999-bb5b-e7e7c80160b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1892163d-ae9e-4b81-9758-db60bc96d581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2676fbc-a8e1-40ac-b9c9-de0760ec527a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb35e69e-6b7e-4300-a320-6e69aeced763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7868d957-09c7-4bb7-94f0-2f14c3d8767a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b618f3-2195-48fe-bf4a-d14a2122f43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b973db9-59c5-4ae6-818a-a4086c53a025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c434108-3130-41e7-b277-aa2ad0081081",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee33822e-d761-47e4-b1ca-8743dc13b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d650ad23-346e-4be1-9b58-c989f32479e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161ca3bf-a60d-4229-920a-a84948df9f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ff85ed5d-a925-4638-bece-3dda900e6d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8934846-e3f5-451a-90df-26321852878b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a852ed7a-00d7-4f22-afe7-beac7493846d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1471ddbe-1dba-4603-8670-f4ced62f7de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e00e7-9fbe-4d13-817c-6fd521884b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc63894-41ef-4cf0-9062-4533865da695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af25f8a-45b8-4c8c-9c76-ba3b9e50f13e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6399a42e-f39f-48a6-a7a6-51676253662f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e070bd14-d8ce-4324-9382-d59dee7b1232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c735849-b377-43c7-8bdd-56b29ab1c7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dfc0cf-a20e-45a0-bff4-85366173e20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9469c0b1-6bf2-40f6-9085-38a847f0b3aa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54d198f-1cb7-457b-af2e-f345451b44fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53f67be-9a8e-4515-84e1-ed5010d5f4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafa08f8-7d3c-4676-84f8-956856a6aa2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea0f4e8-73ca-4b34-9488-91be783cbf21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b3c635-1bcb-42db-9b91-9524840676cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced473ce-9639-4aa3-a3a4-9c00bd89da59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b723406-4455-42b7-afef-1bcdf7573eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85f32b-ba0d-448f-9caa-da6487532458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70d96bf1-b057-4ed7-a908-0b1a260e9961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab920bf-64e7-414f-aeb8-073b1dc7cf50",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b5344b-980a-452b-b03a-e18a01e94375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05771384-8f37-4ebc-9504-c75478624e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56cea95-632e-4a25-842e-a99d843d7ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40f2035c-7f88-4b34-a305-6866d5372dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b8ba48-d65c-4550-8dee-af0b5639b1b1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adef3086-9bd0-44d2-8ce2-bee2b9545db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b17ce8-8617-4a3c-b1b5-d53c211c8f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaa88b1c-67f0-4201-8686-bd3aa5935c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9f27cd1-e2c1-47d2-b1fb-86b64c4bc3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0317f8-d23b-46b5-9429-bada380fd00d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45772e7c-688a-485b-9e85-914b51a7b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af5eff72-f629-4005-a7aa-e29a3123c159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda3eb3d-d687-4ae9-a706-6eac9b28fa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91bd039-6ecd-4923-b18f-42a1549a4880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b47bef-d2dd-4803-b3a9-1172991da9f2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "838ed99a-b3fc-4416-96ca-bc45f01ef32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9574cc4-cc59-4186-a5f6-75807ccf3602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b11aa0-813b-4168-a752-eeafdd80ec3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1b1138-d821-4bc3-a58e-9a5d5d95cd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91313612-c3bd-4b93-a2d0-66b50496e253",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31427de-7b30-4329-893a-6a0099ef9c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea83f30c-a137-4911-bfbb-f1a9dfa562ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c535775c-9719-43d8-b929-88f4f3676b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7974ebb3-3bc2-467a-b7f3-0c2d8f598082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f46ea7a-0572-487e-9797-d2d762e4d318",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809aa671-45d7-4334-8e3b-533619f81927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abccad0-e554-4ab5-9953-52baf1d55a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3d9bf3-966a-4c53-920d-41c95722357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85e05527-d661-4f49-a262-15bfb9d15145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba7e117-3a47-4a2c-8fa6-e77c28bee966",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d734c2bc-74b0-4f04-9617-e56030513eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b2ac46-c855-4750-b029-e633d0d6959e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36b606e-ac57-43a9-9b32-b8abe3be70db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0dbfd5-9571-49fd-8c30-ba2744ca3f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83add46-7b13-4b04-b7f2-3e970cd02c60",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cb3190-7e61-465a-a7d8-c445d9abba18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5db0cf9-5209-4cf8-a3e7-c92b111b2e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d484e24-d55b-406e-b505-4364ba6a4e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9626866-eeaf-4750-a974-a4e57de29a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef70683-b5c4-4378-b04d-f53eb8639759",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed26f83-985d-41b0-97c7-9e04db0d3cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd9d358-925b-4d72-a1ab-b030cf83ad10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8065faf-bfb3-46b7-a49f-c3608cd857fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14a40046-1d67-407b-aeec-c425dcf93824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f245e4-1b3a-4a2f-be2d-91f19e924ead",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734eb15f-0e42-42d0-9f96-10d5cfcc1604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541c8a78-9d05-4cd7-85ce-5705c2224419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eba4ce-5c86-4586-a4b4-236139e1748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e2c2b8-4a32-4d75-8402-9603b9443c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a4b47-b3db-4191-bf93-9d07cd277514",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c2e27d-9f32-4fef-ba3e-8164fe4c7113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04ee388-68f4-436b-a8f3-5a47a6054773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef58387f-87dd-4905-bb2b-429d15342460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b88726c-57ee-4e66-b5d9-40177496b25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c659fca4-623f-45f1-a9a4-ae207e9a5acb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1f6881-fa02-4701-b40b-bda092407adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f448f72b-e015-42a3-827d-91c0d57ee5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e850cff0-713d-4535-927f-711a92081720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83d11042-44c7-4b41-9be6-f36230530f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c1e3b7-dd9e-4675-bc9f-ca6935bcb7d6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1dac40-393c-4dfc-85a1-fe6bbbc78833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5526b6-7670-4d84-981d-d90867173dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175d4c8f-1809-441d-95b4-28e78c79be24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54ab7aa8-a803-4256-96e1-563f21b0b56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f32b1d-b709-4d83-832c-25eac34bc37e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9a7a26-496d-40d1-863e-ca40a33db2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706ca0cd-4361-4901-b42f-e4cc35134488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfb7e56-9de7-4e1d-841c-25fb19847c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47822174-9b16-4911-a1a6-38e9465a69f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d306be-b406-4b75-ac68-71867c638571",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0bf192-0b6f-491c-be5b-a39195222860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d3eca5-0713-4be6-bd8f-1ce1beb245e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851b0723-e326-41f6-b510-a3969aa7eca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdec060-46ef-48bf-818f-aba002442717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972d54b5-c95d-45ec-8710-98d1d87c2e02",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57305be-1124-4487-a16a-a7813bb1b3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20e02c8-e165-4d27-bb43-838e5f0b5b3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a76bae-721d-4c25-9032-0b3b9086848a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d071e60e-0e64-45bb-bc3b-25b602f64601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a57019c-5a21-416a-a2ba-515b64acc22a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f398ebc1-a23d-451f-9d84-d790e4668984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6ca0d3-2227-4079-b9da-7000e4e8fa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1613381c-83ad-460e-af51-e7cfdef9373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9e6134-9a21-43c2-8b23-a1bdb6bdf2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f2da8f-54cc-403c-b4a0-9e717773d33f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "374f180e-2200-4b21-b6a2-027ef4143d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20273a25-4a68-4a65-a263-fe2a2793c29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec72613-ded0-4a4e-aadf-dc124cb50d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "48dfab51-cc14-4414-a710-537924d5d3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4acd6e-861a-4abb-8802-251687630ca1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8483651b-43ba-4294-9e3d-c41d4fffb27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c73e087-e842-4ba9-9556-06d8345f223d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4e47ad-1004-4856-8385-13b73c1eaff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc178d7-6bf5-4805-8d68-8b67200b5a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3276eda2-19bb-49d0-86d5-d6b6dddfd1fc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1225852-ef0b-4318-95c1-3f68bdc7c708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f715973-095b-4458-826c-3a5a47eb8337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "352f55e0-409b-410c-8a72-d91ba6cbb47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3c0cda-ba15-457e-ac29-7a3296210e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0211bc81-49d7-4c78-a949-0f54256291ec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6665aa-19fc-43cf-9a6a-ab4306fc57af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b408fc-cede-44f0-bbee-d3f697d1800c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc914edf-8d3d-44d8-85cc-78c191927b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb9e07f-cde0-4f21-81f9-748186657e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65574b94-fefe-4d97-a5ea-080e9a88671f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de26842-0dce-4b2e-a47e-85b04ba4dd95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767d211c-0805-4dde-9217-1b532d2e08e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4689c8d7-ca53-4486-9f41-9ffb66aa9b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d954b6f-f437-4f6d-85f4-3ac4a7008af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1a6556-75e4-4c8f-8821-a6d5137b7b66",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911352e9-f20f-4e7d-8f18-5bdc52210466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd11deea-8fc9-4bd3-a656-a051bfb37e66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eed2a3-b34d-497d-9b85-4c3829724a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9380af1c-615c-4172-9abc-922e911078a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd611b6-f2ce-4c5f-841e-5858bdc30f30",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feef810a-e09b-4af7-a7db-e825563bcfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23fa62bb-7420-4524-ad68-71977247c49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d6c666-0691-4a7b-a5b1-da62b528566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccae485d-76db-47c9-93a2-81bdd50a9091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b7659f-6d46-4670-89b8-3af741258c19",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33942be9-66af-44fe-baff-814e644e8842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f5f5d5f-bd2d-4f96-a151-603538e485fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634998bb-7050-4456-913a-6e96d8432810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1c82949-4409-404d-b987-01c1d5607f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b378b6b8-547c-4b37-819e-dcff42d75dd3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae873306-05b9-4b41-863c-9d6ee9169405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30adbba1-3c06-48d1-a297-937f8e87604d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50464b6-ad22-4a74-8be3-456dce36e17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3a92d22-dd19-4479-a41f-873827046fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb63e6a-ce46-42ca-b973-d170cf48bb2a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55d96d3-8243-40b3-a9e8-acc4b1e59671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eede850-e77d-4f57-af63-61ca0b8add0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b268105-754e-401a-bb49-5c2c75f1c394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7921c1e-e5a4-4960-b5e8-2f748aa9ca77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17d8f69-2e5e-496e-a87b-e62002747b08",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad384946-0b58-439c-a160-491ec71d055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc39a4c4-6e60-4534-ae29-17204d70eea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022582dd-e85b-4ff0-a8d4-97e610048f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0a7134-6c11-4c0c-8b23-8e810c373a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba185f8-8fd5-4a87-87aa-80bef9ebb9fd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2d08f5-def7-4923-b6df-ecebb3641dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0907c23-41c6-42cb-9124-3c943ff74bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb03f21-52ee-44ea-ac87-fa80b69f7de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "76739ba1-33b7-4d41-842e-fa2ba3b0188e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26df7b99-3641-4dea-ba90-0eb68655ccdc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41084a76-4a06-4209-bcc9-0d69d37540ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce859d0e-9312-4f58-8854-7e9813af5e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d725e02-42e9-4f07-acd8-7ff545551087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a942bde-3393-4b79-896c-b13955171c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b63f7de-6519-4838-8ce5-eba1ee1f0045",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a510b8e-e817-444e-9d46-b9bfac9dcd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96846dbd-7e0f-4bc3-8ca9-7adda960d29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e965882-9c2e-48c0-b346-116b4b9a142f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8972eb9-85b2-43c1-9c2d-86811aca3411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5f7bde-805c-4669-822f-abc0db6ef390",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499a997a-1e5a-42d6-8a75-8133719c2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7025765c-d15f-4158-83e0-3d8306e74a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0003ada-6916-4c7e-9dcb-3bbc5dc2187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "24776f8b-cf91-4bfe-9f2b-3d21f26cd55f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "778d275f-65e4-44b5-a28d-27b8ed12708a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad45d0b9-a5f1-40a2-a3c0-9c659c05324b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a95322-5416-4744-9081-02b26c015223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e30da49-e31f-4eca-ad4c-89c9daa375f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b7a746-947c-43c3-971d-de4811215c06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "dd3026cc-394f-4f4b-92fc-32e58c42963c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a7a6522-87a2-42f0-9184-b12cf945531c",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9aaf24-ab03-40a7-b197-f1625a523c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03fb3008-f63b-4ee2-8da9-22ad8dd967e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4ef362-d979-4d8d-873d-c52be1a7bde8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b1bc77bb-f71a-45da-8eff-41a67f8e400a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "691c85b7-ef95-479f-ab97-7ddb3248c9b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59e3838c-2cf5-420d-a3c9-c809a98e0bfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ded1877d-ca09-41d9-a1e2-36a647ba78ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d6fb6f4-cea1-4cb9-9ebe-842957309e6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3076b213-8ef3-4df9-b3e6-0beba00eb877",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3fa96d90-eaf9-4b46-afb5-07cc5dd4b7bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "df722439-5806-4728-ae10-b63eb1ab1103",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d03813f7-5107-4b22-af0b-f048c147d229"
                }
              }
            ]
          },
          {
            "id": "d7559468-726c-4316-a63d-499b6c904280",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a2e9df7-0cc8-4780-b640-d782c3875120",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d15f9321-b720-4b10-947e-e223b6ea7009",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c09dad3-55e4-4b91-bd64-9c5816aa19b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf80e348-416f-42c9-b599-5bdce2a9dacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "246004e2-4445-4b4e-8c72-3d39ded1b6e4"
                    }
                  }
                ]
              },
              {
                "id": "6ef3afae-f005-4cb4-bb94-3075d3fad1a6",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "804f421c-652c-4f1c-9eb5-f734f13e5045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3265384b-243b-4b54-bb8c-a6038eb3befa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a9172a2-c100-4ddb-9ecb-a5608aac6d32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e6d89b54-2dce-410d-8f77-0308378307b5"
                    }
                  }
                ]
              },
              {
                "id": "0d3f474d-7ed9-4e9a-9455-230f536b922e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7c551f6-f159-4deb-8d83-e2998df781d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75b2abe1-51c9-4c2b-a632-8dc544d981b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d9b79f2-3c0c-46a4-8593-5a2579914e47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c44bc0bd-dbef-493a-93b4-1a0fa1496a9b"
                    }
                  }
                ]
              },
              {
                "id": "3bae7437-d8e8-4449-94c9-9a61c25badb6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "565eb07f-1650-44ac-ae9e-deb80befd6cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ee4b946-1a51-471a-be24-09ed0abd3cf0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a09b5b3-d8af-49a4-a04c-0ab3c07d94fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a473bd7c-6d36-440a-aef9-8ea76303fd55"
                    }
                  }
                ]
              },
              {
                "id": "c3e460d1-26a7-466a-bf98-71f2c5b531a5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb4a1691-4f07-4fae-a6dc-457cef3e30fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fafd9fee-2858-4601-93f1-6fe416c717b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "139570e7-80e7-4634-8daf-700124495916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "af66839c-f0bd-49ae-88b6-27d643494245"
                    }
                  }
                ]
              },
              {
                "id": "6eecafd1-7f6f-4e1d-a6e2-45439ffb38c5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d5b8924-55f0-4842-95a6-40c13f0dc5bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a15ce74d-1dbc-4cf3-8f73-55a090665f3f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27a2dcbf-e54a-4d5a-9ab7-029d9eff167d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de078765-218c-4a90-b36f-000552ed54fa"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "590e4063-617b-4c6f-ad36-480436783199",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b930e763-89cf-4e83-a4d9-b56680daf389"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "61dc79c7-b2d2-4568-9b25-a33752cf4857",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "649f5486-3156-403e-9edc-12f91e1e0e0e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f33ef247-2e75-4826-9afe-73e9c947063f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dc1b9d8b-403f-460a-bedd-1ad73a6ef06e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7696d985-2063-4493-a877-79f345b16e18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "454c4964-c87a-4071-bc9d-502ff77d800c"
            }
          }
        ]
      },
      {
        "id": "79da935d-d4ca-4735-bc95-07b52fe6db47",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bfac32c7-4ee0-4dab-a325-0092ab8aab8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b6e511b5-fe99-4c16-acec-31824fef5f8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03569a45-c644-4193-af04-0c1a48a1258c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "606774f0-2956-4da5-b427-a93a7ed14864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abef4cf9-fd32-417e-b124-975386e93bdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae452db1-e0e8-4b75-aebc-458e8dcc466b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "19a3418b-664e-4870-a796-30997e3294b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5a1c37-03a3-4967-98a1-8cecb95b5bae",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd95213-6f70-4c5d-a979-c5652f47494c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0100eb8c-a800-4221-9c54-1d504bbeab18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3761c0f-41bb-4fbe-a4dc-efa1983c9052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "788505e1-9bbc-4972-8a98-36bac5e14319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2974d4de-b389-4816-ac01-0cceef342009",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb893787-8e86-429f-8ab2-3a91f064bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12350a63-078d-4c17-9789-fd76db7f3360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d797a4b5-4da6-4a0c-af65-9bf2ad979c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "518bea26-76b8-4694-be09-eb7a1d29f540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3519b0a5-74ee-4f64-885e-e6cef8bece0e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c3f15d-2a53-460f-ac30-d91eb073c5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90202f1-c6c8-432f-aa97-39bf3004d720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cdee34-c302-4a32-a389-ba321425e28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f835afb-bee5-41d2-995a-6d3b4fda4c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064f0908-3a55-41fc-bb34-d681d999f637",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78a4818-909e-409f-89bb-eaea70fc6d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430a3a98-6078-4b99-9995-b2d58885c7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d0f8d5-54af-453a-83c9-a0c470e98269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71627091-6df4-4726-b27e-383d6f483374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e81819e-b1e7-4aa3-ae02-3528688f804b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f0bb0c-63a8-409d-bdda-7be42afd65f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "184ee02a-5044-4cd4-8aaa-1f50b8bddaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e275924-f27b-434c-8ca1-6978fabc99e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "138725ef-bbd8-4ec8-989a-893d9f44ab30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e007c9c1-999c-44e6-8b51-6ce2cf31df25",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d8aa6c-a974-4c51-813d-ed70bb0ce5b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8b3bbc-1569-4654-b961-468264214ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2116ca3-7d59-4a7a-9fb9-6b5a59d198e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d52b34-26a6-4f20-994b-9ce49aa376c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4069773b-33e9-4d51-8ac4-5b5d872e8711",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43cf9f6-61b2-4d47-a339-2e97194845c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d9d6ab-dbaf-4eb1-b1e2-4986fd2af612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c170f623-37fe-41bb-bece-e5048d96a5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b12fe7a-17e6-4c14-bbb8-33ab083e6f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99a3db8-c85f-4b1d-9d30-a48f28585223",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eb038f-926a-47d8-9e87-22144fe6bec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3eff81f-1ca1-44da-94e6-1c035f4ec232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dadb3d6-d44d-4335-83d2-686a2246dab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e77c82e-25df-4fa8-be48-46756700beff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abef248-4a04-4a1f-a513-21dec4004372",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce1efc10-6ea8-4a11-9c5b-aab8737d47e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e41869d-53a6-473f-8ce0-9c57a5bd3b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b918d2-7f35-4131-a38f-b4f101d5abbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0756435-df72-4b86-b53c-17db0119697a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bd45ed-169c-46be-b4b7-1184d90b2552",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6781a4b-8242-4fae-90a3-a1be336eb770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451730fe-a936-468d-bfc7-1fdbb36a11c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946867d2-e5cf-4776-84ef-9b06f234b06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f427c38a-abf4-44ba-8bd9-74db9c6b145a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc5429b-ea43-48d4-9bf2-3f15a2930e13",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f6fc49-cbf7-49d5-ad67-759aa19a67c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c79ca6b-3697-4a14-ad3a-720a17404a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a48551a-e105-4629-a9e9-9c442eef963f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7a708384-660d-4b91-9391-c2231d516a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a54c060-157f-46c6-ac79-5f86cf3441fc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fa5c64-94a4-4b1d-99ef-fecbb6547264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d930c7-8fdf-46ee-9ce5-2bea53fdd39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf18e0e-8be5-4fbd-a9f5-f6def48861f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "02708f10-1354-41eb-9871-9c52bd577387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5929860-d47f-4de0-b116-6ce352b4ef51",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5887cd2-2541-4502-b9a8-582b3c251e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d83173e-a2a7-48b2-b952-b36a214918f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0c163e-df96-4485-89fd-49eca35a3366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "065290bf-2c02-48c2-abd6-d279c53ce500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d15898eb-2c12-43a6-b2ac-a1fe2e8d1124",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694b88a6-5b22-497a-8cd5-ad55914a449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dea63de-a084-4395-bf41-cb71ea4b6228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e1dd93-6718-445f-9169-5c40747f86c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd53b0bc-64dc-440c-997e-b9dc4ec992a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bfe77b-1454-4f34-acee-0910e8341d39",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9453e29-d515-43cc-9a89-a687d8d214bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9212e9e6-8ff9-47d1-83c4-ede7311ee68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfe3516-03b7-4f90-95be-d0839ea1bf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5586ecc6-fd6f-4e03-a296-f6d64683a5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd31cac-fe33-4931-bf43-1e1f7d58a878",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f67200-4eaa-4b7f-8076-985655052a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153d1a1c-f14c-4132-8a2b-b3f4e045d2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ebfa95-9e2f-44a5-bfbe-4ebec2dcab1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd82f20-26fa-40ea-ac56-a4c010a1608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05a2b0c-b43f-40c9-86dd-a6de77bebf12",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc56a32-5439-4e85-9594-fd07620fa0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cc4707-f736-401f-82bc-c9007eaba992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7dda5f-ac6b-44b9-a599-6ca2213ac992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2430b564-3c6d-4d0e-b7a6-16247ede9b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65d0164-e6b1-453b-bdbb-8e9f2bbaf761",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f85b80-e3b5-4f36-a81e-f5a2743d283b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "606e5275-70a3-4963-bb35-c83a8356f5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76e7878-a09d-4718-89b5-ba282e450239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a1c85a-bb26-4279-8b76-c55c57b25d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aff8a9-5212-4996-805c-7fb64908f35d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b23a374-e31a-4b1f-9b88-f1c55cb9d5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c437fa88-555a-458a-a526-02189bde6211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36054e62-bd7a-4dd2-b601-fef0e1e40162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "604e6116-4fa9-4f7a-95f7-60d7114bd3bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a52c82-5912-4c62-a532-4559c87917f9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af63cbee-77e7-46d8-ba5a-6df6e853a930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a3a3d6c-60ee-4e9e-9667-784e6fb8e130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60092545-9313-4b34-b01c-5f1abcf5ccfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e3605b-cd3c-4f94-9b40-811c866595a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b63d4ff-ca43-41e9-a8c6-7d7bc46d27ba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bed60a5-3296-4616-948b-dfadda0ad437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "355cbde2-3d45-4b39-a65e-c589fbb7b6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5fd910-e0a8-4cc8-b0db-1daac82cbd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1786d3-c252-48be-86e4-12361c22a6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33fb615-3ef9-4220-8c02-72fa7769c7aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83775bfb-9594-4e65-af9e-891de9c32bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbc4e2f-2c83-4a84-a56b-659f2d8ae511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cd23b5-b121-45f2-ad08-396c69fd81cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e64ca0c-4f2a-4dbe-aab4-a5b4a0b6abe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f0071d-c8ce-4502-8de4-111d4677e0c7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93eb803e-b2d1-4e30-b0b3-acf8c716519d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "594c5717-4deb-4680-afa2-b367d60a0b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2adce63-58a1-4697-ab5e-0ca534fa6eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "211602df-97c4-4377-bd5c-2957c4a83294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeeb40a-a81d-4f22-a2de-b03879ac8977",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9470c6e-ccb2-4dab-9990-62693c711976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9806be81-5c33-429e-bb4b-ab6161df20b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf66a63-ae8d-4f4b-afc8-8fc86fd61140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62bbc373-85e9-495a-bf06-2f310ca85361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a1ef38-cc50-4ae7-91d7-576098e72781",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ed1ec1-26a5-4056-8119-90747dcfee49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccd2fdb-bc42-41ea-8cb6-c6fd526e9338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e42c3a1-0fd2-4145-9e87-d483532131ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac565c44-5eec-4381-bd14-963d5bea90c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fac7a8-9446-4881-a552-76291aaa0fe4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22645b56-2eaf-42fb-a50d-fba1fe9c5039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cd31db-027a-4d60-a042-7499e178382d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945bac69-cbf5-4e26-8a42-a1337a6eea31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "271eb352-90e1-4bf0-bf69-5c931770c46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2defeb19-0023-45d1-a977-0c375528f4ef",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64a1d83-a6cd-4bf0-a7a2-3a3a0362b5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6563632-e230-4561-87e9-117a0f6d1bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92cf25e-df94-4e17-a57d-e726f46dc023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b431063-d34b-47a0-b3a5-56c3192279d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71dddef-95aa-4ffb-87f1-0fe31a3aee10",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad2d3f0-7fe6-439e-a883-52b54f8ced7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8e91b7f-a39f-474d-9ae5-ad7e08b2f0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e54f2e-b2c7-41c2-9f34-3f98ae811cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "127dad28-ebc7-4e26-81ef-3ef84bd8b61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2597a8e8-2f1b-4172-80b0-ded789d5be1a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe4a121-802f-4dbc-a0bf-aa63aeb0a3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106b9c80-747d-41ae-a05a-a84013bcaecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a48ed8b-00ae-4f78-a60c-cf8f6cb06ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23a49cb-79d5-4700-a728-1d5005398494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01108925-398c-4678-aea8-5f582e9d70f2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66846805-0658-439d-81b0-caed821f158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68123fa9-9146-43bb-a7ec-3842e11c91bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c750feee-7886-4314-96c6-ca4359dd7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f650519e-f4bc-4f8b-a9fa-b806d043f4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d35d58a4-0f18-4533-8fba-6a466b7a24ba",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe08af0-8ddb-462b-9cac-efb4a6fbc1dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfeedc43-e9e7-4cb4-848a-34c55476db83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa0967a-bd2a-423e-b20c-dfb8f62d2876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f06ea45e-7218-4076-b401-acf044f92462"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71cb4e85-ce29-47b8-9f95-d21b42b4b28e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b631304-38df-4445-812c-dc75d5f3a6e6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439eeb68-0b0e-4bcf-bc76-1358beaa6e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1326cb42-ae76-4a14-bd34-fbef027f0469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f914deee-5dad-4254-a056-1a62a387ffa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "354c44c2-b94e-4fbf-875e-c197867fdea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35300a46-c553-4e6d-827c-bc4d90ba3e43",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1103168a-ba33-4254-a59f-a4a17a0b2dc0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "735fd44b-60d2-49d0-ae21-384e8e25e342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea262c3-8679-4945-8507-c02ab95f15af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4b7f9f6-b29e-4369-8a80-e291b54bf0e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76743047-2b6c-41a2-b680-9428364b9255",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5e0568d-30e4-4ff1-a6e8-75ebf8e96f77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e448d19f-696e-4f7b-816b-6fe05e79c053",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bcbaf93-a0de-45d7-b0dd-6e0cab3807ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "172b10ec-8db0-426b-b52a-0cbc9f2c51b2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90c9722e-930d-4f35-9c0c-0f22be68a84f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b53a3f00-d6bd-4064-864a-16c52151ed28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d3e8a20-263c-40fb-ac39-bfe3d934cc3c"
            }
          }
        ]
      },
      {
        "id": "d97ec1ae-3257-4f33-8708-dd89b3045979",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d40b385d-cee8-41a6-aa1e-c426283cd73a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6adb07de-eb30-4dbc-af3a-8516f9c941ae",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "194f91a7-42f3-4ca6-9879-7cdc87fb594b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56d94bf-d39d-4f1c-b213-f71c3c6c7598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea32551-6cba-4887-a7f3-f1b7cecc7969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1865d422-0aaf-4d20-a205-d2acf72592f6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e34d717-6623-45a8-a8c0-b35a554d8168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe71b2b-128d-4a0e-9aa6-9171075b6e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a6840d-cc77-429e-b72a-994fc0de1138",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd1b78a-dea6-416f-b772-6fbd2ab52ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7de127c-416d-423b-bb1d-56eb7b1c4268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288d6166-b475-4a6a-a606-5d02a0a637b3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f8592d-2226-4e83-8fd3-1eb8cd44a471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faba8b9f-6536-42de-8f9d-77911148d15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6860c614-9704-4958-ae50-033f8f53a5c7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75fb96b-098f-4d52-b4ff-c0284edac8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcd707e-9171-4b2b-83af-86a39dcb54e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561b7b48-fccb-4278-b053-6493eb27c830",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e4a3b5-1a67-4919-9599-00526a8a84be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8713a640-806e-4cff-8eeb-eeea8668de23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b55b069-d9b5-476e-9149-d939e7eb6944",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac94345-ef5b-4caf-8138-a8f412db3795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bd423f-3e58-4b5d-9b85-a9f6af8556a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef47387c-b346-47e3-a845-514a0450dc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6c07e6-aba2-40ef-a6ae-01dba84e7f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c98a417-da97-4403-82cb-729471c2f784",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da16a7c8-9a46-4744-9e9a-25ec54bb0a32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373dc75b-47b8-4eae-99fd-35616b83e876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c55714-2975-473f-8c0c-25beeadffb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49094050-1b4d-45ed-8bd4-a9c5e5788359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7bcd86-7ed8-4923-8925-25add63babf3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e74daf7-8b1c-4971-97fe-41f3775d5ca0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb7ca60-02f9-4068-9aff-492bd14e4219"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857126fa-f7fa-4940-be0a-279186b3aa22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d3d5a92-04cc-4520-bd27-a7707319307c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbf13a9-adb2-41a5-8ac2-99fb2b5031d5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69b127d-f4ff-4a2e-91e8-414eafd90f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ef2a9e8-97bb-40c7-b5e1-49309e388720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01279231-129b-47b8-a640-1e48648a686b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60f8bd1-649c-4804-b28e-885e935bdeda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1f1de8-b0ad-420a-a909-50573b6ad12e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cec670-0a21-4cfc-b61b-ac9a7c239370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bd50bc-acdb-4de5-9984-9364b32490cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad976b6-5d4e-4b8f-bdc2-41059770100c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2cbede-9c23-4bd5-ac84-32b907187abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d9f6dc-5c3b-4e93-bb7e-015f2335c3bf",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0962d28b-ce6d-49fb-9ef4-2f5351dd0564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f59a10-1d1f-4462-a19f-1237b04567a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed08ee8-3cd1-4486-aeb9-083304a35ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbf820c-766b-4461-9d18-4adee4619c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f3bdae-cb98-4001-b7d7-884bb0273d9c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a9931-b884-45de-a6fc-59e274fe44c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51612f07-77e3-4ef1-9864-d5e064ad727e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5444a567-0d6e-4dbc-874c-fcc30076e9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab44d989-9b6b-4110-b991-4f41248ab299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbebabb4-74c6-425b-9d22-c9788da95985",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685ea676-4297-4b56-b65c-456dd6852d68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c860320-8cba-43ac-9b90-c26fbac7ef6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4264cf90-6661-4c08-b0e8-e782da7709c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589e3afb-6c12-46f0-a803-b5a75370163c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4641f275-3b5d-4e79-900a-4b62987060a1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8a0f09-ce76-4908-b424-187d870842c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96af353-4949-4c20-9778-869df957c4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "229d2077-1651-45b6-9b96-59e634e39b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d603384-db36-48b1-a809-8c3bb4c06fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4978f4c6-1b4b-466c-b8f9-e1714c7dd718",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216e9ce1-1caf-4f6a-8625-e408032e2eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16819885-f8af-46a6-a5d6-d8561783a2ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87fbd64-8f70-4ce4-a0be-c2e3ef1ffb53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3e3bec-48e7-4f92-b067-b37af2a2c967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92204e3-2998-454d-a66e-81f97944f10a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0d4398-8c57-4315-8385-93eddc4e3553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22cea58-2cea-4b93-a603-af60b280a5a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813ccd53-79ed-48c7-b85b-9aa98e9b680c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a89eb5-a01e-4214-81ac-92a77ecd0e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d430d0-262b-4ddc-9c15-3ec9d54745c9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd9d213-d8ee-4069-84c6-d2d08a8537ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999112bc-5b16-4f6d-b8a5-7ad3506372a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32902360-cc77-4c28-9ad2-d2620aa5f7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a130b8ea-901b-4f8f-ac9b-78a2b030b802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e96a5f83-b90d-4f7c-8ff9-8940274ede65",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a733ea9b-f469-4da7-a9aa-d09fb0c7eb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a6bab4-45f0-490b-99e8-de1225cddfec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cfaf53-548c-41c2-a28c-b433e683bb4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9968006-3b5e-466e-b8d8-94ca76d63d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fd301e-3e9d-42ab-bff8-4b857cc90a33",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff7a2eb-410c-4863-9e39-f1b58f4cf6a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36375c4-12fa-43f9-808f-59dc02785b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c5f63a-3052-4142-bcbe-07a2f72f4809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b88a323-3c89-49a2-b57a-cfcc4c86a8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3f7793-0454-486c-87ff-26d9a30e5284",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545e47d0-5d67-4b34-83cd-5a80298d164d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d8c6c4-803e-46ac-ba56-7a4298d14e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6023aeb6-f762-4987-91c6-0cc2589db863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ac1748-bc43-417f-b992-7703f5f7f42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff1158f-4146-4f26-b668-6e56141df875",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812aafe2-636f-44fe-bd5f-e5a2d54a09b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84a24da-5e9c-4568-8220-f702206a0669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5901ecb-cfee-44b9-85fa-cfcc69912098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931687ea-70cb-4c6d-b228-c2fe719bb2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5854833d-448d-435a-a3c7-b5ab210c2cbe",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29cf863-0343-4f04-9f69-db7a595dbe08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af0f1c31-31a4-4b12-8798-cc7d1bf278ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4386ab-93ec-4ce0-ae9d-2edc3661548f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d056d45-1761-4bef-8e32-f986fdbbbde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edaff449-f55b-4b68-a923-f9467ad26d63",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142c92fc-a8a6-4866-b292-2d86f5710745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eabec60-3eb3-4ac4-8302-32a062045a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee923e17-28f2-4ef9-9f88-e92ce6b4cf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96a429e-b84b-440c-b4d2-59e5752ce6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001c5ad3-c5b8-4176-8844-6587dd7f6668",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e193d820-6a73-414e-b494-724c3ae405a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4c512b0-f659-473c-a9b4-13d6cb8e0b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc69dd6-2804-4b68-8e7b-58022660f2af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae00e222-616a-4578-9b36-818e8dae594c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30b18eb-c747-4c7c-b153-d3962d09806e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8ceee8-e740-4f89-90aa-4b08ae49d827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04c24539-bdfe-4f75-883a-ae65f0416f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c110c1f9-1e00-4df7-b7a5-c361a956641c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e21079b-2830-4121-b152-f985d0883bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24ee33d-57bc-492f-8789-289071c115ca",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941e72c6-92be-4d3c-9a1e-62b42ca2e457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68df4e53-a3ff-49f1-a05d-3987c162d754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2230ab66-6579-4ef0-8b03-3c98ca401fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665a6386-f66c-4985-9ce5-c4b2ff58da49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac2ea8a-f5b6-4b4a-b3a9-8b225ecde7ad",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8b1891-ba2e-41ae-94f7-6af0ada27c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23115c7-7757-45ee-9fdf-a8dc6878d397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4685f1e-49f2-4a88-aa3b-46c8c2054477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7ad761-49a9-4a52-aae0-419ce69dc4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d2e09f-18f4-48d6-8382-fc052580e222",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc1cf7e-db47-41f4-bab6-1fa3ab670b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9500043-ae6f-4e6a-95fc-f829c44a25c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4eb821-75ec-45d1-b459-c8e939c200a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1bece86-c677-40a2-80ae-f39f35f83b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd7d263-9f14-49f0-b9bc-66f1842e0155",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77449e9b-8392-43cc-a48f-ab111a0245d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "447eee6f-db4d-4828-9677-cd2d0e946bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba04794-4ef0-498d-a84d-93c287e5d59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d98f33c-317b-4ea9-b178-fc304199c802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4b926b-dbd6-424c-aa4e-24c00ab15a7c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1992cf73-193b-4bf7-b4f3-a369915b23ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9d3512-ab5a-48c5-a10c-c3281c8c6fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6184f3-8def-47d4-b8f6-d43c0c033972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6462f34-9545-4656-9987-503c24c83147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bd3442-5945-485a-9b6a-857bf69c598e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fdc24a-4273-4727-8078-a45b5a7b413e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "493e48c2-9b6d-4d40-8e78-1f49a445063e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d508c9-6c03-4aca-9982-0b11e505f6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca9eb15-004a-44b1-a096-8fc3207f96e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a1812c-4dfb-4bc4-a3cc-3ffb3fd1021f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fdae83-4857-43db-849f-cb095c8d4372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80525c9b-4180-4ecc-86c4-fc6bd44c3f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d982d909-1b4d-4308-89c1-d658b655bf79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da90db53-5305-4f34-9098-93d44c3cbb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a439e62-5788-45eb-90e3-3acb3fd8e19c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6306c7bd-39ae-443b-b911-3033f954c17e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b3357ee-6762-42bb-b6ef-077858341787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc31f5e-8f2e-473b-959a-75c7b9ab06a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3863395d-c395-4c30-861f-6a30eec69ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b1905b-1bc5-4c31-8f44-c75457e4997c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21f0b4c-94e0-4fed-8760-21747c799e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c560ed20-7fd9-437c-a98a-94dd8f55fd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf93081-a3ca-457f-9a52-2107bf9476d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e39de8-0422-458a-80c9-21f9837ecddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598becaf-4fcf-469d-8e2c-45b2a1ba29e0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85da1e56-f7b7-4b03-b376-16a7f0710414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f98005d-3463-433e-b3da-91d6b89c9d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f9077b-07e8-41b1-9393-97b02a340435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95eaa588-0d2f-4ca9-bda0-c38ad2d24db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0f7a15-8d5e-4496-89f0-b892a1123030",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83cba10-2c80-4837-9bc2-d4e3de2f57a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867e8576-d1b4-4586-b7ce-0a5941d7737f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0d933f-38bb-4319-86ef-5fbd83381d75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbef9a5-51a9-43d4-975f-e4dd31f43006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbea73f-3624-4ff6-a361-735607b1741b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db3aaa9-ce61-41d6-9016-aa31f79827ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d0a7d2-d412-4fe7-ba0f-df5cf4806d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c13398-b221-448f-bf3a-fa9651b95765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807fc3a1-3e2a-406d-b5b0-45aa496194ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266bae5b-8924-47cd-b326-dd9aff985d42",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66800023-3949-418d-a535-42cb33ce7abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af52747b-5b55-4d81-81cf-6df758ac4445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fd91ef-20f6-4496-a471-2503e456ac59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3d4706-4b3e-4bcb-b240-0f43a75740bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d570bb5-2180-41b0-84cb-667a362ab0f6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a568438-63e6-4d40-a9e4-19d20574d4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9a6df5-c43a-4a2c-ba5b-9364a5848c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4adf802-a408-4c10-83fe-710b425766a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d651ca21-4720-4594-a9ce-9bc589fb4c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afacd50-220e-49ff-8ece-08f5bd718f40",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae1ffb7-d9dd-432a-8553-a5f150d5638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e34803b-29b6-473f-8d7c-8f34308f672e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8236f3b-cfbc-42a0-b3a6-d6c433a9c082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ec86d3-f1a2-4fc7-bdc2-ced5c9c7e5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdf778a-72e6-4f36-a6e8-0c488a38c058",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3a31c8-3fdd-4c02-9c2f-35a28ffd314b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeaef0aa-26a1-40bc-8d1e-07364c11b1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bb95ea-a891-468e-b714-31c1a3f371ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cfde0d-9028-479f-88a2-ba52170f895a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543ba039-1638-49b6-be41-3e48c0ba7fc1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90118602-4e78-43cc-9c50-aa9c2012f07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a857ccc7-c489-47df-8595-d79953ac696d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e78c650-0e02-4ef8-a0e3-5c674ee98324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3407298-015a-4da7-831f-8896ebf262b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d6886d-3c15-49ca-bb9a-87a4baec676d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bd7413-d6a9-4b45-9487-08f3a5ce6d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e19b9e8-f246-4fb5-a811-ab4015fdb3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19689085-0f44-4b13-bce6-c8d93e026093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57518f59-db45-4dcd-bc6a-b194434bc46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4b969b-da57-466f-ada7-6fb1344f4520",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb83d77b-e6aa-449b-8077-ad17d3575649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac98a5f-3e86-4947-b863-08da772bbf70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8d4bab-5bdf-4dc9-86d2-f251f583f3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8954787-fd53-469f-9900-4582eaef1a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f716a7-78e0-4d1c-bd3a-323a10754770",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70620e8-0e40-4a40-8c89-cb630170c807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32930de9-2af1-4a79-8be5-ed15d7200bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50acbe1d-5dcb-43b1-b93f-196ab0a8795b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7936296c-e1ce-42e3-af8b-b58c9a32ba2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69362b3-ac1c-4cf2-9a90-0a5ebe3dc596",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37edf004-afda-4ca4-8690-83e3af1a57ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a3105d-7741-48dd-8ad8-2d43dd3cdc82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3036c073-7009-4e07-b492-f5f574c5bd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a60091a-e6d9-4b21-b84f-66fc2cbdcbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ac0be8-5848-45c7-9c3e-9d5da9230ab5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1be6b63-4634-4e8d-a3e4-81d2fb474ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae7b3ad-1758-42d8-a545-e63eba058713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ab47a6-5f4e-4e75-b412-a17eade8251f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3751ba2-33d5-4612-ac24-0b1126430a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a4ef94-16ca-4f4d-a2ca-985abb71aec0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a95ffbb-9287-4aea-b3f5-a5cbc092546d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6468367e-550b-4107-82d3-97152c7cfc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e46620f-7eb4-4cc2-8607-fd43ce0c605d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4875d780-6273-4e04-9f9a-02defb8050e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7650c05a-e64d-43b5-85ef-7f2bc3c54e9a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782228a9-e157-4dc7-995c-96a5cbafb4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73218a5-aca3-4977-b84e-5ca38016dd18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f51ddb1-1bde-40ff-bbed-1b80d5a05a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fb5a72-2105-49e9-abef-9b7796c3f09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cd2922-a7b2-490b-8d99-983f4e7dcb20",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd48e606-0676-4147-801d-a1afe0865a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24377b1-4813-4674-ba65-ec12e602fbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8ae530-94a7-49c7-99c4-f84d80ecdd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7ba716-5d59-438a-98b2-cbc4594b76d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2f5e75-4453-49a9-9f6c-dbf60df546bb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185e2844-f3bc-4d56-a469-a442cdb7733f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd48b9ef-717c-4309-becf-22c642616a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03152cc0-3533-4b38-916b-9097111d8e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6107268a-afda-45a1-8102-0d995b57da4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673bd54e-a779-4a6f-a067-b0b43d0d291e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b61a30-0d89-4ca0-8aaf-e5dedc8ef28c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de07266b-032f-4451-aaab-5610e04c4cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e802894-042d-4633-9174-1fa9caef166a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75487764-6def-46c0-bd33-c76609d0fb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1410b43-b486-4961-927a-201a6bd7db5d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a5429f-e750-447e-833c-1706ab6ea04e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca351d74-7e9c-492d-a19b-769c196de3cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ea4917-a96b-43cb-bb03-08b8b351dacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d36c92-0c63-4120-abda-22555eee0655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3774d651-0b72-479a-9a22-887b3fab1c19",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd312509-b49f-48fa-b9c9-8444e6e8971e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d277838-9fea-43e8-8d72-699a162d5fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b5fca5-0c80-4a84-9053-dff662e6501f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dca156-1942-404a-a18e-32e66f814eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f431cced-102d-4c9b-8889-a66d5cca3453",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd2b7a4-d46e-43e4-8a21-0e34211f1409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721e5e36-8e2d-4716-84a6-0fd2092d1c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6abbcc-379a-4044-bb9e-454730d542a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d01ac8-8644-4737-b153-47ab84e96bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a37ce6-9c2d-40b6-b98d-573ea2038981",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf997a72-a36f-49dc-9f5e-363fa6ad9b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0aea8d3-6b44-4055-8418-fe8dcb3e334e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd1f812-ecf7-4030-815e-7f2755f80ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2d87830-b118-4fd7-9c17-08334b15ef6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4182ffd-ab49-41eb-9258-5a50c4bacc43",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a1a36f-e7ef-4aa8-8dd4-31a8b1cb8b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b46ddd-0c37-41bd-8d61-843cb2954583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f78b25-894b-4f71-98fb-6b38587b2f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2144d9-cad3-4aa6-bdbc-27f17c11662a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a2a510-8484-41b3-ae03-3a817e991610",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455ed455-b7f5-435b-8b0e-ba3beffc53fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687e2077-d0dc-4053-80f3-aa2ba33a906f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17471ae4-2b54-45fe-8d58-735c76c76dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256c865f-5466-4cb7-aa16-5b8cc4b90872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ae2322-2482-474f-8727-89ada1c41a65",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567248b0-6d67-4e23-9d87-2bd353596e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63792980-e211-4f8a-94dd-13fd6d309054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc56752-7e6a-445c-a8b4-42abde112671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade99971-c088-4bd5-be57-651377dc56ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fd80cb-69a0-4e1f-9a72-a1e5039b57ed",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f43bfb4-bb15-4054-ae95-4d408054dc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1801d45-d856-4824-ba94-b274d94b2d6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373ed017-d481-47a0-90ce-fdb511cff00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c76ff1-f6f2-47fa-9e05-4595b9de8aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a07521-1082-4701-b86b-9dd3d6c70c0b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a4fdea-c18d-48f5-a4f7-690c09cfca2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2f925b-4f4c-4f68-9ed0-401aad081b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e78882-a066-499f-951f-cfe0fd0262e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66749718-0b02-4458-a80a-0ce14e46abb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64552ee-639d-4d4f-b35e-f04a36ca5593",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e2c61b-f867-43a3-837a-51eb2f91a66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087f4235-d2b5-4268-a13a-52d63bb65907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f81bbe2-bbae-47ca-89ed-d50020730c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7e0d3c-7aa4-43af-9f86-4c8effb767a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5979b811-7b07-4eac-bbaf-cbaa132c65af",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48a3f80-728b-4260-841c-c2993c413153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e060f95d-170e-44fc-b597-db48e5d91c0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25188e8-71c3-48bd-9e2e-f49000339475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4148f3-0995-4cc2-b5b5-8e2c84c7c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47b1f9d-ff22-4aea-86a8-b36d7456c950",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c96658-e7b8-4a7d-b9ec-2cdd2e7e522d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83af1f37-5e9a-4245-9c76-dbf806f9e738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "628f4d70-9ef6-473c-a465-639265edba5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d647c18d-b8b3-4cb4-9417-b39c41fad98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1f26d9-0864-4a2f-9995-845f496e8971",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4675d831-44fc-4415-b58a-aa2b3aafb89f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3734d8d4-91e0-489a-8a1c-180b27db8008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b759a72b-d29c-42aa-a62f-f1d19072393a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f465d957-8da1-48d8-aade-83f04164c94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0f7044-b73c-483b-a058-4032e53e0ad4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b349d36-b337-46ee-bafc-ad6b84458cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62c8bf5-9f2c-4ec4-9fb1-a582e9b29a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37fdc44-6a06-4c7e-8399-9231abecff65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c45e5f6-f1b3-4a7c-998d-2b73d0882f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cac38f6-5806-4b8f-9d1a-0d72c1d55cea",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa72735-6334-4d19-a02c-b5e4cc4abc20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72671cbc-6186-4d62-a921-3e7099414531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9a4e5e-1780-4965-9880-2b665d06ff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01c7518c-1067-4a85-a75b-cc3bbaaa287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe2c780-337e-4717-904c-efe9f69a2f9c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5657af7-910d-47fc-9d47-56ed4260fd36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67ff3d21-56fa-4bb4-9e63-82412814dfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5382563-4622-4e64-b5ed-8d1e42b7a349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddcc22b-f0a7-494f-9d1d-8cef0c663577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff1c31b-9022-4267-9cf5-92cbf5468fb3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28191551-5562-45fa-9dba-a16a19a9fa52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a384b327-d6c9-4689-818f-d715ecad4b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5985d8-bfd2-4e58-af1d-05c8cd9b9abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efe32aa-5294-4601-bcb8-ab9239aca29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92715f6-0f04-46a4-8e6b-b913216df006",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b07db5-ea9f-4100-8f1b-e43c73377c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107e0db7-4a95-4775-b755-b00c02dfb820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d659aa6c-9036-4cb9-a0c6-3030b72096d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33628058-46f1-4750-a6fd-ac2035f345d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1f1830-caaf-4dfc-b2c9-2dd149d8fa2b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89063cdb-d91f-43f7-8125-f2a188de85ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53153fa7-c21b-42af-ba91-0c65f3e1308f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e3efa1-74ed-43ce-922b-4dfff7a40a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a93c882-0519-477f-8c20-713489ffce2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd1069a4-5497-475c-a499-d89443c2b2b4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6ef95c-f2ac-44fc-aea8-3547b8637ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c651acc7-3fb5-4cf9-a009-ff94559aa739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f0f9b3-cb39-4ac5-ab04-c58e0d921dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0933eb-1525-428e-b832-a9a10ea7b804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cc26cb-7fe3-4d4b-88ec-97e111f248dd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9802136-0eb8-47d0-a28d-08266a142c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e0ebf68-6101-4fd6-ace5-0265bd074a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2065ea-ef12-43e5-acc8-97a133619a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add3f314-1291-4ba3-9a3b-2b3047d08c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f49052-b7a9-41b6-a844-8f1f24f610c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41e4f2a-4a9a-4acf-a1aa-d5e693ecf405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbab64ae-431c-4aab-8ff7-428b8f69559e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df46f92-9bcb-4e95-b750-fe27f2a58629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf02e9a-621a-435c-b990-0cd43b0a93ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc65ed79-e5e4-4f77-ae40-bdde92ff1f31",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cf7eab-f8fa-4160-89aa-7c59d461bc5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2f4f5f-f846-4111-b8d1-7c592babda59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b939953-37f8-4817-b1f3-4bcddc37377e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2045a205-9e69-445c-8e5e-544997bda70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb933b8-ccbd-44a1-9745-ba44bd36dd06",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55c8e62-3781-4573-acf4-fe35a6920d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60b32c38-0981-4310-8358-3e5ef8696a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847ab9f3-b00a-46b6-8010-ac66a468c485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50429bf9-a155-4ddf-930b-acc42a13bb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef0f07c-cf2e-449a-ba8d-dfb535354340",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8571bf7-34e8-418d-a635-c453d6f2755e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b58470-9ae4-4691-8d79-f1b52b5c38f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4138b3d8-a3f1-4ec5-9985-f8fe71c7050d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7c673c9-c0b9-406e-8a80-3ec8d888468b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf26cf1-1d4b-4352-be81-5ffbc9aeee1c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520f0e47-f8be-46b0-a4b5-f1e45523ef9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f74b3b-7879-4a08-8be1-02ff71b07988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717c8c9c-26cf-4c66-a5bd-45823a03b48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91778cf-ec9e-4627-94a1-db1dba2f3e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a52c7b2-73e4-4a8a-9fda-9a854ead9e34",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423a99cb-9edb-4b6c-8a64-4ed0e2a62dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb77c599-7e43-4424-a784-383603e9dfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14b41c8-01d6-4023-8f38-bb87ed264307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033c7060-2f68-4d00-b6b5-279253086dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6440b4ee-9713-46b3-8584-f33a750572ac",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a9e0ec-fead-43dd-8255-088564eb8259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf30b1d5-b5c7-426b-91b7-5719b7771659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c50eb551-785b-478f-9e6c-045e4ac1424d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34bea820-5f94-48dc-993f-77177342462d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a136018-4584-42f8-9283-422292207237",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a124ea8c-32fd-4174-8d89-0b99329f7dd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2e9080-faf4-4498-825d-0fea1f4da795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc3dd8e-4287-4050-b0db-8509b9073fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdae923-e0e7-4913-bf47-7b132e5a9281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9658c4a3-2e66-4562-880b-b521c46a07e6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762d6d51-363e-4c45-ac2f-abb51c2f7d4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495df4b6-e8c0-4b82-aed2-87a702cf64c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4b0e80-abfc-4f0f-80f4-d6c1df001c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef260115-7524-4a76-a61d-6698b98175ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af45ca0-fb80-4b88-8de2-1544bc292960",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0624547e-4b52-4173-8de3-e27f1530c65b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b749c00-5d1b-4d58-9a1a-f097d9a6227f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8131664-e2b7-4809-9e0a-562cbb8bfd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4119b7fa-58fa-4794-a51a-e8e83dd18ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4a2c99-3236-40f8-b469-a73ff260f3bc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9152c513-86f4-4209-9917-8a050bce0217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea199980-6ef4-4ecf-a914-e17c14a5aedb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d229ac-1a88-4aa8-bb3f-62462e3c6936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358f6171-4687-49a7-acd4-c75152c2a403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1140bfa6-b3ea-4cc2-92fc-e550fb50326f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb21dd5b-1e2a-47da-8652-afd129f616d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55d6393d-401e-477c-a512-c82d7de4ff26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c6bd64-6877-4140-ae25-5a215ea39b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dfc431-159f-41df-83e8-3a9ea36292dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6921ab3-a48b-408b-a1f0-e7ade9cdf81b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a99d533-9471-4e42-ac44-7fdbc3a645e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6525ee4e-0b8f-4f7e-baaf-ff229e7d911c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbeb7be-49cb-4637-9dfa-9301f91860df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce32df6b-2dea-4fbb-83fa-fb5444b40fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d354c357-37cb-4d6f-a8e5-a8e0cc002f16",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fc44fd-366e-4c24-9b45-e8f5109d8ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b67754-38cb-41d5-ae8a-0121494dac89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dec0e9f-8328-4596-ac2b-3a2b56807fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e29c075-cd4f-4491-af3b-2acb459f85e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a40b51-a87c-4d22-ac9c-237787ceed8c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707732af-2f91-4c08-b29b-1124d19f516e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "673b5fc3-aebc-49c6-ab16-c0b335fd96c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d7cccb-beb2-4879-bdb5-a45540833d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf24f73-e1c8-4d88-b6f0-7f8963a56340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4927a1f2-5bd5-486a-bf85-d6f98d82c022",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1511f854-a176-4cbd-aedb-f67b2dfbfb77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8aaa2a-570a-4062-8b50-297d2129c7ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "561495f2-9e4a-4922-ac8c-b81b111483d5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe55280b-feee-4e43-954d-2777c2565722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6658ee80-0173-487a-aef5-5e366102300f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d23430-8512-4404-9798-e8d67adedb84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d7d4a73-b452-4dc2-a0b8-9b9d65fd37b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91449b61-ddef-492c-8f05-2862ec18d9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7014bd-4cf7-4dad-9ca2-94c739e6e2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d1472f-54f2-4809-ab51-cd3b59d077a3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc41a796-48f6-4b54-a93e-f97dceaf7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74461094-66a6-4b5e-b8ec-ed5485988b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bc0f9a-f3a2-4422-8826-a1a7afbf4204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3684329-facb-4080-9969-c8f628a19c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599da3ab-cb7f-4025-9915-10aaf97698fb",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c1df56-07d1-40f2-9dd5-54e0eaea31e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a41d0203-a497-4387-9520-a29ddeba8dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397d81ef-c40b-471f-83a1-2a7f4d132db2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187a25d9-5cd6-47c4-9de2-bd4079a20dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293eb007-a9c1-4e5d-9ea0-03c542a60dfe",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c74d3a-38b6-4ac5-81a5-817aa5054d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a7bbd7-927b-4010-98c6-949d6f0119af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65729aa2-fa29-4831-a8d5-17892ce087b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7357ba45-1b89-446c-9e05-d443455ec5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43645a71-5fe2-41ad-b903-8cea604322b6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c64528-6d38-47df-b391-4d0bea2e1140",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a461833d-cbd5-4b17-95f6-9c1ae70eda4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd02987e-379f-4a04-ad72-3b7446f0339e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6ca4d1-80fb-433f-9e4a-33d45930b1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7814d64d-c1d8-466c-9b5f-8ca33854f99a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a1af63-f7fe-4054-be79-7700cb5ce042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8916e66a-58de-49ba-aa7b-3945627f1f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea10c6cc-2912-4fb8-b867-c3b5551cb548",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c00043-7c6d-4231-8046-67ee63f29b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c45aa64-974d-491e-8047-a9730daf80bc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0222828b-cbca-4d5d-ad9b-1e5e278e90c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d5d324-cd25-4b51-a0a8-d1952438f2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dcbf0a9-abfc-40bf-91aa-04da3b6747c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cb008ed-e7a2-4fdd-ab07-eadd817479e0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f27f6143-d987-4131-b195-6090e1f5f004",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d7aba7a-01a3-4fe4-9b9c-5fcdd1f47cd9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba43e20a-e279-4c81-8e64-0bcb42e82491",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12014237-57e8-4572-89c6-e1b6aeeb0e12"
                    }
                  }
                ]
              },
              {
                "id": "2d48689c-e5a9-4418-a2f2-143cbadc2441",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb6b3162-752d-4769-b95a-4b22b7200fe4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d5e3f9-5e9c-4b6d-8f5a-59081beae5cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0d1f5f0c-2fa8-4652-962e-16107817ff9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c33212a-d41f-4304-91fd-46649d1c36fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2aeee620-7c2e-4135-ad15-1728e24f86d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982dbeb7-05e8-43b1-a25a-ddb1eec38196",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0dad3c-4a13-41d7-9373-a68e6c31b990",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b381a789-ef17-4ed3-a561-cbcc59b91bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddad54f-30b5-4c6c-ae2e-a8f5ad9b36f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11ee4f3b-3a5e-46f1-b626-6773c44fb786"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3c69a38-8038-4459-b318-0b300186b047",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34b68fd2-e4fb-40de-897f-e0426360cc3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0542eb5f-2c38-4ef9-afc0-f9224831dcdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "333c7f67-64f7-4709-8b3e-99fb03ed9104"
                    }
                  }
                ]
              },
              {
                "id": "7f057028-f6ab-4ec9-a5f2-f94508a759cf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c3548837-aafb-4631-bc6e-ebf33b993071",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a8098b-e880-403a-a663-74b90099cbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d73a8b6d-1295-4499-b10c-d1d1a93baf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a811614-b84b-49f0-a8d0-a25526f0678c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a922c1-51cc-4be3-8b7d-d4e2a9f4723d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "43b256d3-c086-4483-9f3a-bee483f189e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3f2627c-2187-4a07-ba27-e19c538b29f4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc476143-b53a-4248-bd5b-0c1e37f8283c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6e987770-bbc2-4618-a32a-6c6c489b8b87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c882c7f6-dd31-4aa9-8643-020e4d7f022e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32db6005-9502-42e2-a11d-da9732cb7237"
                    }
                  }
                ]
              },
              {
                "id": "02343832-00e5-4654-a6f1-35efc61f66a2",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6292192e-7dbf-427d-b7bb-4fa45bfdddc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4c00b165-396a-497d-8f05-77673b6f2da4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81af9587-58a9-4d8a-9d01-737e01c2a5df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61ddbb8e-3ea1-441f-be75-53dd4b0ad6f3"
                    }
                  }
                ]
              },
              {
                "id": "9344a07d-0911-4256-bc8f-ac520de34c54",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec55cbe5-97a1-47b8-95c3-365ef4ae694c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7ad47adb-c2cd-47d8-9b8e-2a8ead14f3bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a07546f4-9730-4c7f-9a04-44fb4c8aaf6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15c450c9-d263-4f76-ae90-69f37ddc1868"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a0e354e-4b2f-4757-8795-f8f2044d9de7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "88998bd3-2771-41b1-aa6c-221b2a35b0fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b7dad51-7b6c-4083-aacc-1bde86feead0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a8515da-e528-4e70-81ce-5bdc2ac2b11b"
            }
          }
        ]
      },
      {
        "id": "55cd75ad-77f9-483c-8856-6acd80630029",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aa9d496a-ea53-4a72-9af5-3e5f5c7deab7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13654801-7aff-4a1c-87e5-bc31b0a8d7d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77033624-0daf-450b-87c4-44c38b7dc656",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf52fcd3-e76e-4814-ba6c-a67144e91ac0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6764cf28-bbbe-44cf-995b-af6f784ff9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedd3030-bd2a-4863-acea-4b641cae70e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f8b62df-e1bb-44dc-93c1-7bfafa6074f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea24d11-68d1-4cd8-b56e-2d6cce609de6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bc6ccf-1d4c-4567-90c3-f4c7e93cc3a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3da817ea-d5ed-4206-ad8e-dc7062b322df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3f3e37-b389-45d0-9876-c22a6759ec7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5d79e04-49fb-4614-968f-81fbc1195b5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15e0d6e9-2f9e-49d4-9542-fd461178fb94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09ee69cd-0225-45b5-9122-47b9cf3490e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54187d6a-f23b-4936-ad8b-7c4f25eb8f7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b707d536-5e2b-4754-81db-baaf729981bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5662dccc-e5bf-406a-a4d6-25510906affe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b2a64431-b322-441d-86ff-30037fa96f00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e385801-9e92-43c2-95af-a64bbd71335a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3359b67-de2d-4a95-9425-a5fd57279d95"
            }
          }
        ]
      },
      {
        "id": "9454cd9c-4936-4390-a31e-00f07247d4d8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c9aca003-042e-453c-83b3-36d876f7dc44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1773d35a-f3fa-4bb3-8e99-77ffee1133b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e379e1e-4f7f-4778-8dd6-ac20dda1b792",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66932125-6d2b-41a8-a77b-a6619e26976f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a202a2e1-54bf-4723-847d-db9d56b7b93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "036d3d64-f469-474a-af06-46c48552be03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a679703-b32c-4df1-bf65-d24571df2a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86eb30b-99cb-4a13-bfb7-cd50fd7f1637",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3ac678-5b2c-471b-b75a-39b3bce7e48c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "51c7a6e1-189a-4fdb-80e8-2c3eaa0e19eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0789fb-4baa-4033-a7de-68c281fa7d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74ee1035-5443-4e07-b920-243e103c42ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "629b1240-ebaf-4bf7-bd41-50d604976aac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e64813f-c3eb-4529-8edc-120cda9f45bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b6c71d3f-1a8a-40c1-9dcf-e127b05bae86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fed18034-072f-4f4e-935d-493c3d163064"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c9b4129-793d-450e-9947-882124ffa9c2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2610ab2a-b1ce-4696-9e6d-5c3ec1d8fc29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8110958e-78a3-4a61-8b24-ef86be3b4420",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5665a572-d450-48d8-963b-13abd11d2710"
            }
          }
        ]
      },
      {
        "id": "224515ca-8274-475e-a92c-1b31472c0f96",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "16a7c47d-823f-4c28-96f2-e6b49b698ddf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a72cf24-3a72-4913-8472-bff8e985a546",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9014cd7d-8967-4e05-9481-e303ac88d7f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c177404-037a-430e-a28e-48065cd16762",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0dcd4e69-a78d-4a01-95b5-a842e2df66a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ee1396-a662-4d5f-8aa2-3bb3cc0b1566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd12b766-c09d-4c71-9845-f46cf09cc698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d758cf-2f86-4eb1-b9b9-6a5e5d7f4fa0",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd5b332-ce17-4df1-8ff3-5946e3345783",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "846d5173-688b-47e6-9bc7-36aee26cca48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f715cb6-e316-409d-903b-fd186a4dba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ded4082-826b-4b43-8c35-35e4156301b0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e2aa6a1-6d1a-47eb-b561-41cefe22516b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b6beb2f-82ad-4b37-857c-e5268adbcde3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7993455-d571-456d-b886-9fc0b9a22dec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c562ef2-3642-496f-81b2-6d7925e03f11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba14ccda-067f-49c2-bdd2-dfc1b2dc5783",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bd45b8db-018c-4191-a127-eabee4b7f468"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2f4b08a-357e-49ca-9789-5118f9605318",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "419c69b9-f769-4fec-91f9-88d8f5d57ae6"
            }
          }
        ]
      },
      {
        "id": "88a1c0da-4774-4552-92e1-4a3ebab04ef3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c31c5417-9b4a-436e-b87b-f49cc5ec9b4b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f657426-92c3-46ff-9f05-1dd790e41a1f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c9a75b57-950d-4320-9f95-a583b1913677",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bbc0cf4-ca5e-4e6f-baca-33551a95d289",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e08d6c8b-7307-4643-bdc2-2f3e13f35135",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 470.291187739463,
      "responseMin": 8,
      "responseMax": 3217,
      "responseSd": 372.61831091769506,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670200683970,
      "completed": 1670200820443
    },
    "executions": [
      {
        "id": "6b7e5f7c-4811-4131-985c-c63a91b8456a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3bdd614a-9bfd-44a5-babf-cf11c67e2f0c",
          "httpRequestId": "3c66511a-de5e-4c70-a70a-1be135d8ff59"
        },
        "item": {
          "id": "6b7e5f7c-4811-4131-985c-c63a91b8456a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a2a90abf-0065-4204-ac07-34699f05cc62",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 0
        }
      },
      {
        "id": "64e3113e-7073-42f7-b31c-ef5adf4eb760",
        "cursor": {
          "ref": "20a9fd7c-c3df-409f-a6d0-b2b2e01b75bf",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b3f46983-5191-4014-816e-ddd03ef52021"
        },
        "item": {
          "id": "64e3113e-7073-42f7-b31c-ef5adf4eb760",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3783c496-c1b5-4b12-b510-557199562d86",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "78aa86d4-6878-4ce6-9a79-bfd82783da39",
        "cursor": {
          "ref": "174e0761-2569-4f1a-9487-2f729ddcebaa",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e00cc4ae-36d2-4aef-a49b-2b702269276f"
        },
        "item": {
          "id": "78aa86d4-6878-4ce6-9a79-bfd82783da39",
          "name": "did_json"
        },
        "response": {
          "id": "79c7f25c-4725-427c-8a87-a64fbdb6469f",
          "status": "OK",
          "code": 200,
          "responseTime": 679,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1339be6-8e94-49ee-9ff2-fc07011a0f54",
        "cursor": {
          "ref": "72f90d4a-404f-4548-8544-e4f2c269a1c2",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e5eb9bc7-a4a8-4971-8f72-8d0f812abfc1"
        },
        "item": {
          "id": "c1339be6-8e94-49ee-9ff2-fc07011a0f54",
          "name": "did:invalid"
        },
        "response": {
          "id": "92261cbd-30c6-482e-8892-a3b7478e8b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1339be6-8e94-49ee-9ff2-fc07011a0f54",
        "cursor": {
          "ref": "72f90d4a-404f-4548-8544-e4f2c269a1c2",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e5eb9bc7-a4a8-4971-8f72-8d0f812abfc1"
        },
        "item": {
          "id": "c1339be6-8e94-49ee-9ff2-fc07011a0f54",
          "name": "did:invalid"
        },
        "response": {
          "id": "92261cbd-30c6-482e-8892-a3b7478e8b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea1e9fa2-282a-4193-90e9-8562f17117c4",
        "cursor": {
          "ref": "56ac16b2-c9f9-4ba0-ac2b-a67b22a4795c",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5b66647a-6f14-43e5-af9b-5c6439af0134"
        },
        "item": {
          "id": "ea1e9fa2-282a-4193-90e9-8562f17117c4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8dd4f3ab-6d9d-4a3d-9cb0-25bd03b35b61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 854,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01a1685-d0d7-413e-8015-6464ee8a42da",
        "cursor": {
          "ref": "356bbcac-4935-45e8-b331-6a69150d7546",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "85f87446-1c37-4910-b1df-4a4f7a860056"
        },
        "item": {
          "id": "c01a1685-d0d7-413e-8015-6464ee8a42da",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e05e43bc-433e-4800-aef0-bbc58e7baa62",
          "status": "Not Found",
          "code": 404,
          "responseTime": 647,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533acce5-102a-4425-af03-9023d1636258",
        "cursor": {
          "ref": "af5700bc-ae65-46a6-b022-3498b38da1fb",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1cd117cb-6896-4632-b7bc-32c7090a8f64"
        },
        "item": {
          "id": "533acce5-102a-4425-af03-9023d1636258",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ef614f61-6bf9-494b-8a34-69a221fd3813",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dab17f-19e5-4239-8b33-e3f36dedf7eb",
        "cursor": {
          "ref": "97d65f17-ea8d-40f7-b605-d557a7da0b64",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "291d6bd8-575c-47a7-b0e6-0a593ee64f0f"
        },
        "item": {
          "id": "48dab17f-19e5-4239-8b33-e3f36dedf7eb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "57edf60d-e98f-4cd5-9ca9-fa337cdb3c8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 727,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dab17f-19e5-4239-8b33-e3f36dedf7eb",
        "cursor": {
          "ref": "97d65f17-ea8d-40f7-b605-d557a7da0b64",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "291d6bd8-575c-47a7-b0e6-0a593ee64f0f"
        },
        "item": {
          "id": "48dab17f-19e5-4239-8b33-e3f36dedf7eb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "57edf60d-e98f-4cd5-9ca9-fa337cdb3c8e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 727,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d3296e-aec9-41be-9943-1b27f3797be8",
        "cursor": {
          "ref": "b9cb76e1-aa06-4adc-95de-58e06bed50f8",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1630cd26-f05e-4ba5-a907-02735175e1e8"
        },
        "item": {
          "id": "76d3296e-aec9-41be-9943-1b27f3797be8",
          "name": "identifiers"
        },
        "response": {
          "id": "6d1f646a-9646-474c-9ef5-348558ffb054",
          "status": "OK",
          "code": 200,
          "responseTime": 724,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e6646-f445-44cf-91cd-cc5a8b86e88c",
        "cursor": {
          "ref": "fdab68ee-1115-4839-8d44-614ab9a3eb1f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "100a8874-e564-4d81-b36f-89ad9533ebbb"
        },
        "item": {
          "id": "671e6646-f445-44cf-91cd-cc5a8b86e88c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57533729-f3b3-4751-a2fd-a5a90ba5a3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671e6646-f445-44cf-91cd-cc5a8b86e88c",
        "cursor": {
          "ref": "fdab68ee-1115-4839-8d44-614ab9a3eb1f",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "100a8874-e564-4d81-b36f-89ad9533ebbb"
        },
        "item": {
          "id": "671e6646-f445-44cf-91cd-cc5a8b86e88c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "57533729-f3b3-4751-a2fd-a5a90ba5a3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9e9edf-6c90-481e-a47a-e5c536a958f0",
        "cursor": {
          "ref": "c5fec48d-a91f-4da5-9720-0b68e3d39d25",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e6271a2a-6a24-444f-8e89-6e65326c1964"
        },
        "item": {
          "id": "bc9e9edf-6c90-481e-a47a-e5c536a958f0",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3f9c6ad1-ed48-415f-85ca-e74f66d44f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ae1390-6b85-4ed1-b586-186cc0720d01",
        "cursor": {
          "ref": "9b06eabe-bb67-4863-96dd-0122b0be1595",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "82d53550-48e7-4993-9666-4df9ecef4814"
        },
        "item": {
          "id": "a0ae1390-6b85-4ed1-b586-186cc0720d01",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "959aef62-54fd-410d-a73c-abb9280f7bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be1ddc0-1177-4606-93ab-b19f27e84291",
        "cursor": {
          "ref": "7d426787-cc1d-4d43-a2fa-80c078a1ba1f",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "babbcf5f-59b2-42dc-80d0-923a3653bcaf"
        },
        "item": {
          "id": "6be1ddc0-1177-4606-93ab-b19f27e84291",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "83bf8491-f9f9-4578-a0bf-ad003079dbe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d6adcc-fd47-4507-89ae-49a3aa583ae7",
        "cursor": {
          "ref": "7f787da6-4094-40c0-9cf2-934be201dbef",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "64ffba60-f96e-42a2-aa74-d516634512bb"
        },
        "item": {
          "id": "d7d6adcc-fd47-4507-89ae-49a3aa583ae7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d2df1602-8796-40c6-8fdb-a364c7fb887d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dababec8-82d7-4388-8f77-e76250f9e63d",
        "cursor": {
          "ref": "88c5b028-936d-4fa7-8250-048dd798e8de",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4b9811d0-ad9f-47cc-9bd9-1b5a71b79977"
        },
        "item": {
          "id": "dababec8-82d7-4388-8f77-e76250f9e63d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8c6bdefd-e75c-4552-8347-93777778359d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcfbe02-fb24-444e-9a8a-785ecd189335",
        "cursor": {
          "ref": "61bcf918-bc3f-43b9-b81d-27528a945ea7",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b0b14146-db53-4556-8fe1-c4029b933926"
        },
        "item": {
          "id": "cbcfbe02-fb24-444e-9a8a-785ecd189335",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b09857d4-97f9-4496-a713-19b98d0f1251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0aaacf-8b98-4109-b1f0-18e9499ee33c",
        "cursor": {
          "ref": "690b74b1-5429-4412-9ff8-a9d32ebc0de0",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a277b46a-20e1-45f0-815c-f30312d074c1"
        },
        "item": {
          "id": "6f0aaacf-8b98-4109-b1f0-18e9499ee33c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "263e86b2-0c28-40d8-b48c-935ad7de1638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1e4636-cfde-4942-a6bb-e7243491fd37",
        "cursor": {
          "ref": "a1957020-01b3-45d4-a198-c5779eba85f0",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ff0a6906-9b16-4b56-ba4e-2eb3002f06b3"
        },
        "item": {
          "id": "da1e4636-cfde-4942-a6bb-e7243491fd37",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f74f8cec-96fe-42f4-b7ce-a7ac38606246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc260bd-ed99-478b-9ef1-29189828c5c2",
        "cursor": {
          "ref": "d2016461-4119-4549-af9d-520008d04f58",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eb618931-e202-45b0-b294-5c9d85b68082"
        },
        "item": {
          "id": "2fc260bd-ed99-478b-9ef1-29189828c5c2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9a8fff1d-f347-4b57-9835-81d464dddecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3fdec0-bcf1-4947-8f86-2029c28ef47e",
        "cursor": {
          "ref": "fe381947-4224-4db2-b856-a94e1952b98a",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b8480082-6d57-4d8e-861a-334445a30f86"
        },
        "item": {
          "id": "ff3fdec0-bcf1-4947-8f86-2029c28ef47e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6d5520aa-a834-4cb3-8777-701539b47bb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2156c164-c035-4e51-89b4-cfa1e1c2360a",
        "cursor": {
          "ref": "38931f7a-5db9-4350-824a-f4fda648a0c4",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af5a9727-d760-4f9a-8c13-d59fa72cd9bf"
        },
        "item": {
          "id": "2156c164-c035-4e51-89b4-cfa1e1c2360a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "09d3a08e-b8ee-428d-a991-80c43f17ebca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22d095f-0d56-4fec-963c-6c4cee1b3f4b",
        "cursor": {
          "ref": "53ddf095-1a3d-44cd-b7bf-b7809cdc6527",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0df177db-b5a7-411e-affd-94563c6c5862"
        },
        "item": {
          "id": "a22d095f-0d56-4fec-963c-6c4cee1b3f4b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3d69a9d9-6f76-4010-bb71-0a8c94f50b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b059b29-fa8e-42d4-8275-e2ee1466fffe",
        "cursor": {
          "ref": "69f3bfe8-31a6-4b60-bc92-ec853180238d",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f4a0af5d-c63c-454e-a42d-f6e0d0ba3ebd"
        },
        "item": {
          "id": "0b059b29-fa8e-42d4-8275-e2ee1466fffe",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4603dffd-13a8-418c-95d7-b01cb3c004be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbfba8-ca73-4830-b0ae-3b03c183a74c",
        "cursor": {
          "ref": "8f6061c3-42b5-4526-b828-36127d8cb588",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7d597c98-1a72-443d-b0c6-8e9fe73135f6"
        },
        "item": {
          "id": "07bbfba8-ca73-4830-b0ae-3b03c183a74c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1000211a-edee-469d-9c01-91d4a7396385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c1dcdb-a6ae-4432-aa50-24e5ca2776c4",
        "cursor": {
          "ref": "a86d1eb8-3f09-4596-9ff1-f639ca56e136",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6be20c1c-fa8d-46e0-b8db-9d8e319e1f05"
        },
        "item": {
          "id": "43c1dcdb-a6ae-4432-aa50-24e5ca2776c4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f43cf005-e65d-492c-8faa-2a824b461294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd76e3b4-002c-4008-ac72-a87874977853",
        "cursor": {
          "ref": "a19266b2-d21d-4ade-9c97-611ebda64413",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7cf7d727-fcb9-45d1-8ac5-6fa35a3dceb8"
        },
        "item": {
          "id": "fd76e3b4-002c-4008-ac72-a87874977853",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "708f793b-272e-4ad1-9d47-e60af6fc34cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bc98f1-791f-4f29-b360-a87e1f8ebed1",
        "cursor": {
          "ref": "1211863f-6148-4b2e-bb9e-389b0ce9a9f1",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fc23dfc0-6fa3-415a-9a98-356cdfbb683c"
        },
        "item": {
          "id": "c7bc98f1-791f-4f29-b360-a87e1f8ebed1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b2895d97-838c-47fb-965d-9e05008b825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454da7e7-3a9c-4aaf-984c-0989be1e3601",
        "cursor": {
          "ref": "f4d1d662-e3d8-40f9-9a1e-44335e2644d2",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fe453572-15ce-48c2-a580-2a2ab1524e5c"
        },
        "item": {
          "id": "454da7e7-3a9c-4aaf-984c-0989be1e3601",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ca312e2d-3b9a-4986-97e8-52d4ca006cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ccd977-7175-4eae-b50c-3bbc6ac897fb",
        "cursor": {
          "ref": "8e87b479-d1d6-41ee-8c47-8f4d7c02207d",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8df35289-1001-4c47-9920-a8225f42b40b"
        },
        "item": {
          "id": "23ccd977-7175-4eae-b50c-3bbc6ac897fb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8bab21ac-87a9-43ee-9f28-d348e7cd077a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25be5cba-8c28-4e7d-b9c0-7bc581205c9e",
        "cursor": {
          "ref": "5c1fca8e-d4b9-434e-a587-3e156c2664ba",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "79cda22d-4871-437b-bbff-d805d3577f15"
        },
        "item": {
          "id": "25be5cba-8c28-4e7d-b9c0-7bc581205c9e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f075a68b-5840-44b0-bf6e-9d193ad11ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05700028-7e41-45d8-b111-b9840896e758",
        "cursor": {
          "ref": "dba7d7e3-da14-4ade-b123-63ca2e890c9e",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3be4c744-5f0b-4774-981c-e1f256f41998"
        },
        "item": {
          "id": "05700028-7e41-45d8-b111-b9840896e758",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4a904406-82de-461c-a6bd-d06c33fd7e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4854bfba-3461-4e98-9336-75242ec1a4f2",
        "cursor": {
          "ref": "194c1bd0-be10-47a2-bef2-065ed8da0ddf",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "af8c7e29-3786-4478-bd84-4c61210cb958"
        },
        "item": {
          "id": "4854bfba-3461-4e98-9336-75242ec1a4f2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6962c610-d0f6-41da-a588-6f2354fd1403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 484,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5b7c6-29cd-43fd-af34-842c13972474",
        "cursor": {
          "ref": "a336c825-552b-4d9f-b5b1-2276fe8e7cce",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "55a81e62-4c96-494b-88b3-b16e78af8110"
        },
        "item": {
          "id": "3ab5b7c6-29cd-43fd-af34-842c13972474",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "32b93586-5794-4aa6-b66e-cae3c864acb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc6dc14-688c-45b0-ab89-39538b85666e",
        "cursor": {
          "ref": "dc18b483-e1f8-42fc-a695-4c8687417830",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "00cca925-d233-4617-a63a-138b93488b8f"
        },
        "item": {
          "id": "2cc6dc14-688c-45b0-ab89-39538b85666e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "be1b0268-9aea-4722-952b-6d341d642e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1638f323-fdb2-4126-ae11-c4de1aecd48d",
        "cursor": {
          "ref": "c845b032-fa66-4a42-86dc-4d7602f540c0",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8fabe07c-b210-4d78-9f04-8690e83316b4"
        },
        "item": {
          "id": "1638f323-fdb2-4126-ae11-c4de1aecd48d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2b73c002-ff4c-44dc-879a-17cb56228389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3879ac-ea2c-4a52-9d7a-9aca487239de",
        "cursor": {
          "ref": "c5118dff-e09f-4752-9f72-4e2b9fb6af21",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "23c9a180-ec60-4fc5-a46f-d6448cc82847"
        },
        "item": {
          "id": "ed3879ac-ea2c-4a52-9d7a-9aca487239de",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ba8e780a-0ed8-41d5-bdb0-9e4645a471fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 659,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ad6906-73c3-48b0-b2cf-d82bc9ac21ca",
        "cursor": {
          "ref": "a6f0e02a-e451-4a1b-b7eb-d4809aacd023",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "13138d0c-ee0e-4003-b42a-dfa4ebab0bb3"
        },
        "item": {
          "id": "57ad6906-73c3-48b0-b2cf-d82bc9ac21ca",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "17448736-f0e0-49b0-8055-a95a1a7f8698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f9f567-db4a-45ed-b34d-170cc05cba0a",
        "cursor": {
          "ref": "4156c4db-a542-40ab-ba15-bfe0d899cc97",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "51859019-bdc6-4855-945b-04ce1b69cb58"
        },
        "item": {
          "id": "84f9f567-db4a-45ed-b34d-170cc05cba0a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7a2209da-4dc3-4f2a-a707-ca81178940c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb4a7d3-b9c3-4db6-a2fb-be6d4ba504d4",
        "cursor": {
          "ref": "de4403f1-5016-473f-849f-03541bc723d8",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7df80fd6-9037-4627-95fe-0a306a799fa4"
        },
        "item": {
          "id": "ceb4a7d3-b9c3-4db6-a2fb-be6d4ba504d4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3dcf5c59-f6ab-432f-8810-a0662e983724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfd4b5e-c774-4882-a883-e4348b476194",
        "cursor": {
          "ref": "1239da8f-5ed2-4c19-9b2f-06038b3dfae5",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a9ab425c-ba83-454f-9721-4401857181f0"
        },
        "item": {
          "id": "2bfd4b5e-c774-4882-a883-e4348b476194",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d1602d30-0a62-4b4b-b1b9-eeed44802397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64b8a9-fd77-40a4-93bc-b42f0351f1a0",
        "cursor": {
          "ref": "e28cf48d-215c-4ec0-b75a-a629c0e4a45d",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7536a080-f1ab-4edb-8913-6b7d22c61956"
        },
        "item": {
          "id": "3e64b8a9-fd77-40a4-93bc-b42f0351f1a0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1d29fa45-b5b0-4d2f-b268-1b004a77fd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0c810c-d961-4ead-977d-710f44f28940",
        "cursor": {
          "ref": "8a839b27-d8be-4aec-afe9-9e323d1b35e1",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5a6fe3b5-c9a0-4de4-a2db-d8e2c1c3ea90"
        },
        "item": {
          "id": "7f0c810c-d961-4ead-977d-710f44f28940",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "76135b9b-9d9a-4df9-b7b6-68288d42ad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232f87e8-ba4b-4e15-a058-213a3361ae5b",
        "cursor": {
          "ref": "23f4f504-6910-4f81-af70-0cd6183a0794",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0cba8e62-ecf1-4500-94bc-a9085e74441d"
        },
        "item": {
          "id": "232f87e8-ba4b-4e15-a058-213a3361ae5b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0eb45080-aa5d-4986-ac62-1cade5f42a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74db573c-d711-4e32-b6e2-443b5f46a9e8",
        "cursor": {
          "ref": "5127bd6a-a793-4fe9-978f-28edbaf58bcc",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8eb18a32-b6bf-4bb7-9ab4-6f642eeedec8"
        },
        "item": {
          "id": "74db573c-d711-4e32-b6e2-443b5f46a9e8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "eba20f40-923d-406d-8ecf-9081f69cc487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9153a74-c3aa-445d-8543-f7f21d161679",
        "cursor": {
          "ref": "1b7d65dd-8bc5-4641-996f-2e109d880198",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8f909e00-0225-4c68-acd6-c4201ae0f108"
        },
        "item": {
          "id": "d9153a74-c3aa-445d-8543-f7f21d161679",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a1cb27f0-133f-470d-9de5-f1c00b338106",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 504,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f3298c-aa08-4cc6-ad65-b4ac0c6c6a69",
        "cursor": {
          "ref": "f73d4bc4-1b95-4e6c-9273-18b625c74e0b",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "df805c3f-4ae9-4687-95ea-779c47d05ec1"
        },
        "item": {
          "id": "87f3298c-aa08-4cc6-ad65-b4ac0c6c6a69",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bb2b7e5c-7d0c-4e0b-aa30-4469e8be8ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0895062d-cea3-4a4f-a008-cb8804077ce2",
        "cursor": {
          "ref": "2aec278d-d379-4346-a286-de6f5c18c441",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "82119cdd-470d-4f57-a843-d81e908738e2"
        },
        "item": {
          "id": "0895062d-cea3-4a4f-a008-cb8804077ce2",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "a59d1c1a-fde9-41cc-ab80-65d35b3fafbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5e5122-08d7-4d4b-a811-4eb9d6d7df9f",
        "cursor": {
          "ref": "aac9436b-9ebe-4eb3-b809-91a3c0cb82ac",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "825108bf-2b04-49af-a4ea-b6681eb4d689"
        },
        "item": {
          "id": "aa5e5122-08d7-4d4b-a811-4eb9d6d7df9f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1b929eeb-ba53-4da2-a86a-b8ad534fed85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c52a4b9-c1b3-4ff1-abe5-3bc0ecc4983a",
        "cursor": {
          "ref": "63946acc-4d0a-4196-bd99-118ea067dd43",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ce03b18c-1093-419a-baa1-9b06566ff9b3"
        },
        "item": {
          "id": "5c52a4b9-c1b3-4ff1-abe5-3bc0ecc4983a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8a65c248-2ecf-49dd-8575-2cd3a5e49522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 491,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5018fae-718c-4281-88aa-3dbc5196c535",
        "cursor": {
          "ref": "e8ed7806-f069-4760-8b90-d48b7845d4ec",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a091c47f-e82b-4bb5-8caf-7b6ea463ecf5"
        },
        "item": {
          "id": "b5018fae-718c-4281-88aa-3dbc5196c535",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "43d55863-72ea-465d-89fd-3b64bb1bc205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2533c52f-5b73-401f-91c0-652672604072",
        "cursor": {
          "ref": "adc2b60b-5bf6-49da-b3dd-6fcfa5a18aff",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ce5c08ff-eea1-4809-8777-0cc8a115f2ce"
        },
        "item": {
          "id": "2533c52f-5b73-401f-91c0-652672604072",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1d3a8f27-06ab-4b9a-ab0c-78092eef8302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2142014c-9cfd-4414-890b-7d5e02661997",
        "cursor": {
          "ref": "f3b69cec-7bc6-4422-9221-cb37b4753b21",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "31275a40-7119-43c2-82ba-338b990d3254"
        },
        "item": {
          "id": "2142014c-9cfd-4414-890b-7d5e02661997",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9ff5680a-bc07-4248-9cfd-87c5d5622252",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 530,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1862041d-5580-4436-932d-f5b568d2d3a6",
        "cursor": {
          "ref": "9f4f8397-90fe-4b72-93c8-e63569d0ee92",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "666f225f-10b0-4338-971d-629fe247a07e"
        },
        "item": {
          "id": "1862041d-5580-4436-932d-f5b568d2d3a6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0cb2f51d-d60b-49f7-918d-49dd2eff3d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918ba254-188f-4d45-a13b-8515b0a4d897",
        "cursor": {
          "ref": "3a97af2e-a57f-4614-aca9-37687d484cd9",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f5cbc355-02f3-4746-8f80-06057860b597"
        },
        "item": {
          "id": "918ba254-188f-4d45-a13b-8515b0a4d897",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d8a8a326-e1eb-45d2-860b-e233b02f6813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac679d3c-48ce-4a8d-94b1-54a23849dd66",
        "cursor": {
          "ref": "7fca8ca3-b7ed-4e66-8efd-5c1607e20b17",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3412ea1e-f653-4f17-b33d-383566d0644f"
        },
        "item": {
          "id": "ac679d3c-48ce-4a8d-94b1-54a23849dd66",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "97f0ff4b-4d7f-4fe8-9834-ffec526d6eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5e657e-1470-4184-a903-b8ed7b420d86",
        "cursor": {
          "ref": "32e41d37-97f1-45b9-85d5-f14e27e62899",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "64b6c90d-303f-4488-baa2-898656602bef"
        },
        "item": {
          "id": "de5e657e-1470-4184-a903-b8ed7b420d86",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "85905a73-4f9d-4861-94bd-cf89dc5ea659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2677ae5-dfa0-4fae-94bf-40fa2a29cb55",
        "cursor": {
          "ref": "3228804f-6508-4fab-95b2-b0261e27e2c4",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b4c4ceef-3650-43e5-b5be-de9941189a49"
        },
        "item": {
          "id": "d2677ae5-dfa0-4fae-94bf-40fa2a29cb55",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "38584490-1bba-4da7-805b-3272e1ebeb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf56492-20a3-43af-afea-9b4a829d5c88",
        "cursor": {
          "ref": "2d132b26-9723-4114-b979-d877710d251b",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7f3cbeee-6a49-4a47-89c4-0d2523af04eb"
        },
        "item": {
          "id": "abf56492-20a3-43af-afea-9b4a829d5c88",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "68041e7d-c293-4d4f-92c2-3e2f4d0407c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe572fba-6582-4854-b63f-aa1470f91f66",
        "cursor": {
          "ref": "f796d304-2a16-49d3-b1f6-d889018aac4c",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "38d9c21d-6663-49dd-a779-7e9a82b14d77"
        },
        "item": {
          "id": "fe572fba-6582-4854-b63f-aa1470f91f66",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0f5d5d6e-0ff5-4921-9fe3-3f76aee7e006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a80620b-d575-4d1c-8f3f-6cb6c1b9717c",
        "cursor": {
          "ref": "47aa13e8-3855-49c3-9d0e-8275c1086801",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e9ecefa3-5bb3-415b-a5ae-8aeffab5dd49"
        },
        "item": {
          "id": "5a80620b-d575-4d1c-8f3f-6cb6c1b9717c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "305c4657-6088-4a16-960a-55b55975c333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd49eff-497a-4fca-82c0-a082377be368",
        "cursor": {
          "ref": "3e71954b-8910-4a33-ab0d-dcb32a7d928d",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f0767bc4-1bf5-4572-9844-4aad2ba1b805"
        },
        "item": {
          "id": "6cd49eff-497a-4fca-82c0-a082377be368",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e711cf41-f051-48dc-8daa-dada2bb0771b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bdbd9d-01be-4528-a320-e8860b3fe92f",
        "cursor": {
          "ref": "109d873d-bf4b-4c68-b6f8-48c65894b394",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b7957222-c95e-48bb-a82c-35d605876ab3"
        },
        "item": {
          "id": "e5bdbd9d-01be-4528-a320-e8860b3fe92f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f9e2ec0c-6267-482b-af18-a2af2da9253c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6322e5-81e5-4691-bf7e-0847f5937916",
        "cursor": {
          "ref": "e887993a-8b4a-44f4-a00c-63f68517967f",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3b782b79-1266-4ed3-8b1d-ee6a32ed4a8a"
        },
        "item": {
          "id": "8e6322e5-81e5-4691-bf7e-0847f5937916",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "48857c7b-1dc8-42ac-afb5-5830c2d32243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2676fbc-a8e1-40ac-b9c9-de0760ec527a",
        "cursor": {
          "ref": "6f5d79d3-27d8-4bc6-8210-3b2747a9ebc9",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "759176b5-6b26-40ea-97fe-412e09f9c9d7"
        },
        "item": {
          "id": "e2676fbc-a8e1-40ac-b9c9-de0760ec527a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "94ffcd51-22df-4c24-a053-ce135c79025c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c434108-3130-41e7-b277-aa2ad0081081",
        "cursor": {
          "ref": "c99026d3-29c6-436e-a15c-9649cedebc6e",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bd445cf6-90e8-4271-bc2a-3fa0ca9773c2"
        },
        "item": {
          "id": "5c434108-3130-41e7-b277-aa2ad0081081",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "79df83fe-356c-4e26-94dd-222b868164c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8934846-e3f5-451a-90df-26321852878b",
        "cursor": {
          "ref": "9bf37bef-b7ba-4d50-a85e-ec1be9bc8861",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c474d04b-3073-48bc-806f-4c628ae1c995"
        },
        "item": {
          "id": "f8934846-e3f5-451a-90df-26321852878b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4176bfe0-1129-4ff1-a9a2-99e74724804b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af25f8a-45b8-4c8c-9c76-ba3b9e50f13e",
        "cursor": {
          "ref": "07ffb5f7-bd1a-49e4-8c19-073a0563d04d",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "da5c5cb0-9d08-4b15-996d-6754219d4bad"
        },
        "item": {
          "id": "4af25f8a-45b8-4c8c-9c76-ba3b9e50f13e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1942d9e8-db0c-448d-9fb0-8477d3f8dce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9469c0b1-6bf2-40f6-9085-38a847f0b3aa",
        "cursor": {
          "ref": "9df4d697-1d7c-4be5-b8c0-d91ec0924067",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "50ea984a-db4e-4a8f-92b1-80b7b1864d80"
        },
        "item": {
          "id": "9469c0b1-6bf2-40f6-9085-38a847f0b3aa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c3e10a8f-9dc4-44e5-9073-0a2ed151793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b3c635-1bcb-42db-9b91-9524840676cc",
        "cursor": {
          "ref": "e6534789-df8a-4105-9dbc-9764d8baaafe",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b48ff89c-b453-49f3-887e-8d78df9fe865"
        },
        "item": {
          "id": "f3b3c635-1bcb-42db-9b91-9524840676cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "629c6240-20e0-46c1-ad8c-36c528d2b409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab920bf-64e7-414f-aeb8-073b1dc7cf50",
        "cursor": {
          "ref": "90a7efba-88aa-428b-9ef5-b7cdfe6d2464",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "674431db-4b4c-4c65-97cc-cce61035349f"
        },
        "item": {
          "id": "9ab920bf-64e7-414f-aeb8-073b1dc7cf50",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3ccb983b-0d20-497c-ba1f-46428d13515d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b8ba48-d65c-4550-8dee-af0b5639b1b1",
        "cursor": {
          "ref": "6db6b2e1-bd88-4fd1-b514-c9390f1077cb",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26a4a03c-21b2-40e3-8fd5-7f9d1ab543fa"
        },
        "item": {
          "id": "07b8ba48-d65c-4550-8dee-af0b5639b1b1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6de77f04-3642-4f3b-a17d-c6a358a0323e",
          "status": "Created",
          "code": 201,
          "responseTime": 2235,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:71)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:71)"
            }
          }
        ]
      },
      {
        "id": "cd0317f8-d23b-46b5-9429-bada380fd00d",
        "cursor": {
          "ref": "25f23df1-1bc0-4a7a-b894-3ae26cafb3f7",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "7c065b43-1941-42be-b4ba-9e9f07724a34"
        },
        "item": {
          "id": "cd0317f8-d23b-46b5-9429-bada380fd00d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "097e7ec3-54ba-4d09-be08-77328891ad4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b47bef-d2dd-4803-b3a9-1172991da9f2",
        "cursor": {
          "ref": "04aabc9a-2f6d-4de1-8023-8ecb02c51a53",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8450f8fc-eb04-4020-8283-83be772100bd"
        },
        "item": {
          "id": "78b47bef-d2dd-4803-b3a9-1172991da9f2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e2ce0212-af2a-4ab2-8baf-1b91f42b6403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91313612-c3bd-4b93-a2d0-66b50496e253",
        "cursor": {
          "ref": "3ce478e6-410a-4bec-a171-54e7912cfe47",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6551b36c-abab-4790-b480-a9a0c2b4a97d"
        },
        "item": {
          "id": "91313612-c3bd-4b93-a2d0-66b50496e253",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "12476ff4-24c6-494d-8de9-f1086093af6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f46ea7a-0572-487e-9797-d2d762e4d318",
        "cursor": {
          "ref": "e410fe30-b001-40ed-aaf4-8c96fc7bf0a3",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9c797b56-32e9-4b54-b4ce-18ec4cfdaf16"
        },
        "item": {
          "id": "8f46ea7a-0572-487e-9797-d2d762e4d318",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0b308009-eb9e-472c-8ada-f8d8f384dfe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 508,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba7e117-3a47-4a2c-8fa6-e77c28bee966",
        "cursor": {
          "ref": "0a6f2191-cf18-4a1c-996b-77e6903439e4",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aceda716-1159-43fa-8c16-ff4d9c890189"
        },
        "item": {
          "id": "1ba7e117-3a47-4a2c-8fa6-e77c28bee966",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b01b7cd4-ea09-4d59-a024-7aa1ae4d738d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83add46-7b13-4b04-b7f2-3e970cd02c60",
        "cursor": {
          "ref": "5d710784-23b6-42d1-a4d2-b1b936519bb1",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "5846ae63-0869-4b6f-b09b-593cfc834a5b"
        },
        "item": {
          "id": "a83add46-7b13-4b04-b7f2-3e970cd02c60",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9aabf94c-9abe-4e25-893b-c559aa1a3647",
          "status": "Created",
          "code": 201,
          "responseTime": 1823,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:77)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:77)"
            }
          }
        ]
      },
      {
        "id": "cef70683-b5c4-4378-b04d-f53eb8639759",
        "cursor": {
          "ref": "85417dc9-d138-43ea-b617-c9286478b467",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bda47b17-9e2a-4325-9b3f-50cb6fd92ddb"
        },
        "item": {
          "id": "cef70683-b5c4-4378-b04d-f53eb8639759",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f8ebbd1f-337c-46be-937d-6ebc6d0a8f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f245e4-1b3a-4a2f-be2d-91f19e924ead",
        "cursor": {
          "ref": "c1e85a32-1e2a-477c-be71-41b6c40976c5",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e01c78fe-d601-443b-aae6-7fde226f5b81"
        },
        "item": {
          "id": "c3f245e4-1b3a-4a2f-be2d-91f19e924ead",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "75408a44-6e25-4576-b06f-0f7f14fc581d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 485,
          "responseSize": 510
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a4b47-b3db-4191-bf93-9d07cd277514",
        "cursor": {
          "ref": "a4e2c71b-0d1b-4bf5-87b3-a0997e9bf280",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b5867053-7d02-4810-9049-fd56c49a1bca"
        },
        "item": {
          "id": "f35a4b47-b3db-4191-bf93-9d07cd277514",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8593adb0-4176-4216-b997-3cecfe777033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c659fca4-623f-45f1-a9a4-ae207e9a5acb",
        "cursor": {
          "ref": "d3db706a-dc6f-482c-8073-3611de432501",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "59f06fb2-67e1-4019-943a-f03e462a901e"
        },
        "item": {
          "id": "c659fca4-623f-45f1-a9a4-ae207e9a5acb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "036609fb-c12c-4e79-a1d1-d0266c0d95c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c1e3b7-dd9e-4675-bc9f-ca6935bcb7d6",
        "cursor": {
          "ref": "c187c722-3b34-4837-ae85-ebe7b9e46891",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e80461f-bb46-478d-91b0-9594b5ce4be6"
        },
        "item": {
          "id": "a2c1e3b7-dd9e-4675-bc9f-ca6935bcb7d6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "64d08f92-ced4-4be2-9fc7-2007f0fb6893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f32b1d-b709-4d83-832c-25eac34bc37e",
        "cursor": {
          "ref": "7652ad9b-0b8e-4547-bc7d-65f9a86bb85c",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fe63eeff-a8fd-4763-bad3-0f9f1de1d64f"
        },
        "item": {
          "id": "94f32b1d-b709-4d83-832c-25eac34bc37e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "08a5a61a-a156-4bb4-bd1e-2071f109665e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d306be-b406-4b75-ac68-71867c638571",
        "cursor": {
          "ref": "61ccf94e-d8ce-4c29-b837-79241e868dc5",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b2f90697-04dd-4f6a-9fcc-441ee2c40e34"
        },
        "item": {
          "id": "20d306be-b406-4b75-ac68-71867c638571",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a66f5f7a-5f12-4d89-ab52-2257cfeb065e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 476,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972d54b5-c95d-45ec-8710-98d1d87c2e02",
        "cursor": {
          "ref": "5a51e6f9-119b-4def-8393-cce873125b44",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "70891436-838c-4bd9-84d1-64e25bbd30c9"
        },
        "item": {
          "id": "972d54b5-c95d-45ec-8710-98d1d87c2e02",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bbf97157-8cd0-496e-8e21-a7049636c47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 481,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a57019c-5a21-416a-a2ba-515b64acc22a",
        "cursor": {
          "ref": "03f137a9-138f-4daf-858c-050199dc9304",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c3bc9803-6f79-4333-9911-c9dffed355d8"
        },
        "item": {
          "id": "9a57019c-5a21-416a-a2ba-515b64acc22a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9bbb224d-0cec-4b31-8996-d7fef5718a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f2da8f-54cc-403c-b4a0-9e717773d33f",
        "cursor": {
          "ref": "3591f0f8-a607-4326-beec-a1a2c6379174",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b90f6405-6441-4766-97fd-65d492d7b17b"
        },
        "item": {
          "id": "06f2da8f-54cc-403c-b4a0-9e717773d33f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "35707f0f-d929-43e3-a86b-93f6681117a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4acd6e-861a-4abb-8802-251687630ca1",
        "cursor": {
          "ref": "90b2f106-84a9-493a-8678-2948c77950ab",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "442b888e-ddc2-419f-b990-5c6a99c90a81"
        },
        "item": {
          "id": "ba4acd6e-861a-4abb-8802-251687630ca1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "901e917d-b59f-49eb-9f79-0974f80015e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3276eda2-19bb-49d0-86d5-d6b6dddfd1fc",
        "cursor": {
          "ref": "d181fd56-8c28-4ec8-9ecc-0e4e26a82f49",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6e73e347-464f-4b81-8e7a-b994869c4fd5"
        },
        "item": {
          "id": "3276eda2-19bb-49d0-86d5-d6b6dddfd1fc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a69f3c00-eb44-4230-8f06-6fa402250031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0211bc81-49d7-4c78-a949-0f54256291ec",
        "cursor": {
          "ref": "74f57e93-07c5-4ac7-aea6-0662e56d2d83",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6d574bff-c4c1-4b42-b6cc-7426629473ec"
        },
        "item": {
          "id": "0211bc81-49d7-4c78-a949-0f54256291ec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2849bbf7-33b9-4098-98ad-f92a474bc5f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 486,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65574b94-fefe-4d97-a5ea-080e9a88671f",
        "cursor": {
          "ref": "382e3d1b-80ad-4bae-acd0-ab80fa5bdfc5",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6e38ca2b-3652-43aa-8f1a-88fac917bdaa"
        },
        "item": {
          "id": "65574b94-fefe-4d97-a5ea-080e9a88671f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d5e6f5bc-c4f7-4c05-a7b0-d19194d743b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1a6556-75e4-4c8f-8821-a6d5137b7b66",
        "cursor": {
          "ref": "d8283ce3-62d9-497e-91d6-41e1cc327b72",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "886bb22a-7599-43f0-a218-5d31cbeb25c4"
        },
        "item": {
          "id": "8e1a6556-75e4-4c8f-8821-a6d5137b7b66",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8cee901c-5f0b-4ae4-9145-9a09c7edf40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd611b6-f2ce-4c5f-841e-5858bdc30f30",
        "cursor": {
          "ref": "8ee41898-d780-46ec-aef3-169ac075f890",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1c9352f9-5392-41c6-8199-7e004590c442"
        },
        "item": {
          "id": "6cd611b6-f2ce-4c5f-841e-5858bdc30f30",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ad8935c0-6d89-4726-a147-d16b162d4484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b7659f-6d46-4670-89b8-3af741258c19",
        "cursor": {
          "ref": "2b294d54-7563-4aa5-bc13-3409f6c3a9c2",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e8540bfd-9be8-4aaf-ba73-e642f0ff8571"
        },
        "item": {
          "id": "81b7659f-6d46-4670-89b8-3af741258c19",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5b4f271a-06b4-4882-905c-e8f23cd3e581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b378b6b8-547c-4b37-819e-dcff42d75dd3",
        "cursor": {
          "ref": "d765b46a-c6af-4cd2-9229-8416d19777df",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c3cdf33e-5c07-4746-ac96-3b66d4ae1172"
        },
        "item": {
          "id": "b378b6b8-547c-4b37-819e-dcff42d75dd3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c1e40a0d-5a0c-4b0d-9c49-235174ab5d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb63e6a-ce46-42ca-b973-d170cf48bb2a",
        "cursor": {
          "ref": "0fa408ab-1fc0-4275-bcf6-90ee06b7c609",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9f86875f-e47b-4c6e-9c50-b0782fffdee4"
        },
        "item": {
          "id": "fcb63e6a-ce46-42ca-b973-d170cf48bb2a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "50984c0f-3378-43d3-b035-a62962c2bf71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17d8f69-2e5e-496e-a87b-e62002747b08",
        "cursor": {
          "ref": "f6d430ab-1fdb-430b-830e-ebf08d146044",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d45c3c24-e47f-4c91-b6b6-19a3fac3053f"
        },
        "item": {
          "id": "b17d8f69-2e5e-496e-a87b-e62002747b08",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ed653ff7-85c8-4c3d-8d96-64f5f1a703f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba185f8-8fd5-4a87-87aa-80bef9ebb9fd",
        "cursor": {
          "ref": "d6ee5596-6e4d-4c8a-8e06-b7c38f0021bf",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "00a9bea9-8941-44e4-83b0-39bcc55a1e95"
        },
        "item": {
          "id": "cba185f8-8fd5-4a87-87aa-80bef9ebb9fd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fda5fe9f-5c84-4328-9348-6ef0e3eaf0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26df7b99-3641-4dea-ba90-0eb68655ccdc",
        "cursor": {
          "ref": "33297f7b-d475-499d-b7b5-e317096b92ce",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0cefe386-48a3-444b-8ec6-573ae9a38f9a"
        },
        "item": {
          "id": "26df7b99-3641-4dea-ba90-0eb68655ccdc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0a17b2fe-2af4-4a8f-9abd-dbdf037ce2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b63f7de-6519-4838-8ce5-eba1ee1f0045",
        "cursor": {
          "ref": "57ee3033-03e0-47c3-a72e-79ed30ee8c08",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ec6d7512-938f-43d7-8e8a-5b4e0a39b689"
        },
        "item": {
          "id": "5b63f7de-6519-4838-8ce5-eba1ee1f0045",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "449b0aa4-35a5-4064-8e13-fa34c9f3c9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5f7bde-805c-4669-822f-abc0db6ef390",
        "cursor": {
          "ref": "e16290f7-2b16-44da-a8b3-d9ef5300f1ad",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c27bdd90-88be-4767-a5c1-2fb5119d1bd3"
        },
        "item": {
          "id": "da5f7bde-805c-4669-822f-abc0db6ef390",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8af51669-aa2b-4237-ac5e-807589c7e593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad45d0b9-a5f1-40a2-a3c0-9c659c05324b",
        "cursor": {
          "ref": "ae266e3c-f200-456a-aecf-e243e527c691",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "616d7bd7-fa0d-45b4-9295-1a14e78de087"
        },
        "item": {
          "id": "ad45d0b9-a5f1-40a2-a3c0-9c659c05324b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6e54c64d-dacc-478e-b6c2-daa3d2b725fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a7a6522-87a2-42f0-9184-b12cf945531c",
        "cursor": {
          "ref": "0e5c9d26-ce26-4113-bd7f-7e018961fa06",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0f4487a7-7f84-437b-a6d5-ec689c03aae6"
        },
        "item": {
          "id": "7a7a6522-87a2-42f0-9184-b12cf945531c",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "dfe0d7b6-3af8-4c61-8a95-784acdcb7c5f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 475,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2e9df7-0cc8-4780-b640-d782c3875120",
        "cursor": {
          "ref": "c972ade3-b1db-485c-a48e-384fa1dd5145",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3e502312-bc44-4228-96ca-c2b3f35d31bd"
        },
        "item": {
          "id": "2a2e9df7-0cc8-4780-b640-d782c3875120",
          "name": "credentials_issue"
        },
        "response": {
          "id": "814f67e0-c9bb-4d1b-980d-a88c6a288ed0",
          "status": "Created",
          "code": 201,
          "responseTime": 3217,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "6ef3afae-f005-4cb4-bb94-3075d3fad1a6",
        "cursor": {
          "ref": "1593d214-afd9-4b0d-b0e8-80bdebd29519",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "09fc0ecc-59a0-4080-81b5-1d5f57a518c3"
        },
        "item": {
          "id": "6ef3afae-f005-4cb4-bb94-3075d3fad1a6",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "709f8f84-04c2-4e14-bdb3-ad51dd938aec",
          "status": "Created",
          "code": 201,
          "responseTime": 2737,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "0d3f474d-7ed9-4e9a-9455-230f536b922e",
        "cursor": {
          "ref": "d563a761-a13b-4e44-9ece-324c4e3e0647",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "84823373-be6a-4ad7-9dee-0ed62431cfe7"
        },
        "item": {
          "id": "0d3f474d-7ed9-4e9a-9455-230f536b922e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cb50448b-923a-46f6-b760-3fc57a33bca7",
          "status": "Created",
          "code": 201,
          "responseTime": 1977,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3bae7437-d8e8-4449-94c9-9a61c25badb6",
        "cursor": {
          "ref": "a4504420-1060-47fd-9052-92d1f995f782",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0ab98a96-f88e-4c0c-979f-34af354aae17"
        },
        "item": {
          "id": "3bae7437-d8e8-4449-94c9-9a61c25badb6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5690d277-cb6a-4938-a463-035597cd2bce",
          "status": "Created",
          "code": 201,
          "responseTime": 2034,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c3e460d1-26a7-466a-bf98-71f2c5b531a5",
        "cursor": {
          "ref": "e0386730-f8b4-4ae8-afb7-696e8776fa72",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "12174677-0339-4364-a423-28aa7cf8fea2"
        },
        "item": {
          "id": "c3e460d1-26a7-466a-bf98-71f2c5b531a5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2adc0603-d07b-4b5d-b01f-7db7f00e8c3b",
          "status": "Created",
          "code": 201,
          "responseTime": 2042,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "6eecafd1-7f6f-4e1d-a6e2-45439ffb38c5",
        "cursor": {
          "ref": "37eeb336-a394-408a-b808-5cb8f18b92d1",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d0129ed0-96c7-47a3-9490-7db397b2af10"
        },
        "item": {
          "id": "6eecafd1-7f6f-4e1d-a6e2-45439ffb38c5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "401b0fc2-522f-4691-879e-414b8fb22537",
          "status": "Created",
          "code": 201,
          "responseTime": 2853,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "03569a45-c644-4193-af04-0c1a48a1258c",
        "cursor": {
          "ref": "fb74f2f9-b717-415b-b27e-ab72b055e808",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "34563a21-e1e7-438c-af01-e713975440e1"
        },
        "item": {
          "id": "03569a45-c644-4193-af04-0c1a48a1258c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3f3adec-2387-4a13-ab52-cdf80f35b498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03569a45-c644-4193-af04-0c1a48a1258c",
        "cursor": {
          "ref": "fb74f2f9-b717-415b-b27e-ab72b055e808",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "34563a21-e1e7-438c-af01-e713975440e1"
        },
        "item": {
          "id": "03569a45-c644-4193-af04-0c1a48a1258c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3f3adec-2387-4a13-ab52-cdf80f35b498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 492,
          "responseSize": 337
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5a1c37-03a3-4967-98a1-8cecb95b5bae",
        "cursor": {
          "ref": "845644cb-cf73-4c99-9132-5f9229c8c57e",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "070e569e-7a1d-431c-8493-7a496e0d6961"
        },
        "item": {
          "id": "0f5a1c37-03a3-4967-98a1-8cecb95b5bae",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "78006745-522d-4694-b4ae-914daac1328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2974d4de-b389-4816-ac01-0cceef342009",
        "cursor": {
          "ref": "36f2361c-5346-495f-9c62-a7fe6ab94f3d",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "33e0c5e6-9187-4f10-bf63-350c701a4ec1"
        },
        "item": {
          "id": "2974d4de-b389-4816-ac01-0cceef342009",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "438e51c7-21e0-402c-96b3-581c8a9f6a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 342
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3519b0a5-74ee-4f64-885e-e6cef8bece0e",
        "cursor": {
          "ref": "81c608cc-597e-4ae4-b24e-23a352678607",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5dffe8c-1cae-40ae-8b68-2057a29c7565"
        },
        "item": {
          "id": "3519b0a5-74ee-4f64-885e-e6cef8bece0e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "98d11b19-89ca-41fe-b8e2-127f2602edc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064f0908-3a55-41fc-bb34-d681d999f637",
        "cursor": {
          "ref": "f9993db3-82b2-40f1-a5e9-175b12a851fb",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fd3e47c1-3816-47f5-b44b-b1794b0af667"
        },
        "item": {
          "id": "064f0908-3a55-41fc-bb34-d681d999f637",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa3f0d24-b469-4777-ac71-91cd01d9c6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 341
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e81819e-b1e7-4aa3-ae02-3528688f804b",
        "cursor": {
          "ref": "e31d526a-934b-4425-951c-7bb968870d59",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c47aace0-5f60-4eb5-b61d-d3ac73d83feb"
        },
        "item": {
          "id": "3e81819e-b1e7-4aa3-ae02-3528688f804b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c002a510-2798-4313-8152-5d290f6fb783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 464,
          "responseSize": 339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e007c9c1-999c-44e6-8b51-6ce2cf31df25",
        "cursor": {
          "ref": "f859ef59-c419-4418-b5b8-e954d3d36922",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cebb1262-7e77-4945-9fb1-29f66472f53d"
        },
        "item": {
          "id": "e007c9c1-999c-44e6-8b51-6ce2cf31df25",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d575a5b3-bc9e-4aec-836e-df4f59399c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4069773b-33e9-4d51-8ac4-5b5d872e8711",
        "cursor": {
          "ref": "bec5f275-bf3f-416b-b932-231f2dadacf0",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "57e123c7-b9aa-4458-a975-0973e3a9018c"
        },
        "item": {
          "id": "4069773b-33e9-4d51-8ac4-5b5d872e8711",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "31df4810-37dd-4a2b-9c7e-b15c160d34c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99a3db8-c85f-4b1d-9d30-a48f28585223",
        "cursor": {
          "ref": "4f2129b4-2944-4ff2-be60-d4c73b645eba",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7018f185-8222-4068-885f-e9b256622cd7"
        },
        "item": {
          "id": "b99a3db8-c85f-4b1d-9d30-a48f28585223",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59f0dd8d-3004-4a7c-84c9-487a962b15c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abef248-4a04-4a1f-a513-21dec4004372",
        "cursor": {
          "ref": "2ddfdbd4-2a4a-4886-85b6-e724f303a9c0",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "81829f81-d3a8-4b65-a914-0e7bd6ea6ba0"
        },
        "item": {
          "id": "7abef248-4a04-4a1f-a513-21dec4004372",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "019e55cb-605a-4316-acd8-625eec7e0a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bd45ed-169c-46be-b4b7-1184d90b2552",
        "cursor": {
          "ref": "f21d7a69-4215-4f98-bb24-e0d86b4f9584",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "14da6139-d320-4aa9-9e92-34f4eabe442b"
        },
        "item": {
          "id": "75bd45ed-169c-46be-b4b7-1184d90b2552",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3231fb18-cd30-47a3-81b3-26bf4323e11a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 474,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc5429b-ea43-48d4-9bf2-3f15a2930e13",
        "cursor": {
          "ref": "2921af80-3d05-4610-9e78-41008d4fb7e8",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "76174c04-866f-444f-8fea-8d7015d0f1b8"
        },
        "item": {
          "id": "fdc5429b-ea43-48d4-9bf2-3f15a2930e13",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "821ebdd0-ca19-41b0-af3a-79603175f6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a54c060-157f-46c6-ac79-5f86cf3441fc",
        "cursor": {
          "ref": "d9da7cde-7fe3-4427-8e80-4688b02426cc",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "37a656a6-f7a1-4651-a8b0-515eab57689a"
        },
        "item": {
          "id": "3a54c060-157f-46c6-ac79-5f86cf3441fc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fcf335cd-2db0-4ef0-b416-8e677c576805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5929860-d47f-4de0-b116-6ce352b4ef51",
        "cursor": {
          "ref": "10bfda2e-aa59-4abc-965a-ecf5afe7ee26",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b02cded7-c59a-4209-84ba-9da5f8ef575f"
        },
        "item": {
          "id": "e5929860-d47f-4de0-b116-6ce352b4ef51",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1249e18a-ed7a-4341-9d85-97a3026912ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d15898eb-2c12-43a6-b2ac-a1fe2e8d1124",
        "cursor": {
          "ref": "6647706a-29da-4260-a967-d0a6718da052",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a4e4856f-f759-4e13-890b-be70887eb79c"
        },
        "item": {
          "id": "d15898eb-2c12-43a6-b2ac-a1fe2e8d1124",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9db7efbe-22a6-44d1-aba4-ac5b4d980c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bfe77b-1454-4f34-acee-0910e8341d39",
        "cursor": {
          "ref": "16bcdccb-9e14-4abb-9e23-9154bf285e75",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1ff6653a-d3f7-4ea4-8e2a-a4b969713c1f"
        },
        "item": {
          "id": "27bfe77b-1454-4f34-acee-0910e8341d39",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6358f217-589b-425a-8638-3331df34cccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd31cac-fe33-4931-bf43-1e1f7d58a878",
        "cursor": {
          "ref": "a239d22a-729a-4187-961d-20d501317b86",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "991b0d5f-30f7-4dea-8137-f2e726bfe5e6"
        },
        "item": {
          "id": "cfd31cac-fe33-4931-bf43-1e1f7d58a878",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0734caa2-cd46-4e2c-8dc8-42e07eeba8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05a2b0c-b43f-40c9-86dd-a6de77bebf12",
        "cursor": {
          "ref": "5dff6383-e0f9-4eaf-b334-7406758e6b73",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e2d57137-ab0d-42b9-8a89-736c5c1aed39"
        },
        "item": {
          "id": "e05a2b0c-b43f-40c9-86dd-a6de77bebf12",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf6d5818-4bb5-4173-806e-cccc458b979f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65d0164-e6b1-453b-bdbb-8e9f2bbaf761",
        "cursor": {
          "ref": "4200d694-2bd6-4613-a260-f729bb4a1dcc",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7c013577-f56f-4ff6-ac07-7ceae3c15b47"
        },
        "item": {
          "id": "f65d0164-e6b1-453b-bdbb-8e9f2bbaf761",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "04ddca5b-ee05-46bd-9092-fdc20f506b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aff8a9-5212-4996-805c-7fb64908f35d",
        "cursor": {
          "ref": "06d96b75-a314-423a-b627-8feec04971a5",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f8e974c1-90e7-4c5b-9a3a-ad625270310d"
        },
        "item": {
          "id": "26aff8a9-5212-4996-805c-7fb64908f35d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "345056b8-5ab6-4a6a-87a4-615c29b066d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a52c82-5912-4c62-a532-4559c87917f9",
        "cursor": {
          "ref": "fadc63c3-00e4-43b3-8ae1-09d84e042c35",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dc8eb6f7-d9b7-4994-965e-4682607d50b9"
        },
        "item": {
          "id": "f7a52c82-5912-4c62-a532-4559c87917f9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f8c6bbb0-23a1-4fb5-90da-26dbe6fbb10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b63d4ff-ca43-41e9-a8c6-7d7bc46d27ba",
        "cursor": {
          "ref": "ffaa84e7-b3db-42c5-9b9a-3763efee6ef9",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5eb94e90-9bf5-4174-8caa-ecf884579584"
        },
        "item": {
          "id": "3b63d4ff-ca43-41e9-a8c6-7d7bc46d27ba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e00e5f4c-34ca-484d-81d4-23984b208951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33fb615-3ef9-4220-8c02-72fa7769c7aa",
        "cursor": {
          "ref": "a3b21cf2-d58e-4f39-afe4-34731e9e9948",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1bbae767-a99f-488e-bc0e-64859dff3e48"
        },
        "item": {
          "id": "b33fb615-3ef9-4220-8c02-72fa7769c7aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "efd564ec-e16c-40dd-bc2e-ebe10c2af0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f0071d-c8ce-4502-8de4-111d4677e0c7",
        "cursor": {
          "ref": "f77ffcda-2bf3-4537-b701-7d1f6f5677f0",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "49e32a2f-f1a3-4004-97cf-1244983325ea"
        },
        "item": {
          "id": "d5f0071d-c8ce-4502-8de4-111d4677e0c7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f55d3f08-87ce-4b4c-8340-714ed1eb2fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeeb40a-a81d-4f22-a2de-b03879ac8977",
        "cursor": {
          "ref": "122e6b70-db75-4223-aab2-d09116b55f63",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f45c00a9-6c89-4634-99fe-c1bdfa46c5e5"
        },
        "item": {
          "id": "8aeeb40a-a81d-4f22-a2de-b03879ac8977",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "99a96c59-abdd-4f6e-b7aa-3b6ea0f19ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a1ef38-cc50-4ae7-91d7-576098e72781",
        "cursor": {
          "ref": "e29034ce-fcb1-4e5e-b893-ab2d719e1ace",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9f5cc64a-893d-4aaf-8c68-d32621c3a919"
        },
        "item": {
          "id": "a7a1ef38-cc50-4ae7-91d7-576098e72781",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26282e30-b934-4033-ac87-c4e710953b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fac7a8-9446-4881-a552-76291aaa0fe4",
        "cursor": {
          "ref": "ec38cd3b-81f0-42b3-95d9-6ab3c0dd8299",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "49056685-3319-49a7-9210-13d4aae0fe4d"
        },
        "item": {
          "id": "30fac7a8-9446-4881-a552-76291aaa0fe4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0768516b-3249-43a8-9324-11e5ee0e1084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 651,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2defeb19-0023-45d1-a977-0c375528f4ef",
        "cursor": {
          "ref": "093ae41e-2573-4d90-b21d-c46923acc2e9",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0c77f147-e78e-42f2-8232-8a26bd3b5770"
        },
        "item": {
          "id": "2defeb19-0023-45d1-a977-0c375528f4ef",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b52f6de4-d8a0-49a2-a719-a7bff7381ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71dddef-95aa-4ffb-87f1-0fe31a3aee10",
        "cursor": {
          "ref": "a359e93e-ab60-4e13-b685-6af32a7f6bdc",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "727af666-4662-4aae-92c6-011dd0089807"
        },
        "item": {
          "id": "e71dddef-95aa-4ffb-87f1-0fe31a3aee10",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8dd19ab9-759d-4114-ba11-188a3d94913b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2597a8e8-2f1b-4172-80b0-ded789d5be1a",
        "cursor": {
          "ref": "a0dad337-88a7-4333-a05f-545bd3dd6acd",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8478c2c1-316b-4f94-a8af-f2281545e804"
        },
        "item": {
          "id": "2597a8e8-2f1b-4172-80b0-ded789d5be1a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "64a73455-3e62-4f9f-b908-b4539b8f37ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01108925-398c-4678-aea8-5f582e9d70f2",
        "cursor": {
          "ref": "c26546df-7728-4e8b-9304-0f8207665395",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "36531208-04dc-4f6d-ac27-f0b7058b51a0"
        },
        "item": {
          "id": "01108925-398c-4678-aea8-5f582e9d70f2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7338f8b3-836a-48b1-aa49-079bd373c75d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d35d58a4-0f18-4533-8fba-6a466b7a24ba",
        "cursor": {
          "ref": "fc41b097-80a6-4d46-a536-f32ba5cd5a90",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8a45a337-806b-4de2-9754-6e871e2836a4"
        },
        "item": {
          "id": "d35d58a4-0f18-4533-8fba-6a466b7a24ba",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b63d1ab9-e834-4f67-90f2-bdfb9bb5b776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b631304-38df-4445-812c-dc75d5f3a6e6",
        "cursor": {
          "ref": "69f13598-6172-4c4f-bca5-7ceee21e2f57",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6a810b7c-38d0-4ac8-9942-36d7cad14e3a"
        },
        "item": {
          "id": "7b631304-38df-4445-812c-dc75d5f3a6e6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c0149e20-3c35-4706-a047-0b4630f29cde",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35300a46-c553-4e6d-827c-bc4d90ba3e43",
        "cursor": {
          "ref": "d90a34b1-dd8b-4190-972b-46e158c67a85",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "78e82e2f-c78e-47a1-b20b-15cfaa1551d5"
        },
        "item": {
          "id": "35300a46-c553-4e6d-827c-bc4d90ba3e43",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "006374f2-f887-4108-88a9-5f9d5c88a797",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 554,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194f91a7-42f3-4ca6-9879-7cdc87fb594b",
        "cursor": {
          "ref": "28227ef7-f9c1-463e-8328-07b3e7a88f6f",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4c5727dc-3fc9-47a8-9370-05fdc786868d"
        },
        "item": {
          "id": "194f91a7-42f3-4ca6-9879-7cdc87fb594b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "95ac884c-23fa-4923-93ee-39c7d51e75b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194f91a7-42f3-4ca6-9879-7cdc87fb594b",
        "cursor": {
          "ref": "28227ef7-f9c1-463e-8328-07b3e7a88f6f",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4c5727dc-3fc9-47a8-9370-05fdc786868d"
        },
        "item": {
          "id": "194f91a7-42f3-4ca6-9879-7cdc87fb594b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "95ac884c-23fa-4923-93ee-39c7d51e75b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1865d422-0aaf-4d20-a205-d2acf72592f6",
        "cursor": {
          "ref": "efbebdd2-fdd5-4800-b563-cb3045d92f0c",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "37ea2d18-8bad-4f46-864b-bb5b474efc89"
        },
        "item": {
          "id": "1865d422-0aaf-4d20-a205-d2acf72592f6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d8e2a219-fc64-45a5-a0a5-eb7daed7fdfb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 320,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a0a6840d-cc77-429e-b72a-994fc0de1138",
        "cursor": {
          "ref": "9fa299d1-6b85-498c-85f2-4ccde4c6e49c",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9ddcb75c-028a-469b-8158-218131059ee5"
        },
        "item": {
          "id": "a0a6840d-cc77-429e-b72a-994fc0de1138",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9f09d72d-b68a-418a-a490-3b3a8e992d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288d6166-b475-4a6a-a606-5d02a0a637b3",
        "cursor": {
          "ref": "89c589b5-7fff-4bb8-83f5-cff58d3a0f73",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b02bcc91-6c57-4ffb-afcf-d60ac6cd9771"
        },
        "item": {
          "id": "288d6166-b475-4a6a-a606-5d02a0a637b3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e7de7d05-31ba-47cb-af2c-9bad6bc1e0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6860c614-9704-4958-ae50-033f8f53a5c7",
        "cursor": {
          "ref": "b341ab1e-bd16-43b4-a2a9-13ab83e25158",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6b9162fc-7c99-4a8e-aa20-0f5f3b2c9c7d"
        },
        "item": {
          "id": "6860c614-9704-4958-ae50-033f8f53a5c7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "40122587-9d90-4cba-8f45-0089f3f34a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561b7b48-fccb-4278-b053-6493eb27c830",
        "cursor": {
          "ref": "b29b0c9b-8826-461f-bf6e-c451c539ecbe",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "505ff01d-a494-47bb-8521-df9551c5afe8"
        },
        "item": {
          "id": "561b7b48-fccb-4278-b053-6493eb27c830",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "288bd651-5fb3-4a78-bde5-d79bb9279865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b55b069-d9b5-476e-9149-d939e7eb6944",
        "cursor": {
          "ref": "aa90597c-7e29-4734-abd5-400f6c817644",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dcbd5558-88a2-4ac7-a25e-46921b2dd0f4"
        },
        "item": {
          "id": "6b55b069-d9b5-476e-9149-d939e7eb6944",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f3228f8c-6b84-42e0-912d-2aad282e945f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c98a417-da97-4403-82cb-729471c2f784",
        "cursor": {
          "ref": "abe798d2-2bf3-4fbd-add8-b5c98f3d326c",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7ef5c80b-c296-4160-b138-348cb9784f44"
        },
        "item": {
          "id": "7c98a417-da97-4403-82cb-729471c2f784",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "50e293ce-280b-4777-a470-640cee4e43d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7bcd86-7ed8-4923-8925-25add63babf3",
        "cursor": {
          "ref": "95b719f5-027e-426e-928e-3fadd3dacd26",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "eead8c4a-69c2-4e23-9b27-ed5aa8fd5dc0"
        },
        "item": {
          "id": "be7bcd86-7ed8-4923-8925-25add63babf3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b5bf7639-bad4-44b0-940a-3a36db83df12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbf13a9-adb2-41a5-8ac2-99fb2b5031d5",
        "cursor": {
          "ref": "fd046538-ba20-4ea5-b777-252689b015bb",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1583d3a6-1f95-4dc0-b9cf-60e60c68c811"
        },
        "item": {
          "id": "5bbf13a9-adb2-41a5-8ac2-99fb2b5031d5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6f8c3578-505f-47b7-8306-a279a274c398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1399
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1f1de8-b0ad-420a-a909-50573b6ad12e",
        "cursor": {
          "ref": "66829303-3e00-40e4-8c62-d77e9bb33fb5",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2f801182-b1ac-45d6-8e60-3295ede4f30a"
        },
        "item": {
          "id": "0e1f1de8-b0ad-420a-a909-50573b6ad12e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ef5c44ca-b190-47ee-bede-9549f21764a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d9f6dc-5c3b-4e93-bb7e-015f2335c3bf",
        "cursor": {
          "ref": "d5b99440-42f5-4c7f-a70a-d063938d8fea",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1df7ea6e-c66d-4922-827b-29b504cc5a9e"
        },
        "item": {
          "id": "d8d9f6dc-5c3b-4e93-bb7e-015f2335c3bf",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c0cff2a1-1854-464c-9955-4f2374210038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f3bdae-cb98-4001-b7d7-884bb0273d9c",
        "cursor": {
          "ref": "f792da7d-6c91-43fe-8ff5-1e6ddcffc094",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a6d666bf-c244-454a-8955-7de4cb04f0bc"
        },
        "item": {
          "id": "d2f3bdae-cb98-4001-b7d7-884bb0273d9c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "eeb34b64-f290-4fab-b140-8686d32247a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbebabb4-74c6-425b-9d22-c9788da95985",
        "cursor": {
          "ref": "47c37208-59dd-4432-9166-062e59aa0ecc",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1b4dbd7a-cfa6-47c3-8d59-551bf938b323"
        },
        "item": {
          "id": "bbebabb4-74c6-425b-9d22-c9788da95985",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "04e61468-3233-4af0-b114-6dd2d582a948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4641f275-3b5d-4e79-900a-4b62987060a1",
        "cursor": {
          "ref": "f1473191-880b-44db-b7bd-dc37129704e1",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "25973e77-b433-4e31-9eaa-8a4abec2c1be"
        },
        "item": {
          "id": "4641f275-3b5d-4e79-900a-4b62987060a1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "34291f10-0600-427b-abc3-4c459b3d75c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4978f4c6-1b4b-466c-b8f9-e1714c7dd718",
        "cursor": {
          "ref": "46173d00-0de7-4101-b8d4-d6c5970e4ef5",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8719a2f6-3bd7-4d52-89f4-f14d7604fd3c"
        },
        "item": {
          "id": "4978f4c6-1b4b-466c-b8f9-e1714c7dd718",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "38775fc7-6db7-48ed-ba31-eec221ba404d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 1680
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92204e3-2998-454d-a66e-81f97944f10a",
        "cursor": {
          "ref": "7669055a-99a5-454c-828a-22c7679dca88",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9aaf9a08-6dae-4ff1-8261-b7857a71f11d"
        },
        "item": {
          "id": "b92204e3-2998-454d-a66e-81f97944f10a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e3f7850-0d72-4f98-a0f5-360629ebba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d430d0-262b-4ddc-9c15-3ec9d54745c9",
        "cursor": {
          "ref": "f80c5172-b760-4028-8828-1614b1309236",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a27c1b72-30d3-4dbb-bddf-25d065eff9db"
        },
        "item": {
          "id": "85d430d0-262b-4ddc-9c15-3ec9d54745c9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ba3dd574-a3f3-4684-8a67-08f5043094c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e96a5f83-b90d-4f7c-8ff9-8940274ede65",
        "cursor": {
          "ref": "7122b527-84a6-462e-8a6e-fe50ea4c43cc",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d33c704b-2632-4bd0-891d-39f51355eb9b"
        },
        "item": {
          "id": "e96a5f83-b90d-4f7c-8ff9-8940274ede65",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "afc92a8b-2639-4e11-9823-f4e65fce8fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fd301e-3e9d-42ab-bff8-4b857cc90a33",
        "cursor": {
          "ref": "58131340-cad3-46e6-8fb5-758614cf5f4a",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a720aec2-a91f-44d9-a62e-11a09d01d026"
        },
        "item": {
          "id": "40fd301e-3e9d-42ab-bff8-4b857cc90a33",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3fa279b8-49b9-4c2b-8f75-2e7f8f01033d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3f7793-0454-486c-87ff-26d9a30e5284",
        "cursor": {
          "ref": "2aa8b0b7-5468-46b7-a5e5-a11f7a86ed68",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3565be39-654f-4323-ac0a-449b64e16904"
        },
        "item": {
          "id": "6f3f7793-0454-486c-87ff-26d9a30e5284",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "088ea9d2-38a5-4019-9214-4282da595da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff1158f-4146-4f26-b668-6e56141df875",
        "cursor": {
          "ref": "466949d2-07a8-4f55-b034-6730a55dbcc8",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e0a6c938-ef90-44b1-85c1-e1ddad2222f0"
        },
        "item": {
          "id": "6ff1158f-4146-4f26-b668-6e56141df875",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e2559e27-046b-418d-8013-0e69cbb0250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5854833d-448d-435a-a3c7-b5ab210c2cbe",
        "cursor": {
          "ref": "2346cff1-8a9f-45e8-8e05-456bdb1f3736",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "83712123-cbcb-44e5-b2b7-32b53ad38771"
        },
        "item": {
          "id": "5854833d-448d-435a-a3c7-b5ab210c2cbe",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9ff96522-7313-43f0-969d-e151f386bd15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edaff449-f55b-4b68-a923-f9467ad26d63",
        "cursor": {
          "ref": "af35f62a-4c17-449b-8b18-3c4892f7ba22",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "17aa2815-5c55-4ac5-bf1f-d65f80d43610"
        },
        "item": {
          "id": "edaff449-f55b-4b68-a923-f9467ad26d63",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9da5ac44-110d-418f-a142-1b5a80dc71b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001c5ad3-c5b8-4176-8844-6587dd7f6668",
        "cursor": {
          "ref": "6308ddea-c79d-4812-a0d0-75d864e6b8fd",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ef47284f-ff06-47a9-949b-af24a1397961"
        },
        "item": {
          "id": "001c5ad3-c5b8-4176-8844-6587dd7f6668",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8a908e7a-b34b-4b67-8651-b0f5b2a0c24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30b18eb-c747-4c7c-b153-d3962d09806e",
        "cursor": {
          "ref": "a3591ba5-7cc0-4bc1-a3b9-0ad0e36b4af2",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7f3e36c3-3d9d-4850-8021-2e97a3260c46"
        },
        "item": {
          "id": "d30b18eb-c747-4c7c-b153-d3962d09806e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "18fd42bb-2cf2-47c3-9b91-44b5cc5f7be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24ee33d-57bc-492f-8789-289071c115ca",
        "cursor": {
          "ref": "4002e363-12e6-4492-8605-60acf8747fdd",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ec74b744-105b-43db-8871-4f29109617ae"
        },
        "item": {
          "id": "d24ee33d-57bc-492f-8789-289071c115ca",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6d645fe7-2934-49dd-a972-1d263b731f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac2ea8a-f5b6-4b4a-b3a9-8b225ecde7ad",
        "cursor": {
          "ref": "a4c0e1dc-a82e-4479-b376-d3a741f6b76a",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "822c3a72-3610-4c49-b026-6d09f86fd359"
        },
        "item": {
          "id": "5ac2ea8a-f5b6-4b4a-b3a9-8b225ecde7ad",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "03a8c11c-08f6-4881-8a9c-7879f33bdc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d2e09f-18f4-48d6-8382-fc052580e222",
        "cursor": {
          "ref": "e5da1cb8-01c0-4411-a2f6-c72d14909130",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b621c521-d15b-4b9f-9826-880ead31e41b"
        },
        "item": {
          "id": "27d2e09f-18f4-48d6-8382-fc052580e222",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f93a1bbf-6383-416f-b2ee-214882ceeccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd7d263-9f14-49f0-b9bc-66f1842e0155",
        "cursor": {
          "ref": "8f27d7fa-63eb-4561-9dc9-bb705fca0198",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "fd377fe8-ef23-4484-8837-3c68df5a8ad6"
        },
        "item": {
          "id": "dcd7d263-9f14-49f0-b9bc-66f1842e0155",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1bca0092-dd0d-48e7-b56a-471f2bd61c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4b926b-dbd6-424c-aa4e-24c00ab15a7c",
        "cursor": {
          "ref": "1d7458ff-aeab-471c-ab44-049519e655ed",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "54299147-3c20-4a67-be49-91cfcd3cfb8e"
        },
        "item": {
          "id": "7b4b926b-dbd6-424c-aa4e-24c00ab15a7c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e7a47f74-4751-435b-8528-65593bb52aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bd3442-5945-485a-9b6a-857bf69c598e",
        "cursor": {
          "ref": "2f11aa64-914b-4780-95b3-a8d37242e0e5",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "be0e0cb5-9ac6-4a60-bd8d-c3a4b8bcd7b5"
        },
        "item": {
          "id": "e5bd3442-5945-485a-9b6a-857bf69c598e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f2fa2614-f509-499c-ad2d-41a758cb6200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a1812c-4dfb-4bc4-a3cc-3ffb3fd1021f",
        "cursor": {
          "ref": "e73f65cc-4f50-407b-bbbf-07b1e91e1fd3",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "67e963a3-8ae8-44a6-a477-f34a79c05835"
        },
        "item": {
          "id": "23a1812c-4dfb-4bc4-a3cc-3ffb3fd1021f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4f165291-3977-48be-84e4-aa84a6db4225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a439e62-5788-45eb-90e3-3acb3fd8e19c",
        "cursor": {
          "ref": "4211cb62-f876-4d44-9218-252fd891e8e5",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b2d48c0b-2269-4375-b1e4-74463ef233a1"
        },
        "item": {
          "id": "1a439e62-5788-45eb-90e3-3acb3fd8e19c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8c8b5635-79a6-45fc-b44d-09ed294f4d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b1905b-1bc5-4c31-8f44-c75457e4997c",
        "cursor": {
          "ref": "742aa52e-588a-4ce6-b3ea-0410ac8025ba",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5e77bc90-9c5f-4aab-afba-dac22adeb581"
        },
        "item": {
          "id": "30b1905b-1bc5-4c31-8f44-c75457e4997c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3ec90d1d-455f-40de-afa7-0b645b8088ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598becaf-4fcf-469d-8e2c-45b2a1ba29e0",
        "cursor": {
          "ref": "d3aafa69-8272-4ad6-9778-2b840067fc9e",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d7c83052-85c5-4b3c-b592-b1d48418abe5"
        },
        "item": {
          "id": "598becaf-4fcf-469d-8e2c-45b2a1ba29e0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "75627c30-11ba-478d-bbdb-1abdcb8cbbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0f7a15-8d5e-4496-89f0-b892a1123030",
        "cursor": {
          "ref": "a9973e4b-cb26-43e7-9c1b-398980f363aa",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9e4d1300-cc3c-47b7-849b-ceec9ada2ba1"
        },
        "item": {
          "id": "4b0f7a15-8d5e-4496-89f0-b892a1123030",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "efe50f65-6bb6-43ae-8665-605b3cf35eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbea73f-3624-4ff6-a361-735607b1741b",
        "cursor": {
          "ref": "d39116d9-4c4e-491e-a74d-ff032d59f45d",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7ddb934b-1e70-44ec-afb3-3d9f403b63af"
        },
        "item": {
          "id": "edbea73f-3624-4ff6-a361-735607b1741b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "762b5f68-013d-493e-97ba-0076ead9f698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266bae5b-8924-47cd-b326-dd9aff985d42",
        "cursor": {
          "ref": "e15fe184-611b-44b5-adcb-b1b7c0f86ec2",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b101bc5c-78d5-40ef-a30a-99e2a32a0289"
        },
        "item": {
          "id": "266bae5b-8924-47cd-b326-dd9aff985d42",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d1d6936e-71c0-4971-b9d9-097f9251ac8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d570bb5-2180-41b0-84cb-667a362ab0f6",
        "cursor": {
          "ref": "44379404-9525-414d-ac44-f324d8c86357",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2f7f0deb-f2a2-44b9-b992-9ce3c6c9f455"
        },
        "item": {
          "id": "7d570bb5-2180-41b0-84cb-667a362ab0f6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f25ac606-2f61-45bf-8ef1-99dbfa16789a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afacd50-220e-49ff-8ece-08f5bd718f40",
        "cursor": {
          "ref": "4c7a0ba8-885e-46b6-9cc2-61a71709e869",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d3ac258a-f0f9-4674-89b1-7a5056ac6fba"
        },
        "item": {
          "id": "6afacd50-220e-49ff-8ece-08f5bd718f40",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0d650313-6952-4a92-bba5-68a598d184de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdf778a-72e6-4f36-a6e8-0c488a38c058",
        "cursor": {
          "ref": "7db21340-6a7b-4ad5-aeb7-bac9517be036",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7186f593-6817-493b-bc55-0ffd0b3ebf65"
        },
        "item": {
          "id": "6fdf778a-72e6-4f36-a6e8-0c488a38c058",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "abd75d8a-6c46-49ad-9994-89e67e34a061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543ba039-1638-49b6-be41-3e48c0ba7fc1",
        "cursor": {
          "ref": "da400046-6bd8-4a7c-a54b-05636033db14",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "92d86228-86ff-4477-9e34-f9502d351bb6"
        },
        "item": {
          "id": "543ba039-1638-49b6-be41-3e48c0ba7fc1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ceac3ea2-bc7e-4a4d-b074-cdeb33fa4eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d6886d-3c15-49ca-bb9a-87a4baec676d",
        "cursor": {
          "ref": "b644cee4-1fbd-4f09-bf48-89f8b30f7210",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a153c3ae-8124-4f80-99cc-61ce65d2115c"
        },
        "item": {
          "id": "b0d6886d-3c15-49ca-bb9a-87a4baec676d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d2063ff1-c9d4-41a9-aeb1-e15d3c1be637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4b969b-da57-466f-ada7-6fb1344f4520",
        "cursor": {
          "ref": "8d6fa943-7aac-4df5-b2d2-074de67609d2",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c837731b-7436-4cf3-b540-7c2b5b14d6e6"
        },
        "item": {
          "id": "9c4b969b-da57-466f-ada7-6fb1344f4520",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be7cbf37-8648-4a0a-af95-7e7e29ce08bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f716a7-78e0-4d1c-bd3a-323a10754770",
        "cursor": {
          "ref": "870c9218-a141-45da-982b-142e7cf294b8",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9d0502fc-079c-47ba-aab4-aaea37079a45"
        },
        "item": {
          "id": "f0f716a7-78e0-4d1c-bd3a-323a10754770",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b2972471-914a-40f1-884b-372c4485c1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69362b3-ac1c-4cf2-9a90-0a5ebe3dc596",
        "cursor": {
          "ref": "f6e5ea7b-0c49-420e-b191-ce7fde1e5e78",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "64293269-0b29-4b00-803b-f3c6e1fac2e2"
        },
        "item": {
          "id": "e69362b3-ac1c-4cf2-9a90-0a5ebe3dc596",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e182dad6-8d6a-46ef-b3eb-de63d19e72d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ac0be8-5848-45c7-9c3e-9d5da9230ab5",
        "cursor": {
          "ref": "caa97a71-9453-47e2-b6f5-304f9db76d31",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "83c12f34-acbd-4ff5-90cf-f1c92bfdee6a"
        },
        "item": {
          "id": "b5ac0be8-5848-45c7-9c3e-9d5da9230ab5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3bd61f54-6b95-4704-a034-ae4e3e46c6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a4ef94-16ca-4f4d-a2ca-985abb71aec0",
        "cursor": {
          "ref": "775c02fc-301a-4be2-a85a-d767846b3691",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1b200381-61e8-493a-b523-7a173932ca5e"
        },
        "item": {
          "id": "97a4ef94-16ca-4f4d-a2ca-985abb71aec0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6ed90e18-695c-46c9-9f08-8de98c54e8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7650c05a-e64d-43b5-85ef-7f2bc3c54e9a",
        "cursor": {
          "ref": "493cdab6-d623-498a-b0a1-7cd0ae607bb0",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "17321dbc-9b94-4fbe-b15e-2573ed6fe416"
        },
        "item": {
          "id": "7650c05a-e64d-43b5-85ef-7f2bc3c54e9a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "11e461f6-e230-464b-ac9b-806bdea0f7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cd2922-a7b2-490b-8d99-983f4e7dcb20",
        "cursor": {
          "ref": "f936cbf5-b93c-4061-a818-174388f78151",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "34d5e6ce-aa8f-4033-954e-85dc9b2e167b"
        },
        "item": {
          "id": "57cd2922-a7b2-490b-8d99-983f4e7dcb20",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3cb09ec6-fae8-4cae-a5b4-52a165fa8d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2f5e75-4453-49a9-9f6c-dbf60df546bb",
        "cursor": {
          "ref": "1bc06a92-00bd-4498-ae25-c17cd7bbf845",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ba315066-9f2e-4bd7-ac10-8d8a08949797"
        },
        "item": {
          "id": "9e2f5e75-4453-49a9-9f6c-dbf60df546bb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ae46a243-6279-4e2a-a3b0-3c4c13bf778b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 275
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673bd54e-a779-4a6f-a067-b0b43d0d291e",
        "cursor": {
          "ref": "70a9862d-e8c8-41ed-a0ee-688c985fe247",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "43f66e65-c8e2-46f2-9906-03383ff3849c"
        },
        "item": {
          "id": "673bd54e-a779-4a6f-a067-b0b43d0d291e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "51468ff7-5322-47ca-91bd-6b4b6d8425dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1410b43-b486-4961-927a-201a6bd7db5d",
        "cursor": {
          "ref": "b444f711-ce66-4f31-b3df-50a5b641bcb2",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "225fe402-8b23-4ba8-ab47-ef613d1e54d8"
        },
        "item": {
          "id": "c1410b43-b486-4961-927a-201a6bd7db5d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9f82a194-a6ed-47a0-a62a-cebf26959707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3774d651-0b72-479a-9a22-887b3fab1c19",
        "cursor": {
          "ref": "f3fa6afe-2988-4207-bcbd-ad680951e704",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1b507e6d-b105-415b-9e72-1d174803bc1e"
        },
        "item": {
          "id": "3774d651-0b72-479a-9a22-887b3fab1c19",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e29cf260-0f30-4bbf-a59b-4ada046df22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f431cced-102d-4c9b-8889-a66d5cca3453",
        "cursor": {
          "ref": "4b453d09-ee1f-430d-bcf0-510c1693d925",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "344fe5f1-43b7-462b-8e67-9af168c555a1"
        },
        "item": {
          "id": "f431cced-102d-4c9b-8889-a66d5cca3453",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f6468fe6-8959-4f9b-9ab2-d94f7987526d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a37ce6-9c2d-40b6-b98d-573ea2038981",
        "cursor": {
          "ref": "97eff3be-714a-4586-abf4-26ae8960f875",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "77b0dc3b-c0d4-4c72-810e-82fa07c30970"
        },
        "item": {
          "id": "a8a37ce6-9c2d-40b6-b98d-573ea2038981",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c3c145be-449f-4b66-96db-337a926f492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4182ffd-ab49-41eb-9258-5a50c4bacc43",
        "cursor": {
          "ref": "2abf634f-7ab7-46e1-bfdc-0207281bf342",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3be7f928-5cb5-4984-ba43-ee8fdbbda1c3"
        },
        "item": {
          "id": "e4182ffd-ab49-41eb-9258-5a50c4bacc43",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c6612e15-c8f3-4433-a97f-35eeb8c637cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a2a510-8484-41b3-ae03-3a817e991610",
        "cursor": {
          "ref": "b7106823-08c0-49ad-8bd1-cbf779da78c3",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "60b52bca-98e2-47f3-86a5-a9f9ff5930b7"
        },
        "item": {
          "id": "04a2a510-8484-41b3-ae03-3a817e991610",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b94fddaf-3d5a-475d-bc5a-df32c6a24377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ae2322-2482-474f-8727-89ada1c41a65",
        "cursor": {
          "ref": "5a18ef6d-12c5-4aa5-925c-9026e34aa37b",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dc35a2ca-63fd-4d30-917f-f92b4095aa3f"
        },
        "item": {
          "id": "10ae2322-2482-474f-8727-89ada1c41a65",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "75d0f65e-88cb-4e45-aa84-ce72f445f37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fd80cb-69a0-4e1f-9a72-a1e5039b57ed",
        "cursor": {
          "ref": "6380b5f2-5272-410c-82dd-1fd8376eee51",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6ea06f2e-3089-4314-8416-e5afae29c1cb"
        },
        "item": {
          "id": "83fd80cb-69a0-4e1f-9a72-a1e5039b57ed",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "aa3d3a06-d0c2-47d6-b714-e65c1767ee81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a07521-1082-4701-b86b-9dd3d6c70c0b",
        "cursor": {
          "ref": "8d2e7d55-51ba-4eb5-8cbd-a48b1bc2fead",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d7fbbea9-3d3c-403e-9947-f30aa70530ee"
        },
        "item": {
          "id": "f3a07521-1082-4701-b86b-9dd3d6c70c0b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "54de332a-4416-4c80-889e-8fc6260e73b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64552ee-639d-4d4f-b35e-f04a36ca5593",
        "cursor": {
          "ref": "5994d739-e281-4a6b-9c08-3d696e3c1bf2",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "434f8deb-35c3-4e2a-9b8e-84783939d6ce"
        },
        "item": {
          "id": "c64552ee-639d-4d4f-b35e-f04a36ca5593",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "190e6714-b137-47c3-8789-6aca34b30ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5979b811-7b07-4eac-bbaf-cbaa132c65af",
        "cursor": {
          "ref": "ed8c3492-76f8-44b4-94ab-88f290ab2268",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d5ad7e81-3193-4739-9465-1605fd15e602"
        },
        "item": {
          "id": "5979b811-7b07-4eac-bbaf-cbaa132c65af",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "78242b22-53df-49a1-aa8b-77c99cb8fcc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47b1f9d-ff22-4aea-86a8-b36d7456c950",
        "cursor": {
          "ref": "f9a9c6b4-25c4-4b4a-aef9-86c52544e2cd",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c0424905-a5ca-4507-bc14-a9282fb9a418"
        },
        "item": {
          "id": "c47b1f9d-ff22-4aea-86a8-b36d7456c950",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6de17a09-921c-4f6d-bae5-a7b1c51803e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1f26d9-0864-4a2f-9995-845f496e8971",
        "cursor": {
          "ref": "f1e11c91-a3f9-4d90-b34f-f7c808606ec6",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "af5f986c-e7c6-43b0-b7bc-ea41221a176c"
        },
        "item": {
          "id": "2a1f26d9-0864-4a2f-9995-845f496e8971",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b43d15f0-b088-4e32-acd5-4abdb91ae5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0f7044-b73c-483b-a058-4032e53e0ad4",
        "cursor": {
          "ref": "369c7ff2-54d1-4515-b0b3-48b14ec08753",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1826f302-3a3f-4c4e-9e1a-8f6a13d341b9"
        },
        "item": {
          "id": "8e0f7044-b73c-483b-a058-4032e53e0ad4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7206ee85-883d-443d-8acf-8e523fed20ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cac38f6-5806-4b8f-9d1a-0d72c1d55cea",
        "cursor": {
          "ref": "a807411f-5472-43bc-9b25-7ba05465f7af",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a238b39e-3bdb-4db7-9e16-4018cb5f3148"
        },
        "item": {
          "id": "0cac38f6-5806-4b8f-9d1a-0d72c1d55cea",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "273f4466-f93a-48fc-b6fa-49f65a40f70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe2c780-337e-4717-904c-efe9f69a2f9c",
        "cursor": {
          "ref": "fa8b2f4a-43c2-4970-9f05-ec52ba53bf03",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d834fce1-f47d-4ca1-add5-fa59a834b72f"
        },
        "item": {
          "id": "bbe2c780-337e-4717-904c-efe9f69a2f9c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cd0be6a5-b466-4d87-8964-02046c395c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff1c31b-9022-4267-9cf5-92cbf5468fb3",
        "cursor": {
          "ref": "096dcdfa-ce38-4b5c-acca-1276de9caddc",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "caefcf28-d313-414b-9a12-d63bb3fb482a"
        },
        "item": {
          "id": "8ff1c31b-9022-4267-9cf5-92cbf5468fb3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "29427872-2a84-4e53-9aa3-dd3985aaf8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92715f6-0f04-46a4-8e6b-b913216df006",
        "cursor": {
          "ref": "3c8e220d-cc40-4790-8a47-0496967459e7",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "29b85b51-8c7e-4221-935c-66b72bf31ed2"
        },
        "item": {
          "id": "e92715f6-0f04-46a4-8e6b-b913216df006",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5859e8b6-6ec7-4594-9d56-9ca2400e6191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1f1830-caaf-4dfc-b2c9-2dd149d8fa2b",
        "cursor": {
          "ref": "45c8559d-2ae9-4398-8ab5-e4b08ab55fd8",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "47235198-d337-4c30-b122-2540ada17068"
        },
        "item": {
          "id": "cd1f1830-caaf-4dfc-b2c9-2dd149d8fa2b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f165cdc0-8083-4fa8-ba41-aebcf17ecec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd1069a4-5497-475c-a499-d89443c2b2b4",
        "cursor": {
          "ref": "3980cebc-6e07-4291-9e9d-04749cd5fe5f",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f8a1b058-e0ce-4491-aeeb-28151037e473"
        },
        "item": {
          "id": "cd1069a4-5497-475c-a499-d89443c2b2b4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "40071407-6f0d-4bc9-9a2c-0c84acdc745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cc26cb-7fe3-4d4b-88ec-97e111f248dd",
        "cursor": {
          "ref": "82a79bd4-19f9-476c-a4db-ae198e0ee7e5",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2dc42f10-0b8d-48d1-8d57-a88c34fc5d77"
        },
        "item": {
          "id": "15cc26cb-7fe3-4d4b-88ec-97e111f248dd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "be39735e-a418-4e3a-90a3-f303858f46e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 413,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f49052-b7a9-41b6-a844-8f1f24f610c6",
        "cursor": {
          "ref": "98ef75be-1647-4123-8a58-7c877d448a49",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4f55e81e-84fa-432e-a1fb-05e51f334273"
        },
        "item": {
          "id": "27f49052-b7a9-41b6-a844-8f1f24f610c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9536417e-5160-48cd-a5ae-3b1fed3edef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc65ed79-e5e4-4f77-ae40-bdde92ff1f31",
        "cursor": {
          "ref": "8fd858f0-a876-4873-b43d-2d10b4c63c38",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1c709d05-d969-44bd-bb5a-3b93a56e1319"
        },
        "item": {
          "id": "fc65ed79-e5e4-4f77-ae40-bdde92ff1f31",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c9df230f-4630-4fad-ade2-da8574dfda95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 479,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb933b8-ccbd-44a1-9745-ba44bd36dd06",
        "cursor": {
          "ref": "6d2f4065-cd0c-403c-90b6-95b3d8814e27",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "50eb16c9-a9de-4b71-88f4-44435305f729"
        },
        "item": {
          "id": "5fb933b8-ccbd-44a1-9745-ba44bd36dd06",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8474a412-1391-4229-b31d-70336aed0e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef0f07c-cf2e-449a-ba8d-dfb535354340",
        "cursor": {
          "ref": "56014f19-adac-4b96-b639-b583adf2a8bf",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "74733228-c93f-42cd-86cf-0bcf0dcd624f"
        },
        "item": {
          "id": "5ef0f07c-cf2e-449a-ba8d-dfb535354340",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0b822e38-1fb3-4bc4-a97d-975cec68e1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf26cf1-1d4b-4352-be81-5ffbc9aeee1c",
        "cursor": {
          "ref": "021bcf8e-20f3-453a-9add-3597bf36dc20",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9b60ed0d-d02a-40fe-bc2e-685a080a433a"
        },
        "item": {
          "id": "cdf26cf1-1d4b-4352-be81-5ffbc9aeee1c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "954655d9-2039-4551-b883-442836f8498f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a52c7b2-73e4-4a8a-9fda-9a854ead9e34",
        "cursor": {
          "ref": "2d1543e3-ea76-44f2-a87f-2d95abe5fe75",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e53a14d6-4968-4efb-b197-d61a9a435d5b"
        },
        "item": {
          "id": "6a52c7b2-73e4-4a8a-9fda-9a854ead9e34",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "87b6192a-c9b9-4f4a-9c05-7e16a2409c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6440b4ee-9713-46b3-8584-f33a750572ac",
        "cursor": {
          "ref": "4b045b45-5885-4fa8-84d5-90c156b08e99",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4b8e9a95-40b5-488b-9068-65ebcf96b400"
        },
        "item": {
          "id": "6440b4ee-9713-46b3-8584-f33a750572ac",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c9221a38-19ab-4c96-8860-0da0240e11c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a136018-4584-42f8-9283-422292207237",
        "cursor": {
          "ref": "ca00d0e6-58d0-4548-87ce-d506ce49debd",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "02d5a0c2-03ae-4ca2-bfa2-ee3b90778191"
        },
        "item": {
          "id": "8a136018-4584-42f8-9283-422292207237",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "848b9249-1e44-4fe2-8dc7-91611ad670d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9658c4a3-2e66-4562-880b-b521c46a07e6",
        "cursor": {
          "ref": "1807fcc3-59ff-4c7c-b15e-6a25b69afbe2",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "35e5c197-67df-4d76-a76f-ea9dab1f2f2f"
        },
        "item": {
          "id": "9658c4a3-2e66-4562-880b-b521c46a07e6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "97fb7a77-78d6-4834-8ccb-38482ad1e34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af45ca0-fb80-4b88-8de2-1544bc292960",
        "cursor": {
          "ref": "84e2305c-7416-470c-b17f-578e0ce3faed",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bf963e07-f277-42dc-b922-bfc7c19d16cd"
        },
        "item": {
          "id": "0af45ca0-fb80-4b88-8de2-1544bc292960",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2f8d0673-57b0-4fe0-90ff-8d19ec861d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4a2c99-3236-40f8-b469-a73ff260f3bc",
        "cursor": {
          "ref": "232f079c-d9f6-43ae-a45e-95f5b7e0b229",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "026e7ea5-d123-43d9-8fee-b8cdf139e2d6"
        },
        "item": {
          "id": "9d4a2c99-3236-40f8-b469-a73ff260f3bc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4eb60613-a9a3-4328-bdef-853eeff0d7fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1140bfa6-b3ea-4cc2-92fc-e550fb50326f",
        "cursor": {
          "ref": "d735ab3e-f9e7-4d31-819c-ee72e6c9c012",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d4d3826-4b7c-43cd-a48f-1d71f24f92cf"
        },
        "item": {
          "id": "1140bfa6-b3ea-4cc2-92fc-e550fb50326f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9eabad39-7f38-4b66-bbc3-d3b20d02c17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6921ab3-a48b-408b-a1f0-e7ade9cdf81b",
        "cursor": {
          "ref": "ba1f9ad5-8cbd-440e-b235-f59d0b5346a4",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "396d02d6-2e5e-4ffe-b908-f878d6ab1d78"
        },
        "item": {
          "id": "b6921ab3-a48b-408b-a1f0-e7ade9cdf81b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "67710ea5-3212-4ce2-ae02-cc569a87c2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d354c357-37cb-4d6f-a8e5-a8e0cc002f16",
        "cursor": {
          "ref": "3c79de94-cb40-4559-bc23-ddda48d9fb4c",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "668d7560-517d-4a24-9f91-f2d364d34e6e"
        },
        "item": {
          "id": "d354c357-37cb-4d6f-a8e5-a8e0cc002f16",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a8326875-8895-4d64-8e68-0222b5cb372c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a40b51-a87c-4d22-ac9c-237787ceed8c",
        "cursor": {
          "ref": "c82580c2-fd87-494e-b52c-425a7fe1cf81",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "303770bf-7a0f-420b-a75a-d1262921e699"
        },
        "item": {
          "id": "14a40b51-a87c-4d22-ac9c-237787ceed8c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f518a615-e368-4753-826e-18a53d27edf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4927a1f2-5bd5-486a-bf85-d6f98d82c022",
        "cursor": {
          "ref": "84beeee2-3eec-44ec-97e0-95cbf5ae7429",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7e130ed9-c64c-4b66-97b7-31d161f536a6"
        },
        "item": {
          "id": "4927a1f2-5bd5-486a-bf85-d6f98d82c022",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4ad217ec-500f-491b-8d2b-4e39adb92b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6658ee80-0173-487a-aef5-5e366102300f",
        "cursor": {
          "ref": "4d92f616-386c-4a19-9d72-02f02d2c4ffd",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "34e61b99-8cfe-4056-b8d4-cdc6ca5c009d"
        },
        "item": {
          "id": "6658ee80-0173-487a-aef5-5e366102300f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a0c4ce4c-7564-425a-8fa7-c05809d74535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d1472f-54f2-4809-ab51-cd3b59d077a3",
        "cursor": {
          "ref": "9420ef1b-5a4c-4f46-b9a7-eb255b1626ca",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "30e83824-0c42-45a1-a048-44c39caeca53"
        },
        "item": {
          "id": "88d1472f-54f2-4809-ab51-cd3b59d077a3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "62edb1bf-8c1b-4163-a5a1-810240f1e667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599da3ab-cb7f-4025-9915-10aaf97698fb",
        "cursor": {
          "ref": "e8433fbf-448a-4620-8e66-cec020447a7b",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "71c243a5-edaf-44cb-8d52-9351135f5b56"
        },
        "item": {
          "id": "599da3ab-cb7f-4025-9915-10aaf97698fb",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cff86aee-eb2c-4d59-a0b0-3c7c3c11708b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293eb007-a9c1-4e5d-9ea0-03c542a60dfe",
        "cursor": {
          "ref": "fead0246-1e56-46ff-9d7d-52fe28c1d8b3",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c659ec57-4277-47ae-b269-7852084f8c89"
        },
        "item": {
          "id": "293eb007-a9c1-4e5d-9ea0-03c542a60dfe",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d2aa90fc-a2ae-4555-9d85-f4ec7ca9dea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43645a71-5fe2-41ad-b903-8cea604322b6",
        "cursor": {
          "ref": "b3b599e7-80b6-45e7-b5b1-6b9405d604a3",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "28e09de6-89e5-4a27-8192-46634e21c792"
        },
        "item": {
          "id": "43645a71-5fe2-41ad-b903-8cea604322b6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e42d6773-115c-4922-8710-1a990d1b84f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7814d64d-c1d8-466c-9b5f-8ca33854f99a",
        "cursor": {
          "ref": "f17c3bda-b6f3-4c56-a236-1dbc9a13cf72",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b38fd95d-8ef0-4815-9715-7e186c43de35"
        },
        "item": {
          "id": "7814d64d-c1d8-466c-9b5f-8ca33854f99a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "66f9e504-5193-4515-8e77-199e922044ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c45aa64-974d-491e-8047-a9730daf80bc",
        "cursor": {
          "ref": "a3b9de1f-f897-4520-aff5-680e30f1e491",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3fceef9b-1079-4184-bf11-50fa0ddee794"
        },
        "item": {
          "id": "8c45aa64-974d-491e-8047-a9730daf80bc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "38221788-0662-4dec-b3ed-f79bb70489af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6b3162-752d-4769-b95a-4b22b7200fe4",
        "cursor": {
          "ref": "01cd18b0-6386-4b02-b6f6-ad8c04fda580",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "238c75a0-f300-4854-8679-0aaa0ed84560"
        },
        "item": {
          "id": "eb6b3162-752d-4769-b95a-4b22b7200fe4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ebc973ab-302a-40f3-b548-8d9ab7ab807d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982dbeb7-05e8-43b1-a25a-ddb1eec38196",
        "cursor": {
          "ref": "433ee651-eebd-4ea2-9509-516e2819cb67",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3d02c76a-9ac6-4b1f-aa8e-e8a0a52771cf"
        },
        "item": {
          "id": "982dbeb7-05e8-43b1-a25a-ddb1eec38196",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "4c7da13e-c742-47ac-8dc4-5e0ee05e70c3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 334,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3548837-aafb-4631-bc6e-ebf33b993071",
        "cursor": {
          "ref": "a50825bf-f4b7-4a36-b868-f160f2289fdb",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eab69e07-3361-464d-8e14-8820c4c5d080"
        },
        "item": {
          "id": "c3548837-aafb-4631-bc6e-ebf33b993071",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e46cc2aa-a5e4-407d-a16d-0a453d182246",
          "status": "OK",
          "code": 200,
          "responseTime": 377,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f2627c-2187-4a07-ba27-e19c538b29f4",
        "cursor": {
          "ref": "4597f208-390c-4152-912a-4da91d25670a",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c9c14c3a-e9a7-400a-a439-0980d212a6ec"
        },
        "item": {
          "id": "d3f2627c-2187-4a07-ba27-e19c538b29f4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4f9c72ca-a0d3-418d-b81b-172f675e05fb",
          "status": "OK",
          "code": 200,
          "responseTime": 356,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "02343832-00e5-4654-a6f1-35efc61f66a2",
        "cursor": {
          "ref": "66f2a548-342f-41a1-87ab-8a094f639ab6",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1c8d2404-aeab-4c55-b93d-3abcf06842e8"
        },
        "item": {
          "id": "02343832-00e5-4654-a6f1-35efc61f66a2",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "3c622c8a-800d-4f67-9d93-eaa2c62b8db9",
          "status": "OK",
          "code": 200,
          "responseTime": 407,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9344a07d-0911-4256-bc8f-ac520de34c54",
        "cursor": {
          "ref": "3a99c9de-9209-44ee-a7e3-d001bd2d70a6",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "975ca56e-0a1b-4597-b46b-d955297da12c"
        },
        "item": {
          "id": "9344a07d-0911-4256-bc8f-ac520de34c54",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7d576243-301c-4544-b4e3-64441c33fe14",
          "status": "OK",
          "code": 200,
          "responseTime": 420,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "77033624-0daf-450b-87c4-44c38b7dc656",
        "cursor": {
          "ref": "42d54737-452f-43be-8870-186c1ac0dfbf",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d095cb6-ddbd-4d62-8271-9aae3d3526c7"
        },
        "item": {
          "id": "77033624-0daf-450b-87c4-44c38b7dc656",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59b1c882-abf9-43c7-b8d9-c34816870d8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77033624-0daf-450b-87c4-44c38b7dc656",
        "cursor": {
          "ref": "42d54737-452f-43be-8870-186c1ac0dfbf",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d095cb6-ddbd-4d62-8271-9aae3d3526c7"
        },
        "item": {
          "id": "77033624-0daf-450b-87c4-44c38b7dc656",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59b1c882-abf9-43c7-b8d9-c34816870d8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77033624-0daf-450b-87c4-44c38b7dc656",
        "cursor": {
          "ref": "42d54737-452f-43be-8870-186c1ac0dfbf",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d095cb6-ddbd-4d62-8271-9aae3d3526c7"
        },
        "item": {
          "id": "77033624-0daf-450b-87c4-44c38b7dc656",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "59b1c882-abf9-43c7-b8d9-c34816870d8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea24d11-68d1-4cd8-b56e-2d6cce609de6",
        "cursor": {
          "ref": "4185bfaa-3cd5-4a26-ac96-199343ef2f49",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3b37f69-8b09-4747-b150-cdd1bf922753"
        },
        "item": {
          "id": "4ea24d11-68d1-4cd8-b56e-2d6cce609de6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "5b981dc9-4568-477e-8212-a3a2a2e42605",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 306,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e379e1e-4f7f-4778-8dd6-ac20dda1b792",
        "cursor": {
          "ref": "12e86a6b-c8bd-4089-950b-b919257a85ce",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "363937a5-ff67-4831-aec8-9c201efcee3d"
        },
        "item": {
          "id": "0e379e1e-4f7f-4778-8dd6-ac20dda1b792",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "074118e0-e1cb-4bd4-b1a6-9cbc3d925294",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e379e1e-4f7f-4778-8dd6-ac20dda1b792",
        "cursor": {
          "ref": "12e86a6b-c8bd-4089-950b-b919257a85ce",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "363937a5-ff67-4831-aec8-9c201efcee3d"
        },
        "item": {
          "id": "0e379e1e-4f7f-4778-8dd6-ac20dda1b792",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "074118e0-e1cb-4bd4-b1a6-9cbc3d925294",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86eb30b-99cb-4a13-bfb7-cd50fd7f1637",
        "cursor": {
          "ref": "48dfd788-d8d1-48ea-b07c-dcac2209cdc5",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e27064d0-e7d4-4c2b-b8af-8767e152acc3"
        },
        "item": {
          "id": "a86eb30b-99cb-4a13-bfb7-cd50fd7f1637",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e4eaa8b7-7e4d-496c-9f8b-39fd28db82d6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 499,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9014cd7d-8967-4e05-9481-e303ac88d7f3",
        "cursor": {
          "ref": "7d759a71-8f00-4487-b912-1610378bde64",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8481dcb4-dce3-45dd-8436-5cbb03316e73"
        },
        "item": {
          "id": "9014cd7d-8967-4e05-9481-e303ac88d7f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "35906dbe-cad8-467f-ad61-f10c05bdf38e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9014cd7d-8967-4e05-9481-e303ac88d7f3",
        "cursor": {
          "ref": "7d759a71-8f00-4487-b912-1610378bde64",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8481dcb4-dce3-45dd-8436-5cbb03316e73"
        },
        "item": {
          "id": "9014cd7d-8967-4e05-9481-e303ac88d7f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "35906dbe-cad8-467f-ad61-f10c05bdf38e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d758cf-2f86-4eb1-b9b9-6a5e5d7f4fa0",
        "cursor": {
          "ref": "06bda074-73d7-4c8b-ad5f-0264262740d9",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4a359fd7-085e-4660-bc71-027ba130aa70"
        },
        "item": {
          "id": "76d758cf-2f86-4eb1-b9b9-6a5e5d7f4fa0",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "571fe9e3-787e-42bf-b428-fa35c0f4f368",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 548,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}