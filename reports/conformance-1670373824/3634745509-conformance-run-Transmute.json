{
  "collection": {
    "info": {
      "_postman_id": "f5f17919-82a1-4db5-be95-0f985635313d",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "94b7611a-4cae-4623-98e0-1b8c4e51657f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2ccc9d90-2b59-43ec-b305-d32fef5b5a4c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42f2d9c0-9552-4bb7-b75b-706b007a3684",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "08634ef6-62bb-4911-8552-733da270996d"
                }
              }
            ]
          },
          {
            "id": "e867f318-21f9-436a-8869-b03679e8524e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e068bd58-35e8-4fce-8c61-b731eb6b5adc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a9d4589b-6a0c-4be1-bc6f-80285a6c5562"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e761d17c-b393-4703-a444-0574bab819c1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "57fbb916-6211-47da-a93f-e0f8541fa32e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ffc51211-fe6c-49a1-9d3c-c3dcb49cba4d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9825902d-f942-41c5-a5a3-5306cf8893c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ba1e9d2-e4ec-4857-8756-3930eea19c54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f94799b3-8801-42b6-8ab1-fb4761298a8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91186130-19d9-48e1-b1af-39768ad23ddf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6d2638a2-642a-4ac5-b364-80621b33446e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c04c9c8-171f-4a13-9ec3-92564a9b6f62"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f37004d7-17f9-4cd9-9c75-76f112951e18",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4a16c813-3e5a-4725-951a-771aa3f6642f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fc469a5-3e02-4f44-8aa4-029730884eff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c00cf44b-e22b-43bf-91bd-6a9c90d9644f"
            }
          }
        ]
      },
      {
        "id": "4458610d-5057-401a-ba3d-a4073e9967fe",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e83696e2-ee6b-4bcc-a32a-8e128de12fa3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "953fdb00-66d7-4990-9523-a5593fc74cc8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de361f57-01c9-44d4-a48b-0deb7b735753",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d93a5d78-76db-40de-9088-9e9abfdad110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46282d5a-9139-46d6-abf2-f46c686260f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db62891b-c4be-4ae4-9fec-b18fd918a305",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a465c1a5-edf6-4d5c-8a25-0ee39c079d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0e931b9-11a6-4959-a656-e6daf394b531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452045fc-e6aa-4f73-ab9d-907ced2514cb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952772eb-7ed6-4f1d-a372-e823094bae73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c932cad7-39a9-491f-aafa-3d013b2cc693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d0790b28-51c9-44fb-ab2d-cc952d05a2aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cee4bae-7a63-48ba-a199-68798f27845e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9eb2bcb-db96-49fa-ab46-953f9d7942d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca49cca5-59e3-4c83-917d-092c7c9fc9df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7563defe-92a8-4b95-b145-5e909294fc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ab4889c-ae56-48b6-ad12-81d66c4a958d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7769a71-6432-48bf-86ec-0eec9d0854a9",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f537bbfa-3b2f-4209-a494-6928d9c6da48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83767621-f5fb-42ac-b888-d93530b50562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e037fee-1f66-46ac-a15f-27b4bfa2057c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "165ab450-3072-4744-a5a0-5ae04ffc8f95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "29a50988-3ca6-4d75-afe7-cdfbbcf265e8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6bcc19e9-78ae-4836-bb62-01253429fd64",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6338d825-8eee-416e-93a7-d5cc56c25a92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c7cc5a53-d873-4f2f-9314-f01a04facc28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "830bc187-7051-49f9-ba29-4109afa4abec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "64779c1e-07fc-4c34-9e53-6c4dfb069604"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1f529c2-7e4a-408c-970b-2d61bf0ddd69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79d7f944-6533-4d52-9914-3d6c0f1c5a7a"
            }
          }
        ]
      },
      {
        "id": "37712b25-f586-48df-9eac-761675853f0d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "62b5c095-d5a0-4d49-8c87-c5a1ebca6d6b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b7d0afc-1107-4ccc-9ae8-44917040d90a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "65c8a6ea-7177-4b24-b51e-78413a87c315",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ba1a3e-f3b5-410c-bf90-4eb1aa4cbee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708eda10-842f-49c9-beb8-e08cf892dea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3849e7b5-1a4e-4e19-8a3e-a0342c5940f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ae8389c-a958-42fd-8963-f90794cb4a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00a9a47-a1b1-43f1-8b6b-97c3089217aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13925f58-a643-4b28-ab64-4f68acbd1f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7753d93-d231-4a22-a92c-b0b38ead970e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac96d9a8-22a6-4333-9702-038f11a42d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bb31eba-5ab6-49ab-a7a7-adac0ff3fc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529c4a73-8dd8-4a3b-84e9-915d36546023",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d395433b-831e-4416-8104-f0c633551312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfd6e8c-6c73-4659-a06d-c8729df56a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ceeb244-f810-4904-931f-d8006706901a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "143c5eee-562c-4ba9-921b-b98eae55ddbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ad5ce9-9283-4584-b0b0-969408378907",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e80dcf-eeed-4714-961a-2a0e83546fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75203f0-d594-44bf-ba96-02e84400fb2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fd2da9-de55-42c5-b912-c5ea8acc7121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c7ee978-a677-4b45-ae4a-05b8f2615719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ec9c69-de4a-412e-910a-336d52ee172f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168c4425-2574-4ec0-9a39-2ed3bfc997d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69220fd5-034d-44e4-8244-79c8817e64a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6fdc72-3b30-44ef-8081-fcc081d5bacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "149191d9-2d8b-412c-815a-338f7c7242ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3289d11f-745d-43b5-9c87-b08b2c2065c8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef904796-de95-48e1-a063-31ea2eee190e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9822df-4743-4447-a85e-057f846a7260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7669c1a0-7bc2-490c-92cc-bb5f100c9321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "15796f01-79ea-46e7-bf2e-9cfcf1f4aa86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b927b1-35a2-46a3-83a0-71717eaffc21",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912df7e1-dd41-458a-ad9b-f588a8545ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d408fad2-32e9-42fe-b90b-47282b978a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7c5729-457a-42dc-ae03-ef9eaf957cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5be72add-b0ef-4a82-8440-c01297b1225e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e736c9-8148-4142-be74-f13d7d8fdb4c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f969a8-516e-4f0b-bdbf-3a751731b280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084fad80-a0b7-48f9-907a-da1f81672531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766e060b-0168-441a-928a-043b0a5337e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dccbfc25-881f-4f09-a14f-3a35a218e865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a9884f-ca48-4ba3-ab61-81d221e0edef",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6646e2-075a-451e-9e05-d9d3be3e08a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72688467-8597-4dde-9cef-d1ee06c61445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb91cb1-9b4f-4570-b2f0-80b167a4de69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e05070-a442-460f-a5c1-c5c49ec55e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff52ff3-2878-4483-87e7-a6f5badefda2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970fdd41-e5c1-4897-a9bb-ce872ef9f455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e11aed5-2450-44a6-8eea-ff9970e6a99b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c47952-055b-484c-90c5-bee71874a8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ead450b-76b4-4539-ba92-4b858b930d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cbed150-dc66-4496-9dfb-ec76b7ff1a9a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52fb504-077e-4df2-9184-308d3f50e2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44c1626-b74b-4ecf-a4a1-d3051273cbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93e541e-4cac-4154-a508-561aa00c8e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d641604d-20d6-4828-8a9c-8be3e65f4495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f1f100-e7bc-4136-a8ea-86239ed3f4a3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff28d9a-7f21-49ff-b9a6-d4ed55e889c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4e8c82-e687-46d0-b8ed-a9828f6df5cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdb7413-a33c-4f6a-abf4-c472983bdf09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbcd4af8-04ab-4505-8254-8bdf611b892a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bc491f-9d92-4e8e-a891-ebe9eb1961c1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52326834-8c6a-4293-9f6a-0b7ab9126484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725d286d-ed18-4592-8787-1fa22bc33c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c92573-beda-44b9-8258-10eee601fdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22ed83ad-681a-444b-bbeb-498bb1f830cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afab308-6d86-4fdc-b7e0-964765cc4ef8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d919901a-a532-48ae-a6da-6d2804a6d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ebfa485-0fed-462b-bd30-7e0e9da4a492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf16130a-6438-4b0f-836b-801b8e938546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bd2d155-dfb1-4d3b-808b-f1b444e5a4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4678b3ef-7ab1-4516-a9c7-03ee38682d16",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c05def-9e42-41aa-be51-fc7bdd3ca202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1101e0-8430-4815-93a4-6a63f0a99925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016f3962-0a51-4355-bc99-12f566473a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a3faf56-530d-43d7-be1b-ac5afe4ea653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9909d77a-eab8-4848-a6a9-e5560339199a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc2ea8d-b7a7-426e-9788-a14b580b62a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e89122-aa78-42d0-98da-bd6b40ab924f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2dccf2-cdcd-440c-8f44-7daed57cc67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b91628b-17be-4aeb-a29b-f142f11f9697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf56706-e2d9-4e4e-a458-8510f3d075d2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d4942d-f5a2-45e2-af03-0411c47bf691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c7abd0-370b-4f7b-be9b-d705c4d33f2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4eb02d-b9b3-4674-ae84-c7e2c1e0a868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30ff25b4-6638-44f5-a532-4d5bc9ca0c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4ad94a-e3b3-45dc-8fba-033ce0e9bb53",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bef5068-03b4-4447-bfe6-45575d98b550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cb2759a-98fe-4053-99dd-7ccaf8734215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07427b29-1ef4-403b-80bd-543068d422d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdb0a3c-d5cc-4ae7-9cbe-63ecbbb97dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5953e0-3b47-47e4-a745-29c0c35f4ef7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d477107a-cb51-4354-b84d-853a7bda0dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe86f91-98b9-4305-84c0-5bc1db9901d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea38f61f-d622-4cb3-8a11-3cc8a277acdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee97e4d-f742-475e-b4f6-ae8fd768a6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "073becf0-d63e-489a-bbab-18334cacb208",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4e096a-944f-40d6-809c-57ce6753b992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ba9e9e-ddbd-406e-bafe-05a71e7a15ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4569e4b-d70a-4fbf-a7a6-c2566a478aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4206396e-e95a-4837-9bfc-3b0658c17bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1938169b-9709-4549-8b2b-ec5390e15021",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b19a41-3894-44f4-a10e-79175f1a5dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4146907a-6d1e-4bb1-97a2-1756b99f6308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99aa984a-ef4d-4edb-be40-d66a6e7b0d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71e4f096-afdd-4675-ba13-22d737962392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b319d349-5f7e-432e-9d66-e767029ea729",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90054d1-af9d-481c-81a3-336d201c5148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93462711-37b3-4ff2-8f4f-a420be7214dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589e0680-a962-4ca6-9fb6-af5dea6052c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4adb0ae3-de43-43bc-b8e3-d01bfcdb788b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbacebc1-ea66-44ad-b573-96fa603458c3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26989cf-fde7-4f1d-a953-fd99e64fdbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9646564-dbe1-4a4a-a965-8c81dbabe35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879dfffe-3145-4cd8-8491-d827bd43eb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2dd2e74-b073-4c1a-a09e-3b9de0a2bf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b123a38d-401b-440f-a2b3-ddaef20da8c1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba1b999-2927-4d25-8813-3e03abf10bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b5bbd9-85d6-42a1-9b40-7b4793187020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1203529a-e67b-4b8f-8150-670a961967cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e10141c8-b535-4370-8853-85ab2874bc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2790008a-775e-47ba-9039-4c4b1b2898d5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a5ae0d-887f-429f-9795-f5c927761811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca15c2a8-b2df-4664-aa37-77c1e2b8e49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "854da6d0-ea2f-4030-a732-127c6bbb5f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9feb960b-bc1d-4ac3-8d11-2e45dae573b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca10064-dbc9-48a2-b6db-f766851ef7b1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d0dda5-6b83-4592-a158-5cdc3df0a500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688ce1ee-8807-4079-8840-75d9bb5b6425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989f1639-a3aa-4604-8849-3783731e8883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "684f1eee-a19d-4424-8d84-8d75f26ed24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab4cef7-764c-4ec7-b130-a39aa392d175",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d424544a-79be-4d79-b23d-7f3524c1decc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0c738b-b2ac-42c0-9a72-d620b546dcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a6ba9e-bafb-4a05-a31f-75c0bbbf382a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa9c266-fe67-49af-8b19-e365de659674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1e8d03-00b2-4ccb-9206-02f2a8f9d8de",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c9123a-ba08-4545-bfb8-bb790b43ec76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af754f9-f1a0-4393-8113-644b9f280dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e23aab-1b7f-4033-a9d6-90375820222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62269937-3440-4f1c-b401-014f89d905cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb4957b-09b6-4e08-b8c7-f45014bb21ff",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7125285-4c26-4fb7-a195-7c6716b8dd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a8c1d3-4c2e-45b1-9497-a86a4152e791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac2c5e9-d231-440c-9f41-608e619bc2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58446c22-6dab-429f-a6b1-9478247a04b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5dee0b-1501-4399-a03e-fb7a0b1ab3b8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a68e46-8112-438e-85fb-72c73142fe3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4366bd68-0fc5-4243-9690-34daf9db0c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f4ef21-e72f-4e46-a0d5-c294b79c9c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d6d756-9ad8-4857-a723-d11f8bea8f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2420bd07-723c-4300-a4ba-b01c9bba9d57",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e21d8e-7d55-4952-a928-916d4d4fb4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7699fba0-85e5-43e9-b5c6-57df41687dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a65764-445d-41bf-8330-3dcdaaa951b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30f113ce-f5d9-4f7e-90e7-914614707baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc47ed6c-4dc4-4313-a6ca-a122a621330d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603fb6ed-1a4a-4e61-8d29-f2eba56da673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fd184cf-dd63-4167-bca9-c9c36a4b91bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d48d164-6fd9-4ff6-b3ab-b7f85ce58310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3ea881-35cd-4347-a5fd-78e6e6f467be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8716a7a-36d8-444e-bc71-b964a2fa25ec",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beef1980-43f8-4d4c-b8d6-205a0ca5fb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d73415-e176-409a-be70-ebd1dd5c88e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c2ded0-dee0-4404-ad20-9e9fa453518c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab1b6bf-749a-42d0-8217-a5511072fba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef06761-4f75-48be-8fbe-214ea949c26a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ccc750-f9db-4b92-82ba-45c35c40f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e996b53-17cf-4c89-888a-2deb46f8bbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f373ddc-737d-48dd-91b8-e087c9c7ef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd25d44-4b22-4573-8500-979b8adbd693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e3d68-5fed-4283-9a7c-93cbb78de48b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffefb88d-0aa1-48ae-aee3-b156f815e7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5995bf-09df-4ea0-897a-2840ca342bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef36071-36fb-413f-ac1b-b7aabd0b26ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2f830416-89a3-4095-956a-a4434d560f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f5d3a4-0537-4972-b7f5-79678f2f2ae2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5debbe15-37d4-4fa9-856b-32b91fdafd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ad8cdeb-40e4-47e5-87bc-b8996f89218d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d774bdb-4e7f-4fc5-9a56-fd0a4112bf2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e342503e-caef-4581-bd3e-10d06cee087a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3745a29b-a274-4432-a3ac-0c73619b013e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3394d7ec-cd28-4321-bfe9-5541821fa935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5095bee2-591e-4954-b2c3-f304bbbe374b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb439bc-6691-4df2-a17c-0e582dee0922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab53e47-99c9-41e7-b745-32f61e42528b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff64158-0cae-4843-9204-760c8ab70356",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4205cd1b-7ba3-4121-9224-15ab19eb9405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56ad4ec4-266a-46bb-9c3a-8695b638680d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42588dc8-4239-475e-994b-fdb379ccca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3564c995-a702-43dc-898c-28ebb249d251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea54b69-417f-44ae-bb0b-2f522ecfd658",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e475bbb-182f-46d0-b17a-a9add5167915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e8f343-5911-404f-97ff-df59f0feb68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d4baf7-4b30-4192-8f85-1fe2a892c506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c49449dd-fdbf-46b7-b0f3-e3df030542a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7e1ff4-2a3b-497f-a01f-bac25fbb4188",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7beeae-a393-4bd3-8cab-b7899ecf8285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d28a8e-d001-4144-8256-775a946883d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c919f4f-3308-4dfb-99e2-561c27af485f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee329cb-5a3e-412c-b7aa-b15fb526c9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83a5e86-a47d-4ddc-a9b6-c7300cf5a9e8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f05bcdd-3730-4c6e-92f2-65b38ddd2e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d13bf8-a53b-4070-926e-afd722bb1812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8a9d11-f78d-4e06-ab19-bf295fcf8889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de01d25-7107-4511-b1f9-81760575ea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e79a5efa-ac6b-40f7-b703-e469c4dc6b4b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f28bebe-ad21-4743-a47c-890d8d870cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb2d98b-cf42-4a46-af22-b913774b4e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b72816-69fc-488c-a9fc-dc75ce40cc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "68a504f6-55c5-4802-909d-70639a83e8a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e631c6-8f7a-4c83-af02-431e00e2c1d1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61930de-946d-445a-a4a0-43d762d9f2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c47e1a-6c92-44bf-8347-5a0fa071cd38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b07fba5-8267-4f9c-884f-94220b4054b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ead51635-450f-4426-8917-5b50d58cc75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbb684d-f620-4d3f-8c85-a68be7b24101",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95dcb25-5021-4d2f-a95f-7140c675d32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f417aa02-953b-4ccb-a739-197c520dae53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc80572-8f28-45d9-8dee-3f846a9ca586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "97efc4e5-da06-485d-ab9e-3e006e95aae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59b66e8-2eea-4e7b-8630-950c179e77b2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19120b7b-b497-42b8-b416-9da227edb81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9cf2638-104b-4434-81c0-7f1d8fa81d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070b74eb-2694-4864-8d68-31d561f57ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ade85a2-0d50-4068-bcc7-5aa1fc4ed0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "578a86c6-48be-4248-98e2-a0d81bb25980",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7488b5ec-b823-4bfd-b6ba-854dd5b1c316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c781657-7af8-47bf-885b-fb420cdb20bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a3dc83-a35c-4b62-b9df-24b68806538f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fff6d53-a30f-495e-b350-19b57bbf9bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af95f198-ad60-4d6a-a77c-4000ca1fc5e1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f00fa6c-961a-4cc5-834a-6c5f2241f225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56110353-6e4c-4039-a86c-a7a0069d2d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6549a8da-6740-44c7-b870-5b8ce4cbf05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f222e6-17d7-4c94-a0ba-65625eda8b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf735128-df78-4788-b0ef-ef08cfda3189",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415cf0a1-e2ed-4434-ad27-5d40941c03ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e433af-e4da-497f-a187-b23a4aa39982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4919f53-0480-401b-b40f-3e8738447a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "513987db-e2f2-497e-8ea3-db0d4978a9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2228c649-1561-4a85-a915-6c9ccb7651a9",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f024e0-5975-4495-8530-e20baf1ffc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d321e2-91f3-4f30-b522-04b7e7795f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06aed0a8-a6a6-4b44-8be2-6c6cfc3f3701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a670846d-5e9c-4741-8f3c-8bedbe06a641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9f2df2-7c8a-47f2-8726-f0582cc79205",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ce38b8-991f-4ff3-9c17-e8776fd8014b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce408dd6-95c2-41e7-895e-41cae20939a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7022a8a6-1f38-48f1-bbcc-97efa0786a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3178c9f0-39f7-47f2-bdb0-72d283990e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef68d74c-4754-4de9-b62f-006e95f43dbb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491b120d-5481-41c5-925f-393eba7c863e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0e4b4d-3cde-48e8-b781-45869b26ec60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9218e74-5c1f-49d8-9fb8-aa785296a4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "568b248c-d517-49dd-a697-05736274f97b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bb1465-f44a-421b-9d63-bbabd54edbe2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad186d6f-2bd4-48e8-b3c1-bedfb3ccf437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfd4abb-0019-4bac-91e2-dc42fbb884a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbc71ec-b857-457e-9cca-8ccacf17acbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff27f8a5-cbe0-41e0-be4b-8549dcb3c1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ecf8fb-af5d-4fc5-8209-32c30050e5f9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c340b4cf-b51c-4224-98cd-ca106a322e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ccf085-3c0e-4c79-86f2-d6fe921680c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc16b496-cd17-4fa8-a21b-8fe0505622d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab99a764-446f-4745-80bd-4c2f315563c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8518434a-86a7-46d8-b29f-e5fdfb786fe5",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0f4ff4-81a4-4674-a97a-d0f4d0bf6aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded9a302-d8ff-4eab-a1fe-13a712fad6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a8557-a399-41ce-ba81-316872327c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92eb84e3-d99c-45b2-a16e-191fc27a96bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ea3c3d-b543-49c0-8446-ea8659b1d203",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1bb7cd-870d-4365-abee-2d75da07ae0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29514bc-b4cf-4913-a247-8ad37e91ec94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17af44f-42c1-493b-bdd1-f6ecce09dd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f758ae75-991f-474c-ba97-1a7aa9b1158e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04aeaea-2e79-4c1a-a552-03be709181dd",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a7aa56-6385-487f-a5c3-d54550a3f01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6337692-5b42-4a1b-95c9-e3ee5aac8b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e138ea5c-a817-4f77-8398-c6fa620d2b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f17d2d5d-0935-4fe9-8bf5-e88deb2456ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86af8c4-2b0c-4f97-b243-b81f541539dc",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348a5589-b5ce-40d4-88bb-2c57e9fa890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ff473df-1386-44b1-a987-67e42f1116a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af8f9c4-81c1-4972-abb8-91ee44e04d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8683f4f-821c-4c57-97b0-5ae2ef234eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f809ac2a-e0c5-4522-ab1b-97c8b4b70939",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ea83c3-a532-4396-83e2-1e423b3d8fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598cac0a-0369-4497-b072-088b8db9a4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7555d42f-932a-499c-8d77-3a11c3025485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4771361d-0715-46d9-91b8-899a9daf8246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123c0649-56dd-439b-a9ce-f579719db022",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407d7b19-9de7-4b7d-910e-e91309e30f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3bf6d4-9eda-47fd-bd5a-cc75211630eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a62feb8-229d-409f-ba60-5feb95f098e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06edce70-62fc-4743-a6b0-ebbce118542b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe1adeb-cebb-4514-85c9-e5762a82ebd5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da42a368-62fb-49b2-b008-ffed86f0b735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ee146b-edc7-4eb8-bdad-790910f58d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905016df-97e0-4602-af3b-c45d9e7a387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3936abe-22b7-4716-a023-91f9be382036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba388b8f-dab8-432c-ab9d-7d62c32f4b34",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36a0d27-41fb-4d25-9a7b-8d67e94ceada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e0b1ea-c5c3-4ab1-acb1-c502cbf462d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0378d25d-1076-467e-ac20-88048808de4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4db94adf-f3b0-4f6a-89e3-331a4c3686d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af643b5-fbae-46b5-82ae-d55025859dd5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df417bfe-457b-4fd3-baa3-3e48e201406a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2fd8eee-921b-44e1-aa9a-be82c47145ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb83d40-f7f9-4810-b531-cd14b242cbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "40a0b426-fc1e-4682-847e-1e2f0a0884dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9cfe19-e43c-47dd-9f44-96c16a472eb5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6058985b-5fb6-4812-9314-b5d71df0e6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457b0826-8d35-412b-bb2e-3498728d75d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e1eb15-cbac-4dd7-9df2-b40c663f2f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5d4aad-c7f1-4503-840c-8b40f1e4da5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ed924c-fbe5-48c9-a3c3-0091c4461460",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f97a6ea-d805-473a-8330-44165f75f09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f20e4a-db3b-421d-b76c-558285400d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83f7cae-fe48-4bbe-899f-ac46aaafe543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18f48a7-a75b-4add-add0-5cbe120e9afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bdfcb6b-8b89-4016-827f-f6950d384120",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1243cad9-7e12-428c-b82e-66be0f06a81a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048d720b-873d-46ad-8ba7-d65d0f5c43fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f8b1a4-0176-4538-b19c-67216312cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "824f7fbf-b893-4cd4-9d75-9ee1157a516a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28239082-6112-487a-a8a8-3270604cf39f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b433d3ba-3eed-4823-ad1e-691302c7c523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6e0c96-d7c9-4716-9f3b-6fb0bce3f158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141fcf8c-08e3-4a70-b2cd-be59a75fe931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1a42be-66ac-47c5-ac49-b42acdfaddf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b9fa61-16ee-4c7d-8c00-634f181bdd6d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f716f716-0101-4a87-80a8-f071d561ebed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da460042-5d30-44fd-abc7-15582c58176a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144ea5ad-5e34-4929-b914-da643a9fb1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "298ac2b1-1053-4c8e-b32e-1450fdc241f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd13f12-c3b0-4969-9e94-249dd18026e4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092d7e42-6c5d-48be-9f0c-aa00f9deffaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329024d6-1d48-4036-b64e-d4b11a8eadb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177e6315-2693-4c36-800f-4077143e0705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "695089a3-cf54-4d42-91ab-027823ff808c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6245c8-a444-4d03-8eed-637f906a027c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0902b645-2ac5-4ea6-9a72-be17311215bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba3da56-cc60-48c6-8409-19a09b09a251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5dc0ad-dd3f-4937-9d0f-3a081b003f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "760ea603-d8a0-484b-b4b0-155ca2b67ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe9845-d7ea-410a-b9c2-ef5721d66be1",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6d5a11-2280-4356-9b7f-351541a430b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598e889e-ede1-4e1d-8b3e-84bfb63baa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011a64a6-761c-4054-a747-52c126a54fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7778d384-1a0c-4a42-96a7-c379de7a052b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5f4935-63f6-449f-bea9-d20cdb3847d3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b27cb8d-d4c4-4738-bbe5-d915accb4c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc8fa3a-9658-4d62-ad40-436f513bf67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadd356c-e5e1-4b26-8eca-6d2cb1bfaa3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc60f5f1-556b-4af4-9053-a42304049443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35409fe5-14c3-4bae-bc88-8b5416b963da",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa54a7-c36f-439b-8d7c-2772e6e351aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2959450-8546-4664-8bc6-f549dfe22c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366aa3af-f306-43a6-9c46-dad79ad3787d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52e79f1-00f8-41d3-b9dd-09cb7b1fdbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5084091-ccbf-4c69-85b4-b3548392bc05",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade33745-af77-4e0e-8749-db1366c2b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24c74af-6a4a-46ec-8c74-9606b898752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b987603a-93e2-4993-8a54-15a87efbcdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1fe2785-c12d-4611-8d64-1c11c0bec74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be1b90a-00d4-4494-b3b0-7d0252c83b25",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ae233e-8740-4c07-8038-d35273fb0b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6660e46-bd20-43be-b39a-9911a5b4ef15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ab7175-b458-4c38-ae33-06405a946fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00848d01-655d-4ee0-96d3-a7b3559247cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a859136-0924-46cd-afb6-311637372721",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e487282d-4d57-4d84-8b84-d748dd22c0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf3251e-5406-4626-b64c-93871366acfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4fc2fa-5804-40b3-9b65-610b1c497e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dce3f071-0fbc-423e-b570-8174b6718c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1308c529-ed54-451c-97f3-855e8759f718",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515c3598-246e-4049-a06d-62d2d9ff090a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dd9817-7a76-4878-bd69-0341fddf8132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9877390b-87ba-480e-98d1-2ede22206a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f207ffe-27d6-4cff-b924-da9d6160b50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86d1f8e-8b17-4999-be05-a055aa02bcd3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa15f30-ef59-4c9f-9e7d-12c9f202ed54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537a5b55-333e-4bfd-8b26-dcfb1707bf4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fdf56b-145b-4e40-8993-7156bf48852a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1918f6-4ad4-4d46-b7d1-edf2d1584144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47cbc076-93dc-4067-8b61-03ed7e41c8a8",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee868d61-92fd-4eaa-8830-00c383632d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918288ca-4ac7-4388-94b2-082e988e04f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5d020e-7d66-4e87-938f-2b0d4dd99671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f72acc87-98e3-434f-b0f1-26f298bccd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65d3be6-0049-4d9a-8ebc-9da37efb5107",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764ffa94-a19c-4979-8504-4d91fc842b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a7230c-e0db-48e5-a55a-4e3b3195b288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90157173-64dc-4fce-a529-8f83a32638a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d62ee83-6d42-4480-b527-e28820b2ba1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d88367-a5f1-424c-ba81-643fb4ac26b1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8793178c-c1f2-4415-97bd-38cbe2303f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fba16b8-0c7d-48ae-b1b0-1dbb6d29bad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044f88fe-00e3-4380-86d3-c52f6287e6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf6457a-9f42-432c-966d-5fb589c973ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bc3355-c88e-4a57-a73d-73b46f05e140",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758bd4c0-87bc-4424-b0f3-3a9ad270b0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb752eea-c3f3-4908-9a2f-ed0eb57feb45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063b3c47-1b4b-4a87-b2bc-e55702172e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "234f0b62-159e-466e-b379-32f969473b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b7ecad-29ef-43df-a834-6ad54f0f7fb3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d974fd-919f-4b06-abd7-e67335b78ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41fcdbe-c535-449d-85c7-0dc9a021e242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fa397c-7720-4d9d-8f22-a972127b8d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5337a25-7f3b-4b2d-baaf-6a52bc233b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16861af7-cab4-438c-9327-fa68dce23962",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b505a41-86e6-4e3b-89b6-b693b20de588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dafe699c-68af-4f06-bfb6-495d6b61c9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed38649-36b8-490c-9739-1eef06789fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6183b1e-f3a5-454e-9c67-c2654216c918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ed4996-b03a-4726-9a09-912f8f650dd0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ff1c50-42b7-4bb4-804d-c4f53ba24528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b0b65c-3f9f-4386-985d-2213390c1003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f46a72b-00ce-4075-918f-d77c703492e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba0eea1-d994-4118-9bb2-c42755d57f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23073167-963e-4921-abc6-57a1f33fd03c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ac8f5c-8da5-4df3-ba4a-a2854a173d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c48c16-4fee-4d86-82fb-cd5d36d3a90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10df7f21-441e-4572-a5a7-0c7d2f8a9689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1be89d-9038-4896-b057-710a0a44928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b6b15b-6cce-4dea-b629-f4067fee7136",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a9e48f-4c44-4504-89e2-6b3dd896ce62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc635d56-d444-4faf-b536-c1f7907af459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25af0b5-8818-4456-ae89-84ce54d42077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb2fa7f-b1cc-449f-bf61-130293755b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7a2aba-2e00-48ec-8753-0ff43eafeb0d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5396e4-0ea1-4ee6-bc41-22fe5c8a6f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3146b0-f68d-4df1-b55a-5ad1f47abb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78328782-c64b-41b2-b766-72762500e9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a850e397-b7a5-4192-896b-242b627915a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e93fb91-caf5-4f4d-85a5-3fb42cc08541",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05ed844-5811-4f94-8066-72d6462113ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9ff68e-6379-4e10-9be0-e1c13b6df1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1563f4b1-54b7-4897-8164-f9b9a2d8575c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "129a0834-187d-4d7c-a805-adb9f3c87512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cd7099-c497-45df-a46c-82c472129e71",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d2dfc0-e701-46d2-a22a-1f55b13c3733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692c53a0-5a5a-4f77-b1c6-3e8a7d5be200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3459a0b0-3fc1-4b8d-ac9d-f72b1dc29755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc1fd29-30c0-4a9f-8b18-b611a03eed7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4090ad1b-bccd-4be1-af28-b80ab3108fbc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18855eb5-c86c-485d-a47a-95f11ca8701c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6689d6c5-46f9-4872-bf58-44d789b4c02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0f43ae-bba5-44cb-bbc3-9339b770aeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1784b962-eb4d-4093-96da-b041b2c02696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a286d90-5c50-49f7-9bb7-57963c5943dc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbd3efb-5265-45cd-bfb1-546c38063a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52e7424-64a7-44fd-ae6a-e47d552f7e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d44cfa7-1fe8-41be-abb2-d9c82b73ed45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7642e2-6d4f-43c5-8982-2b754f24c350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef23e57-75f9-4af1-887a-5e03aec1d847",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035ad662-69a5-4196-afad-4671ca00e44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0f60cdce-95e5-42c0-8ab2-c7c46d4f9a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65b789c-262e-416c-b883-ec4baa51103a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "16088719-0e24-4601-a1dc-dc58e1f0a274"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2ac2e45-6d7a-4404-9880-bf3b0a83d07f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1559fe8-611d-46f9-bedc-26aa7f19dd60",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05beb856-21ed-41ff-9bd9-8448473b4a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c635f623-6d60-4033-8a38-4006e6f1e009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e0759b-1f8a-4bbd-a68d-3c9601a0a5cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "3a7b4ed6-0c58-4ff6-9cd5-a86c97f4a74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe2e22a-3456-4532-a0ae-bc59af76b09d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62cccff-aca3-49e8-9dce-10edf508c7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ab6891a-cea1-447b-a3cd-d6cee386a3d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18f99a7-a57e-4b59-90f6-5fab144d3b3d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "5461aacc-f2ac-428a-aa75-189419f2de38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16a7759d-aee3-42fe-9ca6-fb2f33a59f0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93acb2e6-13ef-41ee-8478-31ebf87fbee7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d63e769-64c4-4bb5-a7ba-187354dfaa56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "356fcd6a-3a85-42f5-8ace-94d3bf44ba36"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fbe3662-91d9-4c3b-9349-207861921dc1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "74f548e2-1f80-453b-b200-7c39450d6b96"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd2cb7a2-15c1-45a2-baf1-063608d2620d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4980bdbc-5463-4063-b01a-98853620e217"
                }
              }
            ]
          },
          {
            "id": "c49e7c17-2f9e-43fd-b6f2-ea920200c927",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1c109ed-c057-4661-be7f-02226802b5a8",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78e43bde-ab85-411a-be41-812fcb2d094d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7bfa6f5d-2619-4000-a235-e5ad1be9e381"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96642857-5604-4596-ab66-a61683066493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6da344cd-ff8a-459c-b454-dba67f5bd4fe"
                    }
                  }
                ]
              },
              {
                "id": "f66b497b-23ca-4166-9d75-591279be25bf",
                "name": "credentials_issue:credential:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dcf68dc-14f9-49ca-9be1-ddca18e67331",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c23b0f45-5414-4c08-90bf-4edfd7a46947"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6faa051e-dbc1-4ebc-a166-bfe89285db4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0da24efd-6584-47e9-b873-44b8ac6f763f"
                    }
                  }
                ]
              },
              {
                "id": "f0d2e069-1975-49de-b95e-a466774a669f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0760c2f1-7680-4a63-91ab-69edb965eb1f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "991a4abe-bd49-48d7-adba-36a0e6614d58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "405fe44d-9961-4c27-af8f-c7d3956d24dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d849004-d7b1-4b86-ab9f-d5321ee183bd"
                    }
                  }
                ]
              },
              {
                "id": "f1aa40e9-e561-4622-a67f-6d349f811777",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e94d69ea-3b68-44a7-a1ad-0b4a03631201",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e0a3a79-09ea-4863-8f38-bfb5de262564"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0cff20b-290d-444c-828c-c3bff90a7102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a663bc5a-9a9b-45e6-8744-21a7facab4d5"
                    }
                  }
                ]
              },
              {
                "id": "08255bc5-fb05-49fc-9967-5a139fc4c149",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd88ba5c-01a1-47fd-93c1-2524988dca2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90bde408-1828-4ab7-a945-95730a55fc2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b304ffa-47ba-4d4f-b143-1b3ae4cbda7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8ffe3418-17bd-4fed-95e2-5ca855de65a4"
                    }
                  }
                ]
              },
              {
                "id": "dd2e3af4-2d7e-42a9-bd19-ec7f62cca3f2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "340e64d8-28d3-41a9-a343-beb80153cb58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d4cfab9-1754-4dbe-80b9-50a9ee4ade15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "070410d3-a51d-481d-93f0-bd94570e1419",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb47bcce-898e-46ea-b676-bb2107583305"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb7e0a78-9478-4a68-a147-13fbb1d5f00b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de0be973-a0f2-42a1-962c-fdfff1edc9ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0b60a9a6-9eb7-4df7-b0cf-6b35e2b3a47a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b5a48f7-0e72-43d5-8057-d4e7e85a645e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b27f1185-e6f1-4c14-a5c3-dadf75935bcb",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "33660b9b-81c2-4ffc-be6c-54bb22271c5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1570aa4f-5864-40a4-ae7f-b5ba3cfb4a19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3e2be1f-ad68-4981-817d-37184deda39a"
            }
          }
        ]
      },
      {
        "id": "449e5564-fcb0-4fef-b310-6e8402657e15",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1b77aafc-560e-41f2-aa8c-641a2c545fe2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "866bda5f-f843-4d3a-a6d0-8cfa6ad2f284",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "76a65b36-5611-4864-9d05-30805ec5cc8d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e939d30-b55f-45df-b641-0eac66b17f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d74bf46-70eb-4410-9214-c726a227ffb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd75a82a-0ade-492d-9514-ac57005278d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b3784b-584e-4f4d-ba05-d37228def120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b99de04-73b6-4d8a-82b9-dd43d4fef6a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7422496-65c7-411b-9f5d-cb60d0f2aab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "154563a1-f9ca-43a0-b0d6-da4c2607ba13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cb575e-96c9-4ee9-abba-320887303697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a7ab1ee-49d5-4523-9678-310a61feb13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a18d29d-48fb-44e0-a57a-b7f7d8220f51",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56253a63-9059-4cd8-9479-0e92286bc77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19ec24ba-d9e0-4a6a-a5f8-87c3343f0934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb089e98-7495-45a1-9b51-600f7ccce4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df6fa7d1-365f-4256-9de3-9a03c9058e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95c4ba3-a87b-4161-82a2-22cdd9a16741",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77630261-f024-45be-83d2-4ec3a2c857a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d866b0-8b9e-4ce6-9be7-272b4c364ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f8ee66-0956-41a7-9fd9-095351325911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39e98e7-d767-4ede-8dd7-066d0669f1eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab56a6c-af22-44d4-946e-817cea5f33b0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41934961-9ed5-4e6f-b183-6a0cd547e866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080c044d-1fc2-4d60-99a2-55ef5bd3ad00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df73dc65-0f2a-4709-ac68-4a0615bc14a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9563e0-0412-4c98-b9f9-785518df537d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6420e09f-340f-42ce-bb03-12fab82245ae",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "423533c7-261a-42f3-96ed-b798de2973d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e7443b-8e03-443c-ad46-75f44d77ed01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cdcbba-6988-484a-a497-06c3263f521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f9278e-5c3b-4710-81c1-f474e172bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b943f679-113e-46b7-9f76-131725fefc62",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f1bea6-3ee1-47f8-8d8b-459da6f5f821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65509af3-5650-4a5e-babd-58c93289dcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c214ea3-17cb-4965-a3e4-5efec01ed9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cacb279-2800-4739-b30c-72315b3f6279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29471a25-a7e3-4afa-bea5-b3c5174ae980",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca48cc2-ee49-4f1f-8f55-c5d67564a9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6734c47d-c5c7-4cb8-aecd-15a944fe88ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03ee214-3be8-40e9-b6bf-ced7509683b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77a0b447-1764-4eda-9d05-053a5902c606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753aa145-c795-412d-bd28-490eaf298988",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44e4d23-f3c5-4c9d-b1ee-836183087c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfe2cf7-31c1-4027-a0a9-440f928c3ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024b73d1-9280-4c85-b151-c906ded93e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7c127d-7933-40c7-87df-62834d17d4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f537516-d412-448f-acab-9a13622c98e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2504f113-38ec-4e0e-b978-23eb25566e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c30916b-79b7-45a6-a991-86f18b1761b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e265524-4367-4b57-91bf-a18e4cf117c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f13214-fbfc-4b45-9df0-b50130038c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b89118-a4f0-4105-ae7a-e4d5a44b14f2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1d606c-fc62-4710-8484-83374298592d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ea5cca-1274-47e0-b99d-4f3950ee0afa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0c4c2c-7561-4c79-ba22-31f87e0112e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a1af9611-df00-481c-9aca-d548302c816c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd4a1e1-74db-45ec-9764-f173b121a8fd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f2826b-df1b-4818-a44e-af3e799f71be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a709b72-bb1f-412b-b265-abd8441b0b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231a8d42-a96c-482b-8eca-a1216fee6311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1492c6b4-4e00-4607-83e6-b03f72b5ede8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803ee710-e28d-4899-9906-5a70326c800f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c87c9c6-6287-4f9e-b4cd-10364e18c782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134b80fe-8807-4218-a0b5-b1a3b80aa9fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4308bad1-729f-432f-8d6b-80a3f2f77881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd865c9e-2a1d-4b40-be8c-7a3084d0de28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a27ca6a4-ffe7-46f3-8ad1-ca4704f0fc76",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b924382a-9237-4c3a-9f78-5155636144f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7326002-c1c5-4fe6-a772-77a3e0c43ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4b7e40-583a-45a1-afb3-4f93c8d89720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2e17ec5-6806-4faa-b2cc-09f172f900ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595dd83c-ecd1-4a6e-9158-4d4e436e36dd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6504a86-ab4b-462d-ab7f-7fc3f6d3e59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f624d597-10be-4733-9f99-24bb7c8a7cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95606cf0-5e12-4f61-abec-1ec6166b52ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d9c70f-651d-46ae-b2d2-65ebdf63d2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9ba20d-a755-4b51-8e75-babe5322ce89",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537d748e-ac37-4ab7-900f-7e2afcbab517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e583ec93-40e1-4371-880d-b90eded5ec3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95385b06-4b68-42b5-b5e0-92303e3ed477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "645c5dd4-37d6-48b6-ae97-6bbc9f55aec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e4135e-623e-4243-ba55-fdf516d9899b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "597ce40a-97e7-408c-8a33-cc9f317e7764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "105ba2e7-7fa0-4924-a49a-365f79ed8ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44fb53a-1936-4612-b955-03e1dda94f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "702dc39d-15d7-40f8-97ce-6de47ad8f83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d2ca8e-8a38-4057-bfe4-d1e2cacdb57e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfe6a79-1eb3-4dc3-8c1b-ce0d9cde70c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a419860-3020-403b-81b2-2567e0e025a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34c5651-6fd9-474d-8ccf-ee805ba849a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c370a259-c07a-45ad-94cb-6faa69ff5142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb98298-43ad-4b9e-95a7-420bd73045da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44042e10-0402-423f-9ee1-d0d233b4843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e124027-3400-45a8-b73e-14851b0e8a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eb2e2d-ce51-4d99-8cda-b7afbc3a7951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9042a897-40f4-4563-8558-de2c10c41a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2bee5e-c4ad-4017-8a57-d5cca5c0f4a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb523dee-0af7-497a-99d2-0674d329996c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe720c3a-2095-4026-8e3a-ac5ffca4ca67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bac09e1-ea43-4d57-a89a-ced635e20ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e55adae-d96c-4553-b5a2-4e7c2e290dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85f1321-d06a-4c74-9b63-597b2956df88",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6699b93-1baa-487c-8ca1-8b5a1a3e20eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ab03a1-8dd6-47cc-80d1-032d5886ee88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f30d7ba2-e7b4-4d75-b004-b095d165be88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80be1ad5-b8b5-4369-a8f1-95bdb774ac23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd89395-c2d9-43b4-8b80-3f377fef0a49",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc5df05-2102-4150-9a2a-865526c940c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cbc618-1fe2-48ed-b22f-8cb0f82dbe37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37bc4bbd-5fff-4d0b-a27f-358b6b1f6d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f54adf42-014e-4023-b076-1c02ef5610e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8b97f5-9c92-4966-9ec6-d87f6393df98",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eefedc6-56f5-46d9-92e5-f798f4db1fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cc0569-3035-4c99-a53f-5694b48187fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0678c814-e235-444d-bbe3-bc0ac40a30b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "917c3e8d-17e8-46ec-a3e0-96bf73f724db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2433e9ee-81e9-4fb2-9cff-e9c7db8594fb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9c7fb2-be95-489e-b370-e58e3a29fa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7395ec-1313-48b9-9a66-2178b2ef4e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79adc2f-ee34-4c39-9558-c8c74c7ff2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94ab91aa-4656-4fd4-a952-31c1b1252332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded45d7c-3a84-4e2c-9cb9-9bd1ea267180",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6c47d6-4f89-45c1-9c12-4e00cd84fa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd497478-4940-45ae-a337-c46c4ac03635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97918da5-07a1-4138-8129-5d691a69333a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ad33cb-7066-43e3-a64c-d39c4d253238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b076f9ec-945c-4b47-8999-2e420e9db2f8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fd6388-2279-405c-a783-43e9b4505afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada3ecb2-1794-4ff2-a8b2-9521f69e682b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503ccb46-4877-4f17-9e9e-ecd9315b1f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "959f4354-e5c9-4273-95f4-4524037b9f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb1cac8-36a6-45ea-acde-e3bed128e62a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b437ce-c0fe-45b9-8469-0f397dc312e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec40471-0685-42e5-82fc-445772365b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad4e89e-d618-4a72-aa9d-fe8e9df18816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa565726-d1a9-4418-85b7-e2fc9d080c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40daf800-5383-460c-8f43-c12cc28a53c6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89162396-0124-4dc0-abd3-101803be0e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf24755-a607-487d-85d9-99dec91651ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cf1a7f-8f90-44ce-833e-1ebadd96c9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "312fcec6-6bdd-4128-b816-30aaffef8e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422850ea-934e-4fc0-a0ce-13fa4a5bd70a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76f1971-808b-44d5-98c2-7fd8583d6ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9a8897-4e29-403d-b131-51e307e21057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3422f5e7-9b65-4cd7-949c-da5bc026501f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2be5fc-5380-40ae-8158-a2c9eb31f893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c008c974-0e71-4e95-9e70-5532b045236c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffaf1e4-df14-4c12-bafa-02f28ad56dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd397f9c-b1ff-414f-8ad8-950695d819d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c47c3980-92fd-4102-ae4b-737439aa636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24789359-963d-4a57-b3c8-690eef9eb66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f150cf29-8cad-45af-adee-e255c48e13d1",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51df90db-2215-47de-8c7f-083f9ba500bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63d4f1b-c462-41e8-bc64-9e84b8dbbb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82adfa67-370b-412f-b08a-fc94f26c60e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0375bc42-b438-4efb-9121-1bad61adf96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44185cef-9f3a-4260-aad8-c8531cb4db8f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd1bf68-43d6-4e1a-873b-7790ed7f8c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb302617-6d3d-45cd-b633-208919af8ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae2860d-5069-40c8-a69e-72d3c0a38023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2531472-fbd2-44aa-ac38-dde67da9b157"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5562fc7d-9760-4b88-8257-063d184fba53",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c1dca61-10a3-4a11-8fd7-8c4b5f96c340",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1cba46-2194-4ebb-a096-b4e08feeafc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de91abd-7d2e-4802-b71f-24217f67891d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf52b6e-0f21-4407-ac6a-759c336de56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbef61d4-fef5-4202-a77e-c1a288a733b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a0fc21-849c-4a16-a017-2e93a04204df",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660ff768-881b-40d7-9573-84ca9318d1b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "7e0f2716-d5b2-4bbc-987b-aad9c7667513"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab7a3b8-14ed-4001-bb92-f526f54c0c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba1ce86b-d494-4f10-a4e0-e8614dd5254f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42c0abd4-f690-4714-912c-0a6a147b349f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "856bb888-f2a8-46a9-931a-0066bb8b607b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23f0d5f8-ceb3-4d3f-a184-81deee9ec441",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a5e45ed-5248-43d5-868d-8184f1f9f454"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a51a75a7-624a-4410-b7fb-974a390bf1f2",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ab68244-b0cf-421b-b5a5-55eb3b8f1dd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2869d8c7-56d7-4caa-89e7-c73efbb59d68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b475363-3396-41ea-9418-3f9fb383c18b"
            }
          }
        ]
      },
      {
        "id": "304980d7-e30b-41aa-80cd-565368d64401",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6ba162ca-7e32-4957-bbb1-1915a119a9a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c77ec695-b16a-4082-98ee-39b06c2ec470",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "33a16b46-8739-4aa8-a93f-7cad5dc348ca",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71337aae-d89d-4144-b8fc-18f3142212cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95566a28-dd14-4f4d-a86d-10202a12c097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31df52cf-f9d3-407c-821e-2e642a9bc829",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a73247-bb0c-4581-8fe8-8d4d844fded4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb02ab6b-487c-4c21-b2a6-597cdd09b6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c2de6f-73e6-4273-9ae0-71dbcae08e29",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5e5843-c3d9-4ec0-824f-061f5f571d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1279334-251d-4e43-8f3b-0e26a132593b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443ca586-0f26-4853-965b-cb359bda64e5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c2c31b-3a23-4fa5-afb9-a3a07094572f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f538e0-d507-4a24-bca0-3e3fa7a05841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a01f6ce-a3ec-4cee-9722-a02c46187faf",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e9f9ac-b8ce-4830-b348-afa950baf282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514b724c-85dc-4f76-8569-745c81c6f806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a725905-4624-4246-974e-98085cf57f52",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe16b93-c805-453a-966a-51bdf888b18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4dea67-15ae-41e3-b0cb-c5773f490135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ebf4af-ce5f-4cef-ac68-e0e05374b690",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6401051d-ca75-4b76-829b-c197e0037016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed49dad3-7646-4f3f-b651-3b2e0c8ee05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5faeaa51-e89a-4473-a429-30ceed9dc54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6af4f67-57a0-418a-baab-cb5bc364e9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f59ecb-626f-4f16-872f-37bc5dd2a4b9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7350306e-e77d-4e33-b176-0950c0891cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a64280-8cda-4271-b75c-00d67007b1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67265de-112f-45ee-b2af-d552966569a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d09668-49bc-4437-985a-70aa60b738da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d44ec84-6281-49d7-b900-4a9e8beb4b7d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed96a28-236f-43d2-86f8-876e3862cffe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93dc44f-0f47-44cf-a238-d7977e883d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44db522a-2492-4a7a-b24b-b1276f307048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b839ccb-ba3a-444b-b584-75cc818a1894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734e134e-4644-418d-b74f-c961519f6ed4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cf6a97-18ff-4de2-827b-d064aba72ad8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "722ee095-3b87-4752-8f4f-ad55bd32b499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913946fe-315b-4b25-ae7e-a020edd4be0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efed317-b03c-4b61-be2a-46c1906edc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa34a211-7e6c-458f-87df-2171b09bf6c5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..zF1sQbNclnV5pE5MfuXqMaTVBquwie4ctwzSdbC_LJ1Lx5qRK6V-y9wl5oTvN_GpuOvMIvlG3kQdjgqL3GBKDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8a544f-ba41-4e40-8ddd-6e0f7f0f6211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befb9e14-f94b-4c62-b783-3ddb79e2e39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cf63d0-2caf-447a-ac29-0f506e15a202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa0af81-28af-4b4a-ab8b-a62da1ed6a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa66af24-663d-42a5-b97a-5dd1d267d3f3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31c35db-b5ed-4049-87c7-85840611f04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2762d42-fe3a-4298-a311-d4179c36ea8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "943b370f-9f14-40ce-bcd8-aa9a7f0dd660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264dff78-c61a-4caa-bb7e-08c3d4985c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48f3257-7f39-4eff-9dc2-228536e9dd71",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d2cbda-d492-441a-8297-a89259a35a49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f81a2fa8-bdfc-47bb-a566-a2650fff9212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcc486d-88ba-4004-be8f-1933e94dfeca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed7b0e5-2390-4f4b-9a55-f1b67b4b4aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228cf096-5c7b-40cb-b5c7-cbb8e6e4891e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce5f01b-eb67-4cc9-a328-d4bd257dcf36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5031b283-b832-4c6a-a367-a09a2677cf9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c9a7a3-ab96-4939-a5c4-7fe0e1a198d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d6cf27-9ae5-4f55-b4ca-dfbbd1302a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383e566a-68db-4ab6-a104-3f3a62aceb85",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd94b87-f3ff-4e9d-85e7-c47a9a83934b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca24641-0632-4aa1-a104-85aebbcecc28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aaf534b-74d6-46fa-a9ae-148de74011b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b375d669-0c28-4ca2-aa30-af9c65c9afe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8e1014-2ee1-427d-ad1c-ef8f447f2932",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6535ba2-c623-4e5c-9f61-fafa8e7f4a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1915205a-49ae-4187-b22a-6952e732285f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5ac7cc-485c-4420-8ec0-8580d719fa6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d67bce7-a1d4-4656-94dd-dd0ca0b8c1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cef7c21-a4ef-46ab-9677-1faf509d5664",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080664cf-4ca0-4eae-903d-8620dd0ff4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca2de10-700f-4815-9593-8cc0ccd76ce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa41933-d825-46c4-9110-648d11578208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3690bcf8-1fc5-4909-85f8-c0f69e67d1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2682e6b-3292-443c-8cfc-6fba678ef564",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed838497-cda8-4a0b-805f-1fca27d7a957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1409e1b3-660a-4594-a745-49a7fa75b1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe1455f-9d28-46be-96b5-8e9ce13b1705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84a26ec6-5e39-4913-8918-47eafe7bcd51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec43036-ae08-484e-98af-bd594aa32c28",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": false,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f391089a-efca-4544-936b-a4d5bb99c210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccead1b0-f4a7-48f5-9b00-306035bde2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7cfab8-8dc9-4f8b-9b7c-5eda231672e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3941f538-caa7-47c0-bb87-ee2f6c0c45eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd6ab98-53b6-4260-bcc1-5be28e293892",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": 123,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71494788-811d-4601-a284-797ef19aa070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f30fb73-09db-4f40-9e4c-c0c55827276f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c631892e-a906-4872-a3b8-903bfad55fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7277f6ad-778b-45fa-bd09-8f28c6c08179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faa37c3-a32e-4506-a2bb-80ae64a77625",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": null,\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394e3a89-449d-489c-8b57-c0eaec6774f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a4e60a-f1ff-4974-8ae7-1b3f1f377ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8695c9ef-e4a5-412c-8809-8e0657eac3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc869ba-e654-4cef-8602-597aa8ac0b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebd88b9-5619-41e7-a4a6-7624b2e82b7e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..5J-iTBtI5WNIe9L3kLF22cjjDx6iQuJAgl6yYYoIGMC-X_crKNlSlB5bRJsrb2MV-NDlWMtHe0grtMqRG1N0Bw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4649063b-f6ab-42f8-a40b-a664f6799e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd4fcbe-f769-40eb-b45b-41e74c3ddaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43824e66-9a13-4d0c-8a99-5a9bc3cc7225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1313c35d-d0a3-4300-9817-6a943859f78c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb9f29b-f1bd-41eb-a727-24755bcbf7a0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d563a91d-15cd-4842-8ed8-d0754ff7dad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a83ef3a-c60a-402b-bf3d-e27aacc751f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eaaa6f-6f48-426c-b5f0-9408fe090e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d63f88-c939-4238-ba01-9f77782d9de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a971a128-ca31-403b-a88d-db00d18e6fde",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bcf06e-2ac7-4817-b122-6cbc90190d3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d99615-82ce-45e7-840a-787f32b40004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9de04d9-1a4a-4daa-820a-b3bde8250df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c13b19-0e1c-4a0b-a344-dd7c98822813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac18b9f-83d0-4244-ace3-9d3f8a41c7b7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aea7c1-7ece-44da-aa53-0d7ca26b5c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "190dcfbd-725f-456a-a565-0a1319df9d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2b383a-8fbe-4a58-87e0-e331e53b4e28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338a466c-0790-4bd3-903e-06f799615fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa95812f-5490-426b-a6a1-9a2b712370c4",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6323bb1-9ce7-4568-9e88-f598397909c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8794f307-23f7-4a6f-a229-3de1edb90b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978d54f6-ca92-405e-958a-c62836212edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae18835-ace6-40b1-82c5-3eed8a25d752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e87cc4b-056c-48f6-9190-4f3ed8d13738",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7469d362-6f81-4bc3-9685-47ae28290bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b84c7cb-cdef-47e7-91ce-d9477d3bfd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49ff8fe-c3a5-4dc4-a8a7-f88fac564f83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45667c3-cb0f-497f-aa9a-ca2a0bb60dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41271825-15fb-4b59-a3cb-62555ebc8dd0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697e867c-f493-4d56-be42-bc92c8fe6926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9d1793-6264-4bc4-9530-111e234d03f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c3d72e-6ab4-4ab3-a662-b4cb69f8c3cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c38dc76-e766-42a0-b9b2-d6ab658fb898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf53414-9e9a-45fb-8250-45b5382c1eca",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813f277c-f3e5-4610-bc69-3fb8d6a48472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a342ca69-a75f-4cc1-ad51-fda60d59f558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4eedf1-445b-4836-95e8-5f06ebff6cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d447ee60-7255-46e3-901a-1e8472d67f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e40ccc-e268-477a-96d7-b4d2a3148726",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4f5f5e-cddc-4913-994a-03b1e160ec2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6963caf-3cc4-487a-80d7-b036ef06e7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167b968f-5602-418b-9a37-ce2a13a2e708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae2d628-f147-4a76-bd88-74e5fb86d014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87514f8-ecea-425c-ab50-fdbd8ff98a45",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525ba3cb-1b5d-4afe-8f13-38bb6a94eff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75336959-d8d6-4424-8708-e1290a91ac35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4936d3-05fa-4c0e-abb6-1eb6553347ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deabb160-6853-4842-8a37-ca6332d92b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742d2772-71a6-4059-98e6-5b89e05feb7a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f6c4ac-2438-46e9-a841-c3980af52a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be072cdf-540a-4a09-8aaf-145b6553f018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9f61ea-b624-4424-840d-05557cc8ec57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4b3587-d6db-4cfa-81a1-a3d6bcf4f260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97059d82-cdfc-4308-8546-d556160a1459",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241a9960-6b4f-48d6-af1d-987aa9ff6a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6e4685-1f68-43dc-8304-bb26c95297f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72482d8-89fe-4105-8c42-0d758de560a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5925f6ec-54e7-4dec-83c7-1f48ba8bcd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541ebab5-4985-47f2-9078-304d9ed8dd7d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a9bb28-2a0d-40fc-bcdf-ad5ae67aa83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "effb43fb-7cb8-45f1-9d32-0076b6d09b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ab2949-90d1-4763-9e4b-705361779c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9ac158-0f2c-493e-8f73-17d503787842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd26cf2-1511-4ac4-86d4-0306ef7dfd9f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3322ba-4673-4733-82af-48e1ce5790db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a988da4-55a2-4e39-b9a7-705545796f98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd762271-9c2b-4dfc-9194-ed6bc367675c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a8e322-786b-4303-bb06-21a21a1f9f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a14d155-5dba-464b-9677-2a533d458402",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x7a3s_8HfmUqGT6SDkktN-jeRmBR2xQ_9tOhJx4kEG3SCsRTySfDxya9yy57LNv__qbY1eMkm9SNrwdYiqlBAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "834dcc9f-7058-4243-9bfe-ed15ac95313c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ca65dc-36f6-435a-bb73-e9a56fa42589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167f97b0-ff13-4aa8-bdfc-9876698c8e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1300d17a-f8fc-4a99-8796-ef8dd606d5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0575633-0254-443b-afff-a51410e60ead",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mMaPSvG48oEf3bv0t-6eLR3zvU3_BKoRIkgzkuZfm8zvjqbI7iy05D8k1mTeoSZEw3xYV-_sH1rChqGmmp7KDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ada726a-fbd2-41ef-b13f-23f83ac68a04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d773636b-24f7-47ea-b42d-4e0319c60a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb18bf7-d3c4-4e9f-a1f3-619681675345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11db87ef-5821-4e19-99a1-24a08af96e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f73d399-b35e-4a36-9e69-5191ba25ba83",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..rAVfo-Gnj0vUX6yDAr7pslI6XAAyF2LHTXpiZEmnH5Hb4RsKcmDZZawaLSCg931y1cBUgZ1PQvGbJEdb094ZDQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd92de-9ffb-493d-8b85-2b01d084f8de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d46725c-3b5d-4b27-9186-a5d7515d0b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d33f0a-373a-4160-9b2a-024a6f0a0a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b42261-c217-4706-ad2e-ffa01c54c76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f344c945-f496-40ab-8788-fd93e867e61f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pq8DsjUrDW8TnVRuS8CwfW5Y4dnqYcGsGryNh1gi-BW7vK0_f3gcnDpwJ0HTiHuNm_AyIVWJUPC2ZQHeiCB6CA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9dd78bb-55dc-4915-b9f4-8caa37c38cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753a5965-5258-46e2-a864-19ad39462c18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42433fdc-4a26-4919-9400-1fe1ebe67467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbaf579-89f8-40ec-abe2-d574c68a9d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e49e278-74d5-4df5-8703-fbbbfbc243d1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397b0fd6-e000-485c-851f-daf6dcf9a6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30375ca4-ed53-4ac9-ae60-3bb02f07c46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cec564c-193e-4c18-a1e8-dd2671c30e0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99339c71-e45b-46ff-9f33-c8255b39a21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e24763-65ad-422f-a876-730ae97e8bce",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..vv4qa5LGRlgeMxW5G5VjEKDfjKKosQnvpx6oapYDlfUSWVagQsDoDcRmkotKzFHDcTh-opjGLp__agL6_d4OCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fc3ed2-d614-44aa-aac4-125b725b8add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa452dd-4bef-4dde-a353-5f4318744f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e116d1e-08d8-4045-b632-b952434646fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e743b3-3aa6-4236-8488-dc1b46dd35ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa713fbe-88ec-4513-abcd-318d7e42ebb1",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TTwcmWS6_0_t8XPlAGXbzWVSL_dL7OeYojY0FZz1WXCFvDfeAQtMh3dcIxuCeDqON6St3PODGfxluO_q1vWCDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efeb646-9e31-4f04-bdf4-097e13e79d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ffc2bc-9a80-46c1-941f-50ccf20b9a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e618c860-9cbf-4136-a21e-77cddbbea39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc690c6d-71ad-4e45-ab48-b7621f93b7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59877674-9d3e-4138-a23f-c7f96a47d602",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..wpkNYYEOCjKMWm9xTYNn0J7IgXZQbbkEoohMQbloz_Zxb15UVu6DqiqsENotAeHvlRWd7RH2O9v4FwWBeqvPDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e54ccd54-1533-45d9-8870-c179465d3234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26266470-91b9-4c0f-b844-1558cd2295ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669cc25a-9659-457b-862c-89c0bf95d4d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5df80a2-5863-409f-a89e-478c6ab6253f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2fe0c6-df60-4628-b06d-018d5bb8685d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..BECBu6If6NVwC5rval2DG_n1znlYEyuy8m-akfpYk2JLDVw5zV_d62YTgwyA0q5zzmWDep8TALuV5n5sSdJFCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf6359-47d8-4706-8cf6-a7b83e3a5259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4db81b3-19b0-4348-ac59-281e0f15e537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaa8aea-12d8-48b6-a869-28a3dcdeb1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf280777-199e-4e87-8918-201cc40e1d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20eb79db-2998-4690-8080-c4c3ef814656",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHJmwuqqXWMdd298m7RCTGyGoAzsCx1y9tewaHukqaJJoPn2-TLDCQuXvlnFeAYAE_Cy3j1UScfoVx5k-eclAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d7e878-891d-420a-8f48-af9dbaf328ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5465e4-3ebf-4386-a3e9-afcba8236ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58852eab-6ff9-4fa4-91c1-57c675294a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac03576c-6ed8-43d2-ab54-96651579be78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4041fd-2fd6-44b8-815b-d67aeff38316",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01db451-dc9c-4a52-bc0a-df6762da37ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd66fb4c-c527-4fba-a94f-6c3c997a862f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9448f6-5ae2-43ea-ae46-e235c0bfa14b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7478a4e1-26f3-45fd-9b18-48bccb598558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22aa6d62-2491-44d6-b43c-833a68de66e3",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..OzKfWk00QpV3_FJru3xJ3_ktwlU4O68prZWWCmdy3mQTbCz2lPFRl2sB4AkdD3AZUFMAnwxhscd9B0UnqxTZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f89e6a-8a4c-4665-a705-a73a2db81fe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825947e8-4e21-4dd2-a437-142d63e6a075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aa8712-c0c9-4ddd-854d-fed1a7a62d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5bb6cb9-9846-41b5-b5d7-e30874499152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4025e6-6ab7-44e8-a45c-94b983424f8b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1W7WM5cXb0daWooGxEOYn_zm72mkmpF_tu8Fij39luQwNGDgK7h4nZGBFcS80HTVqiBKxzlhGq1yNnpUlLG-Ag\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e06e3f5-96e7-4ba0-925e-9f782a690e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9e30a4-9598-4304-b485-6ebfeb878664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7236e1-5d19-4dd0-8769-8e71d8f35079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a01308-ebe1-4d05-8116-50d34026d65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39abf459-2162-43ad-bcb2-c9b203c7d961",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dkiU2sStrvQWiNFK8cKmCbAcRGsC9kbDdKyr-NRlPc9ORQczitwUEymjviemIi1Oot23VohpyMcSFvgFIKIFDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418713c1-bcbf-464c-a9c9-d738187ba401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e52d09-3d7f-4f43-b99e-27179017113f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c045ef-7b94-45aa-bd40-bfcbbda03d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e1d1d4-5050-4284-bf5c-0fc7033a3185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b770b9e2-a3e1-4811-b621-5bbb440c7cc6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..QU131f8dSzen-Dpxf0_p8mCPqhRA6wTO_1rRT4HbsYg0OuRNx_b4x8UtsOoeyuA38K5aL9p7xKeRYf19mmbZDw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b02d0ff-bb0a-41a5-9943-0b4e3a735a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d245de2c-2294-4c51-b90f-ea2665dc955b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c7463c-516b-45f2-8639-2f615132383d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93c742d-8c9c-47ea-8aca-25a62c4117cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c845444-ce4e-426a-8734-51452864524b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..pNIbeUn6DL71QxEWTF1wQTqKfAJET5JB9FlmoLXk4-rv1owG68DqQY6qwcPx6fUbMijsWsXlvaFvzND0jAg1AA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1e0a61-8ed4-400d-9fb2-12c8975a0688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd30f30e-d7dd-4f0a-95bb-653425ce5d2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2c7129-b662-43f1-8aad-0355395e7460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5010b40-0491-4a3e-9631-30038ac6a4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7dcc3e9-5f76-4bc2-82dc-b5ac76f99959",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z0P0ndVABJRB7mCsv4C-EgB-1SxgnfrU2uQBDSwKm2KfB1jBnzsEzY9enxOn7V1lBAPNxELTEaxPCAK7_n3bBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e09317-366b-4f0c-b967-d2348aa9aa79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f498cba5-7516-40a6-86f7-bccf7427ee1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beff41a-df75-4a65-a753-cd317131046f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "021410af-5c3e-4455-a22b-1771169f329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fe627a-dd28-4b6e-950d-5cdfef5cf269",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95db2576-15f6-45fa-8a0f-45de1814f1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71208b3e-83c0-4ed4-9d4f-93a109e145de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daef668-4574-4a8d-9cba-0a0f92d9d08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6250ff67-23b9-496c-8ea0-a125050d75fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b14f6b-93c1-4cff-8dc3-dc775ac11de3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee71c83e-aeaa-42e7-9cb2-94ed6c7cab17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48f6138-0843-4d61-9634-0a594a970b66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e561e9-86b4-4047-8d35-820e4f9ed605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "400c57fa-5718-4d6d-aace-a34e8df1ca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347f339a-9f5f-45dd-b4e2-cb6b1504e1d4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..IXaPbANtKFiA3Sh28esCkg9kdwpHScJg3bOCF7Phmb5n9RC981EeIobgDnMzWIjP4v0S92FDEcZqA_XbW43GDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b746b2b-9758-403c-8657-ba04ccf8afd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80a5576-56c9-4a69-90c2-a10d7d04e05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4919d215-9e59-4bae-9e73-14178648e8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923d7436-1487-4107-9265-d80c977b4ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8b1704-5348-4e67-b6d9-c4446e958275",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iM5Xr2lBqwFIQhq9RI7Dv4K0dzdQ0z7i5YN4ELsstv9vDC9xA-GY2Ft-PsfubsbgVyQsQYjchCv23GULmhauCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ee25e9-a82c-40af-a04c-4181ed1db6be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd1c38-c813-46fb-b06a-66dbe004f3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63b8cea-8de6-495a-a20e-82996f2d43d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70f6e78-40ed-4ae1-96c8-c885ac7ab612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3e0717-766a-4643-a636-cfeefcbf9064",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..PbhlE_UhX8MVQULs7DoRe-QWk8PcmupGNRf8qCZbMwRE6bP7wyTCcJBQ-XD3Erp2cW9EjVHihTA_VsHi-02WAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436c74b8-b245-4b5c-ae7b-9c0a4b2b498b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762269de-ea91-4f24-9dcd-40ee05d9201e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca0874c-fb89-4b4c-bd1f-410683a3f4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d442f491-c386-4227-aca1-c847247d498f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66aa268e-4dda-4ca9-8646-ae9823626bf8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ed2320-b5e7-42e0-8a10-0c9fa663756b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a161a662-2502-4c28-b78c-c0daca0d6897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d528429-a37c-404b-8701-6e5fbdee3566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c57fe19-cccc-433c-ab1f-bad15536f310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509193cd-b05a-4e02-a2bb-3596f72b0d6c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..GBcSurXcOJcVinhthkmqvV40OS1rN2fY57Kad0HMLUuykp14JJCtNw_gmtf6SwZxhB860OVsUmuNbZXsMCi-DQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c785ddcc-4582-4060-9a65-7eda2f9619d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab378cf-81d3-4d99-b77f-d48e8a53343b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8ecdf7-0c4d-4859-8789-909ed103650c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181fa2d5-507a-4123-a875-7726b7f3993c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbdf4ac-61ee-4d65-a418-bca1f87e07bd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VWowmcXQAjabeJENG3aOcLzQ9HrvmSIs2pOWcaEMLdJtvJfP7oWohIBiqp94-eo1pd4Ocgk3hT0cLvS5qKBYAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30c86a6-a85d-428a-88bc-b191e89b4e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9586766f-f3b4-4a02-9f35-b020897c47ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9337b0-3fcb-45dc-84e6-9ee3b1b3bf69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b988448-9623-4388-8fc5-3ccbb0dfeb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9eba45-4664-4d54-b203-6be53c2598d7",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..-awe55AAvkjymZEpagD4fdSQk0uCGFfjyFwg7upmg_CISWk12JfezKe-N3hjTwYKCSCjScynLGvlH2x4iSgbDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde0d680-6b67-4e30-86c4-bec53e672c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ea8d16-20eb-4f6f-b7c1-a6c699682a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831aae3b-2691-4614-adc1-25d676a66d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72cfa28f-6bef-4c5a-80b1-bd6e769d5bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d80eb3b5-ef21-4c7f-b366-051d4d65bf25",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..NDwZvVUWw-xG0zU8VsWhiXPWrYycgK_zwN8zZts05DTw23rOTd9IOXQxqhEMzo_X0c25jzowIbpDfEFxqfmnAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48643e0c-a9fa-4c51-9a7a-5a610c0240ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb826ff9-b22e-481c-9a0d-77987b58f3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89f40b4-20a0-4a27-826e-46bcc577424f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01736cd-e887-4fa3-8ed9-521b8d155958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b220a025-2da8-47fd-9071-a878797d7e1c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..y_7VEjN1ENYoedOrj2jsIqgL7FSYelxGgFZD5ckqKvSDM5BVEWiEctD24BWppCndRR7WR9_1ByBm2F1yBSaoCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f821b73-b8dd-4c76-bc9b-64ac35f4fae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232c4442-8e56-456d-9dd5-2d658f16e678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72535b41-a509-4c20-946f-2424b65cf4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63253cce-b181-4328-8fbe-70f60253d3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b052151-8966-4469-b1f0-5d7292140055",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c185134e-155a-4c31-97b7-19e652cf7574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22ed393-994a-4012-b2f5-2d436982a2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2634f6f-ebcd-4aa1-899b-af2bb0d45ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135ba7a3-1b36-4e57-96c3-7748e2062b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ed45c3-bf72-4960-ac69-451b76fa9ff6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40db520-ca4d-49b9-96c0-089ed8f47269",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d904be9-23e6-4a0b-9e51-649d35cff127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0906c31a-f5a7-4de4-8e72-55957a469927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9522427-968d-48f8-9ced-2a6b7ee503ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be15ef7e-25bb-49c1-a214-4bd3ef902e3a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3861b67d-0c30-495f-84b2-f5701ef2bacc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6f1d0a-f140-45c2-821f-e42d52d1df09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e99053-c8b3-4f6f-930c-8ca3aa5d4451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a2bdb0-ec48-4cd6-b05b-98089985c173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5331ac1-796f-41bc-8842-7d240ca38b4f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba733b2c-6afc-4e88-8597-2144a6f1d5e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0093c3d-8e32-467b-ba90-493a4b58de02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2789bcb-1174-4ec1-8894-04be622b94be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84eb6b74-9cbf-48b6-9914-a67fa8ecfb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1d46e6-aa7c-40cc-b8fc-81dfe34690ce",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c41b778-c804-48e1-b11b-323579d9d993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8009e306-04ed-4813-b5bc-600ccad00b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed0a7f1-3f22-4e45-846d-290301805268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cbe714-c786-4484-8717-da6e65c93079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b8d4be-1c02-4451-a690-e7a6d94c2f76",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabbc43d-69b8-4d0d-bc14-d81016972f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf4d14b-8d7b-4807-97df-cc3479f4ef01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcd344a-d298-4f8d-a48a-a71808dc0ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805b90e9-30f7-4958-9938-a7181d9e5b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "099403ac-9464-4120-b3b8-8596539a7f3e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeebd692-4aa0-41b7-856f-eec8838b31bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "747693e5-8c51-47a6-8de4-faf398159bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012a8338-c2a8-4da5-904c-4017353da649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9584b27-fbd7-45e4-bcee-1209af0f3a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c183f3-a86f-4507-a92b-32bed0b5bf2b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8862855-a49f-4fcb-a56a-ec6af7a3d1be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b14ee7c-0b1b-4571-b932-58b94f656bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c807ded-75fa-48d1-bc45-0e7ac10fb985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4759e8-3864-4d5e-af09-60962970afa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd0b07a-676d-49fa-a4b3-8980845831ad",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda54c47-cfa5-4684-8e5e-08c0374c3de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b492a87-53a2-4188-8f67-fbb9d3c00839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff5e115-2ab6-4aa8-b7f0-8533a9233af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d99898-e739-4b09-ab2c-926d813d7686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c594932f-1ae4-4bef-b257-87df3634161f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cab24a-dfd6-49e0-8c17-adf304680ad5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9934b068-1b34-4241-96bb-7ebfafd2b3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66295791-9477-4f75-8564-b1183df06367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d570ede8-358d-48b3-8a10-8aed8c474298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2069d5b1-4287-4a4d-a5b2-e1852ea7f13f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9355746-3caf-4933-8c0d-5b2f01cacfdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0920cb89-ea40-4b7c-9710-7555cdae70b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "362c5319-cd87-4798-ae09-518ef694f454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2f5605-0255-4241-b694-c162f244c8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340e8955-2561-4aa6-ac1f-53ee9dab7a04",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ad34a1-2f37-4194-8c29-dd455822ce23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151e30bd-9e8d-4890-a8a8-03a323a926d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aae9620-435a-4e7c-bdef-e710c565142f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec6a0d2-ec29-4369-8440-7960f81ba918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77fd0f2-8bfc-4e6c-bc0e-dc18b38a80c4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04a4105-d752-4a85-9210-7e8388a36764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3967cca4-cb33-436d-8096-67b06dbbe63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab00cc83-d800-4cf0-aeb0-80374f2edb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1bae3d-afe8-413c-b9ec-0c2171ef6fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f92697-0097-4d2d-a489-ea199b62f540",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756f3321-7857-416a-9ea6-7b2c1a14587f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b4bac1-c7b2-4c3c-83ee-d2ffc19a731e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b6ea6e-6f66-4119-a348-f791ee245fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d7841f-b7fd-4099-83f7-4fd8bbfa51ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fecff1-f1ba-41c6-aea9-4a420c7e056c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82ebb46-f254-4db8-902f-203c25718ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5156fae8-0887-40b7-a441-fc21c367f3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ceb075b-891e-4897-b97f-39f5dd0bd888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2156f868-c1bc-4a1e-9d11-ddf65327f65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0dd2a80-01b4-4728-886b-e25eccc44211",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703d8a3c-ccb1-410f-aab6-baa1b316c4b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58786cee-c0e3-496f-b9d2-b3e87d0b85ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9870903a-6a3d-4271-a359-5f0edc055741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52653d90-4e3d-4588-944e-55c3bc2a96fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893ace55-05cf-4ab3-81ff-83a44b36b7e6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051d6503-2f87-4489-b232-3d58ba364314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4536de2-7997-47e8-b709-5213cfe80256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2400cad-d587-4f23-8561-95d7ca8be175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79ccca7-10ec-4922-b75c-7ee40589b0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793c9e1e-61df-48c2-8726-195acbf4f44e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7b70fc-c16b-435e-9f66-e938c5f8ce96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec739428-ebf3-40e6-9d01-37a634e4c359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcd5175-0ed0-4b88-8bd4-7fa86765c43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bdb892-e6a9-4159-8974-a9e3c12430de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7edc2e-1342-4f3b-a680-fb86a2011fbc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5355a113-c6b1-4129-a33c-da38e2adff63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "967e634d-f5ab-4331-8acf-54c22512b31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70690b3-625c-42cb-bce5-0c46d97502cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7dc0fc-d542-4568-937b-e82eb81d6c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6274cfa-9547-459c-a7e0-579b6003197b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6c1aa3-a342-48cd-b403-93f185755622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0062e64-be35-4bb4-a42b-cc430f8a5ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01641b47-7b88-4a1c-8442-dcdb8206856f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b969e460-f915-431a-bd8c-56b1bca2fcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2982e152-a1e9-40f8-9dbc-218dc58e81bc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e9fde7-3f94-4761-b113-fabf8e2978df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e82a7076-7d50-40e8-9ab1-0149e1089b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1481e3c-fe88-43b1-bcab-5ce3c6489a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d11468a-851f-4a48-8277-dbf9f9f84a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdad8bc6-4258-41a3-825d-ff406fd2d649",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934cadd4-39b3-4f35-b2a1-e98508a427c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9dc924b-e684-4a4d-a6e0-df58abce0c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e00aa4-9d7b-4a8b-ac38-d90d35147001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3971c4-62ee-4ea9-b231-0de610e1b16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684b685a-6555-4bc1-9975-32438a50065a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1dce7c-e65e-4370-b326-6c90d2431a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a13fc18-1936-4269-b184-1082840dda13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a30020-d1cf-46a0-b854-9bcff9a00b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc2fc17-61a7-4b47-8d3b-c8f2ba2c9394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67909335-85e7-4cb4-91e8-b5594e0a9422",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fafe39-d615-4081-8e4a-43fb91ef718e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4503ba38-a903-4b77-abe0-cdbb03ec8f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa97818-3a2f-41b7-b6f4-4087013a4c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fd5a18-f8f8-402e-be60-dbe9accf8688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6fdc75-c918-4fc9-aa7b-6171c2a5576f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35404be5-865e-44ac-ba64-aee1b8b3b944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93b633d2-1ca2-4228-b8d1-dd6a5889e039"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf26695-12b2-4e53-b2d4-b4476eef4125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed97289-12c1-4f6b-9e76-5ac2217c6a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5354410-3718-48c2-8b6d-53a5e453a334",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14132d36-f4dc-4d7a-9757-fe5f85659b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48e11ba-911b-45c0-8db6-797432879306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b4b4d4-a8ba-49f7-be87-138fb1582672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18305a4a-ef81-4da6-b02d-27a5763194e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6a2386-33df-41ac-bf44-cc9e211911b8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a4d9fc-c03b-4497-a8da-1d937128c8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f24dd6-4729-4a84-b9f6-40e77c34656f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff28b6-56b1-48d8-97a6-2128cc94d584",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f891fd-dfa6-4a95-baa3-53fddd554fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a615a12-e012-41bf-9d5a-66a3dc7798d3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a890fda7-a6bd-4a1a-b504-88f4ed668f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36972844-a170-4cda-b5c3-993bf17c558a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a189f00-1359-4b7f-aa6e-7f2e30cabdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d834ce79-41e2-4828-afff-33414b95d47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0855ce97-c464-4575-9443-f50ad02041e1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5282c6-b93a-469f-b745-373898d8a67d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f140293-c2f4-48de-9c94-8ecc5504bb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb50afb-135e-464a-8fe5-94511a71259a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb7b789-fd4f-40d4-bfd9-c110fc208f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13751a28-6759-45fa-abd1-47937b53fd6e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06288c67-ccee-411c-b2ac-fc55d9ee1131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8412e3c6-4705-4c56-b2c1-ff4014e899aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8de0f76-51f5-4d69-a9cf-c4f4dba5c679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36736cd0-7d21-4346-a29b-09e0606a9b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196493bb-a86c-494f-a27e-45ebb1fc43a5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0681fa-6f05-47d2-987c-07c23325a18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d871bf-7f2c-49fd-b70c-792554be2d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dce0e6-3b08-4448-bc6b-fa5361ad76a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d856204-a3fe-46f7-843c-bedb69b916d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103c569d-5750-46f2-9c41-7892c5cc10c8",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07c86d3-3ab1-4683-8229-9d6d71b7ee51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8789637a-e249-466b-ab16-43896863ea6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76011c56-bf15-45c9-be43-e06be5954cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b47c5ed-18bc-4d83-ad3c-9d3f63678ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2910cb-b87a-4695-bc7f-c7ec68ed1d8e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8c2d30-c86e-4233-a664-bd8a4a9414c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfdbb784-9000-4425-8648-e53a54d705bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74722fe0-a3b1-4957-8eed-2feb08a56179",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1038149f-d55c-4503-9a4c-a5751116b098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e58fabd1-518c-4ec5-8f15-930c957bdd1b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d247ade-6108-402c-872f-97df777a6487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8af1eabe-b665-4e2c-8e4f-b0b289730b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da456a90-ac10-4cae-808c-96eae1813692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d76338-24c1-4792-83c6-34e80d61a5b0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a0fd762-0425-4d41-b1f2-81915c3a717c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a34e351d-1152-4774-bf8d-a85174febf6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef198658-2d12-498d-8dce-aab404e3440e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fabef05-cec4-44f9-9c2a-89ae108ba21b"
                    }
                  }
                ]
              },
              {
                "id": "bbd56bf0-2c60-44cc-9c75-bb9f3264f0ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa754e62-b75d-4da9-afab-be7c43f6ec41",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ea58b2-ae36-4724-a1e8-218611e07042",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6ab81f7d-f0e4-44ba-999f-35f0bb1772e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37dd585-1171-4845-a5e2-6c920f7171b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73f4e3cf-59d6-4d96-bfb9-989a838a616e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53b5539-a156-40cc-9dff-4aa85988222f",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1db4c5-7a78-4c4b-a3e5-965bf2429115",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d2229c0-99ab-41d3-b70b-18273f953b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7f0ee7-131d-4b43-abec-25ff6e594aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "153d1bd9-a4bf-4243-b554-0372e6d7f48e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfad6c8a-9d6f-40af-9fbe-4d4a7f791902",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5aeb834-d2f4-4932-9b69-83c0924e7130"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "feb02878-7cac-488d-a29d-dda770d2a4af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8db39438-0e7b-47b6-b2a5-8e96f00ba90d"
                    }
                  }
                ]
              },
              {
                "id": "59b02eb0-9eb3-4fbf-b134-aaf56cc29fed",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "59385db9-0175-44a4-bb45-4099a06ec6d7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9702e928-b1fd-4615-8075-30bb0b219888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a918519a-140c-4ea5-9b79-b57e217ebde8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007ac291-4972-4d22-8bbc-4da70f750d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3614202b-c743-447b-9e34-f1613bcb0569"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1585b739-931e-4bc2-9080-8d73d0e7714a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28ba8932-c8b7-470a-8023-0593f465394d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d78a71d-6ebd-4a71-8b85-0d5d77dedcdc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a6199cdd-c9e2-4113-a851-05fb5ed8aeb5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e00d4fe4-1842-498b-843d-f0b3f7a3555f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9be3392-7c88-48ab-b211-1bbdbe403eeb"
                    }
                  }
                ]
              },
              {
                "id": "7bcd2386-1e11-4bef-8cfe-0aec62118bbd",
                "name": "credentials_verify:id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfa32099-2e0d-4bf1-a726-bd9610ed045e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c9b1ff90-08b6-496a-8881-76e1910fd84c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "024ffb63-5516-4007-bfc4-8b6eca4faa45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1becf19-0cc0-47bc-8a9d-d6c4daa65b9c"
                    }
                  }
                ]
              },
              {
                "id": "6fd61cd5-bb0c-4908-9995-f9027c6f8bc2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64e3430b-5bff-4fbb-9b05-4ebe36c7cbb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6428b6dc-63c3-439d-95a9-936605356dba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14e4f038-37c4-476f-bfce-b05e5392633a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a1a462a-53bc-4b1a-ae82-95cb8052650c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d1fde3f-d873-4f94-ba1f-077011df7bf4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "432789bb-8a7f-4f18-9173-29f81efe8277"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed132751-b2a1-48c4-be60-de2a9cfbb8df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "34904d78-0b2b-4587-b051-54b5f8c079c0"
            }
          }
        ]
      },
      {
        "id": "e7b5bf64-e6bd-48d0-9555-449fcb767dcf",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7715049a-790e-428e-94d9-f1245c00ec9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86f31399-fef7-4ee5-b3e1-1414e416f89f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "296e6dbc-137b-44a3-8dbf-bc87c2ae8cf9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2157ca47-8219-467b-8bf8-ea3a5e3ea9a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "274678ec-045b-41d6-82d0-89b9b0857122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5272a4-b9a0-432d-aeb3-9340dddd75ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "efcad3cf-7d33-483a-a3e0-7594ec0099d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd354596-3d14-4e73-87c5-45c09b98c4f6",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d472745b-d97a-4fb5-85ae-ce6b8559e71c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c559a38b-84f3-4bf0-a27d-cf892f8d5cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08bce44-3b07-44ce-a7c2-c97967d14977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaaa3cb8-06dd-4a29-b9f2-ce5106187dd3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a30af39-4da4-4292-8ec7-315225391999",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a97cd0c-3ab3-4ace-8631-15217eab0189"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "009c0833-7fa4-4b8c-8869-28eab8480828",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "094d7d58-7c89-4668-87f8-3e6f22fd7619"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08b32b4c-4648-4ae8-91fc-676433e39e48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "db467a9f-73c8-4f32-88ef-814e9c46e41b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ff18c87-eb03-4bb5-9e99-2efbb193c580",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8253dfd-4c69-413c-a4e4-5977066c6773"
            }
          }
        ]
      },
      {
        "id": "55cfbfed-6f5c-4c26-9402-4003f554c2be",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4e04d240-4756-4b0b-88fc-fe6de54cf8d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bf1637e-2e4c-481b-a3e2-5953a37fee59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ae4ae9e-831e-41bb-b385-9e01473d09a3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc52317-82bd-458d-ada1-0310fa3623c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c461bf8c-1f24-4ad4-9743-159f858dcce8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7756f223-33e6-494d-811e-b2f77aa1d729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5962a1a3-9317-439e-bc89-1ef3e8876d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd85456-0856-4c7d-b9df-7e90a12eeb7a",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc4bc8d-7d31-403b-9af8-437af34b81f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "96f46e70-6a37-454c-8dac-f7d2b112ed62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c299b77e-8a58-415d-89c9-1c91fd1326af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a74d59c-e23b-4e9b-8013-8b34badc22bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ba1ca57-f6d0-4b95-8637-9f272f974437",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fabffe74-4811-4776-8862-f3bcd6d13ac9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59f0452f-f380-4739-8b65-ea9f2c5e0fb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6447eb0c-2ade-46fb-8d19-fd5fcb995341"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "746ec04d-dfb9-4dc0-b928-3fd0198972d2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2fe5df81-93d8-4382-9bca-336e6d3a4b91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d2254e1-58ea-4313-aa43-5473b5df06e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f481e603-9762-4e4a-96a0-9ae4327b2318"
            }
          }
        ]
      },
      {
        "id": "ee537cbc-a544-48ef-9cf3-6f7cfbf16390",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c8d102af-b710-4216-947b-56a1ac090ed2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "253b3865-e392-4637-9bd8-0fc159ec1b52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f5db886-e84b-45f0-9df6-6fc7148f5b1d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2bf042-df22-43e5-b4b7-51bc242ca236",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b742c372-86ca-4ae4-bc00-425480af60b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbaed250-43c2-4a67-97f6-068a19fe0e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb82330c-d119-4899-bd11-a84bfcff40d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6f427c-9bf4-45bd-898f-2b92d0377c01",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db738865-6bba-4fb4-80a4-485159ec09b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3422247c-6ebb-49a3-8534-c0b95af26153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f931284c-91a0-46ae-b16f-bbb3ee3b7858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c3b4b9e-5614-45cb-b8b3-a1d3e339783f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8f0f87c-157d-458f-82cf-52ee4f5a43d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a4f0ae3-5152-4c4a-b106-af76000e92c2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1b5f65e-f203-43dd-b1c3-f070cc414325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c109659-2f1e-4f22-aca3-5278f13dcc83"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d663773f-56b2-4306-971b-d104a7a2e12f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "980f6b29-08c9-4b42-9c50-e9ac98db6c2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f2411d0-9c6c-4609-ba91-1dff50f9d03e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87ae5b79-9053-4845-862b-1391790ebf44"
            }
          }
        ]
      },
      {
        "id": "7ba0c398-3f2b-45f1-bfb7-989db0c5cec3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4686f4dc-6b9a-487d-965b-c0af7bd11379",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea6f1557-5084-40f6-b253-a6cf44b426ae",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ba8de89a-698f-47d1-ac1e-789f11d7b0fc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e4d289b-4892-4df9-99b2-76841db87b5e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05b0b657-aac1-4978-87d3-7da9595787a2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1915,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 261,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 962,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 953,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 415.79693486590014,
      "responseMin": 18,
      "responseMax": 2587,
      "responseSd": 298.8802745827602,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1670373567033,
      "completed": 1670373688226
    },
    "executions": [
      {
        "id": "2ccc9d90-2b59-43ec-b305-d32fef5b5a4c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 252,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bc59b8c9-29cc-4325-8719-bb1446373e5a",
          "httpRequestId": "47b71578-fd74-444e-87c8-84fd233f85f9"
        },
        "item": {
          "id": "2ccc9d90-2b59-43ec-b305-d32fef5b5a4c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "838ec233-4c51-4dc7-9f09-120a09ca9195",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "e867f318-21f9-436a-8869-b03679e8524e",
        "cursor": {
          "ref": "02eda97e-d666-48c8-8997-02a3d029c09d",
          "length": 252,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "80b66186-7a47-4238-a8b8-66c0480ac145"
        },
        "item": {
          "id": "e867f318-21f9-436a-8869-b03679e8524e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ed60e581-9579-4afa-a8d0-c78e72353b69",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "ffc51211-fe6c-49a1-9d3c-c3dcb49cba4d",
        "cursor": {
          "ref": "e291afc6-9efa-444d-ad70-86002318d8e4",
          "length": 252,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2c85d040-d975-47e6-9fa9-bededd4b4dbb"
        },
        "item": {
          "id": "ffc51211-fe6c-49a1-9d3c-c3dcb49cba4d",
          "name": "did_json"
        },
        "response": {
          "id": "0b45932b-a22e-41c9-810a-47aeecd123fd",
          "status": "OK",
          "code": 200,
          "responseTime": 719,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de361f57-01c9-44d4-a48b-0deb7b735753",
        "cursor": {
          "ref": "e0ca20ce-5790-43de-a22a-ca5800e9dc82",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff0c115f-f8e6-4474-841c-bef3e6d448e4"
        },
        "item": {
          "id": "de361f57-01c9-44d4-a48b-0deb7b735753",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad977314-ee48-41d5-ba30-6445efe6b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de361f57-01c9-44d4-a48b-0deb7b735753",
        "cursor": {
          "ref": "e0ca20ce-5790-43de-a22a-ca5800e9dc82",
          "length": 252,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ff0c115f-f8e6-4474-841c-bef3e6d448e4"
        },
        "item": {
          "id": "de361f57-01c9-44d4-a48b-0deb7b735753",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad977314-ee48-41d5-ba30-6445efe6b869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db62891b-c4be-4ae4-9fec-b18fd918a305",
        "cursor": {
          "ref": "98e59bb4-91e8-4ac2-a30e-ee51f33b1da5",
          "length": 252,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8add5f08-be94-48c4-8342-cc130bd3cac6"
        },
        "item": {
          "id": "db62891b-c4be-4ae4-9fec-b18fd918a305",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c2094e91-5a2a-43c9-a7b8-d278ab3f807e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 656,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452045fc-e6aa-4f73-ab9d-907ced2514cb",
        "cursor": {
          "ref": "fa4a2969-a4f4-4e04-a22f-c554b9678c90",
          "length": 252,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "135b6ad5-5b2f-4546-a170-f7006dd5f1f8"
        },
        "item": {
          "id": "452045fc-e6aa-4f73-ab9d-907ced2514cb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b1dd83ee-37fb-484d-b407-177f9410f8de",
          "status": "Not Found",
          "code": 404,
          "responseTime": 434,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cee4bae-7a63-48ba-a199-68798f27845e",
        "cursor": {
          "ref": "a6d8c6bc-32a1-4597-9cf9-4c560da9b48f",
          "length": 252,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fb1f5fc5-9954-425c-8f05-a471d51b6098"
        },
        "item": {
          "id": "4cee4bae-7a63-48ba-a199-68798f27845e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "356ffeb1-3861-40c1-9030-7b36040d8abe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7769a71-6432-48bf-86ec-0eec9d0854a9",
        "cursor": {
          "ref": "7b3d891b-6ed8-494d-9af7-2936778e2dfe",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "02f3c779-dcd2-47e8-bd02-af2206588a4c"
        },
        "item": {
          "id": "e7769a71-6432-48bf-86ec-0eec9d0854a9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "08715ba2-99d5-43d4-97ae-b33fb8afece1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7769a71-6432-48bf-86ec-0eec9d0854a9",
        "cursor": {
          "ref": "7b3d891b-6ed8-494d-9af7-2936778e2dfe",
          "length": 252,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "02f3c779-dcd2-47e8-bd02-af2206588a4c"
        },
        "item": {
          "id": "e7769a71-6432-48bf-86ec-0eec9d0854a9",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "08715ba2-99d5-43d4-97ae-b33fb8afece1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 596,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcc19e9-78ae-4836-bb62-01253429fd64",
        "cursor": {
          "ref": "dbdd7ca0-6ac8-4143-9b64-4cf75e6de156",
          "length": 252,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b001931e-5e2e-4aca-b5a8-ccee67e013c7"
        },
        "item": {
          "id": "6bcc19e9-78ae-4836-bb62-01253429fd64",
          "name": "identifiers"
        },
        "response": {
          "id": "8963ed80-4951-44f2-84fd-039f493d50ec",
          "status": "OK",
          "code": 200,
          "responseTime": 814,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c8a6ea-7177-4b24-b51e-78413a87c315",
        "cursor": {
          "ref": "00f51059-a43d-460f-99a4-2f2de0e47aa5",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1445f4b8-8a3b-4d5b-a218-d39ac2e49b63"
        },
        "item": {
          "id": "65c8a6ea-7177-4b24-b51e-78413a87c315",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1af49360-2fcd-4c08-81a1-362a008464bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c8a6ea-7177-4b24-b51e-78413a87c315",
        "cursor": {
          "ref": "00f51059-a43d-460f-99a4-2f2de0e47aa5",
          "length": 252,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1445f4b8-8a3b-4d5b-a218-d39ac2e49b63"
        },
        "item": {
          "id": "65c8a6ea-7177-4b24-b51e-78413a87c315",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1af49360-2fcd-4c08-81a1-362a008464bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00a9a47-a1b1-43f1-8b6b-97c3089217aa",
        "cursor": {
          "ref": "e978a21c-294b-4d74-a892-35c17e9b5daf",
          "length": 252,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e976edcf-abf1-4cf4-990a-287328c437c7"
        },
        "item": {
          "id": "e00a9a47-a1b1-43f1-8b6b-97c3089217aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ba4e43a2-0979-47e0-a953-b563abfcad63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529c4a73-8dd8-4a3b-84e9-915d36546023",
        "cursor": {
          "ref": "b879b83c-778d-4ba8-b901-de549ad879cd",
          "length": 252,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eb6021dd-30a6-448f-8e44-faf4484fe221"
        },
        "item": {
          "id": "529c4a73-8dd8-4a3b-84e9-915d36546023",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "99595fab-ea9e-4535-85bc-a403c256735c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ad5ce9-9283-4584-b0b0-969408378907",
        "cursor": {
          "ref": "796216fd-b3c3-4c8f-b79e-e498c95afd10",
          "length": 252,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ae6a16e1-1905-43fb-b933-2c8b3b9d9f26"
        },
        "item": {
          "id": "e3ad5ce9-9283-4584-b0b0-969408378907",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a89b34e6-e925-488f-849c-626b13416644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ec9c69-de4a-412e-910a-336d52ee172f",
        "cursor": {
          "ref": "3739e385-0188-4204-af0c-a740d83c0504",
          "length": 252,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aeb39888-ac61-4c9c-a307-e3010b40380c"
        },
        "item": {
          "id": "38ec9c69-de4a-412e-910a-336d52ee172f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e7daf8a4-0d07-4982-952a-3925e756ee64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 678
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3289d11f-745d-43b5-9c87-b08b2c2065c8",
        "cursor": {
          "ref": "e9783ac4-7575-4d55-9916-c0643c3ec5fb",
          "length": 252,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b89ee0fd-2e18-4de6-8061-f10f16d7cc8e"
        },
        "item": {
          "id": "3289d11f-745d-43b5-9c87-b08b2c2065c8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9696d436-fad5-469a-af19-ffbb78e29d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b927b1-35a2-46a3-83a0-71717eaffc21",
        "cursor": {
          "ref": "ee2f92f7-cf50-47a2-9803-11193cbf169a",
          "length": 252,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cac41585-88f6-4e2f-b97c-ce6cc5847bb6"
        },
        "item": {
          "id": "c1b927b1-35a2-46a3-83a0-71717eaffc21",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b4b37411-e214-4536-a58f-567b6d98d712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e736c9-8148-4142-be74-f13d7d8fdb4c",
        "cursor": {
          "ref": "53c7c500-66b6-402d-b431-2158fe4074e4",
          "length": 252,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "16d3bbde-0a34-484e-a30d-9fd3584c5590"
        },
        "item": {
          "id": "42e736c9-8148-4142-be74-f13d7d8fdb4c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "21155092-9dc4-4355-b832-2ad7a98e8931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a9884f-ca48-4ba3-ab61-81d221e0edef",
        "cursor": {
          "ref": "00b5a390-7b1c-445b-974b-289c0b958652",
          "length": 252,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "46308a3f-d16b-47a3-94b3-effb52d4c4ec"
        },
        "item": {
          "id": "33a9884f-ca48-4ba3-ab61-81d221e0edef",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4b64135b-fcbd-4232-859b-10154797e139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 950
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff52ff3-2878-4483-87e7-a6f5badefda2",
        "cursor": {
          "ref": "8e786af2-bbe8-4f28-9de8-da732227c96c",
          "length": 252,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae0c17cc-835d-43a9-8a0a-6ecf1af9f243"
        },
        "item": {
          "id": "eff52ff3-2878-4483-87e7-a6f5badefda2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0ef45593-a335-479b-8264-f20b3e2a0eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 947
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbed150-dc66-4496-9dfb-ec76b7ff1a9a",
        "cursor": {
          "ref": "e2869637-350c-4745-b2d3-517819e9a41c",
          "length": 252,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9676d0f1-44a0-440e-b8a6-85413545153c"
        },
        "item": {
          "id": "3cbed150-dc66-4496-9dfb-ec76b7ff1a9a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b6e7962b-d764-4bbc-b3df-22db6a3301ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f1f100-e7bc-4136-a8ea-86239ed3f4a3",
        "cursor": {
          "ref": "835b9420-115d-4a01-9d9d-deaa7361909d",
          "length": 252,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a88901dc-28e2-4163-9f74-d6993a8cee7e"
        },
        "item": {
          "id": "f6f1f100-e7bc-4136-a8ea-86239ed3f4a3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c4ca6af4-0bd1-4987-a9b0-dbd15f35c1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bc491f-9d92-4e8e-a891-ebe9eb1961c1",
        "cursor": {
          "ref": "07cc75b8-ecff-4fd2-bbcc-f0ce867cac5b",
          "length": 252,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "768c4d6f-9e79-420b-91e6-a0641766fb3e"
        },
        "item": {
          "id": "84bc491f-9d92-4e8e-a891-ebe9eb1961c1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f6e98592-442d-41a7-9dbc-f074dfcb0cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 581
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afab308-6d86-4fdc-b7e0-964765cc4ef8",
        "cursor": {
          "ref": "6a79bcd9-904c-43ac-aa07-0511650ccea7",
          "length": 252,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d38f7030-95ea-467e-82bf-15efba384bf9"
        },
        "item": {
          "id": "9afab308-6d86-4fdc-b7e0-964765cc4ef8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b9ceb525-7ad9-45d3-a836-6d0bdf56cb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4678b3ef-7ab1-4516-a9c7-03ee38682d16",
        "cursor": {
          "ref": "4e9f59b1-b21b-4c29-acf3-a3bc4671ff58",
          "length": 252,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f498a38b-9a2f-4e8b-929d-4bae7fd2ebcf"
        },
        "item": {
          "id": "4678b3ef-7ab1-4516-a9c7-03ee38682d16",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0e575a95-f7ce-4f21-be7e-c44faf6b26c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9909d77a-eab8-4848-a6a9-e5560339199a",
        "cursor": {
          "ref": "dc689f77-53c8-49d1-ba98-289f7536040a",
          "length": 252,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9c93ba82-acd3-46c6-8918-687e49d04ef4"
        },
        "item": {
          "id": "9909d77a-eab8-4848-a6a9-e5560339199a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "99927952-2206-4010-9af3-9f43fa8f6b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf56706-e2d9-4e4e-a458-8510f3d075d2",
        "cursor": {
          "ref": "e6056041-d703-4a4d-94f5-281d6fd96838",
          "length": 252,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "97134c22-19e9-4e62-8667-193f02bc5944"
        },
        "item": {
          "id": "2cf56706-e2d9-4e4e-a458-8510f3d075d2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "fe8163cc-bf53-4cb4-b77d-21aeaea9c9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 520,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4ad94a-e3b3-45dc-8fba-033ce0e9bb53",
        "cursor": {
          "ref": "736ea4d2-a1d8-4c67-8225-434f91bc1a10",
          "length": 252,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "76c54d7e-7d6a-4cea-8995-402bc2d8d68c"
        },
        "item": {
          "id": "ac4ad94a-e3b3-45dc-8fba-033ce0e9bb53",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "52ece04e-2c6b-442a-b56d-0c204c5e7ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5953e0-3b47-47e4-a745-29c0c35f4ef7",
        "cursor": {
          "ref": "0c7839e9-5a6b-41bf-8cbd-99a5b451b254",
          "length": 252,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8cbff8f2-2ef0-4f07-aab6-43cc94480abb"
        },
        "item": {
          "id": "de5953e0-3b47-47e4-a745-29c0c35f4ef7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1ac3f1c0-bb57-464b-a9eb-5141ed1e3787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 509
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073becf0-d63e-489a-bbab-18334cacb208",
        "cursor": {
          "ref": "a978b90b-ffe5-4241-9dcf-523c7fb6774a",
          "length": 252,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2492e6c4-fbce-4641-b92b-012035ff7c71"
        },
        "item": {
          "id": "073becf0-d63e-489a-bbab-18334cacb208",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f1c83041-e2b5-41c7-bd20-4e8f3d892960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1938169b-9709-4549-8b2b-ec5390e15021",
        "cursor": {
          "ref": "0a623819-16ad-4e27-ab76-b3f678ac646b",
          "length": 252,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0100c5e5-fe38-47e4-a080-35233ecb8ebd"
        },
        "item": {
          "id": "1938169b-9709-4549-8b2b-ec5390e15021",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4b021fdc-a5dd-4ddb-aff6-fc3c5880dad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b319d349-5f7e-432e-9d66-e767029ea729",
        "cursor": {
          "ref": "49f2f958-02a6-4e8f-8483-ec959b58c311",
          "length": 252,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7071ed9-1459-4dc6-8896-007d1071fb26"
        },
        "item": {
          "id": "b319d349-5f7e-432e-9d66-e767029ea729",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7dfa20a3-444d-4d0c-a77e-b0eaebc66227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbacebc1-ea66-44ad-b573-96fa603458c3",
        "cursor": {
          "ref": "b7eae9d9-4617-4928-9eab-7e10f309ecf8",
          "length": 252,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d404ef00-6022-412e-a4ad-21ee16ee7d29"
        },
        "item": {
          "id": "cbacebc1-ea66-44ad-b573-96fa603458c3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5a329fa5-f981-4483-8885-3d61ee35b545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b123a38d-401b-440f-a2b3-ddaef20da8c1",
        "cursor": {
          "ref": "84f88867-0c0a-414c-a245-5cd25e25e3c7",
          "length": 252,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "95e5e46d-c127-45fe-9815-42a027b1b978"
        },
        "item": {
          "id": "b123a38d-401b-440f-a2b3-ddaef20da8c1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "774b82cc-cdb8-43d8-aeb0-8068279250fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 472,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2790008a-775e-47ba-9039-4c4b1b2898d5",
        "cursor": {
          "ref": "1c1e16c2-80e5-4c5e-b51d-f3cf70a267d2",
          "length": 252,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2b8127d7-e935-4056-9d8b-9c9703b09f2f"
        },
        "item": {
          "id": "2790008a-775e-47ba-9039-4c4b1b2898d5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5e749118-2303-4c8c-9a5c-de49f8e2f167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca10064-dbc9-48a2-b6db-f766851ef7b1",
        "cursor": {
          "ref": "8399a87e-3a75-4e7c-a5ad-cc0f0646d263",
          "length": 252,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "05fcba1e-3cb1-4640-be19-1d350fa6ef8c"
        },
        "item": {
          "id": "bca10064-dbc9-48a2-b6db-f766851ef7b1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fc39cbfe-9623-4e3e-930f-1bf6bb061293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab4cef7-764c-4ec7-b130-a39aa392d175",
        "cursor": {
          "ref": "3e0b6dea-ff32-49b4-bafe-3edd8b422281",
          "length": 252,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1f049de8-0d0e-42ed-87fc-22095611d88d"
        },
        "item": {
          "id": "1ab4cef7-764c-4ec7-b130-a39aa392d175",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "588ba563-3e5c-4fa5-b3c1-9a76eba57a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1e8d03-00b2-4ccb-9206-02f2a8f9d8de",
        "cursor": {
          "ref": "89439971-4d43-4b15-bd03-44eb182c8a0f",
          "length": 252,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "98151d63-5812-4f2c-9964-a5f2c43c3dda"
        },
        "item": {
          "id": "2c1e8d03-00b2-4ccb-9206-02f2a8f9d8de",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3cc03537-7148-4bad-a016-312642054172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb4957b-09b6-4e08-b8c7-f45014bb21ff",
        "cursor": {
          "ref": "0bd3d358-cc83-4daf-af7f-d7a601f802b5",
          "length": 252,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a689ae7f-aa4e-4e3b-a5c8-59d4eddb2825"
        },
        "item": {
          "id": "9bb4957b-09b6-4e08-b8c7-f45014bb21ff",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b0a3945b-c301-4632-b199-b6b79a7b5413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5dee0b-1501-4399-a03e-fb7a0b1ab3b8",
        "cursor": {
          "ref": "292a2519-6a4f-4735-8cf9-fae126896c39",
          "length": 252,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5006d8e3-58b9-4b3e-a87f-35f9c1befe30"
        },
        "item": {
          "id": "3d5dee0b-1501-4399-a03e-fb7a0b1ab3b8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "24132ae8-d26a-4ed8-bd08-4cfb95fe7985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 466
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2420bd07-723c-4300-a4ba-b01c9bba9d57",
        "cursor": {
          "ref": "da3030a2-cfef-4cc0-8bd7-631b9c48b888",
          "length": 252,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d4491bec-b6b8-489b-9611-7e472269ba53"
        },
        "item": {
          "id": "2420bd07-723c-4300-a4ba-b01c9bba9d57",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6e7bb176-9bdc-4aa8-aeb9-8b31d9f7dde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc47ed6c-4dc4-4313-a6ca-a122a621330d",
        "cursor": {
          "ref": "e7f2fd5b-e8af-4a32-a3ac-c535119b53d4",
          "length": 252,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c8cebc40-290c-4293-859e-c744d507c84f"
        },
        "item": {
          "id": "cc47ed6c-4dc4-4313-a6ca-a122a621330d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a7aebb90-b108-4965-a48f-cfad3fd0c713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8716a7a-36d8-444e-bc71-b964a2fa25ec",
        "cursor": {
          "ref": "572599d4-bcc6-4b43-bd66-c1d9a961b96a",
          "length": 252,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d1c044cd-f66a-4457-8d39-c6efc440aba9"
        },
        "item": {
          "id": "e8716a7a-36d8-444e-bc71-b964a2fa25ec",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5ff7d1e8-cb4a-4ab0-b6e2-1557faf153e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 892
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef06761-4f75-48be-8fbe-214ea949c26a",
        "cursor": {
          "ref": "e8433dc1-dcbd-48a9-bd96-f0c3fb6e4594",
          "length": 252,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "393c710a-6306-4d05-b215-bd8942bb1d44"
        },
        "item": {
          "id": "7ef06761-4f75-48be-8fbe-214ea949c26a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e5285c42-2643-4d95-a1b5-e38c706eaa44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e3d68-5fed-4283-9a7c-93cbb78de48b",
        "cursor": {
          "ref": "fb800030-5c33-4bc3-99fb-406306c2b27c",
          "length": 252,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "62b8154d-14c7-4335-a32f-5b698bdffc69"
        },
        "item": {
          "id": "e50e3d68-5fed-4283-9a7c-93cbb78de48b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a8ca6734-806c-43b6-ae70-ff0dd59d98c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f5d3a4-0537-4972-b7f5-79678f2f2ae2",
        "cursor": {
          "ref": "80751120-ae05-4ad1-ae2a-e787cc3f0dcd",
          "length": 252,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f0ed7682-f541-4dd3-8e65-a278baf97030"
        },
        "item": {
          "id": "14f5d3a4-0537-4972-b7f5-79678f2f2ae2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "caf63a55-df48-464c-923d-8356f5c3b21a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 515,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3745a29b-a274-4432-a3ac-0c73619b013e",
        "cursor": {
          "ref": "7297620a-4f43-47f9-be6b-298f0681df21",
          "length": 252,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "14036c58-c6fc-4a46-879b-2b581ddd9159"
        },
        "item": {
          "id": "3745a29b-a274-4432-a3ac-0c73619b013e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9294779b-0123-4e66-a5b6-b7982394eaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff64158-0cae-4843-9204-760c8ab70356",
        "cursor": {
          "ref": "7ce225f7-5567-4f55-993b-4c1083e1fef6",
          "length": 252,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3ea0ae0b-e70e-4558-a951-04522f70a3e1"
        },
        "item": {
          "id": "bff64158-0cae-4843-9204-760c8ab70356",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2f95c642-1498-4003-a231-aa2efa55cabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 458,
          "responseSize": 1305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea54b69-417f-44ae-bb0b-2f522ecfd658",
        "cursor": {
          "ref": "90da49d9-04ee-4e65-82b3-b52e3e4ca2d4",
          "length": 252,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "73faa769-1090-414d-9df8-5468a4f189d1"
        },
        "item": {
          "id": "7ea54b69-417f-44ae-bb0b-2f522ecfd658",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "01074b0c-d6e5-4979-b96c-8c740ddc641e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7e1ff4-2a3b-497f-a01f-bac25fbb4188",
        "cursor": {
          "ref": "3ed2438a-7616-429c-8904-9e9bd85165f1",
          "length": 252,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "13872c5e-5709-4af6-911a-8c1732625c99"
        },
        "item": {
          "id": "9c7e1ff4-2a3b-497f-a01f-bac25fbb4188",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6d80f7aa-9631-46df-8a68-2860a2279a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83a5e86-a47d-4ddc-a9b6-c7300cf5a9e8",
        "cursor": {
          "ref": "5dffd299-80fc-43db-8fcd-5b866dca2b51",
          "length": 252,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "633f97b2-458a-476d-a26f-ad50192294e6"
        },
        "item": {
          "id": "c83a5e86-a47d-4ddc-a9b6-c7300cf5a9e8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4ca874f1-682a-4542-bb8c-c579f1701924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e79a5efa-ac6b-40f7-b703-e469c4dc6b4b",
        "cursor": {
          "ref": "c383e096-8a89-48e6-ab60-32789cb9e36b",
          "length": 252,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e62dc880-525d-48c4-96b3-db5cd1822724"
        },
        "item": {
          "id": "e79a5efa-ac6b-40f7-b703-e469c4dc6b4b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "adda85b5-5279-44ba-ac20-f6dfc6bc66f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e631c6-8f7a-4c83-af02-431e00e2c1d1",
        "cursor": {
          "ref": "3bf52f4e-ff76-48dc-973f-613918d998fe",
          "length": 252,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5cb3033d-b89c-4b3d-ba25-2f6eb79d5d5a"
        },
        "item": {
          "id": "00e631c6-8f7a-4c83-af02-431e00e2c1d1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aef0498d-ce11-46cb-b64a-9908aa00431d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 498,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbb684d-f620-4d3f-8c85-a68be7b24101",
        "cursor": {
          "ref": "1febd476-d329-427d-b5cd-a6d58f17805e",
          "length": 252,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "910469e4-be4e-4338-833c-e40bdb5b70a8"
        },
        "item": {
          "id": "9bbb684d-f620-4d3f-8c85-a68be7b24101",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "df3534fb-eeb9-4597-895e-b0c610dc334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 524
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59b66e8-2eea-4e7b-8630-950c179e77b2",
        "cursor": {
          "ref": "0288cfba-7aba-4508-b08e-a087ca6d78ac",
          "length": 252,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "424ee40b-de5a-46c9-b1e0-bbac4eb6e49d"
        },
        "item": {
          "id": "e59b66e8-2eea-4e7b-8630-950c179e77b2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "592bb54a-9346-4fbd-86df-219895c5f12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 548
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "578a86c6-48be-4248-98e2-a0d81bb25980",
        "cursor": {
          "ref": "226511a5-ee48-49cf-9a74-1a4af7dd0904",
          "length": 252,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "56e9b0a4-5ebb-47f9-8be1-7fc8077e98fc"
        },
        "item": {
          "id": "578a86c6-48be-4248-98e2-a0d81bb25980",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a63077f3-79bb-49ca-80aa-b5a2234a49f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af95f198-ad60-4d6a-a77c-4000ca1fc5e1",
        "cursor": {
          "ref": "7f8df839-1c39-43df-9fe3-66807840dfd5",
          "length": 252,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36208bc1-6f67-4a13-b7fb-f99ffdb7e504"
        },
        "item": {
          "id": "af95f198-ad60-4d6a-a77c-4000ca1fc5e1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1ff45f1c-3fd4-4889-8c35-01483aff5d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf735128-df78-4788-b0ef-ef08cfda3189",
        "cursor": {
          "ref": "4f683c6d-2d96-40e5-b995-ef68f4e02064",
          "length": 252,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d3dc010b-d677-4c24-afd5-add2c43d7913"
        },
        "item": {
          "id": "bf735128-df78-4788-b0ef-ef08cfda3189",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e0415667-be28-4601-8a47-8981d083153b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 471,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2228c649-1561-4a85-a915-6c9ccb7651a9",
        "cursor": {
          "ref": "f9d2a961-63d9-441b-86b8-6c8c9da8d935",
          "length": 252,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "6dbeea43-a8bf-436a-84e9-8d4662b8e487"
        },
        "item": {
          "id": "2228c649-1561-4a85-a915-6c9ccb7651a9",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "39730f9e-4cb2-445a-be99-f2b39e31de73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9f2df2-7c8a-47f2-8726-f0582cc79205",
        "cursor": {
          "ref": "0c2dfb63-915e-4b99-bea2-c3d7816c7399",
          "length": 252,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "7acdba5b-6ce9-4e61-88cc-f1e245849950"
        },
        "item": {
          "id": "ef9f2df2-7c8a-47f2-8726-f0582cc79205",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c625e40a-a454-4aa7-b56d-47a7aea051b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef68d74c-4754-4de9-b62f-006e95f43dbb",
        "cursor": {
          "ref": "f86f8729-ea50-41c9-b81d-bb17bc352641",
          "length": 252,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dc58152e-4386-488c-b751-c86bfc724d49"
        },
        "item": {
          "id": "ef68d74c-4754-4de9-b62f-006e95f43dbb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e1d4846d-65f7-4780-81e5-c265836d2ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bb1465-f44a-421b-9d63-bbabd54edbe2",
        "cursor": {
          "ref": "f32ef363-0e84-4a45-865f-2960e3485b47",
          "length": 252,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c31119a2-d0e6-4678-93ec-945b655006ba"
        },
        "item": {
          "id": "e6bb1465-f44a-421b-9d63-bbabd54edbe2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d0e62788-f057-4036-8498-4e6a5ee0b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ecf8fb-af5d-4fc5-8209-32c30050e5f9",
        "cursor": {
          "ref": "f0c9cfaa-a148-494d-9553-1cccbc114996",
          "length": 252,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1840ca73-189e-48e0-966d-94ee55450a23"
        },
        "item": {
          "id": "99ecf8fb-af5d-4fc5-8209-32c30050e5f9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "33afcdd8-f963-4bcf-beca-a79422a20deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8518434a-86a7-46d8-b29f-e5fdfb786fe5",
        "cursor": {
          "ref": "66b10b06-f992-45b8-b72d-bcb5bea51e53",
          "length": 252,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "94d8f29c-09e6-44e6-9b04-56f000e56275"
        },
        "item": {
          "id": "8518434a-86a7-46d8-b29f-e5fdfb786fe5",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d3b5a628-9a9a-4c8b-a258-63fc1ff60068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 826
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ea3c3d-b543-49c0-8446-ea8659b1d203",
        "cursor": {
          "ref": "0afaceb6-fe79-447a-b406-a3a76739ed9b",
          "length": 252,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "59ea4ada-6201-4a62-b973-f13090b7a259"
        },
        "item": {
          "id": "63ea3c3d-b543-49c0-8446-ea8659b1d203",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8f6b4b70-1739-493e-8318-29abcba47d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 828
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04aeaea-2e79-4c1a-a552-03be709181dd",
        "cursor": {
          "ref": "8d48efef-6c53-415f-8a8c-3bd7604b72f8",
          "length": 252,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2ed92f84-a2f7-4d67-aba4-890041d34b73"
        },
        "item": {
          "id": "a04aeaea-2e79-4c1a-a552-03be709181dd",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c01e8032-969e-470b-bdbd-eae2f3a316b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 841
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86af8c4-2b0c-4f97-b243-b81f541539dc",
        "cursor": {
          "ref": "17d488a3-c986-4c17-a1ec-bdb795ec904e",
          "length": 252,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4aad29d3-786e-47b1-816e-b06c184a29e6"
        },
        "item": {
          "id": "d86af8c4-2b0c-4f97-b243-b81f541539dc",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2eab2e2c-17e9-4ae6-95be-429e6da28904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 462,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f809ac2a-e0c5-4522-ab1b-97c8b4b70939",
        "cursor": {
          "ref": "ff1471dc-b2b8-4556-8f37-386daa61b902",
          "length": 252,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8f2ef2d3-2ab3-427e-9db7-c5e09143dd7a"
        },
        "item": {
          "id": "f809ac2a-e0c5-4522-ab1b-97c8b4b70939",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "094c3ceb-465a-49c8-bb53-25ed4fbf7d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123c0649-56dd-439b-a9ce-f579719db022",
        "cursor": {
          "ref": "3ace55d3-21a3-41e1-be43-815cea86cb28",
          "length": 252,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "68b27386-dcb4-4e28-9945-c2e72e009191"
        },
        "item": {
          "id": "123c0649-56dd-439b-a9ce-f579719db022",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "38e95809-fa97-4f9d-be79-2326c274a687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 493,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe1adeb-cebb-4514-85c9-e5762a82ebd5",
        "cursor": {
          "ref": "dff5c8b5-b718-4f60-b853-48a4e15e1c86",
          "length": 252,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7bfdea98-c841-4152-b141-37a904d95f05"
        },
        "item": {
          "id": "cbe1adeb-cebb-4514-85c9-e5762a82ebd5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bacea0b7-56c4-4244-a656-bfd6b3135dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 1320
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba388b8f-dab8-432c-ab9d-7d62c32f4b34",
        "cursor": {
          "ref": "c67d8858-5f6e-41ae-b356-66b239d30e8b",
          "length": 252,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "50b81865-31f6-437a-942e-c954d1469262"
        },
        "item": {
          "id": "ba388b8f-dab8-432c-ab9d-7d62c32f4b34",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "61b1f102-f83e-4fc3-867c-26f4ac37b840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af643b5-fbae-46b5-82ae-d55025859dd5",
        "cursor": {
          "ref": "90932472-18c9-438d-9b9a-f8853f456bf5",
          "length": 252,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6cd5f3af-3957-4e89-9196-1b9182aac6ed"
        },
        "item": {
          "id": "0af643b5-fbae-46b5-82ae-d55025859dd5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0e8ec466-e232-40ad-83d0-86df8f12cb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9cfe19-e43c-47dd-9f44-96c16a472eb5",
        "cursor": {
          "ref": "f673d6d9-1c7c-4a54-b207-80d7e62a166c",
          "length": 252,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "77aefc29-131e-43ab-9350-0d04ab4b8312"
        },
        "item": {
          "id": "bf9cfe19-e43c-47dd-9f44-96c16a472eb5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a3525435-4aa9-4c8d-93bb-5f9b3dba4ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 640,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ed924c-fbe5-48c9-a3c3-0091c4461460",
        "cursor": {
          "ref": "9c5f07a1-178f-49ac-8adc-0de3ffa44d71",
          "length": 252,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ea05140b-41da-4fe8-93df-a487eef53a3d"
        },
        "item": {
          "id": "68ed924c-fbe5-48c9-a3c3-0091c4461460",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "35cb99b7-59d2-420e-953d-55a23e5e4ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bdfcb6b-8b89-4016-827f-f6950d384120",
        "cursor": {
          "ref": "b0bc428e-a67f-4e0c-bc18-95a8e3742173",
          "length": 252,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3755651d-0304-4ead-ab07-579984de8438"
        },
        "item": {
          "id": "2bdfcb6b-8b89-4016-827f-f6950d384120",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1dcbda45-ead3-46d7-b331-143b5f799675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1088,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28239082-6112-487a-a8a8-3270604cf39f",
        "cursor": {
          "ref": "4b9bb13c-071d-4ff4-a652-20cef9c4d7fc",
          "length": 252,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6549df50-4941-464e-8302-16c6d6240b7c"
        },
        "item": {
          "id": "28239082-6112-487a-a8a8-3270604cf39f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5368fdc8-179f-4fad-8bc1-33508d6e2ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 665,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b9fa61-16ee-4c7d-8c00-634f181bdd6d",
        "cursor": {
          "ref": "40774722-8a4d-4fc3-9d9b-599377296262",
          "length": 252,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "da3a7e2e-3b89-4781-9ed8-69fef2387930"
        },
        "item": {
          "id": "15b9fa61-16ee-4c7d-8c00-634f181bdd6d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "345ddcf2-5bbd-462f-bcf7-3d3eaf4a46b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd13f12-c3b0-4969-9e94-249dd18026e4",
        "cursor": {
          "ref": "b73f8f22-284a-4251-929a-6110687777c7",
          "length": 252,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6d29ba03-b417-434d-84a3-4f101cc6d3c3"
        },
        "item": {
          "id": "7dd13f12-c3b0-4969-9e94-249dd18026e4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "87dedd66-e795-4592-8e68-8ba4d4752f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6245c8-a444-4d03-8eed-637f906a027c",
        "cursor": {
          "ref": "50a63340-3fd7-4675-ba8a-159e5c0edf66",
          "length": 252,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "acf7a3b6-1f2d-462e-aa10-0b075b76553e"
        },
        "item": {
          "id": "bc6245c8-a444-4d03-8eed-637f906a027c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "95944a01-0fbd-46b2-8218-9406c8f86306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe9845-d7ea-410a-b9c2-ef5721d66be1",
        "cursor": {
          "ref": "f5bc354a-2857-4fdd-a24c-d6927c61c210",
          "length": 252,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "24a4f2f9-cc53-4d1c-b7a8-ae08e2678aaa"
        },
        "item": {
          "id": "fdfe9845-d7ea-410a-b9c2-ef5721d66be1",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9a6208f6-6647-48e5-81f5-747430174ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5f4935-63f6-449f-bea9-d20cdb3847d3",
        "cursor": {
          "ref": "2ae73768-34ce-4a4f-af81-2e937c7cb659",
          "length": 252,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "01971223-6210-4830-ac8b-ab1b45205e50"
        },
        "item": {
          "id": "1b5f4935-63f6-449f-bea9-d20cdb3847d3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dae75822-23f2-403d-8ec7-2f4b19143ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35409fe5-14c3-4bae-bc88-8b5416b963da",
        "cursor": {
          "ref": "856f9c56-6b96-432d-a5c4-5aeb1a136d75",
          "length": 252,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "802d854a-f2eb-4581-989f-98fbf1fbbcfc"
        },
        "item": {
          "id": "35409fe5-14c3-4bae-bc88-8b5416b963da",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bd03dbae-a8ae-47ab-9f35-e108c293c853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 448,
          "responseSize": 736
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5084091-ccbf-4c69-85b4-b3548392bc05",
        "cursor": {
          "ref": "2d1a0e46-f2de-43a7-8161-b9945224f27a",
          "length": 252,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9cf37069-cc9d-48cc-99d1-ef5f5894aa27"
        },
        "item": {
          "id": "a5084091-ccbf-4c69-85b4-b3548392bc05",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ba692960-2b72-4651-935d-1d7f69122b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 734
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be1b90a-00d4-4494-b3b0-7d0252c83b25",
        "cursor": {
          "ref": "4d712c58-2473-483e-93a0-65807f66caea",
          "length": 252,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "16003405-11db-4a61-8c72-a645a9ab60ba"
        },
        "item": {
          "id": "7be1b90a-00d4-4494-b3b0-7d0252c83b25",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3019022c-d1c5-4568-b215-1430d2f4cf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a859136-0924-46cd-afb6-311637372721",
        "cursor": {
          "ref": "f3881b7a-cb04-4253-b228-4913d24ffac4",
          "length": 252,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3a298e65-b031-4bca-80c5-d87276275523"
        },
        "item": {
          "id": "7a859136-0924-46cd-afb6-311637372721",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "395fd9cf-84ca-4ef2-8c27-294e353bf3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1308c529-ed54-451c-97f3-855e8759f718",
        "cursor": {
          "ref": "4c706420-4fa0-47d9-8b72-135daa228d4b",
          "length": 252,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "010a43a4-7abe-437b-a00b-17b9a50bc420"
        },
        "item": {
          "id": "1308c529-ed54-451c-97f3-855e8759f718",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "92f9a2fb-3737-4231-afba-da06a1518f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 437,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86d1f8e-8b17-4999-be05-a055aa02bcd3",
        "cursor": {
          "ref": "f3da0bef-8a06-4eee-958f-c908b2de13d5",
          "length": 252,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3f3162f1-b52f-451b-b8b9-572341b2c28e"
        },
        "item": {
          "id": "c86d1f8e-8b17-4999-be05-a055aa02bcd3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d725462d-4acf-4e16-a686-56cea625cfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47cbc076-93dc-4067-8b61-03ed7e41c8a8",
        "cursor": {
          "ref": "f016dda0-39bd-4bbf-aad1-a3f78a291e55",
          "length": 252,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e1ab4821-7609-441d-8886-2cb8ba5b7ee3"
        },
        "item": {
          "id": "47cbc076-93dc-4067-8b61-03ed7e41c8a8",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "25c19043-728c-4b74-bde2-4372e8f3d7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 438,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65d3be6-0049-4d9a-8ebc-9da37efb5107",
        "cursor": {
          "ref": "0d8e73e0-2f73-4444-8cb2-f0c1558c1fad",
          "length": 252,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "50671406-c1da-49b0-aa3e-58028e61423c"
        },
        "item": {
          "id": "f65d3be6-0049-4d9a-8ebc-9da37efb5107",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5439b31b-c6e4-4085-88b7-852725fdcaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d88367-a5f1-424c-ba81-643fb4ac26b1",
        "cursor": {
          "ref": "0ee7e953-00e0-4a54-846e-e494d00b23e8",
          "length": 252,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e5c8c73-4703-431a-b2fd-b247a1afd678"
        },
        "item": {
          "id": "49d88367-a5f1-424c-ba81-643fb4ac26b1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b17fad63-24fa-4798-b44d-3d76ca22282f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bc3355-c88e-4a57-a73d-73b46f05e140",
        "cursor": {
          "ref": "7c8eeaf6-93ce-42db-9bb3-cc54c3d5173d",
          "length": 252,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "72000a47-e781-42ba-be60-aabb8cf8cc78"
        },
        "item": {
          "id": "82bc3355-c88e-4a57-a73d-73b46f05e140",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2bf0f8dc-a9c0-4e35-a0eb-5caa637b244e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 433,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b7ecad-29ef-43df-a834-6ad54f0f7fb3",
        "cursor": {
          "ref": "65788561-647a-46de-9db7-abf0af9447ae",
          "length": 252,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d47a2401-bfbe-4440-8f02-6102f2b11597"
        },
        "item": {
          "id": "02b7ecad-29ef-43df-a834-6ad54f0f7fb3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f3a05910-a309-494d-84b1-b9addbcc006c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16861af7-cab4-438c-9327-fa68dce23962",
        "cursor": {
          "ref": "52aa799c-44be-40a2-8eac-191606dfe7c2",
          "length": 252,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "da6872c9-5ba8-4bd8-9c06-35449041ca19"
        },
        "item": {
          "id": "16861af7-cab4-438c-9327-fa68dce23962",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "691d9d94-34f9-4c97-93b5-55a309548518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 573
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ed4996-b03a-4726-9a09-912f8f650dd0",
        "cursor": {
          "ref": "585a3c67-b0ff-4937-86f9-55ed31c9b6dd",
          "length": 252,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fa7f29b0-6edb-4fb4-a399-8eb44c188239"
        },
        "item": {
          "id": "c1ed4996-b03a-4726-9a09-912f8f650dd0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cc0ea13a-1602-4ce3-97b6-e699bdc75a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 439,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23073167-963e-4921-abc6-57a1f33fd03c",
        "cursor": {
          "ref": "414b6705-b789-4a3c-89ce-237045f1ad11",
          "length": 252,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "371e3fdd-c223-49c0-8e24-6dad066f6a36"
        },
        "item": {
          "id": "23073167-963e-4921-abc6-57a1f33fd03c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9d3c037a-e151-4154-ab52-22f4468dbd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6b15b-6cce-4dea-b629-f4067fee7136",
        "cursor": {
          "ref": "af3451ba-aabc-4940-838f-c3ab44428cd0",
          "length": 252,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "126b15da-33bd-4cbb-866b-b54e128862be"
        },
        "item": {
          "id": "02b6b15b-6cce-4dea-b629-f4067fee7136",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "43a808db-4f78-4706-a4ff-7781a4d981d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7a2aba-2e00-48ec-8753-0ff43eafeb0d",
        "cursor": {
          "ref": "f1d4021a-481a-4c95-abd8-5889a61246d8",
          "length": 252,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d074b545-f423-4bd6-aabc-14cd3c53d140"
        },
        "item": {
          "id": "cc7a2aba-2e00-48ec-8753-0ff43eafeb0d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5b654e9c-0421-4d70-8c16-6264dce206e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 873
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e93fb91-caf5-4f4d-85a5-3fb42cc08541",
        "cursor": {
          "ref": "3ca1dc88-ce45-4fb5-8a21-eec8e3528a3b",
          "length": 252,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cbd023d3-64ef-4365-9c21-8f5f3e9cd0f2"
        },
        "item": {
          "id": "4e93fb91-caf5-4f4d-85a5-3fb42cc08541",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c41aebf0-2fec-4545-8cf3-c2bc7f171a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 480,
          "responseSize": 850
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cd7099-c497-45df-a46c-82c472129e71",
        "cursor": {
          "ref": "3ac055c5-a015-446c-88ef-5b488fffd0f0",
          "length": 252,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c6813a77-73d7-4927-a9ba-9ab940718074"
        },
        "item": {
          "id": "c6cd7099-c497-45df-a46c-82c472129e71",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4d2a6268-6015-46c3-b957-bbe1548b0608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4090ad1b-bccd-4be1-af28-b80ab3108fbc",
        "cursor": {
          "ref": "7a48ebde-346b-429a-a7a0-d6467649f563",
          "length": 252,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "750ad375-eaa6-4fb0-9785-fe6a8ee3bb89"
        },
        "item": {
          "id": "4090ad1b-bccd-4be1-af28-b80ab3108fbc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "369c37fd-7918-4a20-8448-692cb15aa79c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 849
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a286d90-5c50-49f7-9bb7-57963c5943dc",
        "cursor": {
          "ref": "bb0a6383-c54a-47ba-9475-7eb4c6a05eb5",
          "length": 252,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d2aee4c0-5c86-46c4-872a-d177e6ef6cbd"
        },
        "item": {
          "id": "4a286d90-5c50-49f7-9bb7-57963c5943dc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a22c7b4b-780c-4405-b8dd-f4c416655297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 483,
          "responseSize": 847
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef23e57-75f9-4af1-887a-5e03aec1d847",
        "cursor": {
          "ref": "09af0d07-73eb-400e-b79b-5c031900199d",
          "length": 252,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "7a9677d5-5614-4828-bcac-66da145445f6"
        },
        "item": {
          "id": "2ef23e57-75f9-4af1-887a-5e03aec1d847",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dd45acb6-510c-43ff-9cd4-70ce6469ff16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1559fe8-611d-46f9-bedc-26aa7f19dd60",
        "cursor": {
          "ref": "90461fbf-4727-46d2-b27e-22a376e16a67",
          "length": 252,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a3328ccb-d104-45ad-a405-2a5ca07c29ee"
        },
        "item": {
          "id": "b1559fe8-611d-46f9-bedc-26aa7f19dd60",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e7b3b801-d435-4de0-bff4-d185d2c1fb73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe2e22a-3456-4532-a0ae-bc59af76b09d",
        "cursor": {
          "ref": "50135b18-ceec-4925-81dc-985769b7e8a2",
          "length": 252,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "5307caff-9dca-4651-8614-2434cbd50edd"
        },
        "item": {
          "id": "afe2e22a-3456-4532-a0ae-bc59af76b09d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f26f9e77-40f7-48aa-927e-7aa80ff9838c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 437,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c109ed-c057-4661-be7f-02226802b5a8",
        "cursor": {
          "ref": "8f4ba8ac-ca76-4f75-85a6-45098fe5a542",
          "length": 252,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4993355f-b09a-45c4-a4e7-c99663ff3bb3"
        },
        "item": {
          "id": "f1c109ed-c057-4661-be7f-02226802b5a8",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4709fc4a-42b3-4a21-b0d8-0a73edfb03b1",
          "status": "Created",
          "code": 201,
          "responseTime": 2033,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:104)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:104)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:104)"
            }
          }
        ]
      },
      {
        "id": "f66b497b-23ca-4166-9d75-591279be25bf",
        "cursor": {
          "ref": "3db8ed46-0159-4435-abf6-151a8117730b",
          "length": 252,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "eafb531b-3b2b-4df2-9f7b-151f588a1242"
        },
        "item": {
          "id": "f66b497b-23ca-4166-9d75-591279be25bf",
          "name": "credentials_issue:credential:opt.id"
        },
        "response": {
          "id": "2ae1e644-e4af-4308-88d5-9e4b6ead6709",
          "status": "Created",
          "code": 201,
          "responseTime": 1886,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          }
        ]
      },
      {
        "id": "f0d2e069-1975-49de-b95e-a466774a669f",
        "cursor": {
          "ref": "2d5bda09-06b7-47f1-80eb-72c025cdbc48",
          "length": 252,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "82de2b6b-4320-4eca-81b3-18f7fe8aae21"
        },
        "item": {
          "id": "f0d2e069-1975-49de-b95e-a466774a669f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ef968843-97a6-4dce-a8af-3eb9c27dc17d",
          "status": "Created",
          "code": 201,
          "responseTime": 1918,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "f1aa40e9-e561-4622-a67f-6d349f811777",
        "cursor": {
          "ref": "486b942d-8943-43c1-8628-d21309323e23",
          "length": 252,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c16d2bf5-c9d2-4624-b4ef-0b57ba002cf1"
        },
        "item": {
          "id": "f1aa40e9-e561-4622-a67f-6d349f811777",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c030da1e-158b-4349-a436-c7fdc7656953",
          "status": "Created",
          "code": 201,
          "responseTime": 1919,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "08255bc5-fb05-49fc-9967-5a139fc4c149",
        "cursor": {
          "ref": "a4fb22ed-eb87-471b-a318-8186573a7450",
          "length": 252,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6c6cbbc9-5621-4569-a417-97a77dfd1964"
        },
        "item": {
          "id": "08255bc5-fb05-49fc-9967-5a139fc4c149",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4bdfa49f-9602-4351-aa4f-da85f2baa5da",
          "status": "Created",
          "code": 201,
          "responseTime": 2034,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:108)"
            }
          }
        ]
      },
      {
        "id": "dd2e3af4-2d7e-42a9-bd19-ec7f62cca3f2",
        "cursor": {
          "ref": "df812a99-adf7-475e-beb7-fce026375084",
          "length": 252,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "595a35af-b2c2-43f5-ba57-05ec412774e0"
        },
        "item": {
          "id": "dd2e3af4-2d7e-42a9-bd19-ec7f62cca3f2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "49856d69-5462-43f2-921f-0d8e826067c3",
          "status": "Created",
          "code": 201,
          "responseTime": 2587,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          }
        ]
      },
      {
        "id": "76a65b36-5611-4864-9d05-30805ec5cc8d",
        "cursor": {
          "ref": "fc191293-7499-40cf-9ef2-273321591429",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eb0a08e5-afe2-4834-b56d-6781495d62db"
        },
        "item": {
          "id": "76a65b36-5611-4864-9d05-30805ec5cc8d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b5b54daa-b493-40c8-989c-8f458339ae98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a65b36-5611-4864-9d05-30805ec5cc8d",
        "cursor": {
          "ref": "fc191293-7499-40cf-9ef2-273321591429",
          "length": 252,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eb0a08e5-afe2-4834-b56d-6781495d62db"
        },
        "item": {
          "id": "76a65b36-5611-4864-9d05-30805ec5cc8d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b5b54daa-b493-40c8-989c-8f458339ae98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b99de04-73b6-4d8a-82b9-dd43d4fef6a8",
        "cursor": {
          "ref": "511bcd9c-47bf-4317-b13f-4cd540d4e13e",
          "length": 252,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ffc56651-a80c-48b2-8554-c24cad1e1d13"
        },
        "item": {
          "id": "4b99de04-73b6-4d8a-82b9-dd43d4fef6a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d54d330c-9daf-4edf-b560-d470a7b6e018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 432,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a18d29d-48fb-44e0-a57a-b7f7d8220f51",
        "cursor": {
          "ref": "116e8a31-a2c3-4fea-ab22-2e5ad86b3ab1",
          "length": 252,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "74e10f23-028a-44fa-82da-c4c8d0dc145a"
        },
        "item": {
          "id": "8a18d29d-48fb-44e0-a57a-b7f7d8220f51",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "961fdc73-6a2c-4779-b7f7-d8c865b9a28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 442,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95c4ba3-a87b-4161-82a2-22cdd9a16741",
        "cursor": {
          "ref": "1ed7395f-d0b4-4fb7-b94d-335718330571",
          "length": 252,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "302cc732-efb0-4256-8152-5143d1243708"
        },
        "item": {
          "id": "d95c4ba3-a87b-4161-82a2-22cdd9a16741",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a3e6b18b-4de1-45b4-8f4b-cd053a2876c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab56a6c-af22-44d4-946e-817cea5f33b0",
        "cursor": {
          "ref": "bc53ad6f-9f4b-4590-b720-4f94740f9ca7",
          "length": 252,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ce21f6eb-89ab-4838-8b85-bed0aab60b20"
        },
        "item": {
          "id": "1ab56a6c-af22-44d4-946e-817cea5f33b0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "58c05ae9-578d-4ad0-8707-3f95198e8960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6420e09f-340f-42ce-bb03-12fab82245ae",
        "cursor": {
          "ref": "169b9af0-8af2-4973-a1f6-a58b7a49dfaa",
          "length": 252,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "67e90066-308f-4e28-872c-dcb3916a9380"
        },
        "item": {
          "id": "6420e09f-340f-42ce-bb03-12fab82245ae",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "21af0744-d229-446a-8e64-e7b2474f21f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b943f679-113e-46b7-9f76-131725fefc62",
        "cursor": {
          "ref": "a11b4294-9fae-4106-a3d1-a850051ee8b6",
          "length": 252,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d4baaa36-2c48-4adb-8234-870ed61b6b31"
        },
        "item": {
          "id": "b943f679-113e-46b7-9f76-131725fefc62",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea19bb24-37b7-47f2-8bc9-5632b22b14d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29471a25-a7e3-4afa-bea5-b3c5174ae980",
        "cursor": {
          "ref": "3f91c5f6-f2ca-4ff5-a57a-5d46bc9f1a21",
          "length": 252,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9dc65e1a-8890-48fd-b9a5-a2b91f80aa59"
        },
        "item": {
          "id": "29471a25-a7e3-4afa-bea5-b3c5174ae980",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2669ab72-9d44-4c20-b943-36081f2772e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753aa145-c795-412d-bd28-490eaf298988",
        "cursor": {
          "ref": "22e810dc-1b87-4081-9a5b-cfcfa5a84f2a",
          "length": 252,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "efbb585f-2055-4132-8a11-3aa604544796"
        },
        "item": {
          "id": "753aa145-c795-412d-bd28-490eaf298988",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "79197d88-d29b-4077-bc42-30af0008eacd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 477,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f537516-d412-448f-acab-9a13622c98e7",
        "cursor": {
          "ref": "829c8144-d69e-4b63-b71e-107985480bbe",
          "length": 252,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3c67cc3a-c694-4d47-aa3e-38be9f7fa177"
        },
        "item": {
          "id": "2f537516-d412-448f-acab-9a13622c98e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e22e57ab-2ce0-43e6-8d3b-55603190db8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b89118-a4f0-4105-ae7a-e4d5a44b14f2",
        "cursor": {
          "ref": "34356cfa-dcfd-49eb-a062-77c50c380217",
          "length": 252,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "95bb10ce-bbc2-42ab-a173-c7974b250c1f"
        },
        "item": {
          "id": "13b89118-a4f0-4105-ae7a-e4d5a44b14f2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8c4ab446-a145-49b0-84bb-a7b55f7e389c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd4a1e1-74db-45ec-9764-f173b121a8fd",
        "cursor": {
          "ref": "258b8eea-ee22-4c68-bd6c-a9db6185c1fd",
          "length": 252,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6337fd01-d809-4944-a57e-db1e3485ebad"
        },
        "item": {
          "id": "bbd4a1e1-74db-45ec-9764-f173b121a8fd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83934ca8-2018-4835-9bcc-5afc17e06751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803ee710-e28d-4899-9906-5a70326c800f",
        "cursor": {
          "ref": "0afc34e8-2bcd-4546-abaf-640086cb6be6",
          "length": 252,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9eaaf8c5-4ae9-4c1b-9534-43f9c1140125"
        },
        "item": {
          "id": "803ee710-e28d-4899-9906-5a70326c800f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5e37066d-0357-441d-b38d-57aa185c6cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a27ca6a4-ffe7-46f3-8ad1-ca4704f0fc76",
        "cursor": {
          "ref": "fc6a0800-bed9-4eed-8c29-cfdf115376d2",
          "length": 252,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e50d4def-d576-48ea-bdf7-99e69cade5a1"
        },
        "item": {
          "id": "a27ca6a4-ffe7-46f3-8ad1-ca4704f0fc76",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df250e4c-2cce-43dc-b8ad-3294e9e8c7c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595dd83c-ecd1-4a6e-9158-4d4e436e36dd",
        "cursor": {
          "ref": "4f32d34f-0047-4148-bf7b-b0e654e9052d",
          "length": 252,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fce20a34-224f-4c64-8dc8-f560f1d78306"
        },
        "item": {
          "id": "595dd83c-ecd1-4a6e-9158-4d4e436e36dd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2ed7ffd6-d39d-4ef0-b353-915f2689aebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 419,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9ba20d-a755-4b51-8e75-babe5322ce89",
        "cursor": {
          "ref": "f6a5a344-2388-4875-97ef-5979e07fc07f",
          "length": 252,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "96b4f7d1-11b4-4382-b949-2445e2a3951d"
        },
        "item": {
          "id": "9b9ba20d-a755-4b51-8e75-babe5322ce89",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2116d412-fde7-40f1-9578-58260a4d54e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e4135e-623e-4243-ba55-fdf516d9899b",
        "cursor": {
          "ref": "ba5b4b62-45e7-4044-82b2-838976047fd6",
          "length": 252,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3e4a6d67-1eff-47e8-947f-9b3d39a804ba"
        },
        "item": {
          "id": "56e4135e-623e-4243-ba55-fdf516d9899b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "799b5c96-92f4-479c-9623-051c077cec45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 447,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d2ca8e-8a38-4057-bfe4-d1e2cacdb57e",
        "cursor": {
          "ref": "bc72f199-5032-40b5-9d1e-603c53f6cd34",
          "length": 252,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0ceb0289-d043-40c8-bafe-1d5a608a7ae9"
        },
        "item": {
          "id": "a7d2ca8e-8a38-4057-bfe4-d1e2cacdb57e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "abce0064-5bc7-4ab5-8dce-5be2d49da36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb98298-43ad-4b9e-95a7-420bd73045da",
        "cursor": {
          "ref": "d8bbe4cb-b586-4498-b51b-324eb0ee922c",
          "length": 252,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2eaf9ea9-4477-4aa4-83ce-1baa5b99b57c"
        },
        "item": {
          "id": "edb98298-43ad-4b9e-95a7-420bd73045da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "429039b8-c70f-4e7d-adcf-01d7dee2efcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2bee5e-c4ad-4017-8a57-d5cca5c0f4a4",
        "cursor": {
          "ref": "15e4e04a-1e3c-4130-bbf7-9f7cc05f5a6a",
          "length": 252,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "02f9b0f9-10d8-43be-8f21-9499a9a17f2b"
        },
        "item": {
          "id": "5d2bee5e-c4ad-4017-8a57-d5cca5c0f4a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d4c0b685-d8a3-42f8-b17f-b73825bb4484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85f1321-d06a-4c74-9b63-597b2956df88",
        "cursor": {
          "ref": "73884cee-94aa-4683-bde2-b24d39dbd986",
          "length": 252,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b79b9bd8-9aca-480c-bf82-1d200d1e2ce0"
        },
        "item": {
          "id": "b85f1321-d06a-4c74-9b63-597b2956df88",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e1ec20f5-1750-4b7d-8f4f-2225d4ddc750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd89395-c2d9-43b4-8b80-3f377fef0a49",
        "cursor": {
          "ref": "9f2b5055-0693-49b2-b83a-a1a33a161038",
          "length": 252,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "11ae4a95-09ff-4ab1-8e15-13454ecf014d"
        },
        "item": {
          "id": "edd89395-c2d9-43b4-8b80-3f377fef0a49",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "38f790cd-6e6a-4169-b215-00756469797a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8b97f5-9c92-4966-9ec6-d87f6393df98",
        "cursor": {
          "ref": "c49bdb24-072b-4314-b6f6-91a78bd090d4",
          "length": 252,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d66cab13-ac1b-452a-a170-ffab91b2af04"
        },
        "item": {
          "id": "dc8b97f5-9c92-4966-9ec6-d87f6393df98",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "64a4a53e-5bc9-448d-b723-a9466bebeb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 450,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2433e9ee-81e9-4fb2-9cff-e9c7db8594fb",
        "cursor": {
          "ref": "af7f2c76-9010-4680-8420-cab629249764",
          "length": 252,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "95fa4f49-0c62-4450-8c41-46e2a7a9f742"
        },
        "item": {
          "id": "2433e9ee-81e9-4fb2-9cff-e9c7db8594fb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "45fb1bfe-1728-4ea9-9095-6c81b8c0325a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 436,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded45d7c-3a84-4e2c-9cb9-9bd1ea267180",
        "cursor": {
          "ref": "371e0bfd-f761-433b-9987-701328d78964",
          "length": 252,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "16802b38-0acb-4e28-8e6a-7fa6a614a189"
        },
        "item": {
          "id": "ded45d7c-3a84-4e2c-9cb9-9bd1ea267180",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5ff8a26e-aefb-4a8e-8399-b2dbe04bcc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b076f9ec-945c-4b47-8999-2e420e9db2f8",
        "cursor": {
          "ref": "ab6bfe9d-3cd1-412b-8cae-921b3a095ea1",
          "length": 252,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "61c3ffea-fca0-4a92-afb3-d0cab34e7838"
        },
        "item": {
          "id": "b076f9ec-945c-4b47-8999-2e420e9db2f8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "58e34199-f82e-43aa-b794-34954399865f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 451,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb1cac8-36a6-45ea-acde-e3bed128e62a",
        "cursor": {
          "ref": "52112bb2-cc2f-4d32-82fc-ae6f03ebc4e5",
          "length": 252,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ad9d17ce-9694-48a5-91d1-7a560e62f552"
        },
        "item": {
          "id": "3eb1cac8-36a6-45ea-acde-e3bed128e62a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "daab5c68-52a7-4a1e-86cf-89a49d0a6e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 469,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40daf800-5383-460c-8f43-c12cc28a53c6",
        "cursor": {
          "ref": "f90b7e54-c152-4d43-b3be-baccf0b4019c",
          "length": 252,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0b054b59-5187-4b42-8021-5c68ef966726"
        },
        "item": {
          "id": "40daf800-5383-460c-8f43-c12cc28a53c6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f4cb43be-a8af-4087-ab33-7c0b06989200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422850ea-934e-4fc0-a0ce-13fa4a5bd70a",
        "cursor": {
          "ref": "e85c5636-6bae-4bfb-b6f4-5d08d07545d2",
          "length": 252,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7aa7594a-e381-48db-95d7-a04ed9ae9357"
        },
        "item": {
          "id": "422850ea-934e-4fc0-a0ce-13fa4a5bd70a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fc0fdbec-5f93-4889-a879-211d98231b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 482,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c008c974-0e71-4e95-9e70-5532b045236c",
        "cursor": {
          "ref": "091f087f-46cf-4591-9e60-84fe89516373",
          "length": 252,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4a01f4d9-6b23-4956-9c93-90f3a250c52d"
        },
        "item": {
          "id": "c008c974-0e71-4e95-9e70-5532b045236c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8a159883-67c1-4fd4-9f37-bb2f1fb32329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f150cf29-8cad-45af-adee-e255c48e13d1",
        "cursor": {
          "ref": "54540d41-422d-47fb-97e7-11672d88243c",
          "length": 252,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "52422fa9-e6ec-4884-8b75-b57b21c719e7"
        },
        "item": {
          "id": "f150cf29-8cad-45af-adee-e255c48e13d1",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e2b9139d-1cc6-418b-82fd-733d3c534d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44185cef-9f3a-4260-aad8-c8531cb4db8f",
        "cursor": {
          "ref": "7c930829-c6fe-477c-88a9-e52f58099a31",
          "length": 252,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0c7e3162-b3f4-477d-ae31-eecb2d78e5d1"
        },
        "item": {
          "id": "44185cef-9f3a-4260-aad8-c8531cb4db8f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6a4776ff-cff3-4c37-9846-8a6850c3edcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1dca61-10a3-4a11-8fd7-8c4b5f96c340",
        "cursor": {
          "ref": "8f17c6ec-f15e-41e4-9897-e29e4b6cfaa1",
          "length": 252,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c0a9995e-d397-46ba-a094-d77ddf3d228b"
        },
        "item": {
          "id": "7c1dca61-10a3-4a11-8fd7-8c4b5f96c340",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3827e4e8-787f-42ab-a821-0ad1fe0cbc7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a0fc21-849c-4a16-a017-2e93a04204df",
        "cursor": {
          "ref": "6779b497-b359-4b23-8d48-a362815fb842",
          "length": 252,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "be488dca-85c3-4f0c-be76-5289ca89f625"
        },
        "item": {
          "id": "e4a0fc21-849c-4a16-a017-2e93a04204df",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "841ac578-7cea-4e30-905c-ce536ab1cba4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 489,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a16b46-8739-4aa8-a93f-7cad5dc348ca",
        "cursor": {
          "ref": "5c690cb9-1c5c-40d9-aafc-2b52407d6caa",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "474b454f-22b5-4ec8-9591-6bf64c20216a"
        },
        "item": {
          "id": "33a16b46-8739-4aa8-a93f-7cad5dc348ca",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a3932536-5823-4d7b-9850-704ccf19aa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a16b46-8739-4aa8-a93f-7cad5dc348ca",
        "cursor": {
          "ref": "5c690cb9-1c5c-40d9-aafc-2b52407d6caa",
          "length": 252,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "474b454f-22b5-4ec8-9591-6bf64c20216a"
        },
        "item": {
          "id": "33a16b46-8739-4aa8-a93f-7cad5dc348ca",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a3932536-5823-4d7b-9850-704ccf19aa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31df52cf-f9d3-407c-821e-2e642a9bc829",
        "cursor": {
          "ref": "94cf5387-d8b5-431f-848a-81b6e81ca555",
          "length": 252,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "704705d9-9b70-42b4-8066-ed2d708d9fba"
        },
        "item": {
          "id": "31df52cf-f9d3-407c-821e-2e642a9bc829",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "87cf52b6-94b5-4989-95bd-7b892afee782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c2de6f-73e6-4273-9ae0-71dbcae08e29",
        "cursor": {
          "ref": "f9cc91e9-c9c2-4cc6-b7b7-18d7b917be27",
          "length": 252,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0b676ca1-79b9-497a-bdee-dbdad5c1f6b3"
        },
        "item": {
          "id": "99c2de6f-73e6-4273-9ae0-71dbcae08e29",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f5862fe3-fcaf-48dc-8c3a-1253bc484261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443ca586-0f26-4853-965b-cb359bda64e5",
        "cursor": {
          "ref": "ebc76a3a-f4aa-4570-9b69-17b05fd45340",
          "length": 252,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3b38cdc0-397b-4df5-9ebe-38f7e8daf4d8"
        },
        "item": {
          "id": "443ca586-0f26-4853-965b-cb359bda64e5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "46643a01-24e9-4ccf-b6a9-bd7e9859fc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a01f6ce-a3ec-4cee-9722-a02c46187faf",
        "cursor": {
          "ref": "dc60ddfc-0bf3-4ad5-ba28-17f680a56c53",
          "length": 252,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "58c66669-819c-4610-bf25-10bfc2359732"
        },
        "item": {
          "id": "9a01f6ce-a3ec-4cee-9722-a02c46187faf",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "54a643fb-04da-40f5-b4a1-c107ddea1487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a725905-4624-4246-974e-98085cf57f52",
        "cursor": {
          "ref": "6cbe0559-2177-4900-964f-fd3e0c9b0577",
          "length": 252,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4586989a-8bd3-4a12-a518-463fed4b2e9d"
        },
        "item": {
          "id": "0a725905-4624-4246-974e-98085cf57f52",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e1891f6d-7a2e-4fd8-9b08-36953c6188b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ebf4af-ce5f-4cef-ac68-e0e05374b690",
        "cursor": {
          "ref": "9fae01a9-13c6-4e02-89e6-486b5119cf2e",
          "length": 252,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "405f30da-e1d9-4e86-af04-42495f8a46ec"
        },
        "item": {
          "id": "40ebf4af-ce5f-4cef-ac68-e0e05374b690",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "92d7ea70-dd2d-47b5-8158-b2d1e4ba1467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 220,
          "responseSize": 1213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f59ecb-626f-4f16-872f-37bc5dd2a4b9",
        "cursor": {
          "ref": "63834c8c-1a73-47c4-b627-6296debbee40",
          "length": 252,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6e3179bf-67bd-4bc7-bb53-0a53f15472c1"
        },
        "item": {
          "id": "06f59ecb-626f-4f16-872f-37bc5dd2a4b9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4667bd9d-7d1f-4123-b5f6-e299a7cbd0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d44ec84-6281-49d7-b900-4a9e8beb4b7d",
        "cursor": {
          "ref": "54f07599-4aff-4400-b576-c67da871fd9e",
          "length": 252,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "527d090d-bd3f-4131-9934-e2c927a5e897"
        },
        "item": {
          "id": "7d44ec84-6281-49d7-b900-4a9e8beb4b7d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e4de4fb1-61ea-46aa-98e0-7b81ea803592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1551
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734e134e-4644-418d-b74f-c961519f6ed4",
        "cursor": {
          "ref": "4742bf04-62da-41d9-af5d-01d1814e7591",
          "length": 252,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f476308c-4776-43f5-ae6b-c3bdfe2406fc"
        },
        "item": {
          "id": "734e134e-4644-418d-b74f-c961519f6ed4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "acf6ec05-b2c2-44c9-9324-4cab6554e0bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa34a211-7e6c-458f-87df-2171b09bf6c5",
        "cursor": {
          "ref": "21bb073f-8b2a-4345-8983-aa756a5f3bae",
          "length": 252,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9e8719e9-33a0-43a0-8c96-e822dbe5cf52"
        },
        "item": {
          "id": "fa34a211-7e6c-458f-87df-2171b09bf6c5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6fa7f7ae-d046-47c3-b2f0-312e913d6998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1450
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa66af24-663d-42a5-b97a-5dd1d267d3f3",
        "cursor": {
          "ref": "507cf675-01f0-4246-a94a-f0961efc6925",
          "length": 252,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "09fe1783-1cdc-4998-84dd-868c6b947a19"
        },
        "item": {
          "id": "fa66af24-663d-42a5-b97a-5dd1d267d3f3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "55b9746b-2f2a-4aff-8e71-ad221f1d0626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48f3257-7f39-4eff-9dc2-228536e9dd71",
        "cursor": {
          "ref": "e904aae3-db97-4da0-8e79-ea7c69ddb02f",
          "length": 252,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4b9ba3df-cb9e-4d0e-bb73-4b63688e2f67"
        },
        "item": {
          "id": "f48f3257-7f39-4eff-9dc2-228536e9dd71",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0055e518-7233-4379-b73f-d062fa091262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1843
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228cf096-5c7b-40cb-b5c7-cbb8e6e4891e",
        "cursor": {
          "ref": "84d630f1-d1e7-4cb9-9263-17091651f6bd",
          "length": 252,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e16e46d1-66fd-4b06-a1e1-09aed724f9b5"
        },
        "item": {
          "id": "228cf096-5c7b-40cb-b5c7-cbb8e6e4891e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "23b56626-1649-428c-9fab-4ef686bb3435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383e566a-68db-4ab6-a104-3f3a62aceb85",
        "cursor": {
          "ref": "b4ea5d37-8e76-4060-9478-64e0f9cd8f8c",
          "length": 252,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c827c21b-f8e9-4c1b-bf0c-6172dc6cf4db"
        },
        "item": {
          "id": "383e566a-68db-4ab6-a104-3f3a62aceb85",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "da41db7c-5421-4ce4-bdb4-9b14cf401a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 1832
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8e1014-2ee1-427d-ad1c-ef8f447f2932",
        "cursor": {
          "ref": "f81f3850-1ff4-4088-b443-049209c30835",
          "length": 252,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9e0f3026-b33d-45f7-8ccc-1e46fb85cc6a"
        },
        "item": {
          "id": "4b8e1014-2ee1-427d-ad1c-ef8f447f2932",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "69f5faeb-bd9d-41a6-800c-5d4e58f5363d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 1833
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cef7c21-a4ef-46ab-9677-1faf509d5664",
        "cursor": {
          "ref": "48d47bc9-24d0-402d-b296-977640860f12",
          "length": 252,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a0d2b28d-1eb3-4858-8833-bc046a4205ab"
        },
        "item": {
          "id": "2cef7c21-a4ef-46ab-9677-1faf509d5664",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7fad1992-0c11-493f-950a-90ebf9b3c074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2682e6b-3292-443c-8cfc-6fba678ef564",
        "cursor": {
          "ref": "dc729c0e-1292-4f30-9563-2af427f4a1a0",
          "length": 252,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1d373adc-665a-4c57-b9a1-67cd2b48b18a"
        },
        "item": {
          "id": "a2682e6b-3292-443c-8cfc-6fba678ef564",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "17a4cb0e-2573-4125-b275-546bdc5f5bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec43036-ae08-484e-98af-bd594aa32c28",
        "cursor": {
          "ref": "ee5fdf65-bf49-4b80-b0da-dd8a3af75fc6",
          "length": 252,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "16ff94a2-d5b4-4f79-94bb-b02cf3a2ac92"
        },
        "item": {
          "id": "8ec43036-ae08-484e-98af-bd594aa32c28",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ee18a57d-3941-43a7-9390-79f1d3ba6741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1250
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd6ab98-53b6-4260-bcc1-5be28e293892",
        "cursor": {
          "ref": "0a1a15d0-0d02-4909-afe2-794cbb6dd869",
          "length": 252,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fd948f94-eb0a-42e1-9d70-665d8ab1f657"
        },
        "item": {
          "id": "acd6ab98-53b6-4260-bcc1-5be28e293892",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b8569cb0-8ecf-46b9-9abf-b86c135fa3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faa37c3-a32e-4506-a2bb-80ae64a77625",
        "cursor": {
          "ref": "98271dab-1add-4cee-b8cf-c16f8590b81b",
          "length": 252,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e3e76863-51b7-408c-b81a-df657ac37956"
        },
        "item": {
          "id": "7faa37c3-a32e-4506-a2bb-80ae64a77625",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "84d0a206-f8fa-4b14-8951-6b40574b48bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1249
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebd88b9-5619-41e7-a4a6-7624b2e82b7e",
        "cursor": {
          "ref": "0490a16f-599a-4c49-8ef0-5ab66c52aca3",
          "length": 252,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "fd63dbf4-8a89-49c1-95c7-5e68bb8209f8"
        },
        "item": {
          "id": "eebd88b9-5619-41e7-a4a6-7624b2e82b7e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5100cd6b-dbdc-4d9c-be12-7b59b71b1520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb9f29b-f1bd-41eb-a727-24755bcbf7a0",
        "cursor": {
          "ref": "6aa75ec9-bcd3-4618-bc85-a6b93e08bba8",
          "length": 252,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "77d6f791-7c1a-4aea-ab0e-86b6bea8f34d"
        },
        "item": {
          "id": "bfb9f29b-f1bd-41eb-a727-24755bcbf7a0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e2bf069d-fe6a-480f-a5e1-830efe629060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 1227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a971a128-ca31-403b-a88d-db00d18e6fde",
        "cursor": {
          "ref": "e1058ee6-9bd8-4fca-a77c-4b25cb5db76a",
          "length": 252,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f8dba62b-fddc-4230-bf0a-e07b2273a3d3"
        },
        "item": {
          "id": "a971a128-ca31-403b-a88d-db00d18e6fde",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1758aa46-bf3c-4ec8-9189-bebb0e20acef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac18b9f-83d0-4244-ace3-9d3f8a41c7b7",
        "cursor": {
          "ref": "99561771-433b-4aa4-a9e7-39c40eae47a4",
          "length": 252,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "310f6d2b-49fe-41d0-ab02-3fa049b05c95"
        },
        "item": {
          "id": "4ac18b9f-83d0-4244-ace3-9d3f8a41c7b7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4987e22f-7755-46c6-83f6-53257bc0b336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa95812f-5490-426b-a6a1-9a2b712370c4",
        "cursor": {
          "ref": "7151f3c8-c50d-43e7-8ef2-3697468cd06f",
          "length": 252,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4d1ee82a-e58b-46e7-b440-6645edaf8079"
        },
        "item": {
          "id": "aa95812f-5490-426b-a6a1-9a2b712370c4",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "35808b03-093d-44a6-a4ac-9c0b4b5f8f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e87cc4b-056c-48f6-9190-4f3ed8d13738",
        "cursor": {
          "ref": "c11ea611-d1ad-4021-b391-bc66bf65681f",
          "length": 252,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "58eb5e0a-5166-437f-af87-e10ccd4fe08d"
        },
        "item": {
          "id": "6e87cc4b-056c-48f6-9190-4f3ed8d13738",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "17243d34-4cce-435b-80ac-ff21018c5f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41271825-15fb-4b59-a3cb-62555ebc8dd0",
        "cursor": {
          "ref": "5533c477-f6f2-460c-b5a3-269b5daa5e33",
          "length": 252,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c3817f94-bea4-4d95-853b-8750fb86ae48"
        },
        "item": {
          "id": "41271825-15fb-4b59-a3cb-62555ebc8dd0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cadd2e2f-f9ab-4e41-aea2-d5c9738e8efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1239
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf53414-9e9a-45fb-8250-45b5382c1eca",
        "cursor": {
          "ref": "ef16b037-65d8-48dd-9bac-fb78dd333ea2",
          "length": 252,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "82269e91-bf03-4f02-87fd-62c5723c3719"
        },
        "item": {
          "id": "3bf53414-9e9a-45fb-8250-45b5382c1eca",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e1bd9517-cfcc-4c36-9e19-3ddb27338005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e40ccc-e268-477a-96d7-b4d2a3148726",
        "cursor": {
          "ref": "8d35dcc9-357b-4c46-8ed7-9396eb5fe5cb",
          "length": 252,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ea1f91f9-bca5-428a-b6a2-387758c073d7"
        },
        "item": {
          "id": "89e40ccc-e268-477a-96d7-b4d2a3148726",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e4418279-12a2-4d1a-9355-ed960ad175b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87514f8-ecea-425c-ab50-fdbd8ff98a45",
        "cursor": {
          "ref": "51c6fc23-dcb9-46ce-a787-9c7857acb15f",
          "length": 252,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a9b0f6f3-0ed9-4f8d-9927-95def90eb16e"
        },
        "item": {
          "id": "d87514f8-ecea-425c-ab50-fdbd8ff98a45",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1d9726f6-c400-4864-b3af-8d303105ffa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742d2772-71a6-4059-98e6-5b89e05feb7a",
        "cursor": {
          "ref": "69f3729a-97ba-4304-8a91-c8b9a6387bba",
          "length": 252,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ae94901e-e6f8-4d59-8eb8-c52d262e93af"
        },
        "item": {
          "id": "742d2772-71a6-4059-98e6-5b89e05feb7a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ea3f435b-a7c8-4b4f-bfc5-7e0f41a5a8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1255
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97059d82-cdfc-4308-8546-d556160a1459",
        "cursor": {
          "ref": "611c8fc1-21a5-47b8-9ac2-a61d18509ba7",
          "length": 252,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5db5ae25-dfb1-440c-84ea-53c615c331c7"
        },
        "item": {
          "id": "97059d82-cdfc-4308-8546-d556160a1459",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4eef647c-67db-4e71-9e92-7518d0cb05c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1256
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541ebab5-4985-47f2-9078-304d9ed8dd7d",
        "cursor": {
          "ref": "a8a5de4d-6c24-43dd-bc0d-bff9941ae5cd",
          "length": 252,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02b44619-29d6-4c96-ab2d-ad4316b0bc6c"
        },
        "item": {
          "id": "541ebab5-4985-47f2-9078-304d9ed8dd7d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4c2589eb-aab6-4eba-b15e-b7804796623a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1282
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd26cf2-1511-4ac4-86d4-0306ef7dfd9f",
        "cursor": {
          "ref": "d14f81f8-8fe3-4ece-9346-3af4cfa2f5b6",
          "length": 252,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "504b95d4-cfd1-43fd-83d4-28524ca41ff4"
        },
        "item": {
          "id": "cdd26cf2-1511-4ac4-86d4-0306ef7dfd9f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "870ce3c4-b7f7-4102-9853-b388d2816547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a14d155-5dba-464b-9677-2a533d458402",
        "cursor": {
          "ref": "07fd6f82-e4a1-481b-85a7-08ceaf0e04ea",
          "length": 252,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "950396fc-1f08-4117-85a2-781355f27072"
        },
        "item": {
          "id": "4a14d155-5dba-464b-9677-2a533d458402",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c5b8a182-1871-4e15-9fcc-cf29bcc93c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 1668
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0575633-0254-443b-afff-a51410e60ead",
        "cursor": {
          "ref": "c779c27f-f468-443d-a1df-cfd2ed062304",
          "length": 252,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "12aff0dd-77c0-468b-90ba-afc67362d9f1"
        },
        "item": {
          "id": "c0575633-0254-443b-afff-a51410e60ead",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "202957da-75b1-473b-a29e-0a5a12d45213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1654
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f73d399-b35e-4a36-9e69-5191ba25ba83",
        "cursor": {
          "ref": "434ce182-2ed7-4260-a62c-0316537ce6d8",
          "length": 252,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "87fbb73c-01a9-441b-bcb2-9f9427323eef"
        },
        "item": {
          "id": "4f73d399-b35e-4a36-9e69-5191ba25ba83",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "419980e7-ea9f-44b1-ae22-31fc2a284232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f344c945-f496-40ab-8788-fd93e867e61f",
        "cursor": {
          "ref": "24530844-69fd-4965-a0ef-7892f8f9e2cc",
          "length": 252,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f3818e15-835a-42f9-b536-6cc463efb449"
        },
        "item": {
          "id": "f344c945-f496-40ab-8788-fd93e867e61f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f2ea0e9c-e180-49a3-bac7-a91cbb006f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e49e278-74d5-4df5-8703-fbbbfbc243d1",
        "cursor": {
          "ref": "621325ac-e40d-42f5-8d17-e238552008c6",
          "length": 252,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b0533799-db42-447f-92f9-0882cce14e67"
        },
        "item": {
          "id": "3e49e278-74d5-4df5-8703-fbbbfbc243d1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c2805cae-bed2-4542-ba0f-bb655c8bfded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e24763-65ad-422f-a876-730ae97e8bce",
        "cursor": {
          "ref": "c4318f8f-2a90-4c50-8cd2-5e0754010989",
          "length": 252,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e9c8cc5d-d4ac-43ef-8537-e5d8790b8b7a"
        },
        "item": {
          "id": "20e24763-65ad-422f-a876-730ae97e8bce",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b3852861-ab52-4e45-9c2b-1d13dbe7a9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 2027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa713fbe-88ec-4513-abcd-318d7e42ebb1",
        "cursor": {
          "ref": "93fb22c4-340a-4b98-8f72-9191c1b74881",
          "length": 252,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "062684e7-9e8b-45f7-a6dd-dc08667dd951"
        },
        "item": {
          "id": "fa713fbe-88ec-4513-abcd-318d7e42ebb1",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1f8491fc-39f0-4c13-a3d1-5bb178a9967b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 2013
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59877674-9d3e-4138-a23f-c7f96a47d602",
        "cursor": {
          "ref": "ded34d1b-1da5-4b8e-a57b-460af70edf98",
          "length": 252,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bc93d608-fd1b-4b3d-89b7-24761bee2039"
        },
        "item": {
          "id": "59877674-9d3e-4138-a23f-c7f96a47d602",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a007ff5b-4b4f-431b-b692-788a37ef0dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 2011
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2fe0c6-df60-4628-b06d-018d5bb8685d",
        "cursor": {
          "ref": "5d2f2f84-9313-430d-a887-b88ffd57519a",
          "length": 252,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "85bd4892-54be-4398-8b06-93a8d3c5c97a"
        },
        "item": {
          "id": "1f2fe0c6-df60-4628-b06d-018d5bb8685d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7395d5a5-6bb3-4eed-ad2f-6fb5fbd490b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 2012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20eb79db-2998-4690-8080-c4c3ef814656",
        "cursor": {
          "ref": "d131e8c9-e4d3-413b-ac67-6bb13063bd4d",
          "length": 252,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9d300b37-12b6-4f2e-8270-2772ea09baad"
        },
        "item": {
          "id": "20eb79db-2998-4690-8080-c4c3ef814656",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c73d32f1-c44b-4bec-9c92-56db7bf7091d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 495,
          "responseSize": 2033
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4041fd-2fd6-44b8-815b-d67aeff38316",
        "cursor": {
          "ref": "4fc64c9e-87f0-49c8-9a0e-a5b69e0f0a78",
          "length": 252,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "4876e547-e9b3-4dc7-94f4-248512ec1343"
        },
        "item": {
          "id": "6e4041fd-2fd6-44b8-815b-d67aeff38316",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "f1988373-0b2b-4d92-bf80-2b1b9e08aa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1237
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22aa6d62-2491-44d6-b43c-833a68de66e3",
        "cursor": {
          "ref": "819d48ff-8a8b-4fa3-8507-a3882018c90d",
          "length": 252,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "12834c7b-bcef-4606-a076-b48398dc76d8"
        },
        "item": {
          "id": "22aa6d62-2491-44d6-b43c-833a68de66e3",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a589aa3d-2f2c-429e-9f2e-2b768199d19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1261
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4025e6-6ab7-44e8-a45c-94b983424f8b",
        "cursor": {
          "ref": "8741e46c-6020-4cd1-884c-34e56a2b7402",
          "length": 252,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ccb57d0e-f34b-4567-92bb-5ba4394c2273"
        },
        "item": {
          "id": "9a4025e6-6ab7-44e8-a45c-94b983424f8b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4d2c7894-0930-4b7b-99f6-6ae2508d00cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1242
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39abf459-2162-43ad-bcb2-c9b203c7d961",
        "cursor": {
          "ref": "c6c028d9-3e90-4022-98df-ff4c65a0ff9f",
          "length": 252,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7ba3b219-3dc9-4362-bc23-497a4ad31810"
        },
        "item": {
          "id": "39abf459-2162-43ad-bcb2-c9b203c7d961",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "28b152a7-a26f-4956-a9b4-da7b00e906a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b770b9e2-a3e1-4811-b621-5bbb440c7cc6",
        "cursor": {
          "ref": "eea6fdfb-c431-42a6-9de1-46a04d775cb6",
          "length": 252,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bd50391a-ae8b-4f83-82d9-06f1f0298fce"
        },
        "item": {
          "id": "b770b9e2-a3e1-4811-b621-5bbb440c7cc6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "87a402e0-e1c2-4c71-bfd1-e4c8e048492e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c845444-ce4e-426a-8734-51452864524b",
        "cursor": {
          "ref": "44deb526-500b-45e0-a62d-7ce3282f244b",
          "length": 252,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "331d0560-37d3-4493-9187-7e8b29a7d041"
        },
        "item": {
          "id": "4c845444-ce4e-426a-8734-51452864524b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e07348f8-0781-432f-b70c-dfb334bc2bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 225,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7dcc3e9-5f76-4bc2-82dc-b5ac76f99959",
        "cursor": {
          "ref": "fd3c5271-33c4-4bbc-b549-8897b002815c",
          "length": 252,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f32a872f-2b89-45b6-8d81-81eb2062eb5b"
        },
        "item": {
          "id": "c7dcc3e9-5f76-4bc2-82dc-b5ac76f99959",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "61a168b3-e788-415f-9f7b-1e97e55af326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1297
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fe627a-dd28-4b6e-950d-5cdfef5cf269",
        "cursor": {
          "ref": "a2752650-d2c3-4c15-a967-1c42cd97745d",
          "length": 252,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "19312c89-1bc6-4c6e-a667-028f731bb201"
        },
        "item": {
          "id": "a5fe627a-dd28-4b6e-950d-5cdfef5cf269",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "85d9328c-5d3c-45b9-87ed-57563e28c8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 1240
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b14f6b-93c1-4cff-8dc3-dc775ac11de3",
        "cursor": {
          "ref": "0f5dd1a8-18bb-46c6-a021-87917b5d29e6",
          "length": 252,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "393ee87b-d399-49db-9146-078af6efc233"
        },
        "item": {
          "id": "12b14f6b-93c1-4cff-8dc3-dc775ac11de3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eb75b5ce-ce7e-4c82-8477-1c6de10681ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347f339a-9f5f-45dd-b4e2-cb6b1504e1d4",
        "cursor": {
          "ref": "38e229a5-6fcf-4eae-97cd-aa2d9cd8191e",
          "length": 252,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "87eb6e32-633b-48cc-95b1-d08810d5809f"
        },
        "item": {
          "id": "347f339a-9f5f-45dd-b4e2-cb6b1504e1d4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9c9a8577-e698-4af9-a466-0ce33c448ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1540
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8b1704-5348-4e67-b6d9-c4446e958275",
        "cursor": {
          "ref": "204297e0-359a-4b66-9b56-a88d9d47f93c",
          "length": 252,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "93f08e6c-34e5-40ac-821e-55d90796acc2"
        },
        "item": {
          "id": "5e8b1704-5348-4e67-b6d9-c4446e958275",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fbbcd419-5018-4dae-8fd3-ee84649f7252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3e0717-766a-4643-a636-cfeefcbf9064",
        "cursor": {
          "ref": "b249abb5-4656-4705-99e3-b06191105e2d",
          "length": 252,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6115e98a-e3e9-4f83-831c-44e965818adf"
        },
        "item": {
          "id": "0e3e0717-766a-4643-a636-cfeefcbf9064",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5299046c-a0e8-43eb-93cc-00528c6a9956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66aa268e-4dda-4ca9-8646-ae9823626bf8",
        "cursor": {
          "ref": "fd949858-9797-4b46-aa4c-47771221bc5c",
          "length": 252,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b97d2a1f-eac0-48ab-ad10-017621c89593"
        },
        "item": {
          "id": "66aa268e-4dda-4ca9-8646-ae9823626bf8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "55f63ada-3bcb-43fb-858f-88a9a98a5a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509193cd-b05a-4e02-a2bb-3596f72b0d6c",
        "cursor": {
          "ref": "31c61439-a3b3-4bf8-a9e6-5968f7ad89fe",
          "length": 252,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "680e1a48-b651-4dc6-a777-8f2af34c679f"
        },
        "item": {
          "id": "509193cd-b05a-4e02-a2bb-3596f72b0d6c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a2045151-5117-4472-8be6-79e0ca003396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 2076
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbdf4ac-61ee-4d65-a418-bca1f87e07bd",
        "cursor": {
          "ref": "ad3f9a07-7a44-4db2-9bee-81b879290849",
          "length": 252,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "18899f10-0a2c-4537-b041-4b00b9852add"
        },
        "item": {
          "id": "0fbdf4ac-61ee-4d65-a418-bca1f87e07bd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d572bdf6-768e-4db4-938c-0d093aa193b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 2062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9eba45-4664-4d54-b203-6be53c2598d7",
        "cursor": {
          "ref": "3157ba23-4ab6-4964-8363-e83d73929716",
          "length": 252,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a2ee291e-e116-4ee0-9593-89f809f47a12"
        },
        "item": {
          "id": "2a9eba45-4664-4d54-b203-6be53c2598d7",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "28e311e5-2070-4327-a7ea-85955e77a4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 2060
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80eb3b5-ef21-4c7f-b366-051d4d65bf25",
        "cursor": {
          "ref": "212a0779-76a5-46e2-9c27-36f0c6b842b4",
          "length": 252,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "88f3b164-03e2-474e-a75e-32cde8783208"
        },
        "item": {
          "id": "d80eb3b5-ef21-4c7f-b366-051d4d65bf25",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1ad38864-9ec6-4d95-a7ce-822744ee0dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 2061
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b220a025-2da8-47fd-9071-a878797d7e1c",
        "cursor": {
          "ref": "a556cc9e-fb74-4852-ad27-46756dbbf448",
          "length": 252,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "364540fc-596e-4d52-b70a-a95d26c59224"
        },
        "item": {
          "id": "b220a025-2da8-47fd-9071-a878797d7e1c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9efc4d89-798a-4fb6-949e-91cb219fd823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 2082
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b052151-8966-4469-b1f0-5d7292140055",
        "cursor": {
          "ref": "0567620b-3bf5-4482-a478-2d472a8a4ffb",
          "length": 252,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4dc5502a-3d6a-45c9-8dbb-e1d472c5f55e"
        },
        "item": {
          "id": "8b052151-8966-4469-b1f0-5d7292140055",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e24315d9-9b3a-4d40-a397-4996e8e895f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 851
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ed45c3-bf72-4960-ac69-451b76fa9ff6",
        "cursor": {
          "ref": "2e9c59a5-3792-4211-8879-3d8d1938878d",
          "length": 252,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0f703fc1-1088-4fdc-8ddf-35ef32bafe29"
        },
        "item": {
          "id": "77ed45c3-bf72-4960-ac69-451b76fa9ff6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d02aebe1-1977-4fe0-a2bf-791321fbd34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be15ef7e-25bb-49c1-a214-4bd3ef902e3a",
        "cursor": {
          "ref": "e332882c-1e79-4fed-845b-75d579dab2d2",
          "length": 252,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "99ec0a36-bfae-43cb-b167-e5189150c2e0"
        },
        "item": {
          "id": "be15ef7e-25bb-49c1-a214-4bd3ef902e3a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a4fc7831-0eda-4665-9ca9-3bfef86894ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5331ac1-796f-41bc-8842-7d240ca38b4f",
        "cursor": {
          "ref": "805cfe18-c5fb-475c-bbd7-3ab32568a759",
          "length": 252,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d26dadd0-9381-4594-8c7b-a18dda80685a"
        },
        "item": {
          "id": "a5331ac1-796f-41bc-8842-7d240ca38b4f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ec5fc5f7-4020-40de-ab75-ec3ea1306335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 862
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1d46e6-aa7c-40cc-b8fc-81dfe34690ce",
        "cursor": {
          "ref": "1a9490d8-44ef-4708-88fa-fff014f6767f",
          "length": 252,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2aabd7d8-a32f-4979-85df-5b51ac61e74f"
        },
        "item": {
          "id": "bf1d46e6-aa7c-40cc-b8fc-81dfe34690ce",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "938ea2b7-55c1-43b5-a4c8-fe298b229591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b8d4be-1c02-4451-a690-e7a6d94c2f76",
        "cursor": {
          "ref": "ec64bd09-4008-4721-b27e-60ff2a2fd876",
          "length": 252,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3740796e-bb30-46a1-8c7b-5864a8057c48"
        },
        "item": {
          "id": "95b8d4be-1c02-4451-a690-e7a6d94c2f76",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cab67fa8-8af7-4964-bb19-be93cae4b5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 868
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099403ac-9464-4120-b3b8-8596539a7f3e",
        "cursor": {
          "ref": "ca5d2e14-ac64-4036-9f1d-7fbb132aaec5",
          "length": 252,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "eb276d2f-2d8a-4912-8289-f499c3dc00ea"
        },
        "item": {
          "id": "099403ac-9464-4120-b3b8-8596539a7f3e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ca5daaca-cb0e-4f02-86df-180a96dc1b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 219,
          "responseSize": 1209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c183f3-a86f-4507-a92b-32bed0b5bf2b",
        "cursor": {
          "ref": "cbcd5409-0c8e-4f97-86f1-68b7763e5f78",
          "length": 252,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8707def4-1200-4f02-8ba1-4ba6f19f7de3"
        },
        "item": {
          "id": "68c183f3-a86f-4507-a92b-32bed0b5bf2b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b196fc71-7b10-4c3b-ab79-e985ca10b790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd0b07a-676d-49fa-a4b3-8980845831ad",
        "cursor": {
          "ref": "4ed8a6c5-f053-42c3-9746-d7325f02b32b",
          "length": 252,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "80aad157-5464-4740-8b3b-aae15635f26e"
        },
        "item": {
          "id": "3fd0b07a-676d-49fa-a4b3-8980845831ad",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "208be94b-4111-4498-adb7-91bf9116523f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c594932f-1ae4-4bef-b257-87df3634161f",
        "cursor": {
          "ref": "d6ebfbde-5957-45f4-920e-5cb305933da4",
          "length": 252,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "76b9ec73-5df8-4ede-b660-939322a2d73c"
        },
        "item": {
          "id": "c594932f-1ae4-4bef-b257-87df3634161f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "97eaa38c-3ea5-4b03-815c-d1ad8db390ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2069d5b1-4287-4a4d-a5b2-e1852ea7f13f",
        "cursor": {
          "ref": "1801dcb9-a3d1-4aa9-8244-10595acffd78",
          "length": 252,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "12c20765-ac10-46d7-b2ce-dbb841f69a24"
        },
        "item": {
          "id": "2069d5b1-4287-4a4d-a5b2-e1852ea7f13f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f08164d2-e383-4b86-8228-760f377afcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340e8955-2561-4aa6-ac1f-53ee9dab7a04",
        "cursor": {
          "ref": "97dee265-7388-48a9-b666-50ed8458ebbd",
          "length": 252,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "65c21dd7-9722-4b0b-b51a-47f03bfcde37"
        },
        "item": {
          "id": "340e8955-2561-4aa6-ac1f-53ee9dab7a04",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e387dac0-d84c-4e77-896a-1e00ab3d6f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77fd0f2-8bfc-4e6c-bc0e-dc18b38a80c4",
        "cursor": {
          "ref": "c6e1f53a-f3de-45bf-8dfb-811983f455a9",
          "length": 252,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "00c7adcf-1dc0-4685-8187-12cff8a21738"
        },
        "item": {
          "id": "c77fd0f2-8bfc-4e6c-bc0e-dc18b38a80c4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e95444c5-b741-4abc-9fa9-8bf083f4ff3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 229,
          "responseSize": 1246
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f92697-0097-4d2d-a489-ea199b62f540",
        "cursor": {
          "ref": "23303919-3bce-4aa5-a99e-496a796520d7",
          "length": 252,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "69b6cdbd-2770-4a76-9b91-4b5330d4f856"
        },
        "item": {
          "id": "13f92697-0097-4d2d-a489-ea199b62f540",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7de93590-1d9f-4717-af29-55b18de0e9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 227,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fecff1-f1ba-41c6-aea9-4a420c7e056c",
        "cursor": {
          "ref": "99b246c8-fccf-402d-bc16-bbf23663f698",
          "length": 252,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f7d71f04-a106-4336-ae77-e6c2ec3649ec"
        },
        "item": {
          "id": "d4fecff1-f1ba-41c6-aea9-4a420c7e056c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e3526b1b-1863-4a71-8372-3b120e88b6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0dd2a80-01b4-4728-886b-e25eccc44211",
        "cursor": {
          "ref": "134402fc-393e-494b-863f-b63964edd551",
          "length": 252,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "47b8a258-2b8c-4a68-bbea-0e4ca9010783"
        },
        "item": {
          "id": "d0dd2a80-01b4-4728-886b-e25eccc44211",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9807663b-afd5-464a-9994-192567745307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893ace55-05cf-4ab3-81ff-83a44b36b7e6",
        "cursor": {
          "ref": "a89e8e50-a6ce-474d-9a58-6620eb6e871e",
          "length": 252,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ff192834-389e-4054-9ac6-89fd7d546fe3"
        },
        "item": {
          "id": "893ace55-05cf-4ab3-81ff-83a44b36b7e6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "70960434-dafe-4392-8711-8ac8ed055878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1221
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793c9e1e-61df-48c2-8726-195acbf4f44e",
        "cursor": {
          "ref": "1ff45553-fd23-4933-a37e-17d73ca658f1",
          "length": 252,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "84e5736b-ca7b-41dd-a096-c9a4dcf1dac9"
        },
        "item": {
          "id": "793c9e1e-61df-48c2-8726-195acbf4f44e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "04fca7f9-1478-4900-9e5b-62be00320e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7edc2e-1342-4f3b-a680-fb86a2011fbc",
        "cursor": {
          "ref": "50ab82ff-dffc-444a-9c29-b82ba9fc1be8",
          "length": 252,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "998a3e52-0ad4-4505-9c2e-09150a24ca9e"
        },
        "item": {
          "id": "3e7edc2e-1342-4f3b-a680-fb86a2011fbc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fae4aa17-04a1-4929-9693-ae089e7bcc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1200
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6274cfa-9547-459c-a7e0-579b6003197b",
        "cursor": {
          "ref": "7f90fa69-cd89-4ffb-bcc4-4897925f75ee",
          "length": 252,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "efb05c84-aee4-4543-bb10-d4b642bd121f"
        },
        "item": {
          "id": "d6274cfa-9547-459c-a7e0-579b6003197b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "80371753-0842-4317-a37f-ca5fdd3701be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2982e152-a1e9-40f8-9dbc-218dc58e81bc",
        "cursor": {
          "ref": "f51e43fc-c816-4fdf-9f7c-e1503408e7f2",
          "length": 252,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6c5b3b15-265e-47ac-9fd8-99406e784a7f"
        },
        "item": {
          "id": "2982e152-a1e9-40f8-9dbc-218dc58e81bc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b0a47d02-8799-4524-8157-3021024faea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdad8bc6-4258-41a3-825d-ff406fd2d649",
        "cursor": {
          "ref": "f2d6a5ac-09c4-4cee-b88e-e8b22510aa10",
          "length": 252,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f555dc4b-3cb8-4e48-abc5-35adc11d5ad7"
        },
        "item": {
          "id": "fdad8bc6-4258-41a3-825d-ff406fd2d649",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b9aa4c37-d55c-4eb7-b007-36e332ba06a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684b685a-6555-4bc1-9975-32438a50065a",
        "cursor": {
          "ref": "1fc9b7bc-7cec-4d9f-8e7b-3c3ce420b5c6",
          "length": 252,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "79e75bde-1ea7-485e-a549-1fc3b02a4cb2"
        },
        "item": {
          "id": "684b685a-6555-4bc1-9975-32438a50065a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "773670b5-339f-44c8-bca0-c9cd819604c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1206
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67909335-85e7-4cb4-91e8-b5594e0a9422",
        "cursor": {
          "ref": "885fecfa-7d59-44f1-ba90-6ecef2d7471a",
          "length": 252,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "dbe925c2-8add-4469-97a9-58ce2087b087"
        },
        "item": {
          "id": "67909335-85e7-4cb4-91e8-b5594e0a9422",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "723cdbe5-1d37-4640-ad19-b950af83670d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6fdc75-c918-4fc9-aa7b-6171c2a5576f",
        "cursor": {
          "ref": "70a126d8-03a6-40f0-9739-36e3f16b9278",
          "length": 252,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2d78da1e-e6ef-4eb8-90cd-ff073a71e8ec"
        },
        "item": {
          "id": "7c6fdc75-c918-4fc9-aa7b-6171c2a5576f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2987a5c1-1dbf-4150-9a87-4b8b8f465b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5354410-3718-48c2-8b6d-53a5e453a334",
        "cursor": {
          "ref": "61ebe8ca-0a95-4348-93b1-b9460eefad25",
          "length": 252,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "6b8cd28e-701a-4172-9138-dd9c14e6f6a3"
        },
        "item": {
          "id": "d5354410-3718-48c2-8b6d-53a5e453a334",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b403a6f1-1ea8-4700-9abc-137394eef538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 218,
          "responseSize": 1096
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6a2386-33df-41ac-bf44-cc9e211911b8",
        "cursor": {
          "ref": "44b6c117-ed04-4b71-ada9-e2ad3e2036dc",
          "length": 252,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "359dd68f-6b3c-4689-9379-6e0410b9a6cc"
        },
        "item": {
          "id": "4d6a2386-33df-41ac-bf44-cc9e211911b8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9506cc38-a39d-40bd-a8ca-ac0ceca121b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a615a12-e012-41bf-9d5a-66a3dc7798d3",
        "cursor": {
          "ref": "34e92d23-6052-4886-a6fb-498aa4e79cbd",
          "length": 252,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ceec8c2c-50c7-41f0-82d1-6f04d663c451"
        },
        "item": {
          "id": "7a615a12-e012-41bf-9d5a-66a3dc7798d3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1903da27-950d-42ea-a724-be8e8de4cb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0855ce97-c464-4575-9443-f50ad02041e1",
        "cursor": {
          "ref": "3b0b325b-3a7e-45ea-9825-21724200b539",
          "length": 252,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d3f9adc0-aef4-4b69-8045-43f1cbaff314"
        },
        "item": {
          "id": "0855ce97-c464-4575-9443-f50ad02041e1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "fe4c5c30-5f12-4a3f-a514-b03efa0d3339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13751a28-6759-45fa-abd1-47937b53fd6e",
        "cursor": {
          "ref": "d8eb745a-cce4-4c15-a246-5ff9119805d5",
          "length": 252,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "399681ec-71c2-4cd5-a0e4-517eb8d9215c"
        },
        "item": {
          "id": "13751a28-6759-45fa-abd1-47937b53fd6e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "367d426f-d3fb-4e92-a2c6-c32ebf4d36e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 224,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196493bb-a86c-494f-a27e-45ebb1fc43a5",
        "cursor": {
          "ref": "644fa2b9-bed8-483a-9478-922a16a53db1",
          "length": 252,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6438c27f-70be-457f-b3f2-03dc51305785"
        },
        "item": {
          "id": "196493bb-a86c-494f-a27e-45ebb1fc43a5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7db959ed-8615-4946-b18f-2caf44ae6fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 222,
          "responseSize": 1225
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103c569d-5750-46f2-9c41-7892c5cc10c8",
        "cursor": {
          "ref": "33ba665e-63f3-46ef-a9bc-2b3863f9afc9",
          "length": 252,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cab3e4aa-7995-44c9-a289-a6a3ce903b65"
        },
        "item": {
          "id": "103c569d-5750-46f2-9c41-7892c5cc10c8",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "81d7b5ae-be1a-4caf-a6c2-67846d27e77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 1226
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2910cb-b87a-4695-bc7f-c7ec68ed1d8e",
        "cursor": {
          "ref": "cc093aab-cb3d-4fe0-a675-79368dc7bafc",
          "length": 252,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "26a0477f-0a9b-4a4e-9a4b-c1d6cac35bcd"
        },
        "item": {
          "id": "ac2910cb-b87a-4695-bc7f-c7ec68ed1d8e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "eae3059a-342f-4ace-90d0-c53b7681b5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e58fabd1-518c-4ec5-8f15-930c957bdd1b",
        "cursor": {
          "ref": "a55aa786-c90e-43d7-84f9-eb357fee7228",
          "length": 252,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "42007602-7c93-457f-aaf7-e6965bb82bf9"
        },
        "item": {
          "id": "e58fabd1-518c-4ec5-8f15-930c957bdd1b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "56a10c9b-0a1f-48de-ae57-a0c8d8f44bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 1241
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa754e62-b75d-4da9-afab-be7c43f6ec41",
        "cursor": {
          "ref": "b525052a-d640-4852-9476-d4843263dd26",
          "length": 252,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "00af8a2c-5fe5-4cfd-bf48-b0a64c00dd5d"
        },
        "item": {
          "id": "aa754e62-b75d-4da9-afab-be7c43f6ec41",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7d31289b-4f9d-4016-b04c-c7ba7e54b8e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53b5539-a156-40cc-9dff-4aa85988222f",
        "cursor": {
          "ref": "a0913f50-9073-4a8a-b993-5277349be093",
          "length": 252,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "31cf7324-7c62-4e7f-94ad-c2f6da46ae74"
        },
        "item": {
          "id": "f53b5539-a156-40cc-9dff-4aa85988222f",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "ae471ea6-a98b-4e04-8ff3-164f9e33ec9a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 228,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59385db9-0175-44a4-bb45-4099a06ec6d7",
        "cursor": {
          "ref": "fa89dea4-cbf9-4401-ade4-836b1afe83af",
          "length": 252,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "747784c3-0580-4141-8930-ee04cfd93080"
        },
        "item": {
          "id": "59385db9-0175-44a4-bb45-4099a06ec6d7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5c7cc30b-6e50-41ec-931b-d0160a2dd299",
          "status": "OK",
          "code": 200,
          "responseTime": 324,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "28ba8932-c8b7-470a-8023-0593f465394d",
        "cursor": {
          "ref": "df001da6-9d73-4d5b-a177-b99fe200bd21",
          "length": 252,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "23ef3dac-4822-41aa-bbd9-f433fcbc5640"
        },
        "item": {
          "id": "28ba8932-c8b7-470a-8023-0593f465394d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4f13b1ff-fd47-470d-b008-695f92b447ef",
          "status": "OK",
          "code": 200,
          "responseTime": 299,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd2386-1e11-4bef-8cfe-0aec62118bbd",
        "cursor": {
          "ref": "b696b419-ac6c-4980-b60c-2d038fa1f86a",
          "length": 252,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "466e65bf-52ce-458f-b14a-d55c484a4216"
        },
        "item": {
          "id": "7bcd2386-1e11-4bef-8cfe-0aec62118bbd",
          "name": "credentials_verify:id"
        },
        "response": {
          "id": "ed37be78-ae14-40fe-9cb7-74259790c724",
          "status": "OK",
          "code": 200,
          "responseTime": 309,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd61cd5-bb0c-4908-9995-f9027c6f8bc2",
        "cursor": {
          "ref": "1d308569-630c-4020-a939-c72fc2ebd08a",
          "length": 252,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "63914a55-8773-497c-9f32-fcc5edc464f5"
        },
        "item": {
          "id": "6fd61cd5-bb0c-4908-9995-f9027c6f8bc2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "50d88ad8-c747-4dbc-9c11-a27ed19b97d9",
          "status": "OK",
          "code": 200,
          "responseTime": 312,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "296e6dbc-137b-44a3-8dbf-bc87c2ae8cf9",
        "cursor": {
          "ref": "d7cf9043-06ba-4fde-a758-730c3907ae54",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c6e7b225-b01f-4fac-a64f-0f12c3e29f1a"
        },
        "item": {
          "id": "296e6dbc-137b-44a3-8dbf-bc87c2ae8cf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8bf817a-965d-4c74-ba56-e85a9f96e8e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296e6dbc-137b-44a3-8dbf-bc87c2ae8cf9",
        "cursor": {
          "ref": "d7cf9043-06ba-4fde-a758-730c3907ae54",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c6e7b225-b01f-4fac-a64f-0f12c3e29f1a"
        },
        "item": {
          "id": "296e6dbc-137b-44a3-8dbf-bc87c2ae8cf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8bf817a-965d-4c74-ba56-e85a9f96e8e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296e6dbc-137b-44a3-8dbf-bc87c2ae8cf9",
        "cursor": {
          "ref": "d7cf9043-06ba-4fde-a758-730c3907ae54",
          "length": 252,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c6e7b225-b01f-4fac-a64f-0f12c3e29f1a"
        },
        "item": {
          "id": "296e6dbc-137b-44a3-8dbf-bc87c2ae8cf9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b8bf817a-965d-4c74-ba56-e85a9f96e8e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd354596-3d14-4e73-87c5-45c09b98c4f6",
        "cursor": {
          "ref": "d6349adf-7749-4473-ae77-e3899addf020",
          "length": 252,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7a588ae0-493d-49d6-a916-b316e099a3a1"
        },
        "item": {
          "id": "dd354596-3d14-4e73-87c5-45c09b98c4f6",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "2f39179f-33aa-44b6-904e-5153389e7187",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 221,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae4ae9e-831e-41bb-b385-9e01473d09a3",
        "cursor": {
          "ref": "0b5ca659-b391-44e7-9251-894fa503efea",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cc1cd075-7a9f-4b4f-81ac-71c7066edf72"
        },
        "item": {
          "id": "2ae4ae9e-831e-41bb-b385-9e01473d09a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d29d1675-40ae-4b48-b3a1-0d1290d039ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae4ae9e-831e-41bb-b385-9e01473d09a3",
        "cursor": {
          "ref": "0b5ca659-b391-44e7-9251-894fa503efea",
          "length": 252,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "cc1cd075-7a9f-4b4f-81ac-71c7066edf72"
        },
        "item": {
          "id": "2ae4ae9e-831e-41bb-b385-9e01473d09a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d29d1675-40ae-4b48-b3a1-0d1290d039ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd85456-0856-4c7d-b9df-7e90a12eeb7a",
        "cursor": {
          "ref": "75789fc0-e300-4659-b856-cd9675425691",
          "length": 252,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "baced87a-7bbe-4282-94c9-c5354ff4b3bf"
        },
        "item": {
          "id": "cdd85456-0856-4c7d-b9df-7e90a12eeb7a",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "3257f734-0179-4ded-a1d0-054d7bdd3a9e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 447,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5db886-e84b-45f0-9df6-6fc7148f5b1d",
        "cursor": {
          "ref": "b6e4195e-d8b5-4cf4-a85a-6bf8aa4ecea3",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "178e65ca-f8a3-4ecb-9005-5bf8b73d16dd"
        },
        "item": {
          "id": "3f5db886-e84b-45f0-9df6-6fc7148f5b1d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11a34fb7-dcf7-4d2a-8f85-30ff804bef40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5db886-e84b-45f0-9df6-6fc7148f5b1d",
        "cursor": {
          "ref": "b6e4195e-d8b5-4cf4-a85a-6bf8aa4ecea3",
          "length": 252,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "178e65ca-f8a3-4ecb-9005-5bf8b73d16dd"
        },
        "item": {
          "id": "3f5db886-e84b-45f0-9df6-6fc7148f5b1d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11a34fb7-dcf7-4d2a-8f85-30ff804bef40",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6f427c-9bf4-45bd-898f-2b92d0377c01",
        "cursor": {
          "ref": "03f09b7a-19de-4ae2-ba3a-dca4c05a200e",
          "length": 252,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6bade4f7-a48f-44a4-8904-1538c0c508e4"
        },
        "item": {
          "id": "bf6f427c-9bf4-45bd-898f-2b92d0377c01",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e1268003-10fe-413d-a649-9934597bfab1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 458,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}